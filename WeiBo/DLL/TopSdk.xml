<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TopSdk</name>
    </assembly>
    <members>
        <member name="T:Top.Api.Response.SimbaCreativeDeleteResponse">
            <summary>
            SimbaCreativeDeleteResponse.
            </summary>
        </member>
        <member name="P:Top.Api.TopResponse.ErrCode">
            <summary>
            错误码
            </summary>
        </member>
        <member name="P:Top.Api.TopResponse.ErrMsg">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="P:Top.Api.TopResponse.SubErrCode">
            <summary>
            子错误码
            </summary>
        </member>
        <member name="P:Top.Api.TopResponse.SubErrMsg">
            <summary>
            子错误信息
            </summary>
        </member>
        <member name="P:Top.Api.TopResponse.Body">
            <summary>
            响应原始内容
            </summary>
        </member>
        <member name="P:Top.Api.TopResponse.IsError">
            <summary>
            响应结果是否错误
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaCreativeDeleteResponse.Creative">
            <summary>
            被删除的创意对象
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaCustomersAuthorizedGetResponse">
            <summary>
            SimbaCustomersAuthorizedGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaCustomersAuthorizedGetResponse.Nicks">
            <summary>
            授权当前登录账户为代理账户的昵称列表
            </summary>
        </member>
        <member name="T:Top.Api.Response.TmallItemShiptimeUpdateResponse">
            <summary>
            TmallItemShiptimeUpdateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallItemShiptimeUpdateResponse.ShiptimeUpdateResult">
            <summary>
            被更新商品ID
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaKeywordsQscoreGetResponse">
            <summary>
            SimbaKeywordsQscoreGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaKeywordsQscoreGetResponse.KeywordQscoreList">
            <summary>
            取得的关键词质量得分列表
            </summary>
        </member>
        <member name="T:Top.Api.Response.VasSubscribeGetResponse">
            <summary>
            VasSubscribeGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.VasSubscribeGetResponse.ArticleUserSubscribes">
            <summary>
            用户订购信息
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaInsightWordssubdataGetResponse">
            <summary>
            SimbaInsightWordssubdataGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaInsightWordssubdataGetResponse.WordSubdataList">
            <summary>
            关键词按流量细分的数据
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaKeywordsbykeywordidsGetResponse">
            <summary>
            SimbaKeywordsbykeywordidsGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaKeywordsbykeywordidsGetResponse.Keywords">
            <summary>
            取得的关键词列表
            </summary>
        </member>
        <member name="T:Top.Api.Response.SubuserEmployeeAddResponse">
            <summary>
            SubuserEmployeeAddResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SubuserEmployeeAddResponse.IsSuccess">
            <summary>
            操作是否成功 true:操作成功; false:操作失败
            </summary>
        </member>
        <member name="T:Top.Api.Response.MaQrcodeCommonCreateResponse">
            <summary>
            MaQrcodeCommonCreateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.MaQrcodeCommonCreateResponse.Modules">
            <summary>
            二维码对像
            </summary>
        </member>
        <member name="P:Top.Api.Response.MaQrcodeCommonCreateResponse.Suc">
            <summary>
            执行是否成功
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaRtrptBidwordGetResponse">
            <summary>
            SimbaRtrptBidwordGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaRtrptBidwordGetResponse.Results">
            <summary>
            bidword result
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaRptDemographiceffectGetResponse">
            <summary>
            SimbaRptDemographiceffectGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaRptDemographiceffectGetResponse.RptDemographicEffect">
            <summary>
            推广计划下的人群维度效果数据查询
            </summary>
        </member>
        <member name="T:Top.Api.Response.PromotionLimitdiscountDetailGetResponse">
            <summary>
            PromotionLimitdiscountDetailGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.PromotionLimitdiscountDetailGetResponse.ItemDiscountDetailList">
            <summary>
            限时打折对应的商品详情列表。
            </summary>
        </member>
        <member name="T:Top.Api.Response.PromotionLimitdiscountGetResponse">
            <summary>
            PromotionLimitdiscountGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.PromotionLimitdiscountGetResponse.LimitDiscountList">
            <summary>
            限时打折列表。
            </summary>
        </member>
        <member name="P:Top.Api.Response.PromotionLimitdiscountGetResponse.TotalCount">
            <summary>
            满足该查询条件的限时打折总数量。
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaCatmatchidsChangedGetResponse">
            <summary>
            SimbaCatmatchidsChangedGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaCatmatchidsChangedGetResponse.ChangedCatmatchIds">
            <summary>
            类目出价ID列表
            </summary>
        </member>
        <member name="T:Top.Api.Response.ItemRecommendDeleteResponse">
            <summary>
            ItemRecommendDeleteResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ItemRecommendDeleteResponse.Item">
            <summary>
            被取消橱窗推荐的商品信息
            </summary>
        </member>
        <member name="T:Top.Api.Response.JushitaJdpCommonQueryResponse">
            <summary>
            JushitaJdpCommonQueryResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.JushitaJdpCommonQueryResponse.JsonStr">
            <summary>
            结果的json串
            </summary>
        </member>
        <member name="T:Top.Api.Response.WangwangEserviceOnlinetimeGetResponse">
            <summary>
            WangwangEserviceOnlinetimeGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.WangwangEserviceOnlinetimeGetResponse.OnlineTimesListOnDays">
            <summary>
            客服在线时长（按天统计，排列）
            </summary>
        </member>
        <member name="T:Top.Api.Response.DeliveryTemplateUpdateResponse">
            <summary>
            DeliveryTemplateUpdateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.DeliveryTemplateUpdateResponse.Complete">
            <summary>
            表示修改是否成功
            </summary>
        </member>
        <member name="T:Top.Api.Response.TmallItemSizemappingTemplateCreateResponse">
            <summary>
            TmallItemSizemappingTemplateCreateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallItemSizemappingTemplateCreateResponse.SizeMappingTemplate">
            <summary>
            尺码表模板
            </summary>
        </member>
        <member name="T:Top.Api.Response.RefundsReceiveGetResponse">
            <summary>
            RefundsReceiveGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.RefundsReceiveGetResponse.HasNext">
            <summary>
            是否存在下一页
            </summary>
        </member>
        <member name="P:Top.Api.Response.RefundsReceiveGetResponse.Refunds">
            <summary>
            搜索到的退款信息列表
            </summary>
        </member>
        <member name="P:Top.Api.Response.RefundsReceiveGetResponse.TotalResults">
            <summary>
            搜索到的退款信息总数
            </summary>
        </member>
        <member name="T:Top.Api.Response.ItemImgUploadResponse">
            <summary>
            ItemImgUploadResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ItemImgUploadResponse.ItemImg">
            <summary>
            商品图片结构
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaCampaignPlatformGetRequest">
            <summary>
            TOP API: taobao.simba.campaign.platform.get
            </summary>
        </member>
        <member name="T:Top.Api.BaseTopRequest`1">
            <summary>
            基础TOP请求类，存放一些通用的请求参数。
            </summary>
        </member>
        <member name="T:Top.Api.ITopRequest`1">
            <summary>
            TOP请求接口。
            </summary>
        </member>
        <member name="M:Top.Api.ITopRequest`1.GetApiName">
            <summary>
            获取TOP的API名称。
            </summary>
        </member>
        <member name="M:Top.Api.ITopRequest`1.GetTargetAppKey">
            <summary>
            获取被调用的目标AppKey
            </summary>
        </member>
        <member name="M:Top.Api.ITopRequest`1.GetParameters">
            <summary>
            获取所有的Key-Value形式的文本请求参数字典。
            </summary>
        </member>
        <member name="M:Top.Api.ITopRequest`1.GetHeaderParameters">
            <summary>
            获取自定义HTTP请求头参数。
            </summary>
        </member>
        <member name="M:Top.Api.ITopRequest`1.GetBatchApiSession">
            <summary>
             获取API请求的用户授权码，仅用于批量API调用请求。
            </summary>
        </member>
        <member name="M:Top.Api.ITopRequest`1.SetBatchApiSession(System.String)">
            <summary>
            设置API请求的用户授权码，仅用于批量API调用请求。
            </summary>
        </member>
        <member name="M:Top.Api.ITopRequest`1.GetBatchApiOrder">
            <summary>
            获取API在批量调用中的顺序，仅用于批量API调用请求。
            </summary>
        </member>
        <member name="M:Top.Api.ITopRequest`1.SetBatchApiOrder(System.Int32)">
            <summary>
            设置API在批量调用中的顺序，仅用于批量API调用请求。
            </summary>
        </member>
        <member name="M:Top.Api.ITopRequest`1.Validate">
            <summary>
            客户端参数检查，减少服务端无效调用。
            </summary>
        </member>
        <member name="F:Top.Api.BaseTopRequest`1.otherParams">
            <summary>
            HTTP请求URL参数
            </summary>
        </member>
        <member name="F:Top.Api.BaseTopRequest`1.headerParams">
            <summary>
            HTTP请求头参数
            </summary>
        </member>
        <member name="F:Top.Api.BaseTopRequest`1.targetAppKey">
            <summary>
            请求目标AppKey
            </summary>
        </member>
        <member name="F:Top.Api.BaseTopRequest`1.batchApiSession">
            <summary>
            批量API请求的用户授权码
            </summary>
        </member>
        <member name="F:Top.Api.BaseTopRequest`1.batchApiOrder">
            <summary>
            API在批量调用中的顺序
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaCampaignPlatformGetRequest.CampaignId">
            <summary>
            推广计划Id
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaCampaignPlatformGetRequest.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="T:Top.Api.Request.PromotionMealGetRequest">
            <summary>
            TOP API: taobao.promotion.meal.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.PromotionMealGetRequest.MealId">
            <summary>
            搭配套餐id
            </summary>
        </member>
        <member name="P:Top.Api.Request.PromotionMealGetRequest.Status">
            <summary>
            套餐状态。有效：VALID;失效：INVALID(有效套餐为可使用的套餐,无效套餐为套餐中有商品下架或库存为0时)。默认时两种情况都会查询。
            </summary>
        </member>
        <member name="T:Top.Api.Request.ItemQuantityUpdateRequest">
            <summary>
            TOP API: taobao.item.quantity.update
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemQuantityUpdateRequest.NumIid">
            <summary>
            商品数字ID，必填参数
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemQuantityUpdateRequest.OuterId">
            <summary>
            SKU的商家编码，可选参数。如果不填则默认修改宝贝的库存，如果填了则按照商家编码搜索出对应的SKU并修改库存。当sku_id和本字段都填写时以sku_id为准搜索对应SKU
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemQuantityUpdateRequest.Quantity">
            <summary>
            库存修改值，必选。当全量更新库存时，quantity必须为大于等于0的正整数；当增量更新库存时，quantity为整数，可小于等于0。若增量更新时传入的库存为负数，则负数与实际库存之和不能小于0。比如当前实际库存为1，传入增量更新quantity=-1，库存改为0
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemQuantityUpdateRequest.SkuId">
            <summary>
            要操作的SKU的数字ID，可选。如果不填默认修改宝贝的库存，如果填上则修改该SKU的库存
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemQuantityUpdateRequest.Type">
            <summary>
            库存更新方式，可选。1为全量更新，2为增量更新。如果不填，默认为全量更新
            </summary>
        </member>
        <member name="T:Top.Api.Request.TopIpoutGetRequest">
            <summary>
            TOP API: taobao.top.ipout.get
            </summary>
        </member>
        <member name="T:Top.Api.Request.TmallItemSchemaIncrementUpdateRequest">
            <summary>
            TOP API: tmall.item.schema.increment.update
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemSchemaIncrementUpdateRequest.ItemId">
            <summary>
            需要编辑的商品ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemSchemaIncrementUpdateRequest.XmlData">
            <summary>
            根据tmall.item.increment.update.schema.get生成的商品增量编辑规则入参数据。需要更新的字段，一定要在入参的XML重点update_fields字段中明确指明
            </summary>
        </member>
        <member name="T:Top.Api.Request.LogisticsAddressAddRequest">
            <summary>
            TOP API: taobao.logistics.address.add
            </summary>
        </member>
        <member name="P:Top.Api.Request.LogisticsAddressAddRequest.Addr">
            <summary>
            详细街道地址，不需要重复填写省/市/区
            </summary>
        </member>
        <!-- 对于成员“P:Top.Api.Request.LogisticsAddressAddRequest.CancelDef”忽略有格式错误的 XML 注释 -->
        <member name="P:Top.Api.Request.LogisticsAddressAddRequest.City">
            <summary>
            所在市
            </summary>
        </member>
        <member name="P:Top.Api.Request.LogisticsAddressAddRequest.ContactName">
            <summary>
            联系人姓名 <font color='red'>长度不可超过20个字节</font>
            </summary>
        </member>
        <!-- 对于成员“P:Top.Api.Request.LogisticsAddressAddRequest.Country”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“P:Top.Api.Request.LogisticsAddressAddRequest.GetDef”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“P:Top.Api.Request.LogisticsAddressAddRequest.Memo”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“P:Top.Api.Request.LogisticsAddressAddRequest.MobilePhone”忽略有格式错误的 XML 注释 -->
        <member name="P:Top.Api.Request.LogisticsAddressAddRequest.Phone">
            <summary>
            电话号码,手机与电话必需有一个
            </summary>
        </member>
        <member name="P:Top.Api.Request.LogisticsAddressAddRequest.Province">
            <summary>
            所在省
            </summary>
        </member>
        <!-- 对于成员“P:Top.Api.Request.LogisticsAddressAddRequest.SellerCompany”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“P:Top.Api.Request.LogisticsAddressAddRequest.SendDef”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“P:Top.Api.Request.LogisticsAddressAddRequest.ZipCode”忽略有格式错误的 XML 注释 -->
        <member name="T:Top.Api.Request.SimbaInsightCatsdataGetRequest">
            <summary>
            TOP API: taobao.simba.insight.catsdata.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaInsightCatsdataGetRequest.CategoryIdList">
            <summary>
            表示要查询的类目id
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaInsightCatsdataGetRequest.EndDate">
            <summary>
            查询截止时间，格式：yyyy-MM-dd
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaInsightCatsdataGetRequest.StartDate">
            <summary>
            开始时间，格式：yyyy-MM-dd
            </summary>
        </member>
        <member name="T:Top.Api.Request.LogisticsOnlineConfirmRequest">
            <summary>
            TOP API: taobao.logistics.online.confirm
            </summary>
        </member>
        <member name="P:Top.Api.Request.LogisticsOnlineConfirmRequest.IsSplit">
            <summary>
            表明是否是拆单，默认值0，1表示拆单
            </summary>
        </member>
        <member name="P:Top.Api.Request.LogisticsOnlineConfirmRequest.OutSid">
            <summary>
            运单号.具体一个物流公司的真实运单号码。淘宝官方物流会校验，请谨慎传入；
            </summary>
        </member>
        <member name="P:Top.Api.Request.LogisticsOnlineConfirmRequest.SellerIp">
            <summary>
            商家的IP地址
            </summary>
        </member>
        <member name="P:Top.Api.Request.LogisticsOnlineConfirmRequest.SubTid">
            <summary>
            拆单子订单列表，对应的数据是：子订单号的列表。可以不传，但是如果传了则必须符合传递的规则。子订单必须是操作的物流订单的子订单的真子集
            </summary>
        </member>
        <member name="P:Top.Api.Request.LogisticsOnlineConfirmRequest.Tid">
            <summary>
            淘宝交易ID
            </summary>
        </member>
        <member name="T:Top.Api.Request.JushitaJdpUserAddRequest">
            <summary>
            TOP API: taobao.jushita.jdp.user.add
            </summary>
        </member>
        <member name="P:Top.Api.Request.JushitaJdpUserAddRequest.HistoryDays">
            <summary>
            已废弃，使用页面中应用的配置。推送历史数据天数，只能为90天内，包含90天。当此参数不填时，表示以页面中应用配置的历史天数为准；如果为0表示这个用户不推送历史数据；其它表示推送的历史天数。
            </summary>
        </member>
        <member name="P:Top.Api.Request.JushitaJdpUserAddRequest.HostIp">
            <summary>
            已废弃，新版订单同步服务不要使用。同步用户数据的机器IP,必须是界面配置的IP。
            </summary>
        </member>
        <member name="P:Top.Api.Request.JushitaJdpUserAddRequest.HostName">
            <summary>
            已废弃，新版订单同步服务不要使用。绑定类型，用户数据同步的机器名称。
            </summary>
        </member>
        <member name="P:Top.Api.Request.JushitaJdpUserAddRequest.RdsName">
            <summary>
            RDS实例名称，如果有多个RDS必须设置。
            </summary>
        </member>
        <member name="P:Top.Api.Request.JushitaJdpUserAddRequest.Topics">
            <summary>
            已废弃，使用页面中应用的配置。用户同步的数据类型,多个用','号分割。可选值：trade,refund,item
            </summary>
        </member>
        <member name="T:Top.Api.Request.TicketItemsGetRequest">
            <summary>
            TOP API: taobao.ticket.items.get
            </summary>
        </member>
        <!-- 对于成员“P:Top.Api.Request.TicketItemsGetRequest.Fields”忽略有格式错误的 XML 注释 -->
        <member name="P:Top.Api.Request.TicketItemsGetRequest.ItemIds">
            <summary>
            批量获取信息的商品标识。最多不能超过20个。
            </summary>
        </member>
        <member name="T:Top.Api.Request.ItemsSellerListGetRequest">
            <summary>
            TOP API: taobao.items.seller.list.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemsSellerListGetRequest.Fields">
            <summary>
            需要返回的商品字段列表。可选值：点击返回结果中的Item结构体中能展示出来的所有字段，多个字段用“,”分隔。注：返回所有sku信息的字段名称是sku而不是skus。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemsSellerListGetRequest.NumIids">
            <summary>
            商品ID列表，多个ID用半角逗号隔开，一次最多不超过20个。注：获取不存在的商品ID或获取别人的商品都不会报错，但没有商品数据返回。
            </summary>
        </member>
        <member name="T:Top.Api.Request.AppipGetRequest">
            <summary>
            TOP API: taobao.appip.get
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaAdgroupidsDeletedGetRequest">
            <summary>
            TOP API: taobao.simba.adgroupids.deleted.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupidsDeletedGetRequest.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupidsDeletedGetRequest.PageNo">
            <summary>
            返回的第几页数据，默认为1
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupidsDeletedGetRequest.PageSize">
            <summary>
            返回的每页数据量大小,默认200最大1000
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupidsDeletedGetRequest.StartTime">
            <summary>
            得到此时间点之后的数据，不能大于一个月
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaCatmatchidsChangedGetRequest">
            <summary>
            TOP API: taobao.simba.catmatchids.changed.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaCatmatchidsChangedGetRequest.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaCatmatchidsChangedGetRequest.PageNo">
            <summary>
            返回的第几页数据，默认为1
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaCatmatchidsChangedGetRequest.PageSize">
            <summary>
            返回的每页数据量大小,默认200最大1000
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaCatmatchidsChangedGetRequest.StartTime">
            <summary>
            得到此时间点之后的数据，不能大于一个月
            </summary>
        </member>
        <member name="T:Top.Api.Request.SellercenterSubuserPermissionsRolesGetRequest">
            <summary>
            TOP API: taobao.sellercenter.subuser.permissions.roles.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SellercenterSubuserPermissionsRolesGetRequest.Nick">
            <summary>
            子账号昵称(子账号标识)
            </summary>
        </member>
        <member name="T:Top.Api.Request.TmallBrandcatSuiteconfGetRequest">
            <summary>
            TOP API: tmall.brandcat.suiteconf.get
            </summary>
        </member>
        <member name="T:Top.Api.Request.SellercenterRoleAddRequest">
            <summary>
            TOP API: taobao.sellercenter.role.add
            </summary>
        </member>
        <member name="P:Top.Api.Request.SellercenterRoleAddRequest.Description">
            <summary>
            角色描述
            </summary>
        </member>
        <member name="P:Top.Api.Request.SellercenterRoleAddRequest.Name">
            <summary>
            角色名
            </summary>
        </member>
        <member name="P:Top.Api.Request.SellercenterRoleAddRequest.Nick">
            <summary>
            表示卖家昵称
            </summary>
        </member>
        <member name="P:Top.Api.Request.SellercenterRoleAddRequest.PermissionCodes">
            <summary>
            需要授权的权限点permission_code列表,以","分割.其code值可以通过调用taobao.sellercenter.user.permissions.get返回，其中permission.is_authorize=1的权限点可以通过本接口授权给对应角色。
            </summary>
        </member>
        <member name="T:Top.Api.Request.SellercenterRoleInfoGetRequest">
            <summary>
            TOP API: taobao.sellercenter.role.info.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SellercenterRoleInfoGetRequest.RoleId">
            <summary>
            角色id
            </summary>
        </member>
        <member name="T:Top.Api.Request.SkusCustomGetRequest">
            <summary>
            TOP API: taobao.skus.custom.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SkusCustomGetRequest.Fields">
            <summary>
            需返回的字段列表。可选值：Sku结构体中的所有字段；字段之间用“,”隔开
            </summary>
        </member>
        <member name="P:Top.Api.Request.SkusCustomGetRequest.OuterId">
            <summary>
            Sku的外部商家ID
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaNonsearchAlldemographicsGetRequest">
            <summary>
            TOP API: taobao.simba.nonsearch.alldemographics.get
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaKeywordsRealtimeRankingBatchGetRequest">
            <summary>
            TOP API: taobao.simba.keywords.realtime.ranking.batch.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaKeywordsRealtimeRankingBatchGetRequest.AdGroupId">
            <summary>
            adgroupId
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaKeywordsRealtimeRankingBatchGetRequest.BidwordIds">
            <summary>
            关键词列表集合
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaKeywordsRealtimeRankingBatchGetRequest.Nick">
            <summary>
            旺旺名称
            </summary>
        </member>
        <member name="T:Top.Api.Request.WangwangEserviceNoreplynumGetRequest">
            <summary>
            TOP API: taobao.wangwang.eservice.noreplynum.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.WangwangEserviceNoreplynumGetRequest.EndDate">
            <summary>
            结束日期
            </summary>
        </member>
        <member name="P:Top.Api.Request.WangwangEserviceNoreplynumGetRequest.ServiceStaffId">
            <summary>
            客服人员id：cntaobao+淘宝nick，例如cntaobaotest
            </summary>
        </member>
        <member name="P:Top.Api.Request.WangwangEserviceNoreplynumGetRequest.StartDate">
            <summary>
            开始日期
            </summary>
        </member>
        <member name="T:Top.Api.Request.WangwangEserviceAvgwaittimeGetRequest">
            <summary>
            TOP API: taobao.wangwang.eservice.avgwaittime.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.WangwangEserviceAvgwaittimeGetRequest.EndDate">
            <summary>
            结束时间
            </summary>
        </member>
        <member name="P:Top.Api.Request.WangwangEserviceAvgwaittimeGetRequest.ServiceStaffId">
            <summary>
            客服人员id：cntaobao+淘宝nick，例如cntaobaotest
            </summary>
        </member>
        <member name="P:Top.Api.Request.WangwangEserviceAvgwaittimeGetRequest.StartDate">
            <summary>
            开始时间
            </summary>
        </member>
        <member name="T:Top.Api.Request.WangwangEserviceOnlinetimeGetRequest">
            <summary>
            TOP API: taobao.wangwang.eservice.onlinetime.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.WangwangEserviceOnlinetimeGetRequest.EndDate">
            <summary>
            结束日期
            </summary>
        </member>
        <member name="P:Top.Api.Request.WangwangEserviceOnlinetimeGetRequest.ServiceStaffId">
            <summary>
            客服人员id：cntaobao+淘宝nick，例如cntaobaotest
            </summary>
        </member>
        <member name="P:Top.Api.Request.WangwangEserviceOnlinetimeGetRequest.StartDate">
            <summary>
            开始日期
            </summary>
        </member>
        <member name="T:Top.Api.Request.TmallProductBooksAddRequest">
            <summary>
            TOP API: tmall.product.books.add
            </summary>
        </member>
        <member name="T:Top.Api.ITopUploadRequest`1">
            <summary>
            TOP上传请求接口，支持同时上传多个文件。
            </summary>
        </member>
        <member name="M:Top.Api.ITopUploadRequest`1.GetFileParameters">
            <summary>
            获取所有的Key-Value形式的文件请求参数字典。其中：
            Key: 请求参数名
            Value: 文件对象
            </summary>
            <returns>文件请求参数字典</returns>
        </member>
        <member name="P:Top.Api.Request.TmallProductBooksAddRequest.AbstractMsg">
            <summary>
            摘要信息，不支持HTML代码，长度限制5000
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallProductBooksAddRequest.AppInfo">
            <summary>
            用户的Id,需要确定自己id的可以联系接口负责人
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallProductBooksAddRequest.Author">
            <summary>
            作者/著者，最多填写三个人名，超出三个人的以“等”结束
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallProductBooksAddRequest.AuthorArea">
            <summary>
            作者国别/地区，到国家级别
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallProductBooksAddRequest.BarCode">
            <summary>
            条形码，数字，共13位，9787开头
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallProductBooksAddRequest.BookBind">
            <summary>
            装帧
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallProductBooksAddRequest.BookSize">
            <summary>
            开本，如：16  表示16开本
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallProductBooksAddRequest.BookVersion">
            <summary>
            版本
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallProductBooksAddRequest.Catalog">
            <summary>
            目录，不支持HTML代码，长度限制为8000
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallProductBooksAddRequest.CategoryId">
            <summary>
            类目id
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallProductBooksAddRequest.ChinaClassifyNo">
            <summary>
            中图分类号，英文字母加数字组成
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallProductBooksAddRequest.Cip">
            <summary>
            cip数据编号，真实格式：（XXX）第***号，  导入时，格式为XXX-***
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallProductBooksAddRequest.Commentator">
            <summary>
            点评者，只写一个人的名字，超出的以“等”结束
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallProductBooksAddRequest.CustomId">
            <summary>
            用户自己的Id号
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallProductBooksAddRequest.DeputyName">
            <summary>
            图书名称(正副书名)
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallProductBooksAddRequest.Drawor">
            <summary>
            绘图者，只写一个人的名字，超出的以“等”结束
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallProductBooksAddRequest.Editor">
            <summary>
            编者，只写一个人的名字，超出的以“等”结束
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallProductBooksAddRequest.Graphor">
            <summary>
            摄影者，只写一个人的名字，超出的以“等”结束
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallProductBooksAddRequest.Image">
            <summary>
            上传图片，图片上传使用byte[]类型
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallProductBooksAddRequest.Isbn">
            <summary>
            不带‘-’的图书ISBN号  1. 位数限定：10位 末尾校验,7开头  2. 位数限定：13位、开头数字限定： 9787开头
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallProductBooksAddRequest.ItemIds">
            <summary>
            这条记录对应的淘宝的Ids
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallProductBooksAddRequest.Narrator">
            <summary>
            口述者，只写一个人的名字，超出的以“等”结束
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallProductBooksAddRequest.PartName">
            <summary>
            分册名
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallProductBooksAddRequest.PartNo">
            <summary>
            分册号
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallProductBooksAddRequest.Plottor">
            <summary>
            策划者，只写一个人的名字，超出的以“等”结束
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallProductBooksAddRequest.Price">
            <summary>
            价格支持整数和小数，小数保留小数点后两位，若有多个价格，价格之间通过','号分隔
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallProductBooksAddRequest.PublishCompany">
            <summary>
            出版社名称
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallProductBooksAddRequest.PublishYm">
            <summary>
            出版时间，格式必须注意：年份/月份
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallProductBooksAddRequest.ReginYear">
            <summary>
            年号，必须是完整的年份，如：2013，当输入的值不是四位或者首位大于2时，调接口失败
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallProductBooksAddRequest.Scholisat">
            <summary>
            注释者，只写一个人的名字，超出的以“等”结束
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallProductBooksAddRequest.SeriesBooksName">
            <summary>
            丛书名
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallProductBooksAddRequest.Summary">
            <summary>
            简介，不支持HTML代码，长度不能超过5000
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallProductBooksAddRequest.Translator">
            <summary>
            译者，只写一个人的名字，超出的以“等”结束
            </summary>
        </member>
        <member name="T:Top.Api.Request.ShopUpdateRequest">
            <summary>
            TOP API: taobao.shop.update
            </summary>
        </member>
        <member name="P:Top.Api.Request.ShopUpdateRequest.Bulletin">
            <summary>
            店铺公告。不超过1024个字符
            </summary>
        </member>
        <member name="P:Top.Api.Request.ShopUpdateRequest.Desc">
            <summary>
            店铺描述。10～2000个字符以内
            </summary>
        </member>
        <member name="P:Top.Api.Request.ShopUpdateRequest.Title">
            <summary>
            店铺标题。不超过30个字符；过滤敏感词，如淘咖啡、阿里巴巴等。title, bulletin和desc至少必须传一个
            </summary>
        </member>
        <member name="T:Top.Api.Request.TradesSoldIncrementvGetRequest">
            <summary>
            TOP API: taobao.trades.sold.incrementv.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.TradesSoldIncrementvGetRequest.EndCreate">
            <summary>
            查询入库结束时间，必须大于入库开始时间(修改时间跨度不能大于一天)，格式:yyyy-MM-dd HH:mm:ss。<span style="color:red;font-weight: bold;">建议使用30分钟以内的时间跨度，能大大提高响应速度和成功率</span>。
            </summary>
        </member>
        <member name="P:Top.Api.Request.TradesSoldIncrementvGetRequest.ExtType">
            <summary>
            可选值有ershou(二手市场的订单）,service（商城服务子订单）mark（双十一大促活动异常订单）作为扩展类型筛选只能做单个ext_type查询，不能全部查询所有的ext_type类型
            </summary>
        </member>
        <member name="P:Top.Api.Request.TradesSoldIncrementvGetRequest.Fields">
            <summary>
            需要返回的字段列表，多个字段用半角逗号分隔，可选值为返回示例中能看到的所有字段。
            </summary>
        </member>
        <member name="P:Top.Api.Request.TradesSoldIncrementvGetRequest.PageNo">
            <summary>
            页码。取值范围:大于零的整数;默认值:1。<span style="color:red;font-weight: bold;">注：必须采用倒序的分页方式（从最后一页往回取）才能避免漏单问题。</span>
            </summary>
        </member>
        <member name="P:Top.Api.Request.TradesSoldIncrementvGetRequest.PageSize">
            <summary>
            每页条数。取值范围：1~100，默认值：40。<span style="color:red;font-weight: bold;">建议使用40~50，可以提高成功率，减少超时数量</span>。
            </summary>
        </member>
        <member name="P:Top.Api.Request.TradesSoldIncrementvGetRequest.StartCreate">
            <summary>
            查询入库开始时间(修改时间跨度不能大于一天)。格式:yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="P:Top.Api.Request.TradesSoldIncrementvGetRequest.Status">
            <summary>
            交易状态（<a href="http://open.taobao.com/doc/detail.htm?id=102856" target="_blank">查看可选值</a>），默认查询所有交易状态的数据，除了默认值外每次只能查询一种状态。
            </summary>
        </member>
        <member name="P:Top.Api.Request.TradesSoldIncrementvGetRequest.Tag">
            <summary>
            卖家对交易的自定义分组标签，目前可选值为：time_card（点卡软件代充），fee_card（话费软件代充）
            </summary>
        </member>
        <member name="P:Top.Api.Request.TradesSoldIncrementvGetRequest.Type">
            <summary>
            交易类型列表（<a href="http://open.taobao.com/doc/detail.htm?id=102855" target="_blank">查看可选值</a>），一次查询多种类型可用半角逗号分隔，默认同时查询guarantee_trade,auto_delivery,ec,cod,step这5种类型的数据。
            </summary>
        </member>
        <member name="P:Top.Api.Request.TradesSoldIncrementvGetRequest.UseHasNext">
            <summary>
            是否启用has_next的分页方式，如果指定true,则返回的结果中不包含总记录数，但是会新增一个是否存在下一页的的字段，<span style="color:red;font-weight: bold;">通过此种方式获取增量交易，效率在原有的基础上有80%的提升</span>。
            </summary>
        </member>
        <member name="T:Top.Api.Request.AreasGetRequest">
            <summary>
            TOP API: taobao.areas.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.AreasGetRequest.Fields">
            <summary>
            需返回的字段列表.可选值:Area 结构中的所有字段;多个字段之间用","分隔.如:id,type,name,parent_id,zip.
            </summary>
        </member>
        <member name="T:Top.Api.Request.ItemAddRequest">
            <summary>
            TOP API: taobao.item.add
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.AfterSaleId">
            <summary>
            售后说明模板id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.ApproveStatus">
            <summary>
            商品上传后的状态。可选值:onsale(出售中),instock(仓库中);默认值:onsale
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.AuctionPoint">
            <summary>
            商品的积分返点比例。如:5,表示:返点比例0.5%. 注意：返点比例必须是>0的整数，而且最大是90,即为9%.B商家在发布非虚拟商品时，返点必须是 5的倍数，即0.5%的倍数。其它是1的倍数，即0.1%的倍数。无名良品商家发布商品时，复用该字段记录积分宝返点比例，返点必须是对应类目的返点步长的整数倍，默认是5，即0.5%。注意此时该字段值依旧必须是>0的整数，最高值不超过500，即50%
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.AutoFill">
            <summary>
            代充商品类型。在代充商品的类目下，不传表示不标记商品类型（交易搜索中就不能通过标记搜到相关的交易了）。可选类型： no_mark(不做类型标记) time_card(点卡软件代充) fee_card(话费软件代充)
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.AutoRepost">
            <summary>
            自动重发。可选值:true,false;默认值:false(不重发)
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.Barcode">
            <summary>
            商品条形码
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.ChangeProp">
            <summary>
            基础色数据
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.ChaoshiExtendsInfo">
            <summary>
            天猫超市扩展字段，天猫超市专用。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.Cid">
            <summary>
            叶子类目id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.CodPostageId">
            <summary>
            此为货到付款运费模板的ID，对应的JAVA类型是long,如果COD卖家应用了货到付款运费模板，此值要进行设置。该字段已经废弃
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.CpvMemo">
            <summary>
            针对当前商品的标准属性值的补充说明，让买家更加了解商品信息减少交易纠纷
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.CustomMadeTypeId">
            <summary>
            定制工具Id如果支持定制市场，这个值不填写，就用之前的定制工具Id，之前的定制工具Id没有值就默认为-1
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.DeliveryTimeDeliveryTime">
            <summary>
            商品级别设置的发货时间。设置了商品级别的发货时间，相对发货时间，则填写相对发货时间的天数（大于3）；绝对发货时间，则填写yyyy-mm-dd格式，如2013-11-11
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.DeliveryTimeDeliveryTimeType">
            <summary>
            发货时间类型：绝对发货时间或者相对发货时间
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.DeliveryTimeNeedDeliveryTime">
            <summary>
            设置是否使用发货时间，商品级别，sku级别
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.Desc">
            <summary>
            宝贝描述。字数要大于5个字符，小于25000个字符，受违禁词控制
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.DescModules">
            <summary>
            商品描述模块化，模块列表，由List转化成jsonArray存入，后端逻辑验证通过，拼装成模块内容+锚点导航后存入desc中。数据结构具体参见Item_Desc_Module
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.EmsFee">
            <summary>
            ems费用。取值范围:0.01-999.00;精确到2位小数;单位:元。如:25.07，表示:25元7分
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.ExpressFee">
            <summary>
            快递费用。取值范围:0.01-999.00;精确到2位小数;单位:元。如:15.07，表示:15元7分
            </summary>
        </member>
        <!-- 对于成员“P:Top.Api.Request.ItemAddRequest.Features”忽略有格式错误的 XML 注释 -->
        <member name="P:Top.Api.Request.ItemAddRequest.FoodSecurityContact">
            <summary>
            厂家联系方式
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.FoodSecurityDesignCode">
            <summary>
            产品标准号
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.FoodSecurityFactory">
            <summary>
            厂名
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.FoodSecurityFactorySite">
            <summary>
            厂址
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.FoodSecurityFoodAdditive">
            <summary>
            食品添加剂
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.FoodSecurityHealthProductNo">
            <summary>
            健字号，保健品/膳食营养补充剂 这个类目下特有的信息，此类目下无需填写生产许可证编号（QS），如果填写了生产许可证编号（QS）将被忽略不保存；保存宝贝时，标题前会自动加上健字号产品名称一起作为宝贝标题；
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.FoodSecurityMix">
            <summary>
            配料表
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.FoodSecurityPeriod">
            <summary>
            保质期
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.FoodSecurityPlanStorage">
            <summary>
            储藏方法
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.FoodSecurityPrdLicenseNo">
            <summary>
            生产许可证号
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.FoodSecurityProductDateEnd">
            <summary>
            生产结束日期,格式必须为yyyy-MM-dd
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.FoodSecurityProductDateStart">
            <summary>
            生产开始日期，格式必须为yyyy-MM-dd
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.FoodSecurityStockDateEnd">
            <summary>
            进货结束日期，要在生产日期之后，格式必须为yyyy-MM-dd
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.FoodSecurityStockDateStart">
            <summary>
            进货开始日期，要在生产日期之后，格式必须为yyyy-MM-dd
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.FoodSecuritySupplier">
            <summary>
            供货商
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.FreightPayer">
            <summary>
            运费承担方式。可选值:seller（卖家承担）,buyer(买家承担);默认值:seller。卖家承担不用设置邮费和postage_id.买家承担的时候，必填邮费和postage_id 如果用户设置了运费模板会优先使用运费模板，否则要同步设置邮费（post_fee,express_fee,ems_fee）
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.GlobalStockCountry">
            <summary>
            全球购商品采购地（地区/国家）,默认值只在全球购商品采购地（库存类型选择情况生效），地区国家值为（美国, 香港, 日本, 英国, 新西兰, 德国, 韩国, 荷兰, 澳洲, 法国, 意大利, 台湾, 澳门, 加拿大, 瑞士, 西班牙, 泰国, 新加坡, 马来西亚, 菲律宾, 其他）
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.GlobalStockDeliveryPlace">
            <summary>
            全球购商品发货地，发货地现在有两种类型：“国内”和“海外及港澳台”，参数值为1时代表“国内”，值为2时代表“海外及港澳台”，默认为国内。注意：卖家必须已经签署并启用“海外直邮”合约，才能选择发货地为“海外及港澳台”
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.GlobalStockTaxFreePromise">
            <summary>
            全球购商品卖家包税承诺，当值为true时，代表卖家承诺包税。注意：请与“全球购商品发货地”配合使用，包税承诺必须满足：1、发货地为海外及港澳台 2、卖家已经签署并启用“包税合约”合约
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.GlobalStockType">
            <summary>
            全球购商品采购地（库存类型），有两种库存类型：现货和代购参数值为1时代表现货，值为2时代表代购。注意：使用时请与 全球购商品采购地（地区/国家）配合使用
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.HasDiscount">
            <summary>
            支持会员打折。可选值:true,false;默认值:false(不打折)
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.HasInvoice">
            <summary>
            是否有发票。可选值:true,false (商城卖家此字段必须为true);默认值:false(无发票)
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.HasShowcase">
            <summary>
            橱窗推荐。可选值:true,false;默认值:false(不推荐)
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.HasWarranty">
            <summary>
            是否有保修。可选值:true,false;默认值:false(不保修)
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.Ignorewarning">
            <summary>
            忽略警告提示.
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.Image">
            <summary>
            商品主图片。类型:JPG,GIF;最大长度:3M
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.Increment">
            <summary>
            加价(降价)幅度。如果为0，代表系统代理幅度。对于增价拍和荷兰拍来说是加价幅度，对于降价拍来说是降价幅度。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.InputCustomCpv">
            <summary>
            针对当前商品的自定义属性值，目前是针对销售属性值自定义的，所以调用方需要把自定义属性值对应的虚拟属性值ID（负整数，例如例子中的 -1和-2）像标准属性值值的id一样设置到SKU上，如果自定义属性值有属性值图片，也要设置到属性图片上
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.InputPids">
            <summary>
            用户自行输入的类目属性ID串，结构："pid1,pid2,pid3"，如："20000"（表示品牌） 注：通常一个类目下用户可输入的关键属性不超过1个。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.InputStr">
            <summary>
            用户自行输入的子属性名和属性值，结构:"父属性值;一级子属性名;一级子属性值;二级子属性名;自定义输入值,....",如：“耐克;耐克系列;科比系列;科比系列;2K5,Nike乔丹鞋;乔丹系列;乔丹鞋系列;乔丹鞋系列;json5”，多个自定义属性用','分割，input_str需要与input_pids一一对应，注：通常一个类目下用户可输入的关键属性不超过1个。所有属性别名加起来不能超过3999字节。此处不可以使用“其他”、“其它”和“其她”这三个词。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.Is3D">
            <summary>
            是否是3D
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.IsEx">
            <summary>
            是否在外店显示
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.IsLightningConsignment">
            <summary>
            实物闪电发货
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.IsOffline">
            <summary>
            是否是线下商品。1：线上商品（默认值）；2：线上或线下商品；3：线下商品。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.IsTaobao">
            <summary>
            是否在淘宝上显示（如果传FALSE，则在淘宝主站无法显示该商品）
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.IsXinpin">
            <summary>
            商品是否为新品。只有在当前类目开通新品,并且当前用户拥有该类目下发布新品权限时才能设置is_xinpin为true，否则设置true后会返回错误码:isv.invalid-permission:add-xinpin。同时只有一口价全新的宝贝才能设置为新品，否则会返回错误码：isv.invalid-parameter:xinpin。不设置该参数值或设置为false效果一致。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.ItemSize">
            <summary>
            表示商品的体积，如果需要使用按体积计费的运费模板，一定要设置这个值。该值的单位为立方米（m3），如果是其他单位，请转换成成立方米。该值支持两种格式的设置：格式1：bulk:3,单位为立方米(m3),表示直接设置为商品的体积。格式2：length:10;breadth:10;height:10，单位为米（m）。体积和长宽高都支持小数类型。在传入体积或长宽高时候，不能带单位。体积的单位默认为立方米（m3），长宽高的单位默认为米(m)该值支持两种格式的设置：格式1：bulk:3,单位为立方米(m3),表示直接设置为商品的体积。格式2：length:10;breadth:10;height:10，单位为米（m）
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.ItemWeight">
            <summary>
            商品的重量，用于按重量计费的运费模板。注意：单位为kg。只能传入数值类型（包含小数），不能带单位，单位默认为kg。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.Lang">
            <summary>
            商品文字的字符集。繁体传入"zh_HK"，简体传入"zh_CN"，不传默认为简体
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.ListTime">
            <summary>
            定时上架时间。(时间格式：yyyy-MM-dd HH:mm:ss)
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.LocalityLifeChooseLogis">
            <summary>
            发布电子凭证宝贝时候表示是否使用邮寄 0: 代表不使用邮寄； 1：代表使用邮寄；如果不设置这个值，代表不使用邮寄
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.LocalityLifeEticket">
            <summary>
            电子凭证业务属性，数据字典是: 1、is_card:1 (暂时不用) 2、consume_way:4 （1 串码 ，4 身份证）3、consume_midmnick ：(核销放行账号:用户id-用户名，支持多个，用逗号分隔,例如 1234-测试账号35,1345-测试账号56）4、market:eticket (电子凭证商品标记) 5、has_pos:1 (1 表示商品配置线下门店，在detail上进行展示 ，没有或者其他值只不展示)格式是: k1:v2;k2:v2;........ 如：has_pos:1;market:eticket;consume_midmnick:901409638-OPPO;consume_way:4
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.LocalityLifeExpirydate">
            <summary>
            本地生活电子交易凭证业务，目前此字段只涉及到的信息为有效期;如果有效期为起止日期类型，此值为2012-08-06,2012-08-16如果有效期为【购买成功日 至】类型则格式为2012-08-16如果有效期为天数类型则格式为15
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.LocalityLifeMerchant">
            <summary>
            码商信息，格式为 码商id:nick
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.LocalityLifeNetworkId">
            <summary>
            网点ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.LocalityLifeObs">
            <summary>
            预约门店是否支持门店自提,1:是
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.LocalityLifeOnsaleAutoRefundRatio">
            <summary>
            电子凭证售中自动退款比例，百分比%前的数字，介于1-100之间的整数
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.LocalityLifePackageid">
            <summary>
            新版电子凭证包 id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.LocalityLifeRefundRatio">
            <summary>
            退款比例，百分比%前的数字,1-100的正整数值
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.LocalityLifeRefundmafee">
            <summary>
            退款码费承担方。发布电子凭证宝贝的时候会增加“退款码费承担方”配置项，可选填：(1)s（卖家承担） (2)b(买家承担)
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.LocalityLifeVerification">
            <summary>
            核销打款 1代表核销打款 0代表非核销打款
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.LocalityLifeVersion">
            <summary>
            新版电子凭证字段
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.LocationCity">
            <summary>
            所在地城市。如杭州 。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.LocationState">
            <summary>
            所在地省份。如浙江
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.MsPaymentPrice">
            <summary>
            订金。在“线上付订金线下付尾款”模式中，有订金、尾款可抵扣金额和参考价，三者需要同时填写。该商品订单首次支付价格为 订金 价格，用户可根据 参考价 估算全款。该模式有别于“一口价”付款方式，针对一个商品，只能选择两种付款方式中的一种，其适用于家装、二手车等场景。详见说明：http://bangpai.taobao.com/group/thread/15031186-303287205.htm
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.MsPaymentReferencePrice">
            <summary>
            参考价。该商品订单首次支付价格为 订金 价格，用户可根据 参考价 估算全款。详见说明：http://bangpai.taobao.com/group/thread/15031186-303287205.htm
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.MsPaymentVoucherPrice">
            <summary>
            尾款可抵扣金额。详见说明：http://bangpai.taobao.com/group/thread/15031186-303287205.htm
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.Newprepay">
            <summary>
            该宝贝是否支持【7天无理由退货】，卖家选择的值只是一个因素，最终以类目和选择的属性条件来确定是否支持7天。填入字符0，表示不支持；未填写或填人字符1，表示支持7天无理由退货；
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.Num">
            <summary>
            商品数量。取值范围:0-900000000的整数。且需要等于Sku所有数量的和。拍卖商品中增加拍只能为1，荷兰拍要在[2,500)范围内。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.O2oBindService">
            <summary>
            汽车O2O绑定线下服务标记，如不为空，表示关联服务，否则，不关联服务。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.OuterId">
            <summary>
            商品外部编码，该字段的最大长度是64个字节
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.PaimaiInfoDeposit">
            <summary>
            拍卖宝贝的保证金。对于增价拍和荷兰拍来说保证金有两种模式：淘宝默认模式（首次出价金额的10%），自定义固定保证金（固定冻结金额只能输入不超过30万的正整数），并且保证金只冻结1次。对于降价拍来说保证金只有淘宝默认的（竞拍价格的10% * 竞拍数量），并且每次出价都需要冻结保证金。对于拍卖宝贝来说，保证金是必须的，但是默认使用淘宝默认保证金模式，只有用户需要使用自定义固定保证金的时候才需要使用到这个参数，如果该参数不传或传入0则代表使用默认。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.PaimaiInfoInterval">
            <summary>
            降价拍宝贝的降价周期(分钟)。降价拍宝贝的价格每隔paimai_info.interval时间会下降一次increment。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.PaimaiInfoMode">
            <summary>
            拍卖商品选择的拍卖类型，拍卖类型包括三种：增价拍(1)，荷兰拍(2)和降价拍(3)。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.PaimaiInfoReserve">
            <summary>
            降价拍宝贝的保留价。对于降价拍来说，paimai_info.reserve必须大于0，且小于price-increment，而且（price-paimai_info.reserve）/increment的计算结果必须为整数
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.PaimaiInfoValidHour">
            <summary>
            自定义销售周期的小时数。拍卖宝贝可以自定义销售周期，这里指定销售周期的小时数。注意，该参数只作为输入参数，不能通过taobao.item.get接口获取。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.PaimaiInfoValidMinute">
            <summary>
            自定义销售周期的分钟数。拍卖宝贝可以自定义销售周期，这里是指定销售周期的分钟数。自定义销售周期的小时数。拍卖宝贝可以自定义销售周期，这里指定销售周期的小时数。注意，该参数只作为输入参数，不能通过taobao.item.get接口获取。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.PicPath">
            <summary>
            商品主图需要关联的图片空间的相对url。这个url所对应的图片必须要属于当前用户。pic_path和image只需要传入一个,如果两个都传，默认选择pic_path
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.PostFee">
            <summary>
            平邮费用。取值范围:0.01-999.00;精确到2位小数;单位:元。如:5.07，表示:5元7分. 注:post_fee,express_fee,ems_fee需要一起填写
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.PostageId">
            <summary>
            宝贝所属的运费模板ID。取值范围：整数且必须是该卖家的运费模板的ID（可通过taobao.delivery.template.get获得当前会话用户的所有邮费模板）
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.Price">
            <summary>
            商品价格。取值范围:0-100000000;精确到2位小数;单位:元。如:200.07，表示:200元7分。需要在正确的价格区间内。拍卖商品对应的起拍价。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.ProductId">
            <summary>
            商品所属的产品ID(B商家发布商品需要用)
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.PropertyAlias">
            <summary>
            属性值别名。如pid:vid:别名;pid1:vid1:别名1 ，其中：pid是属性id vid是属性值id。总长度不超过512字节
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.Props">
            <summary>
            商品属性列表。格式:pid:vid;pid:vid。属性的pid调用taobao.itemprops.get取得，属性值的vid用taobao.itempropvalues.get取得vid。 如果该类目下面没有属性，可以不用填写。如果有属性，必选属性必填，其他非必选属性可以选择不填写.属性不能超过35对。所有属性加起来包括分割符不能超过549字节，单个属性没有限制。 如果有属性是可输入的话，则用字段input_str填入属性的值
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.Qualification">
            <summary>
            商品资质信息
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.ScenicTicketBookCost">
            <summary>
            景区门票在选择订金支付时候，需要交的预订费。传入的值是1到20之间的数值，小数点后最多可以保留两位（多余的部分将做四舍五入的处理）。这个数值表示的是预订费的比例，最终的预订费为 scenic_ticket_book_cost乘一口价除以100
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.ScenicTicketPayWay">
            <summary>
            景区门票类宝贝发布时候，当卖家签订了支付宝代扣协议时候，需要选择支付方式：全额支付和订金支付。当scenic_ticket_pay_way为1时表示全额支付，为2时表示订金支付
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.SellPoint">
            <summary>
            商品卖点信息，最长150个字符。天猫商家和集市卖家都可用。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.SellPromise">
            <summary>
            是否承诺退换货服务!虚拟商品无须设置此项!
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.SellerCids">
            <summary>
            商品所属的店铺类目列表。按逗号分隔。结构:",cid1,cid2,...,"，如果店铺类目存在二级类目，必须传入子类目cids。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.Shape">
            <summary>
            宝贝形态:1代表电子券;0或其他代表实物
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.SkuBarcode">
            <summary>
            sku层面的条形码，多个SKU情况，与SKU价格库存格式类似，用逗号分隔
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.SkuDeliveryTimes">
            <summary>
            此参数暂时不起作用
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.SkuHdHeight">
            <summary>
            家装建材类目，商品SKU的高度，单位为cm，部分类目必选。天猫商家专用。 可选值为："0-15", "15-25", "25-50", "50-60", "60-80", "80-120", "120-160", "160-200"。 数据和SKU一一对应，用,分隔，如：15-25,25-50,25-50
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.SkuHdLampQuantity">
            <summary>
            家装建材类目，商品SKU的灯头数量，正整数，大于等于3，部分类目必选。天猫商家专用。 数据和SKU一一对应，用,分隔，如：3,5,7
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.SkuHdLength">
            <summary>
            家装建材类目，商品SKU的长度，正整数，单位为cm，部分类目必选。天猫商家专用。 数据和SKU一一对应，用,分隔，如：20,30,30
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.SkuOuterIds">
            <summary>
            Sku的外部id串，结构如：1234,1342,… sku_properties, sku_quantities, sku_prices, sku_outer_ids在输入数据时要一一对应，如果没有sku_outer_ids也要写上这个参数，入参是","(这个是两个sku的示列，逗号数应该是sku个数减1)；该参数最大长度是512个字节
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.SkuPrices">
            <summary>
            Sku的价格串，结构如：10.00,5.00,… 精确到2位小数;单位:元。如:200.07，表示:200元7分
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.SkuProperties">
            <summary>
            更新的sku的属性串，调用taobao.itemprops.get获取。格式:pid1:vid;pid2:vid,多个sku属性之间用逗号分隔。该字段内的属性需要在props字段同时包含。如果新增商品包含了sku，则此字段一定要传入,字段长度要控制在512个字节以内。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.SkuQuantities">
            <summary>
            Sku的数量串，结构如：num1,num2,num3 如：2,3
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.SkuSpecIds">
            <summary>
            此参数暂时不起作用
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.SpuConfirm">
            <summary>
            手机类目spu 优化，信息确认字段
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.StuffStatus">
            <summary>
            新旧程度。可选值：new(新)，second(二手)。B商家不能发布二手商品。如果是二手商品，特定类目下属性里面必填新旧成色属性
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.SubStock">
            <summary>
            商品是否支持拍下减库存:1支持;2取消支持(付款减库存);0(默认)不更改集市卖家默认拍下减库存;商城卖家默认付款减库存
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.SupportCustomMade">
            <summary>
            是否支持定制市场 true代表支持，false代表支持,如果为空代表与之前保持不变不会修改
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.Title">
            <summary>
            宝贝标题。不能超过30字符，受违禁词控制。天猫图书管控类目最大允许120字符；
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.Type">
            <summary>
            发布类型。可选值:fixed(一口价),auction(拍卖)。B商家不能发布拍卖商品，而且拍卖商品是没有SKU的。拍卖商品发布时需要附加拍卖商品信息：拍卖类型(paimai_info.mode，拍卖类型包括三种：增价拍[1]，荷兰拍[2]以及降价拍[3])，商品数量(num)，起拍价(price)，价格幅度(increament)，保证金(paimai_info.deposit)。另外拍卖商品支持自定义销售周期，通过paimai_info.valid_hour和paimai_info.valid_minute来指定。对于降价拍来说需要设置降价周期(paimai_info.interval)和拍卖保留价(paimai_info.reserve)。注意：通过taobao.item.get接口获取拍卖信息时，会返回除了valid_hour和valid_minute之外的所有拍卖信息。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.ValidThru">
            <summary>
            有效期。可选值:7,14;单位:天;默认值:14
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.Weight">
            <summary>
            商品的重量(商超卖家专用字段)
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddRequest.WirelessDesc">
            <summary>
            无线的宝贝描述
            </summary>
        </member>
        <member name="T:Top.Api.Domain.AccountStat">
            <summary>
            AccountStat Data Structure.
            </summary>
        </member>
        <member name="T:Top.Api.TopObject">
            <summary>
            基础对象。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.AccountStat.LoginStatus">
            <summary>
            登录状态。0：离线；1：在线
            </summary>
        </member>
        <member name="P:Top.Api.Domain.AccountStat.OnserviceStatus">
            <summary>
            服务状态。0：挂起；1：服务
            </summary>
        </member>
        <member name="P:Top.Api.Domain.AccountStat.Time">
            <summary>
            操作时间。格式：YYYY-mm-dd HH:MM:SS
            </summary>
        </member>
        <member name="T:Top.Api.Domain.SellerAuthorize">
            <summary>
            SellerAuthorize Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SellerAuthorize.Brands">
            <summary>
            品牌列表
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SellerAuthorize.ItemCats">
            <summary>
            类目列表
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SellerAuthorize.XinpinItemCats">
            <summary>
            被授权的新品类目列表
            </summary>
        </member>
        <member name="T:Top.Api.Domain.Permission">
            <summary>
            Permission Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Permission.IsAuthorize">
            <summary>
            1 :允许授权  2：不允许授权 6：不允许授权但默认已有权限
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Permission.ParentCode">
            <summary>
            父权限code
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Permission.PermissionCode">
            <summary>
            注册到权限中心的code值
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Permission.PermissionName">
            <summary>
            权限名称
            </summary>
        </member>
        <member name="T:Top.Api.Domain.CuntaoItemSpecific">
            <summary>
            CuntaoItemSpecific Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.CuntaoItemSpecific.KickBackRate">
            <summary>
            村淘商品级佣金率
            </summary>
        </member>
        <member name="T:Top.Api.Domain.NonReplyStatOnDay">
            <summary>
            NonReplyStatOnDay Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.NonReplyStatOnDay.NonreplyDate">
            <summary>
            （某天的）未回复统计
            </summary>
        </member>
        <member name="P:Top.Api.Domain.NonReplyStatOnDay.NonreplyStatByIds">
            <summary>
            未回复统计列表
            </summary>
        </member>
        <member name="T:Top.Api.Domain.SellerCat">
            <summary>
            SellerCat Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SellerCat.Cid">
            <summary>
            卖家自定义类目编号
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SellerCat.Created">
            <summary>
            创建时间。格式：yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SellerCat.Modified">
            <summary>
            修改时间。格式：yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SellerCat.Name">
            <summary>
            卖家自定义类目名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SellerCat.ParentCid">
            <summary>
            父类目编号，值等于0：表示此类目为店铺下的一级类目，值不等于0：表示此类目有父类目
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SellerCat.PicUrl">
            <summary>
            链接图片地址
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SellerCat.SortOrder">
            <summary>
            该类目在页面上的排序位置
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SellerCat.Type">
            <summary>
            店铺类目类型：可选值：manual_type：手动分类，new_type：新品上价， tree_type：二三级类目树 ，property_type：属性叶子类目树， brand_type：品牌推广
            </summary>
        </member>
        <member name="T:Top.Api.Domain.CampaignBudget">
            <summary>
            CampaignBudget Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.CampaignBudget.Budget">
            <summary>
            日限额，单位是元，不得小于30
            </summary>
        </member>
        <member name="P:Top.Api.Domain.CampaignBudget.CampaignId">
            <summary>
            推广计划ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.CampaignBudget.CreateTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.CampaignBudget.IsSmooth">
            <summary>
            是否平滑消耗，true-是；false-否；在设置了推广计划日限额后，此属性才生效
            </summary>
        </member>
        <member name="P:Top.Api.Domain.CampaignBudget.ModifiedTime">
            <summary>
            最后修改时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.CampaignBudget.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="T:Top.Api.Domain.InsightRelatedWord">
            <summary>
            InsightRelatedWord Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightRelatedWord.RelatedWord">
            <summary>
            相关词
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightRelatedWord.Weight">
            <summary>
            相关度
            </summary>
        </member>
        <member name="T:Top.Api.Domain.InsightWordSubDataDTO">
            <summary>
            InsightWordSubDataDTO Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordSubDataDTO.Bidword">
            <summary>
            关键词
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordSubDataDTO.Click">
            <summary>
            点击量
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordSubDataDTO.Competition">
            <summary>
            竞争度
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordSubDataDTO.Cost">
            <summary>
            花费，单位（分）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordSubDataDTO.Coverage">
            <summary>
            点击转化率
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordSubDataDTO.Cpc">
            <summary>
            平均点击花费
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordSubDataDTO.Ctr">
            <summary>
            点击率
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordSubDataDTO.Directtransaction">
            <summary>
            直接成交金额
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordSubDataDTO.Directtransactionshipping">
            <summary>
            直接成交笔数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordSubDataDTO.Favitemtotal">
            <summary>
            宝贝搜藏数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordSubDataDTO.Favshoptotal">
            <summary>
            店铺搜藏数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordSubDataDTO.Favtotal">
            <summary>
            总的收藏数，包括宝贝收藏和店铺收藏
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordSubDataDTO.Impression">
            <summary>
            展现量
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordSubDataDTO.Indirecttransaction">
            <summary>
            间接成交金额
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordSubDataDTO.Indirecttransactionshipping">
            <summary>
            间接成交笔数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordSubDataDTO.Mechanism">
            <summary>
            投放机制:0:关键词推广 2：定向推广 3：通用定向
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordSubDataDTO.Network">
            <summary>
            流量来源：1:PC站内，2：PC站外,4:无线站内 5：无线站外
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordSubDataDTO.Roi">
            <summary>
            投入产出比
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordSubDataDTO.Transactionshippingtotal">
            <summary>
            总的成交笔数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordSubDataDTO.Transactiontotal">
            <summary>
            成交总金额
            </summary>
        </member>
        <member name="T:Top.Api.Domain.Area">
            <summary>
            Area Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Area.Id">
            <summary>
            标准行政区域代码.参考:http://www.stats.gov.cn/tjbz/xzqhdm/t20120105_402777427.htm
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Area.Name">
            <summary>
            地域名称.如北京市,杭州市,西湖区,每一个area_id 都代表了一个具体的地区.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Area.ParentId">
            <summary>
            父节点区域标识.如北京市的area_id是110100,朝阳区是北京市的一个区,所以朝阳区的parent_id就是北京市的area_id.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Area.Type">
            <summary>
            区域类型.area区域 1:country/国家;2:province/省/自治区/直辖市;3:city/地区(省下面的地级市);4:district/县/市(县级市)/区;abroad:海外. 比如北京市的area_type = 2,朝阳区是北京市的一个区,所以朝阳区的area_type = 4.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Area.Zip">
            <summary>
            具体一个地区的邮编
            </summary>
        </member>
        <member name="T:Top.Api.Domain.Campaign">
            <summary>
            Campaign Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Campaign.CampaignId">
            <summary>
            推广计划ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Campaign.CreateTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Campaign.ModifiedTime">
            <summary>
            最后修改时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Campaign.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Campaign.OnlineStatus">
            <summary>
            用户设置的上下限状态；offline-下线；online-上线；
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Campaign.SettleReason">
            <summary>
            推广计划结算下线原因，1-余额不足；2-超过日限额，以分号分隔多个下线原因
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Campaign.SettleStatus">
            <summary>
            推广计划结算状态，offline-下线；online-上线，
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Campaign.Title">
            <summary>
            推广计划名称，不能多余20个汉字
            </summary>
        </member>
        <member name="T:Top.Api.Domain.RptEffectEntityDTO">
            <summary>
            RptEffectEntityDTO Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RptEffectEntityDTO.Adgroupid">
            <summary>
            推广组id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RptEffectEntityDTO.Campaignid">
            <summary>
            计划id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RptEffectEntityDTO.Coverage">
            <summary>
            点击转化率
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RptEffectEntityDTO.Crowdid">
            <summary>
            人群id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RptEffectEntityDTO.Crowdname">
            <summary>
            人群名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RptEffectEntityDTO.Directcarttotal">
            <summary>
            直接购物车数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RptEffectEntityDTO.Directtransaction">
            <summary>
            直接成交金额
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RptEffectEntityDTO.Directtransactionshipping">
            <summary>
            直接成交笔数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RptEffectEntityDTO.Favitemtotal">
            <summary>
            收藏宝贝数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RptEffectEntityDTO.Favshoptotal">
            <summary>
            收藏店铺数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RptEffectEntityDTO.Indirectcarttotal">
            <summary>
            间接购物车数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RptEffectEntityDTO.Indirecttransaction">
            <summary>
            间接成交金额
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RptEffectEntityDTO.Indirecttransactionshipping">
            <summary>
            间接成交笔数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RptEffectEntityDTO.Roi">
            <summary>
            投入产出比
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RptEffectEntityDTO.Source">
            <summary>
            流量来源，设备和网络，包含值：PC站内，PC站外,移动站内，移动站外
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RptEffectEntityDTO.Thedate">
            <summary>
            日期
            </summary>
        </member>
        <member name="T:Top.Api.Domain.Shop">
            <summary>
            Shop Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Shop.AllCount">
            <summary>
            总橱窗数量，对于C卖家返回总橱窗数，对于B卖家返回0（只有taobao.shop.remainshowcase.get可以返回）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Shop.Bulletin">
            <summary>
            店铺公告
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Shop.Cid">
            <summary>
            店铺所属的类目编号
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Shop.Created">
            <summary>
            开店时间。格式：yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Shop.Desc">
            <summary>
            店铺描述
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Shop.Modified">
            <summary>
            最后修改时间。格式：yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Shop.Nick">
            <summary>
            卖家昵称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Shop.PicPath">
            <summary>
            店标地址。返回相对路径，可以用"http://logo.taobao.com/shop-logo"来拼接成绝对路径
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Shop.RemainCount">
            <summary>
            剩余橱窗数量，对于C卖家返回剩余橱窗数，对于B卖家返回-1（只有taobao.shop.remainshowcase.get可以返回）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Shop.ShopScore">
            <summary>
            店铺动态评分信息
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Shop.Sid">
            <summary>
            店铺编号
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Shop.Title">
            <summary>
            店铺标题
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Shop.UsedCount">
            <summary>
            已用的橱窗数量，对于C卖家返回已使用的橱窗数，对于B卖家返回-1（只有taobao.shop.remainshowcase.get可以返回）
            </summary>
        </member>
        <member name="T:Top.Api.Domain.LogisticsTag">
            <summary>
            LogisticsTag Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.LogisticsTag.LogisticServiceTagList">
            <summary>
            服务标签
            </summary>
        </member>
        <member name="P:Top.Api.Domain.LogisticsTag.OrderId">
            <summary>
            主订单或子订单的订单号
            </summary>
        </member>
        <member name="T:Top.Api.Domain.DeliveryTemplate">
            <summary>
            DeliveryTemplate Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DeliveryTemplate.Address">
            <summary>
            运费模板上设置的发货地址
            </summary>
        </member>
        <!-- 对于成员“P:Top.Api.Domain.DeliveryTemplate.Assumer”忽略有格式错误的 XML 注释 -->
        <member name="P:Top.Api.Domain.DeliveryTemplate.ConsignAreaId">
            <summary>
            该模板上设置的卖家发货地址区域ID，如：address为浙江省杭州市西湖去文三路XX号那么这个consign_area_id的值就是西湖区的ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DeliveryTemplate.Created">
            <summary>
            模板创建时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DeliveryTemplate.FeeList">
            <summary>
            运费模板中运费详细信息对象，包含默认运费和指定地区运费
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DeliveryTemplate.Modified">
            <summary>
            模板修改时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DeliveryTemplate.Name">
            <summary>
            模板名称，长度不能超过25个字节
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DeliveryTemplate.Supports">
            <summary>
            物流服务模板支持增值服务列表，多个用分号隔开。cod:货到付款 mops：刷卡付款
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DeliveryTemplate.TemplateId">
            <summary>
            模块ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DeliveryTemplate.TemplateType">
            <summary>
            是否商超模版
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DeliveryTemplate.Valuation">
            <summary>
            可选值：0  说明：  0:表示按宝贝件数计算运费  <br/><br/>  1:表示按宝贝重量计算运费  <br/><br/>  3:表示按宝贝体积计算运费
            </summary>
        </member>
        <member name="T:Top.Api.Domain.Trade">
            <summary>
            Trade Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.AcookieId">
            <summary>
            Acookie订单唯一ID。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.AdjustFee">
            <summary>
            卖家手工调整金额，精确到2位小数，单位：元。如：200.07，表示：200元7分。来源于订单价格修改，如果有多笔子订单的时候，这个为0，单笔的话则跟[order].adjust_fee一样
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.AlipayId">
            <summary>
            买家的支付宝id号，在UIC中有记录，买家支付宝的唯一标示，不因为买家更换Email账号而改变。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.AlipayNo">
            <summary>
            支付宝交易号，如：2009112081173831
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.AlipayPoint">
            <summary>
            付款时使用的支付宝积分的额度,单位分，比如返回1，则为1分钱
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.AlipayUrl">
            <summary>
            创建交易接口成功后，返回的支付url
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.AlipayWarnMsg">
            <summary>
            淘宝下单成功了,但由于某种错误支付宝订单没有创建时返回的信息。taobao.trade.add接口专用
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.AreaId">
            <summary>
            区域id，代表订单下单的区位码，区位码是通过省市区转换而来，通过区位码能精确到区内的划分，比如310012是杭州市西湖区华星路
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.ArriveCutTime">
            <summary>
            物流到货时效截单时间，格式 HH:mm
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.ArriveInterval">
            <summary>
            物流到货时效，单位天
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.Assembly">
            <summary>
            组合商品
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.AsyncModified">
            <summary>
            同步到卖家库的时间，taobao.trades.sold.incrementv.get接口返回此字段
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.AvailableConfirmFee">
            <summary>
            交易中剩余的确认收货金额（这个金额会随着子订单确认收货而不断减少，交易成功后会变为零）。精确到2位小数;单位:元。如:200.07，表示:200 元7分
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.BuyerAlipayNo">
            <summary>
            买家支付宝账号
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.BuyerArea">
            <summary>
            买家下单的地区
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.BuyerCodFee">
            <summary>
            买家货到付款服务费。精确到2位小数;单位:元。如:12.07，表示:12元7分
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.BuyerEmail">
            <summary>
            买家邮件地址
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.BuyerFlag">
            <summary>
            买家备注旗帜（与淘宝网上订单的买家备注旗帜对应，只有买家才能查看该字段）红、黄、绿、蓝、紫 分别对应 1、2、3、4、5
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.BuyerIp">
            <summary>
            买家下单的IP信息，仅供taobao.trade.fullinfo.get查询返回。需要对返回结果进行Base64解码。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.BuyerMemo">
            <summary>
            买家备注（与淘宝网上订单的买家备注对应，只有买家才能查看该字段）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.BuyerMessage">
            <summary>
            买家留言
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.BuyerNick">
            <summary>
            买家昵称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.BuyerObtainPointFee">
            <summary>
            买家获得积分,返点的积分。格式:100;单位:个。返点的积分要交易成功之后才能获得。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.BuyerRate">
            <summary>
            买家是否已评价。可选值:true(已评价),false(未评价)。如买家只评价未打分，此字段仍返回false
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.CanRate">
            <summary>
            买家可以通过此字段查询是否当前交易可以评论，can_rate=true可以评价，false则不能评价。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.CodFee">
            <summary>
            货到付款服务费。精确到2位小数;单位:元。如:12.07，表示:12元7分。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.CodStatus">
            <summary>
            货到付款物流状态。初始状态 NEW_CREATED,接单成功 ACCEPTED_BY_COMPANY,接单失败 REJECTED_BY_COMPANY,接单超时 RECIEVE_TIMEOUT,揽收成功 TAKEN_IN_SUCCESS,揽收失败 TAKEN_IN_FAILED,揽收超时 TAKEN_TIMEOUT,签收成功 SIGN_IN,签收失败 REJECTED_BY_OTHER_SIDE,订单等待发送给物流公司 WAITING_TO_BE_SENT,用户取消物流订单 CANCELED
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.CommissionFee">
            <summary>
            交易佣金。精确到2位小数;单位:元。如:200.07，表示:200元7分
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.ConsignInterval">
            <summary>
            物流发货时效，单位小时
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.ConsignTime">
            <summary>
            卖家发货时间。格式:yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.CouponFee">
            <summary>
            订单中使用红包付款的金额
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.Created">
            <summary>
            交易创建时间。格式:yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.CreditCardFee">
            <summary>
            使用信用卡支付金额数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.CrossBondedDeclare">
            <summary>
            跨境订单
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.DiscountFee">
            <summary>
            可以使用trade.promotion_details查询系统优惠系统优惠金额（如打折，VIP，满就送等），精确到2位小数，单位：元。如：200.07，表示：200元7分
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.EndTime">
            <summary>
            交易结束时间。交易成功时间(更新交易状态为成功的同时更新)/确认收货时间或者交易关闭时间 。格式:yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.EsDate">
            <summary>
            时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.EsRange">
            <summary>
            时间段
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.EstConTime">
            <summary>
            商家的预计发货时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.EtPlateNumber">
            <summary>
            车牌号码
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.EtSerTime">
            <summary>
            天猫汽车服务预约时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.EtShopId">
            <summary>
            扫码购关联门店
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.EtShopName">
            <summary>
            电子凭证预约门店地址
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.EtType">
            <summary>
            电子凭证扫码购-扫码支付订单type
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.EtVerifiedShopName">
            <summary>
            电子凭证核销门店地址
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.EticketExt">
            <summary>
            电子凭证的垂直信息
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.EticketServiceAddr">
            <summary>
            天猫电子凭证家装
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.ExpressAgencyFee">
            <summary>
            快递代收款。精确到2位小数;单位:元。如:212.07，表示:212元7分
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.ForbidConsign">
            <summary>
            聚划算一起买字段
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.HasBuyerMessage">
            <summary>
            判断订单是否有买家留言，有买家留言返回true，否则返回false
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.HasPostFee">
            <summary>
            是否包含邮费。与available_confirm_fee同时使用。可选值:true(包含),false(不包含)
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.HasYfx">
            <summary>
            订单中是否包含运费险订单，如果包含运费险订单返回true，不包含运费险订单，返回false
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.HkBirthday">
            <summary>
            出生日期
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.HkCardCode">
            <summary>
            证件号码
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.HkCardType">
            <summary>
            证件类型001代表港澳通行证类型、002代表入台证003代表护照
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.HkChinaName">
            <summary>
            中文名
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.HkEnName">
            <summary>
            拼音名
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.HkFlightDate">
            <summary>
            航班飞行时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.HkFlightNo">
            <summary>
            航班号
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.HkGender">
            <summary>
            性别M: 男性，F: 女性
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.HkPickup">
            <summary>
            提货地点
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.HkPickupId">
            <summary>
            提货地点id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.Iid">
            <summary>
            商品字符串编号(注意：iid近期即将废弃，请用num_iid参数)
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.InvoiceKind">
            <summary>
            发票类型（ 1 电子发票 2  纸质发票 ）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.InvoiceName">
            <summary>
            发票抬头
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.InvoiceType">
            <summary>
            发票类型
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.Is3D">
            <summary>
            是否3D交易
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.IsBrandSale">
            <summary>
            表示是否是品牌特卖（常规特卖，不包括特卖惠和特实惠）订单，如果是返回true，如果不是返回false。当此字段与is_force_wlb均为true时，订单强制物流宝发货。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.IsDaixiao">
            <summary>
            表示订单交易是否含有对应的代销采购单。如果该订单中存在一个对应的代销采购单，那么该值为true；反之，该值为false。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.IsForceWlb">
            <summary>
            订单是否强制使用物流宝发货。当此字段与is_brand_sale均为true时，订单强制物流宝发货。此字段为false时，该订单根据流转规则设置可以使用物流宝或者常规方式发货
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.IsLgtype">
            <summary>
            是否保障速递，如果为true，则为保障速递订单，使用线下联系发货接口发货，如果未false，则该订单非保障速递，根据卖家设置的订单流转规则可使用物流宝或者常规物流发货。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.IsPartConsign">
            <summary>
            是否是多次发货的订单如果卖家对订单进行多次发货，则为true否则为false
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.IsShShip">
            <summary>
            是否屏蔽发货
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.IsWt">
            <summary>
            表示订单交易是否网厅订单。 如果该订单是网厅订单，那么该值为true；反之，该值为false。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.LgAging">
            <summary>
            次日达订单送达时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.LgAgingType">
            <summary>
            次日达，三日达等送达类型
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.MarkDesc">
            <summary>
            订单出现异常问题的时候，给予用户的描述,没有异常的时候，此值为空
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.Market">
            <summary>
            垂直市场
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.Modified">
            <summary>
            交易修改时间(用户对订单的任何修改都会更新此字段)。格式:yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.Num">
            <summary>
            商品购买数量。取值范围：大于零的整数,对于一个trade对应多个order的时候（一笔主订单，对应多笔子订单），num=0，num是一个跟商品关联的属性，一笔订单对应多比子订单的时候，主订单上的num无意义。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.NumIid">
            <summary>
            商品数字编号
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.NutFeature">
            <summary>
            卡易售垂直表信息，去除下单ip之后的结果
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.O2o">
            <summary>
            导购宝=crm
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.O2oDelivery">
            <summary>
            导购宝提货方式，inshop：店内提货，online：线上发货
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.O2oEtOrderId">
            <summary>
            分阶段交易的特权定金订单ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.O2oGuideId">
            <summary>
            导购员id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.O2oGuideName">
            <summary>
            导购员名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.O2oOutTradeId">
            <summary>
            外部订单号
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.O2oShopId">
            <summary>
            导购员门店id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.O2oShopName">
            <summary>
            导购门店名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.O2oSnatchStatus">
            <summary>
            抢单状态0,未处理待分发;1,抢单中;2,已抢单;3,已发货;-1,超时;-2,处理异常;-3,匹配失败;-4,取消抢单;-5,退款取消;-9,逻辑删除
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.Obs">
            <summary>
            门店预约自提订单标
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.OmniAttr">
            <summary>
            星盘标识字段
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.OmniParam">
            <summary>
            星盘业务字段
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.OmnichannelParam">
            <summary>
            全渠道商品通相关字段
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.OrderTaxFee">
            <summary>
            天猫国际官网直供主订单关税税费
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.Orders">
            <summary>
            订单列表
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.OsDate">
            <summary>
            时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.OsRange">
            <summary>
            时间段
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.PaidCouponFee">
            <summary>
            满返红包的金额；如果没有满返红包，则值为 0.00
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.PayTime">
            <summary>
            付款时间。格式:yyyy-MM-dd HH:mm:ss。订单的付款时间即为物流订单的创建时间。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.Payment">
            <summary>
            实付金额。精确到2位小数;单位:元。如:200.07，表示:200元7分
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.PccAf">
            <summary>
            天猫点券卡实付款金额,单位分
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.PicPath">
            <summary>
            商品图片绝对途径
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.PointFee">
            <summary>
            买家使用积分,下单时生成，且一直不变。格式:100;单位:个.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.PostFee">
            <summary>
            邮费。精确到2位小数;单位:元。如:200.07，表示:200元7分
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.PostGateDeclare">
            <summary>
            邮关订单
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.Price">
            <summary>
            商品价格。精确到2位小数；单位：元。如：200.07，表示：200元7分
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.Promotion">
            <summary>
            交易促销详细信息
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.PromotionDetails">
            <summary>
            优惠详情
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.RealPointFee">
            <summary>
            买家实际使用积分（扣除部分退款使用的积分），交易完成后生成（交易成功或关闭），交易未完成时该字段值为0。格式:100;单位:个
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.ReceivedPayment">
            <summary>
            卖家实际收到的支付宝打款金额（由于子订单可以部分确认收货，这个金额会随着子订单的确认收货而不断增加，交易成功后等于买家实付款减去退款金额）。精确到2位小数;单位:元。如:200.07，表示:200元7分
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.ReceiverAddress">
            <summary>
            收货人的详细地址
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.ReceiverCity">
            <summary>
            收货人的所在城市<br/>注：因为国家对于城市和地区的划分的有：省直辖市和省直辖县级行政区（区级别的）划分的，淘宝这边根据这个差异保存在不同字段里面比如：广东广州：广州属于一个直辖市是放在的receiver_city的字段里面；而河南济源：济源属于省直辖县级行政区划分，是区级别的，放在了receiver_district里面<br/>建议：程序依赖于城市字段做物流等判断的操作，最好加一个判断逻辑：如果返回值里面只有receiver_district参数，该参数作为城市
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.ReceiverCountry">
            <summary>
            收货人国籍
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.ReceiverDistrict">
            <summary>
            收货人的所在地区<br/>注：因为国家对于城市和地区的划分的有：省直辖市和省直辖县级行政区（区级别的）划分的，淘宝这边根据这个差异保存在不同字段里面比如：广东广州：广州属于一个直辖市是放在的receiver_city的字段里面；而河南济源：济源属于省直辖县级行政区划分，是区级别的，放在了receiver_district里面<br/>建议：程序依赖于城市字段做物流等判断的操作，最好加一个判断逻辑：如果返回值里面只有receiver_district参数，该参数作为城市
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.ReceiverMobile">
            <summary>
            收货人的手机号码
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.ReceiverName">
            <summary>
            收货人的姓名
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.ReceiverPhone">
            <summary>
            收货人的电话号码
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.ReceiverState">
            <summary>
            收货人的所在省份
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.ReceiverTown">
            <summary>
            收货人街道地址
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.ReceiverZip">
            <summary>
            收货人的邮编
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.RxAuditStatus">
            <summary>
            处方药未审核状态
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.SellerAlipayNo">
            <summary>
            卖家支付宝账号
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.SellerCanRate">
            <summary>
            卖家是否可以对订单进行评价
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.SellerCodFee">
            <summary>
            卖家货到付款服务费。精确到2位小数;单位:元。如:12.07，表示:12元7分。卖家不承担服务费的订单：未发货的订单获取服务费为0，发货后就能获取到正确值。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.SellerEmail">
            <summary>
            卖家邮件地址
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.SellerFlag">
            <summary>
            卖家备注旗帜（与淘宝网上订单的卖家备注旗帜对应，只有卖家才能查看该字段）红、黄、绿、蓝、紫 分别对应 1、2、3、4、5
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.SellerMemo">
            <summary>
            卖家备注（与淘宝网上订单的卖家备注对应，只有卖家才能查看该字段）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.SellerMobile">
            <summary>
            卖家手机
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.SellerName">
            <summary>
            卖家姓名
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.SellerNick">
            <summary>
            卖家昵称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.SellerPhone">
            <summary>
            卖家电话
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.SellerRate">
            <summary>
            卖家是否已评价。可选值:true(已评价),false(未评价)
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.SendTime">
            <summary>
            订单将在此时间前发出，主要用于预售订单
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.ServiceOrders">
            <summary>
            服务子订单列表
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.ServiceTags">
            <summary>
            物流标签
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.ShippingType">
            <summary>
            创建交易时的物流方式（交易完成前，物流方式有可能改变，但系统里的这个字段一直不变）。可选值：free(卖家包邮),post(平邮),express(快递),ems(EMS),virtual(虚拟发货)，25(次日必达)，26(预约配送)。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.ShopCode">
            <summary>
            线下自提门店编码
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.ShopPick">
            <summary>
            门店自提，总店发货，分店取货的门店自提订单标识
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.Sid">
            <summary>
            物流运单号
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.Snapshot">
            <summary>
            交易快照详细信息
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.SnapshotUrl">
            <summary>
            交易快照地址
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.Status">
            <summary>
            交易状态。可选值:    * TRADE_NO_CREATE_PAY(没有创建支付宝交易)    * WAIT_BUYER_PAY(等待买家付款)    * SELLER_CONSIGNED_PART(卖家部分发货)    * WAIT_SELLER_SEND_GOODS(等待卖家发货,即:买家已付款)    * WAIT_BUYER_CONFIRM_GOODS(等待买家确认收货,即:卖家已发货)    * TRADE_BUYER_SIGNED(买家已签收,货到付款专用)    * TRADE_FINISHED(交易成功)    * TRADE_CLOSED(付款以后用户退款成功，交易自动关闭)    * TRADE_CLOSED_BY_TAOBAO(付款以前，卖家或买家主动关闭交易)    * PAY_PENDING(国际信用卡支付付款确认中)    * WAIT_PRE_AUTH_CONFIRM(0元购合约中)
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.StepPaidFee">
            <summary>
            分阶段付款的已付金额（万人团订单已付金额）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.StepTradeStatus">
            <summary>
            分阶段付款的订单状态（例如万人团订单等），目前有三返回状态FRONT_NOPAID_FINAL_NOPAID(定金未付尾款未付)，FRONT_PAID_FINAL_NOPAID(定金已付尾款未付)，FRONT_PAID_FINAL_PAID(定金和尾款都付)
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.Tid">
            <summary>
            交易编号 (父订单的交易编号)
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.TimeoutActionTime">
            <summary>
            超时到期时间。格式:yyyy-MM-dd HH:mm:ss。业务规则：前提条件：只有在买家已付款，卖家已发货的情况下才有效如果申请了退款，那么超时会落在子订单上；比如说3笔ABC，A申请了，那么返回的是BC的列表, 主定单不存在如果没有申请过退款，那么超时会挂在主定单上；比如ABC，返回主定单，ABC的超时和主定单相同
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.Title">
            <summary>
            交易标题，以店铺名作为此标题的值。注:taobao.trades.get接口返回的Trade中的title是商品名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.TopHold">
            <summary>
            TOP拦截标识，0不拦截，1拦截
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.TotalFee">
            <summary>
            商品金额（商品价格乘以数量的总金额）。精确到2位小数;单位:元。如:200.07，表示:200元7分
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.TradeAttr">
            <summary>
            top动态字段
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.TradeExt">
            <summary>
            交易扩展表信息
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.TradeFrom">
            <summary>
            交易内部来源。WAP(手机);HITAO(嗨淘);TOP(TOP平台);TAOBAO(普通淘宝);JHS(聚划算)一笔订单可能同时有以上多个标记，则以逗号分隔
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.TradeMemo">
            <summary>
            交易备注。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.TradeSource">
            <summary>
            交易外部来源：ownshop(商家官网)
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.Type">
            <summary>
            交易类型列表，同时查询多种交易类型可用逗号分隔。默认同时查询guarantee_trade, auto_delivery, ec, cod的4种交易类型的数据 可选值 fixed(一口价) auction(拍卖) guarantee_trade(一口价、拍卖) auto_delivery(自动发货) independent_simple_trade(旺店入门版交易) independent_shop_trade(旺店标准版交易) ec(直冲) cod(货到付款) fenxiao(分销) game_equipment(游戏装备) shopex_trade(ShopEX交易) netcn_trade(万网交易) external_trade(统一外部交易)o2o_offlinetrade（O2O交易）step (万人团)nopaid(无付款订单)pre_auth_type(预授权0元购机交易)
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.YfxFee">
            <summary>
            订单的运费险，单位为元
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.YfxId">
            <summary>
            运费险支付号
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.YfxType">
            <summary>
            运费险类型
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Trade.ZeroPurchase">
            <summary>
            在返回的trade对象上专门增加一个字段zero_purchase来区分，这个为true的就是0元购机预授权交易
            </summary>
        </member>
        <member name="T:Top.Api.Domain.Task">
            <summary>
            Task Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Task.CheckCode">
            <summary>
            下载文件的MD5校验码，通过此校验码可以检查下载的文件是否是完整的。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Task.Created">
            <summary>
            任务创建时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Task.DownloadUrl">
            <summary>
            大任务结果下载地址。当创建的认任务是大数据量的任务时，获取结果会返回此字段，同时subtasks列表会为空。 通过这个地址可以下载到结果的结构体，格式同普通任务下载的一样。 每次获取到的地址只能下载一次。下载的文件加上后缀名.zip打开。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Task.Method">
            <summary>
            此任务是由哪个api产生的
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Task.Schedule">
            <summary>
            定时类型任务的执行时间点
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Task.Status">
            <summary>
            异步任务处理状态。new（还未开始处理），doing（处理中），done（处理结束）。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Task.Subtasks">
            <summary>
            子任务处理结果，如果任务还没有处理完，返回的结果列表为空。如果任务处理完毕，返回子任务结果列表
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Task.TaskId">
            <summary>
            异步任务id。创建异步任务时返回的任务id号
            </summary>
        </member>
        <member name="T:Top.Api.ITopClient">
            <summary>
            TOP客户端。
            </summary>
        </member>
        <member name="M:Top.Api.ITopClient.Execute``1(Top.Api.ITopRequest{``0})">
            <summary>
            执行TOP公开API请求。
            </summary>
            <typeparam name="T">领域对象</typeparam>
            <param name="request">具体的TOP API请求</param>
            <returns>领域对象</returns>
        </member>
        <member name="M:Top.Api.ITopClient.Execute``1(Top.Api.ITopRequest{``0},System.String)">
            <summary>
            执行TOP隐私API请求。
            </summary>
            <typeparam name="T">领域对象</typeparam>
            <param name="request">具体的TOP API请求</param>
            <param name="session">用户会话码</param>
            <returns>领域对象</returns>
        </member>
        <member name="M:Top.Api.ITopClient.Execute``1(Top.Api.ITopRequest{``0},System.String,System.DateTime)">
            <summary>
            执行TOP隐私API请求。
            </summary>
            <typeparam name="T">领域对象</typeparam>
            <param name="request">具体的TOP API请求</param>
            <param name="session">用户会话码</param>
            <param name="timestamp">请求时间戳</param>
            <returns>领域对象</returns>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAdzoneRptsGetResponse">
            <summary>
            ZuanshiAdzoneRptsGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdzoneRptsGetResponse.RptAdzoneList">
            <summary>
            资源位报表信息列表
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAdvertiserAdgroupRtrptsTotalGetResponse">
            <summary>
            ZuanshiAdvertiserAdgroupRtrptsTotalGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRtrptsTotalGetResponse.AdgroupRealtimeRptTotalList">
            <summary>
            查询结果
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAdvertiserAdgroupRtrptsTotalGetResponse.DataDomain">
            <summary>
            DataDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRtrptsTotalGetResponse.DataDomain.AdPv">
            <summary>
            展现量
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRtrptsTotalGetResponse.DataDomain.AdgroupId">
            <summary>
            单元id
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRtrptsTotalGetResponse.DataDomain.AdgroupName">
            <summary>
            单元名
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRtrptsTotalGetResponse.DataDomain.CampaignId">
            <summary>
            计划id
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRtrptsTotalGetResponse.DataDomain.CampaignName">
            <summary>
            计划名
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRtrptsTotalGetResponse.DataDomain.Charge">
            <summary>
            花费
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRtrptsTotalGetResponse.DataDomain.Click">
            <summary>
            点击量
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRtrptsTotalGetResponse.DataDomain.Ctr">
            <summary>
            ctr
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRtrptsTotalGetResponse.DataDomain.Ecpc">
            <summary>
            ecpc
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRtrptsTotalGetResponse.DataDomain.Ecpm">
            <summary>
            ecpm
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRtrptsTotalGetResponse.DataDomain.LogDate">
            <summary>
            日期
            </summary>
        </member>
        <member name="T:Top.Api.Response.TmcGroupsGetResponse">
            <summary>
            TmcGroupsGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmcGroupsGetResponse.Groups">
            <summary>
            dasdasd
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmcGroupsGetResponse.TotalResults">
            <summary>
            分组总数
            </summary>
        </member>
        <member name="T:Top.Api.Response.RegionPriceManageResponse">
            <summary>
            RegionPriceManageResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.RegionPriceManageResponse.IsSuccess">
            <summary>
            success
            </summary>
        </member>
        <member name="T:Top.Api.Response.OpenimTribeSendmsgResponse">
            <summary>
            OpenimTribeSendmsgResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.OpenimTribeSendmsgResponse.Message">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="P:Top.Api.Response.OpenimTribeSendmsgResponse.TribeCode">
            <summary>
            错误码
            </summary>
        </member>
        <member name="T:Top.Api.Response.LocationRelationEditResponse">
            <summary>
            LocationRelationEditResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.LocationRelationEditResponse.ErrorMsg">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="P:Top.Api.Response.LocationRelationEditResponse.Errorcode">
            <summary>
            错误码
            </summary>
        </member>
        <member name="P:Top.Api.Response.LocationRelationEditResponse.IsSuccess">
            <summary>
            是否成功
            </summary>
        </member>
        <member name="T:Top.Api.Response.JushitaJmsGroupDeleteResponse">
            <summary>
            JushitaJmsGroupDeleteResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.JushitaJmsGroupDeleteResponse.IsSuccess">
            <summary>
            操作结果
            </summary>
        </member>
        <member name="T:Top.Api.Response.InventoryWarehouseGetResponse">
            <summary>
            InventoryWarehouseGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.InventoryWarehouseGetResponse.Result">
            <summary>
            result
            </summary>
        </member>
        <member name="T:Top.Api.Response.InventoryWarehouseGetResponse.WareHouseDtoDomain">
            <summary>
            WareHouseDtoDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.InventoryWarehouseGetResponse.WareHouseDtoDomain.Address">
            <summary>
            详细地址
            </summary>
        </member>
        <member name="P:Top.Api.Response.InventoryWarehouseGetResponse.WareHouseDtoDomain.AddressAreaName">
            <summary>
            仓库地址, 到三级区域
            </summary>
        </member>
        <member name="P:Top.Api.Response.InventoryWarehouseGetResponse.WareHouseDtoDomain.AliasName">
            <summary>
            仓库别名
            </summary>
        </member>
        <member name="P:Top.Api.Response.InventoryWarehouseGetResponse.WareHouseDtoDomain.Contact">
            <summary>
            联系人
            </summary>
        </member>
        <member name="P:Top.Api.Response.InventoryWarehouseGetResponse.WareHouseDtoDomain.Phone">
            <summary>
            电话号码
            </summary>
        </member>
        <member name="P:Top.Api.Response.InventoryWarehouseGetResponse.WareHouseDtoDomain.PostCode">
            <summary>
            邮编
            </summary>
        </member>
        <member name="P:Top.Api.Response.InventoryWarehouseGetResponse.WareHouseDtoDomain.StoreCode">
            <summary>
            仓库编码
            </summary>
        </member>
        <member name="P:Top.Api.Response.InventoryWarehouseGetResponse.WareHouseDtoDomain.StoreName">
            <summary>
            仓库名
            </summary>
        </member>
        <member name="T:Top.Api.Response.InventoryWarehouseGetResponse.BaseResultDomain">
            <summary>
            BaseResultDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.InventoryWarehouseGetResponse.BaseResultDomain.Data">
            <summary>
            仓传输值
            </summary>
        </member>
        <member name="P:Top.Api.Response.InventoryWarehouseGetResponse.BaseResultDomain.ErrorCode">
            <summary>
            错误编码
            </summary>
        </member>
        <member name="P:Top.Api.Response.InventoryWarehouseGetResponse.BaseResultDomain.ErrorMsg">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="P:Top.Api.Response.InventoryWarehouseGetResponse.BaseResultDomain.Success">
            <summary>
            是否成功
            </summary>
        </member>
        <member name="T:Top.Api.Response.FenxiaoRequisitionsGetResponse">
            <summary>
            FenxiaoRequisitionsGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoRequisitionsGetResponse.IsSuccess">
            <summary>
            操作是否成功
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoRequisitionsGetResponse.Requisitions">
            <summary>
            合作申请
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoRequisitionsGetResponse.TotalResults">
            <summary>
            结果记录数
            </summary>
        </member>
        <member name="T:Top.Api.Response.FenxiaoProductSkusGetResponse">
            <summary>
            FenxiaoProductSkusGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoProductSkusGetResponse.Skus">
            <summary>
            sku信息
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoProductSkusGetResponse.TotalResults">
            <summary>
            记录数量
            </summary>
        </member>
        <member name="T:Top.Api.Response.FenxiaoProductGradepriceUpdateResponse">
            <summary>
            FenxiaoProductGradepriceUpdateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoProductGradepriceUpdateResponse.IsSuccess">
            <summary>
            返回操作结果：成功或失败
            </summary>
        </member>
        <member name="T:Top.Api.Response.FenxiaoOrderRemarkUpdateResponse">
            <summary>
            FenxiaoOrderRemarkUpdateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoOrderRemarkUpdateResponse.IsSuccess">
            <summary>
            操作是否成功
            </summary>
        </member>
        <member name="T:Top.Api.Response.FenxiaoDistributorProductsGetResponse">
            <summary>
            FenxiaoDistributorProductsGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoDistributorProductsGetResponse.HasNext">
            <summary>
            是否存在下一页
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoDistributorProductsGetResponse.Products">
            <summary>
            产品对象记录集。返回 FenxiaoProduct 包含的字段信息。
            </summary>
        </member>
        <member name="T:Top.Api.Response.FenxiaoDiscountsGetResponse">
            <summary>
            FenxiaoDiscountsGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoDiscountsGetResponse.Discounts">
            <summary>
            折扣数据结构
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoDiscountsGetResponse.TotalResults">
            <summary>
            记录数
            </summary>
        </member>
        <member name="T:Top.Api.Response.FenxiaoCooperationUpdateResponse">
            <summary>
            FenxiaoCooperationUpdateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoCooperationUpdateResponse.IsSuccess">
            <summary>
            更新结果成功失败
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiBannerAreaCodeFindRequest">
            <summary>
            TOP API: taobao.zuanshi.banner.area.code.find
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiBannerAdgroupDeleteRequest">
            <summary>
            TOP API: taobao.zuanshi.banner.adgroup.delete
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerAdgroupDeleteRequest.AdgroupIdList">
            <summary>
            单元ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerAdgroupDeleteRequest.CampaignId">
            <summary>
            单元计划ID
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiAdvertiserAdzoneRtrptsGetRequest">
            <summary>
            TOP API: taobao.zuanshi.advertiser.adzone.rtrpts.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAdzoneRtrptsGetRequest.AdgroupId">
            <summary>
            推广单元id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAdzoneRtrptsGetRequest.AdzoneId">
            <summary>
            位置id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAdzoneRtrptsGetRequest.CampaignId">
            <summary>
            计划id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAdzoneRtrptsGetRequest.CampaignModel">
            <summary>
            计划类型。1：全店推广；4单品推广
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAdzoneRtrptsGetRequest.LogDate">
            <summary>
            查询日期
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiAdvertiserAdzoneRptsDayGetRequest">
            <summary>
            TOP API: taobao.zuanshi.advertiser.adzone.rpts.day.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAdzoneRptsDayGetRequest.AdgroupId">
            <summary>
            单元id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAdzoneRptsDayGetRequest.AdzoneId">
            <summary>
            资源位id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAdzoneRptsDayGetRequest.CampaignId">
            <summary>
            计划id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAdzoneRptsDayGetRequest.CampaignModel">
            <summary>
            计划类型。1：全店推广；4单品推广
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAdzoneRptsDayGetRequest.Effect">
            <summary>
            效果周期，取值范围：3,7,15。分别表示效果转化周期-3天/7天/15天。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAdzoneRptsDayGetRequest.EffectType">
            <summary>
            效果类型。“impression”：展现效果；“click”：点击效果
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAdzoneRptsDayGetRequest.EndTime">
            <summary>
            结束日期
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAdzoneRptsDayGetRequest.StartTime">
            <summary>
            开始日期
            </summary>
        </member>
        <member name="T:Top.Api.Request.TmcQueueGetRequest">
            <summary>
            TOP API: taobao.tmc.queue.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmcQueueGetRequest.GroupName">
            <summary>
            TMC组名
            </summary>
        </member>
        <member name="T:Top.Api.Request.OpenimTribeJoinRequest">
            <summary>
            TOP API: taobao.openim.tribe.join
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimTribeJoinRequest.TribeId">
            <summary>
            群id
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimTribeJoinRequest.User">
            <summary>
            用户信息
            </summary>
        </member>
        <member name="T:Top.Api.Request.OpenimIoscertSandboxSetRequest">
            <summary>
            TOP API: taobao.openim.ioscert.sandbox.set
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimIoscertSandboxSetRequest.Cert">
            <summary>
            证书内容,base64编码
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimIoscertSandboxSetRequest.Password">
            <summary>
            系统自动生成
            </summary>
        </member>
        <member name="T:Top.Api.Request.OpenimAppChatlogsGetRequest">
            <summary>
            TOP API: taobao.openim.app.chatlogs.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimAppChatlogsGetRequest.Beg">
            <summary>
            查询结束时间。UTC时间。精度到秒
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimAppChatlogsGetRequest.Count">
            <summary>
            查询最大条数
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimAppChatlogsGetRequest.End">
            <summary>
            查询结束时间。UTC时间。精度到秒
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimAppChatlogsGetRequest.Next">
            <summary>
            迭代key
            </summary>
        </member>
        <member name="T:Top.Api.Request.InventoryQueryRequest">
            <summary>
            TOP API: taobao.inventory.query
            </summary>
        </member>
        <member name="P:Top.Api.Request.InventoryQueryRequest.ScItemCodes">
            <summary>
            后端商品的商家编码列表，控制到50个
            </summary>
        </member>
        <member name="P:Top.Api.Request.InventoryQueryRequest.ScItemIds">
            <summary>
            后端商品ID 列表，控制到50个
            </summary>
        </member>
        <member name="P:Top.Api.Request.InventoryQueryRequest.SellerNick">
            <summary>
            卖家昵称
            </summary>
        </member>
        <member name="P:Top.Api.Request.InventoryQueryRequest.StoreCodes">
            <summary>
            仓库列表:GLY001^GLY002
            </summary>
        </member>
        <member name="T:Top.Api.Request.FenxiaoOrderMessageAddRequest">
            <summary>
            TOP API: taobao.fenxiao.order.message.add
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoOrderMessageAddRequest.Message">
            <summary>
            留言内容
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoOrderMessageAddRequest.PurchaseOrderId">
            <summary>
            采购单id
            </summary>
        </member>
        <member name="T:Top.Api.Request.FenxiaoCooperationAuditRequest">
            <summary>
            TOP API: taobao.fenxiao.cooperation.audit
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoCooperationAuditRequest.AuditResult">
            <summary>
            1:审批通过，审批通过后要加入授权产品线列表；  2:审批拒绝
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoCooperationAuditRequest.ProductLineListAgent">
            <summary>
            当审批通过时需要指定授权产品线id列表(代销)，如果没传则表示不开通，且经销和代销的授权产品线列表至少传入一种，同时传入则表示都开通。
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoCooperationAuditRequest.ProductLineListDealer">
            <summary>
            当审批通过时需要指定授权产品线id列表(经销)，如果没传则表示不开通，且经销和代销的授权产品线列表至少传入一种，同时传入则表示都开通。
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoCooperationAuditRequest.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoCooperationAuditRequest.RequisitionId">
            <summary>
            合作申请Id
            </summary>
        </member>
        <member name="T:RemotingProtocolParser.ProtocolStreamHandle">
            <summary>.Net Remoting Protocol stream read/write
            </summary>
        </member>
        <member name="M:RemotingProtocolParser.ProtocolStreamHandle.ReadContent">
            <summary>read message content by content-length
            </summary>
            <returns></returns>
        </member>
        <member name="M:RemotingProtocolParser.ProtocolStreamHandle.WriteContent(System.Byte[])">
            <summary>write serialized message content by content-length
            </summary>
            <param name="value"></param>
        </member>
        <member name="T:RemotingProtocolParser.HTTP.HttpProtocolHandle">
            <summary>.Net Remoting Protocol (via HTTP) Parser
            </summary>
        </member>
        <member name="M:RemotingProtocolParser.HTTP.HttpProtocolHandle.ReadFirstLine">
            <summary>eg: POST /remote.rem HTTP/1.1
            </summary>
            <returns></returns>
        </member>
        <member name="M:RemotingProtocolParser.HTTP.HttpProtocolHandle.WriteRequestFirstLine(System.String,System.String)">
            <summary>http request first line, eg: POST /remote.rem HTTP/1.1
            </summary>
            <param name="requestVerb">GET/POST</param>
            <param name="url"></param>
        </member>
        <member name="M:RemotingProtocolParser.HTTP.HttpProtocolHandle.WriteResponseFirstLine(System.String,System.String)">
            <summary>http response first line, eg: HTTP/1.1 200 ok
            </summary>
            <param name="httpStatusCode"></param>
            <param name="reasonPhrase"></param>
        </member>
        <member name="M:RemotingProtocolParser.HTTP.HttpProtocolHandle.ReadHeaders">
            <summary>read all http headers
            </summary>
            <returns></returns>
        </member>
        <member name="M:RemotingProtocolParser.HTTP.HttpProtocolHandle.WriteHeaders(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>write http headers
            </summary>
            <param name="headers"></param>
        </member>
        <member name="T:WebSocketSharp.Ext">
            <summary>Provides a set of static methods for the websocket-sharp.
            </summary>
        </member>
        <member name="M:WebSocketSharp.Ext.AcceptWebSocket(System.Net.Sockets.TcpClient,System.Boolean)">
            <summary>
            Accept a WebSocket connection by the <see cref="T:System.Net.Sockets.TcpListener"/>.
            </summary>
            <returns>
            A <see cref="T:WebSocketSharp.Net.Sockets.TcpListenerWebSocketContext"/> that contains a WebSocket connection.
            </returns>
            <param name="client">
            A <see cref="T:System.Net.Sockets.TcpClient"/> that contains a TCP connection to accept a WebSocket connection from.
            </param>
            <param name="secure">
            A <see cref="T:System.Boolean"/> that indicates a secure connection or not. (<c>true</c> indicates a secure connection.)
            </param>
            <exception cref="T:System.ArgumentNullException">
            Is thrown when the <paramref name="client"/> parameter passed to a method is invalid because it is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:WebSocketSharp.Ext.Emit(System.EventHandler,System.Object,System.EventArgs)">
            <summary>
            Emit the specified <see cref="T:System.EventHandler"/> delegate if is not <see langword="null"/>.
            </summary>
            <param name="eventHandler">
            An <see cref="T:System.EventHandler"/> to emit.
            </param>
            <param name="sender">
            An <see cref="T:System.Object"/> that emits the <paramref name="eventHandler"/>.
            </param>
            <param name="e">
            An <see cref="T:System.EventArgs"/> that contains no event data.
            </param>
        </member>
        <member name="M:WebSocketSharp.Ext.Emit``1(System.EventHandler{``0},System.Object,``0)">
            <summary>
            Emit the specified <see cref="T:System.EventHandler`1"/> delegate if is not <see langword="null"/>.
            </summary>
            <param name="eventHandler">
            An <see cref="T:System.EventHandler`1"/> to emit.
            </param>
            <param name="sender">
            An <see cref="T:System.Object"/> that emits the <paramref name="eventHandler"/>.
            </param>
            <param name="e">
            An <see cref="T:System.EventArgs"/> that contains the event data.
            </param>
            <typeparam name="TEventArgs">
            The type of the event data generated by the event.
            </typeparam>
        </member>
        <member name="M:WebSocketSharp.Ext.EqualsAndSaveTo(System.Int32,System.Char,System.Collections.Generic.List{System.Byte})">
            <summary>
            Determines whether the specified <see cref="T:System.Int32"/> equals the specified <see cref="T:System.Char"/> as <see cref="T:System.Byte"/>.
            And save this specified <see cref="T:System.Int32"/> as <see cref="T:System.Byte"/> to the specified <see cref="!:List&lt;byte&gt;"/>.
            </summary>
            <returns>
            <c>true</c> if the <paramref name="value"/> parameter equals the <paramref name="c"/> parameter as <see cref="T:System.Byte"/>; otherwise, <c>false</c>.
            </returns>
            <param name="value">
            An <see cref="T:System.Int32"/> to compare.
            </param>
            <param name="c">
            A <see cref="T:System.Char"/> to compare.
            </param>
            <param name="dest">
            A <see cref="!:List&lt;byte&gt;"/> to save the <paramref name="value"/> as <see cref="T:System.Byte"/>.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Is thrown when the <paramref name="value"/> parameter passed to a method is invalid because it is outside the allowable range of values as <see cref="T:System.Byte"/>.
            </exception>
        </member>
        <member name="M:WebSocketSharp.Ext.Exists(System.Collections.Specialized.NameValueCollection,System.String)">
            <summary>
            Determines whether the entry with the specified key exists in the specified <see cref="T:System.Collections.Specialized.NameValueCollection"/>.
            </summary>
            <returns>
            <c>true</c> if the entry with the <paramref name="name"/> exists in the <paramref name="collection"/>; otherwise, <c>false</c>.
            </returns>
            <param name="collection">
            A <see cref="T:System.Collections.Specialized.NameValueCollection"/> that contains the entries.
            </param>
            <param name="name">
            A <see cref="T:System.String"/> that contains the key of the entry to find.
            </param>
        </member>
        <member name="M:WebSocketSharp.Ext.Exists(System.Collections.Specialized.NameValueCollection,System.String,System.String)">
            <summary>
            Determines whether the entry with the specified both key and value exists in the specified <see cref="T:System.Collections.Specialized.NameValueCollection"/>.
            </summary>
            <returns>
            <c>true</c> if the entry with the both <paramref name="name"/> and <paramref name="value"/> exists in the <paramref name="collection"/>; otherwise, <c>false</c>.
            </returns>
            <param name="collection">
            A <see cref="T:System.Collections.Specialized.NameValueCollection"/> that contains the entries.
            </param>
            <param name="name">
            A <see cref="T:System.String"/> that contains the key of the entry to find.
            </param>
            <param name="value">
            A <see cref="T:System.String"/> that contains the value of the entry to find.
            </param>
        </member>
        <member name="M:WebSocketSharp.Ext.GetAbsolutePath(System.Uri)">
            <summary>
            Gets the absolute path from the specified <see cref="T:System.Uri"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that contains the absolute path if got successfully; otherwise, <see langword="null"/>.
            </returns>
            <param name="uri">
            A <see cref="T:System.Uri"/> that contains the URI to get the absolute path from.
            </param>
        </member>
        <member name="M:WebSocketSharp.Ext.GetDescription(WebSocketSharp.Net.HttpStatusCode)">
            <summary>
            Gets the description of the HTTP status code using the specified code.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that contains the description of the <paramref name="code"/>.
            </returns>
            <param name="code">
            One of <see cref="T:WebSocketSharp.Net.HttpStatusCode"/> values that contains the HTTP status code.
            </param>
        </member>
        <member name="M:WebSocketSharp.Ext.GetName(System.String,System.String)">
            <summary>
            Gets the name from the specified <see cref="T:System.String"/> that contains a pair of name and value are separated by a separator string.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that contains the name if any; otherwise, <c>null</c>.
            </returns>
            <param name="nameAndValue">
            A <see cref="T:System.String"/> that contains a pair of name and value are separated by a separator string.
            </param>
            <param name="separator">
            A <see cref="T:System.String"/> that contains a separator string.
            </param>
        </member>
        <member name="M:WebSocketSharp.Ext.GetNameAndValue(System.String,System.String)">
            <summary>
            Gets the name and value from the specified <see cref="T:System.String"/> that contains a pair of name and value are separated by a separator string.
            </summary>
            <returns>
            A <see cref="!:KeyValuePair&lt;string, string&gt;"/> that contains the name and value if any.
            </returns>
            <param name="nameAndValue">
            A <see cref="T:System.String"/> that contains a pair of name and value are separated by a separator string.
            </param>
            <param name="separator">
            A <see cref="T:System.String"/> that contains a separator string.
            </param>
        </member>
        <member name="M:WebSocketSharp.Ext.GetStatusDescription(System.Int32)">
            <summary>
            Gets the description of the HTTP status code using the specified code.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that contains the description of the <paramref name="code"/>.
            </returns>
            <param name="code">
            An <see cref="T:System.Int32"/> that contains the HTTP status code.
            </param>
        </member>
        <member name="M:WebSocketSharp.Ext.GetValue(System.String,System.String)">
            <summary>
            Gets the value from the specified <see cref="T:System.String"/> that contains a pair of name and value are separated by a separator string.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that contains the value if any; otherwise, <c>null</c>.
            </returns>
            <param name="nameAndValue">
            A <see cref="T:System.String"/> that contains a pair of name and value are separated by a separator string.
            </param>
            <param name="separator">
            A <see cref="T:System.String"/> that contains a separator string.
            </param>
        </member>
        <member name="M:WebSocketSharp.Ext.IsEmpty(System.String)">
            <summary>
            Determines whether the specified <see cref="T:System.String"/> is a <see cref="F:System.String.Empty"/>.
            </summary>
            <returns>
            <c>true</c> if the <paramref name="value"/> parameter is a <see cref="F:System.String.Empty"/>; otherwise, <c>false</c>.
            </returns>
            <param name="value">
            A <see cref="T:System.String"/> to test.
            </param>
        </member>
        <member name="M:WebSocketSharp.Ext.IsHostOrder(WebSocketSharp.ByteOrder)">
            <summary>
            Determines whether the specified <see cref="T:WebSocketSharp.ByteOrder"/> is host (this computer architecture) byte order.
            </summary>
            <returns>
            <c>true</c> if the <paramref name="order"/> parameter is host byte order; otherwise, <c>false</c>.
            </returns>
            <param name="order">
            A <see cref="T:WebSocketSharp.ByteOrder"/> to test.
            </param>
        </member>
        <member name="M:WebSocketSharp.Ext.IsNull``1(``0)">
            <summary>
            Determines whether the specified object is <see langword="null"/>.
            </summary>
            <returns>
            <c>true</c> if the <paramref name="obj"/> parameter is <see langword="null"/>; otherwise, <c>false</c>.
            </returns>
            <param name="obj">
            A <see cref="!:class"/> to test.
            </param>
            <typeparam name="T">
            The type of the <paramref name="obj"/> parameter.
            </typeparam>
        </member>
        <member name="M:WebSocketSharp.Ext.IsNullDo``1(``0,WebSocketSharp.Action)">
            <summary>
            Determines whether the specified object is <see langword="null"/>.
            And invokes the specified <see cref="T:WebSocketSharp.Action"/> delegate if the specified object is <see langword="null"/>.
            </summary>
            <returns>
            <c>true</c> if the <paramref name="obj"/> parameter is <see langword="null"/>; otherwise, <c>false</c>.
            </returns>
            <param name="obj">
            A <see cref="!:class"/> to test.
            </param>
            <param name="act">
            An <see cref="T:WebSocketSharp.Action"/> delegate that contains the method(s) called if the <paramref name="obj"/> is <see langword="null"/>.
            </param>
            <typeparam name="T">
            The type of the <paramref name="obj"/> parameter.
            </typeparam>
        </member>
        <member name="M:WebSocketSharp.Ext.IsNullOrEmpty(System.String)">
            <summary>
            Determines whether the specified <see cref="T:System.String"/> is <see langword="null"/> or <see cref="F:System.String.Empty"/>.
            </summary>
            <returns>
            <c>true</c> if the <paramref name="value"/> parameter is <see langword="null"/> or <see cref="F:System.String.Empty"/>; otherwise, <c>false</c>.
            </returns>
            <param name="value">
            A <see cref="T:System.String"/> to test.
            </param>
        </member>
        <member name="M:WebSocketSharp.Ext.IsPredefinedScheme(System.String)">
            <summary>
            Determines whether the specified <see cref="T:System.String"/> is predefined scheme.
            </summary>
            <returns>
            <c>true</c> if the <paramref name="scheme"/> parameter is the predefined scheme; otherwise, <c>false</c>.
            </returns>
            <param name="scheme">
            A <see cref="T:System.String"/> to test.
            </param>
        </member>
        <member name="M:WebSocketSharp.Ext.IsValidAbsolutePath(System.String,System.String@)">
            <summary>
            Determines whether the specified <see cref="T:System.String"/> is valid absolute path.
            </summary>
            <returns>
            <c>true</c> if the <paramref name="absPath"/> parameter is valid absolute path; otherwise, <c>false</c>.
            </returns>
            <param name="absPath">
            A <see cref="T:System.String"/> to test.
            </param>
            <param name="message">
            A <see cref="T:System.String"/> that receives a message if the <paramref name="absPath"/> is invalid.
            </param>
        </member>
        <member name="M:WebSocketSharp.Ext.MaybeUri(System.String)">
            <summary>
            Determines whether the specified <see cref="T:System.String"/> is a URI string.
            </summary>
            <returns>
            <c>true</c> if the <paramref name="uriString"/> parameter is maybe a URI string; otherwise, <c>false</c>.
            </returns>
            <param name="uriString">
            A <see cref="T:System.String"/> to test.
            </param>
        </member>
        <member name="M:WebSocketSharp.Ext.NotEqual(System.String,System.String,System.Boolean)">
            <summary>
            Determines whether two specified <see cref="T:System.String"/> objects don't have the same value.
            </summary>
            <returns>
            <c>true</c> if the value of <paramref name="expected"/> parameter isn't the same as the value of <paramref name="actual"/> parameter; otherwise, <c>false</c>.
            </returns>
            <param name="expected">
            The first <see cref="T:System.String"/> to compare.
            </param>
            <param name="actual">
            The second <see cref="T:System.String"/> to compare.
            </param>
            <param name="ignoreCase">
            A <see cref="T:System.Boolean"/> that indicates a case-sensitive or insensitive comparison. (<c>true</c> indicates a case-insensitive comparison.)
            </param>
        </member>
        <member name="M:WebSocketSharp.Ext.ReadBytes(System.IO.Stream,System.Int32)">
            <summary>
            Reads a block of bytes from the specified stream and returns the read data in an array of <see cref="T:System.Byte"/>.
            </summary>
            <returns>
            An array of <see cref="T:System.Byte"/> that receives the read data.
            </returns>
            <param name="stream">
            A <see cref="T:System.IO.Stream"/> that contains the data to read.
            </param>
            <param name="length">
            An <see cref="T:System.Int32"/> that contains the number of bytes to read.
            </param>
        </member>
        <member name="M:WebSocketSharp.Ext.ReadBytes(System.IO.Stream,System.Int64)">
            <summary>
            Reads a block of bytes from the specified stream and returns the read data in an array of <see cref="T:System.Byte"/>.
            </summary>
            <returns>
            An array of <see cref="T:System.Byte"/> that receives the read data.
            </returns>
            <param name="stream">
            A <see cref="T:System.IO.Stream"/> that contains the data to read.
            </param>
            <param name="length">
            A <see cref="T:System.Int64"/> that contains the number of bytes to read.
            </param>
        </member>
        <member name="M:WebSocketSharp.Ext.ReadBytes(System.IO.Stream,System.Int64,System.Int32)">
            <summary>
            Reads a block of bytes from the specified stream and returns the read data in an array of <see cref="T:System.Byte"/>.
            </summary>
            <returns>
            An array of <see cref="T:System.Byte"/> that receives the read data.
            </returns>
            <param name="stream">
            A <see cref="T:System.IO.Stream"/> that contains the data to read.
            </param>
            <param name="length">
            A <see cref="T:System.Int64"/> that contains the number of bytes to read.
            </param>
            <param name="bufferLength">
            An <see cref="T:System.Int32"/> that contains the buffer size in bytes of each internal read.
            </param>
        </member>
        <member name="M:WebSocketSharp.Ext.SubArray``1(``0[],System.Int32,System.Int32)">
            <summary>
            Retrieves a sub-array from the specified <paramref name="array"/>. A sub-array starts at the specified element position.
            </summary>
            <returns>
            An array of T that receives a sub-array, or an empty array of T if any problems with the parameters.
            </returns>
            <param name="array">
            An array of T that contains the data to retrieve a sub-array.
            </param>
            <param name="startIndex">
            An <see cref="T:System.Int32"/> that contains the zero-based starting position of a sub-array in the <paramref name="array"/>.
            </param>
            <param name="length">
            An <see cref="T:System.Int32"/> that contains the number of elements to retrieve a sub-array.
            </param>
            <typeparam name="T">
            The type of elements in the <paramref name="array"/>.
            </typeparam>
        </member>
        <member name="M:WebSocketSharp.Ext.Times(System.Int32,WebSocketSharp.Action)">
            <summary>
            Executes the specified <see cref="T:WebSocketSharp.Action"/> delegate <paramref name="n"/> times.
            </summary>
            <param name="n">
            An <see cref="T:System.Int32"/> that contains the number of times to execute.
            </param>
            <param name="act">
            An <see cref="T:WebSocketSharp.Action"/> delegate that contains the method(s) to execute.
            </param>
        </member>
        <member name="M:WebSocketSharp.Ext.Times(System.Int64,WebSocketSharp.Action)">
            <summary>
            Executes the specified <see cref="T:WebSocketSharp.Action"/> delegate <paramref name="n"/> times.
            </summary>
            <param name="n">
            A <see cref="T:System.Int64"/> that contains the number of times to execute.
            </param>
            <param name="act">
            An <see cref="T:WebSocketSharp.Action"/> delegate that contains the method(s) to execute.
            </param>
        </member>
        <member name="M:WebSocketSharp.Ext.Times(System.UInt32,WebSocketSharp.Action)">
            <summary>
            Executes the specified <see cref="T:WebSocketSharp.Action"/> delegate <paramref name="n"/> times.
            </summary>
            <param name="n">
            A <see cref="T:System.UInt32"/> that contains the number of times to execute.
            </param>
            <param name="act">
            An <see cref="T:WebSocketSharp.Action"/> delegate that contains the method(s) to execute.
            </param>
        </member>
        <member name="M:WebSocketSharp.Ext.Times(System.UInt64,WebSocketSharp.Action)">
            <summary>
            Executes the specified <see cref="T:WebSocketSharp.Action"/> delegate <paramref name="n"/> times.
            </summary>
            <param name="n">
            A <see cref="T:System.UInt64"/> that contains the number of times to execute.
            </param>
            <param name="act">
            An <see cref="T:WebSocketSharp.Action"/> delegate that contains the method(s) to execute.
            </param>
        </member>
        <member name="M:WebSocketSharp.Ext.Times(System.Int32,System.Action{System.UInt64})">
            <summary>
            Executes the specified <see cref="!:Action&lt;ulong&gt;"/> delegate <paramref name="n"/> times.
            </summary>
            <param name="n">
            An <see cref="T:System.Int32"/> that contains the number of times to execute.
            </param>
            <param name="act">
            An <see cref="!:Action&lt;ulong&gt;"/> delegate that contains the method(s) to execute.
            A <see cref="T:System.UInt64"/> parameter to pass to this method(s) contains the zero-based count of iteration.
            </param>
        </member>
        <member name="M:WebSocketSharp.Ext.Times(System.Int64,System.Action{System.UInt64})">
            <summary>
            Executes the specified <see cref="!:Action&lt;ulong&gt;"/> delegate <paramref name="n"/> times.
            </summary>
            <param name="n">
            A <see cref="T:System.Int64"/> that contains the number of times to execute.
            </param>
            <param name="act">
            An <see cref="!:Action&lt;ulong&gt;"/> delegate that contains the method(s) to execute.
            A <see cref="T:System.UInt64"/> parameter to pass to this method(s) contains the zero-based count of iteration.
            </param>
        </member>
        <member name="M:WebSocketSharp.Ext.Times(System.UInt32,System.Action{System.UInt64})">
            <summary>
            Executes the specified <see cref="!:Action&lt;ulong&gt;"/> delegate <paramref name="n"/> times.
            </summary>
            <param name="n">
            A <see cref="T:System.UInt32"/> that contains the number of times to execute.
            </param>
            <param name="act">
            An <see cref="!:Action&lt;ulong&gt;"/> delegate that contains the method(s) to execute.
            A <see cref="T:System.UInt64"/> parameter to pass to this method(s) contains the zero-based count of iteration.
            </param>
        </member>
        <member name="M:WebSocketSharp.Ext.Times(System.UInt64,System.Action{System.UInt64})">
            <summary>
            Executes the specified <see cref="!:Action&lt;ulong&gt;"/> delegate <paramref name="n"/> times.
            </summary>
            <param name="n">
            A <see cref="T:System.UInt64"/> that contains the number of times to execute.
            </param>
            <param name="act">
            An <see cref="!:Action&lt;ulong&gt;"/> delegate that contains the method(s) to execute.
            A <see cref="T:System.UInt64"/> parameter to pass to this method(s) contains the zero-based count of iteration.
            </param>
        </member>
        <member name="M:WebSocketSharp.Ext.To``1(System.Byte[],WebSocketSharp.ByteOrder)">
            <summary>
            Converts the specified array of <see cref="T:System.Byte"/> to the specified type data.
            </summary>
            <returns>
            A T converted from the <paramref name="src"/>, or a default value of T
            if the <paramref name="src"/> is an empty array of <see cref="T:System.Byte"/>
            or if the types of T aren't the <see cref="T:System.Boolean"/>, <see cref="T:System.Char"/>, <see cref="T:System.Double"/>,
            <see cref="T:System.Single"/>, <see cref="T:System.Int32"/>, <see cref="T:System.Int64"/>, <see cref="T:System.Int16"/>,
            <see cref="T:System.UInt32"/>, <see cref="T:System.UInt64"/>, <see cref="T:System.UInt16"/>.
            </returns>
            <param name="src">
            An array of <see cref="T:System.Byte"/> to convert.
            </param>
            <param name="srcOrder">
            A <see cref="T:WebSocketSharp.ByteOrder"/> that indicates the byte order of the <paramref name="src"/>.
            </param>
            <typeparam name="T">
            The type of the return value. The T must be a value type.
            </typeparam>
            <exception cref="T:System.ArgumentNullException">
            Is thrown when the <paramref name="src"/> parameter passed to a method is invalid because it is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:WebSocketSharp.Ext.ToBytes``1(``0,WebSocketSharp.ByteOrder)">
            <summary>
            Converts the specified data to an array of <see cref="T:System.Byte"/>.
            </summary>
            <returns>
            An array of <see cref="T:System.Byte"/> converted from the <paramref name="value"/>.
            </returns>
            <param name="value">
            A T to convert.
            </param>
            <param name="order">
            A <see cref="T:WebSocketSharp.ByteOrder"/> that indicates the byte order of the return.
            </param>
            <typeparam name="T">
            The type of the <paramref name="value"/>. The T must be a value type.
            </typeparam>
        </member>
        <member name="M:WebSocketSharp.Ext.ToHostOrder(System.Byte[],WebSocketSharp.ByteOrder)">
            <summary>
            Converts the order of the specified array of <see cref="T:System.Byte"/> to the host byte order.
            </summary>
            <returns>
            An array of <see cref="T:System.Byte"/> converted from the <paramref name="src"/>.
            </returns>
            <param name="src">
            An array of <see cref="T:System.Byte"/> to convert.
            </param>
            <param name="srcOrder">
            A <see cref="T:WebSocketSharp.ByteOrder"/> that indicates the byte order of the <paramref name="src"/>.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Is thrown when the <paramref name="src"/> parameter passed to a method is invalid because it is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:WebSocketSharp.Ext.ToString``1(``0[],System.String)">
            <summary>
            Converts the specified array to a <see cref="T:System.String"/> concatenated the specified separator string
            between each element of this array.
            </summary>
            <returns>
            A <see cref="T:System.String"/> converted from the <paramref name="array"/> parameter, or a <see cref="F:System.String.Empty"/>
            if the length of the <paramref name="array"/> is zero.
            </returns>
            <param name="array">
            An array of T to convert.
            </param>
            <param name="separator">
            A <see cref="T:System.String"/> that contains a separator string.
            </param>
            <typeparam name="T">
            The type of elements in the <paramref name="array"/>.
            </typeparam>
            <exception cref="T:System.ArgumentNullException">
            Is thrown when the <paramref name="array"/> parameter passed to a method is invalid because it is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:WebSocketSharp.Ext.ToUri(System.String)">
            <summary>
            Converts the specified <see cref="T:System.String"/> to a <see cref="T:System.Uri"/> object.
            </summary>
            <returns>
            A <see cref="T:System.Uri"/> converted from the <paramref name="uriString"/> parameter, or <see langword="null"/>
            if the <paramref name="uriString"/> is <see langword="null"/> or <see cref="F:System.String.Empty"/>.
            </returns>
            <param name="uriString">
            A <see cref="T:System.String"/> to convert.
            </param>
        </member>
        <member name="M:WebSocketSharp.Ext.TryCreateWebSocketUri(System.String,System.Uri@,System.String@)">
            <summary>
            Tries to create a new WebSocket <see cref="T:System.Uri"/> using the specified <paramref name="uriString"/>.
            </summary>
            <returns>
            <c>true</c> if the WebSocket <see cref="T:System.Uri"/> was successfully created; otherwise, <c>false</c>.
            </returns>
            <param name="uriString">
            A <see cref="T:System.String"/> that contains a WebSocket URI.
            </param>
            <param name="result">
            When this method returns, contains a created WebSocket <see cref="T:System.Uri"/> if the <paramref name="uriString"/> parameter is valid WebSocket URI; otherwise, <see langword="null"/>.
            </param>
            <param name="message">
            When this method returns, contains a error message <see cref="T:System.String"/> if the <paramref name="uriString"/> parameter is invalid WebSocket URI; otherwise, <c>String.Empty</c>.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Is thrown when the <paramref name="uriString"/> parameter passed to a method is invalid because it is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:WebSocketSharp.Ext.UrlDecode(System.String)">
            <summary>
            URL-decodes the specified <see cref="T:System.String"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that receives a decoded string, or the <paramref name="s"/> parameter
            if the <paramref name="s"/> is <see langword="null"/> or <see cref="F:System.String.Empty"/>.
            </returns>
            <param name="s">
            A <see cref="T:System.String"/> to decode.
            </param>
        </member>
        <member name="M:WebSocketSharp.Ext.UrlEncode(System.String)">
            <summary>
            URL-encodes the specified <see cref="T:System.String"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that receives a encoded string, or the <paramref name="s"/> parameter
            if the <paramref name="s"/> is <see langword="null"/> or <see cref="F:System.String.Empty"/>.
            </returns>
            <param name="s">
            A <see cref="T:System.String"/> to encode.
            </param>
        </member>
        <member name="M:WebSocketSharp.Ext.WriteContent(WebSocketSharp.Net.HttpListenerResponse,System.Byte[])">
            <summary>
            Writes the specified content data using the specified <see cref="T:WebSocketSharp.Net.HttpListenerResponse"/>.
            </summary>
            <param name="response">
            A <see cref="T:WebSocketSharp.Net.HttpListenerResponse"/> that contains a network stream to write a content data.
            </param>
            <param name="content">
            An array of <see cref="T:System.Byte"/> that contains a content data to write.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Is thrown when the <paramref name="response"/> parameter passed to a method is invalid because it is <see langword="null"/>.
            </exception>
        </member>
        <member name="T:Taobao.Top.Link.Channel.WebSocket.WebSocketClientChannel">
            <summary>websocket clientchannel via websocket-sharp impl
            </summary>
        </member>
        <member name="T:Taobao.Top.Link.Channel.IClientChannel">
            <summary>the channel that client connect to server
            </summary>
        </member>
        <member name="T:Taobao.Top.Link.Channel.IChannelSender">
            <summary>a channel used to sending message
            </summary>
        </member>
        <member name="M:Taobao.Top.Link.Channel.IChannelSender.Send(System.Byte[])">
            <summary>send bytes
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Taobao.Top.Link.Channel.IChannelSender.Close(System.String)">
            <summary>close channel with given reason
            </summary>
            <param name="reason"></param>
        </member>
        <member name="P:Taobao.Top.Link.Channel.IClientChannel.OnMessage">
            <summary>while message received on this channel
            </summary>
        </member>
        <member name="P:Taobao.Top.Link.Channel.IClientChannel.OnError">
            <summary>while error occur on this channel
            </summary>
        </member>
        <member name="P:Taobao.Top.Link.Channel.IClientChannel.OnClosed">
            <summary>while channel was closed by given reason
            </summary>
        </member>
        <member name="P:Taobao.Top.Link.Channel.IClientChannel.Uri">
            <summary>get or set remote uri
            </summary>
        </member>
        <member name="P:Taobao.Top.Link.Channel.IClientChannel.IsConnected">
            <summary>weather the channel is valid
            </summary>
        </member>
        <member name="P:Taobao.Top.Link.Channel.IClientChannel.HeartbeatTimer">
            <summary>timer for heartbeat if set
            </summary>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Zip.HostSystemID">
            <summary>
            Defines known values for the <see cref="T:ICSharpCode.SharpZipLib.Zip.HostSystemID"/> property.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.HostSystemID.Msdos">
            <summary>
            Host system = MSDOS
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.HostSystemID.Amiga">
            <summary>
            Host system = Amiga
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.HostSystemID.OpenVms">
            <summary>
            Host system = Open VMS
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.HostSystemID.Unix">
            <summary>
            Host system = Unix
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.HostSystemID.VMCms">
            <summary>
            Host system = VMCms
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.HostSystemID.AtariST">
            <summary>
            Host system = Atari ST
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.HostSystemID.OS2">
            <summary>
            Host system = OS2
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.HostSystemID.Macintosh">
            <summary>
            Host system = Macintosh
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.HostSystemID.ZSystem">
            <summary>
            Host system = ZSystem
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.HostSystemID.Cpm">
            <summary>
            Host system = Cpm
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.HostSystemID.WindowsNT">
            <summary>
            Host system = Windows NT
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.HostSystemID.MVS">
            <summary>
            Host system = MVS
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.HostSystemID.Vse">
            <summary>
            Host system = VSE
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.HostSystemID.AcornRisc">
            <summary>
            Host system = Acorn RISC
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.HostSystemID.Vfat">
            <summary>
            Host system = VFAT
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.HostSystemID.AlternateMvs">
            <summary>
            Host system = Alternate MVS
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.HostSystemID.BeOS">
            <summary>
            Host system = BEOS
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.HostSystemID.Tandem">
            <summary>
            Host system = Tandem
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.HostSystemID.OS400">
            <summary>
            Host system = OS400
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.HostSystemID.OSX">
            <summary>
            Host system = OSX
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.HostSystemID.WinZipAES">
            <summary>
            Host system = WinZIP AES
            </summary>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Zip.ZipEntry">
            <summary>
            This class represents an entry in a zip archive.  This can be a file
            or a directory
            ZipFile and ZipInputStream will give you instances of this class as 
            information about the members in an archive.  ZipOutputStream
            uses an instance of this class when creating an entry in a Zip file.
            <br/>
            <br/>Author of the original java version : Jochen Hoenicke
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipEntry.#ctor(System.String)">
            <summary>
            Creates a zip entry with the given name.
            </summary>
            <param name="name">
            The name for this entry. Can include directory components.
            The convention for names is 'unix' style paths with relative names only.
            There are with no device names and path elements are separated by '/' characters.
            </param>
            <exception cref="T:System.ArgumentNullException">
            The name passed is null
            </exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipEntry.#ctor(System.String,System.Int32)">
            <summary>
            Creates a zip entry with the given name and version required to extract
            </summary>
            <param name="name">
            The name for this entry. Can include directory components.
            The convention for names is 'unix'  style paths with no device names and 
            path elements separated by '/' characters.  This is not enforced see <see cref="M:ICSharpCode.SharpZipLib.Zip.ZipEntry.CleanName(System.String)">CleanName</see>
            on how to ensure names are valid if this is desired.
            </param>
            <param name="versionRequiredToExtract">
            The minimum 'feature version' required this entry
            </param>
            <exception cref="T:System.ArgumentNullException">
            The name passed is null
            </exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipEntry.#ctor(System.String,System.Int32,System.Int32,ICSharpCode.SharpZipLib.Zip.CompressionMethod)">
            <summary>
            Initializes an entry with the given name and made by information
            </summary>
            <param name="name">Name for this entry</param>
            <param name="madeByInfo">Version and HostSystem Information</param>
            <param name="versionRequiredToExtract">Minimum required zip feature version required to extract this entry</param>
            <param name="method">Compression method for this entry.</param>
            <exception cref="T:System.ArgumentNullException">
            The name passed is null
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            versionRequiredToExtract should be 0 (auto-calculate) or &gt; 10
            </exception>
            <remarks>
            This constructor is used by the ZipFile class when reading from the central header
            It is not generally useful, use the constructor specifying the name only.
            </remarks>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipEntry.#ctor(ICSharpCode.SharpZipLib.Zip.ZipEntry)">
            <summary>
            Creates a deep copy of the given zip entry.
            </summary>
            <param name="entry">
            The entry to copy.
            </param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipEntry.HasDosAttributes(System.Int32)">
            <summary>
            Test the external attributes for this <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipEntry"/> to
            see if the external attributes are Dos based (including WINNT and variants)
            and match the values
            </summary>
            <param name="attributes">The attributes to test.</param>
            <returns>Returns true if the external attributes are known to be DOS/Windows 
            based and have the same attributes set as the value passed.</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipEntry.ForceZip64">
            <summary>
            Force this entry to be recorded using Zip64 extensions.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipEntry.IsZip64Forced">
            <summary>
            Get a value indicating wether Zip64 extensions were forced.
            </summary>
            <returns>A <see cref="T:System.Boolean"/> value of true if Zip64 extensions have been forced on; false if not.</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipEntry.ProcessExtraData(System.Boolean)">
            <summary>
            Process extra data fields updating the entry based on the contents.
            </summary>
            <param name="localHeader">True if the extra data fields should be handled
            for a local header, rather than for a central header.
            </param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipEntry.IsCompressionMethodSupported">
            <summary>
            Test entry to see if data can be extracted.
            </summary>
            <returns>Returns true if data can be extracted for this entry; false otherwise.</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipEntry.Clone">
            <summary>
            Creates a copy of this zip entry.
            </summary>
            <returns>An <see cref="T:System.Object"/> that is a copy of the current instance.</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipEntry.ToString">
            <summary>
            Gets a string representation of this ZipEntry.
            </summary>
            <returns>A readable textual representation of this <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipEntry"/></returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipEntry.IsCompressionMethodSupported(ICSharpCode.SharpZipLib.Zip.CompressionMethod)">
            <summary>
            Test a <see cref="P:ICSharpCode.SharpZipLib.Zip.ZipEntry.CompressionMethod">compression method</see> to see if this library
            supports extracting data compressed with that method
            </summary>
            <param name="method">The compression method to test.</param>
            <returns>Returns true if the compression method is supported; false otherwise</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipEntry.CleanName(System.String)">
            <summary>
            Cleans a name making it conform to Zip file conventions.
            Devices names ('c:\') and UNC share names ('\\server\share') are removed
            and forward slashes ('\') are converted to back slashes ('/').
            Names are made relative by trimming leading slashes which is compatible
            with the ZIP naming convention.
            </summary>
            <param name="name">The name to clean</param>
            <returns>The 'cleaned' name.</returns>
            <remarks>
            The <seealso cref="T:ICSharpCode.SharpZipLib.Zip.ZipNameTransform">Zip name transform</seealso> class is more flexible.
            </remarks>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipEntry.HasCrc">
            <summary>
            Get a value indicating wether the entry has a CRC value available.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipEntry.IsCrypted">
            <summary>
            Get/Set flag indicating if entry is encrypted.
            A simple helper routine to aid interpretation of <see cref="P:ICSharpCode.SharpZipLib.Zip.ZipEntry.Flags">flags</see>
            </summary>
            <remarks>This is an assistant that interprets the <see cref="P:ICSharpCode.SharpZipLib.Zip.ZipEntry.Flags">flags</see> property.</remarks>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipEntry.IsUnicodeText">
            <summary>
            Get / set a flag indicating wether entry name and comment text are
            encoded in <a href="http://www.unicode.org">unicode UTF8</a>.
            </summary>
            <remarks>This is an assistant that interprets the <see cref="P:ICSharpCode.SharpZipLib.Zip.ZipEntry.Flags">flags</see> property.</remarks>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipEntry.CryptoCheckValue">
            <summary>
            Value used during password checking for PKZIP 2.0 / 'classic' encryption.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipEntry.Flags">
            <summary>
            Get/Set general purpose bit flag for entry
            </summary>
            <remarks>
            General purpose bit flag<br/>
            <br/>
            Bit 0: If set, indicates the file is encrypted<br/>
            Bit 1-2 Only used for compression type 6 Imploding, and 8, 9 deflating<br/>
            Imploding:<br/>
            Bit 1 if set indicates an 8K sliding dictionary was used.  If clear a 4k dictionary was used<br/>
            Bit 2 if set indicates 3 Shannon-Fanno trees were used to encode the sliding dictionary, 2 otherwise<br/>
            <br/>
            Deflating:<br/>
              Bit 2    Bit 1<br/>
                0        0       Normal compression was used<br/>
                0        1       Maximum compression was used<br/>
                1        0       Fast compression was used<br/>
                1        1       Super fast compression was used<br/>
            <br/>
            Bit 3: If set, the fields crc-32, compressed size
            and uncompressed size are were not able to be written during zip file creation
            The correct values are held in a data descriptor immediately following the compressed data. <br/>
            Bit 4: Reserved for use by PKZIP for enhanced deflating<br/>
            Bit 5: If set indicates the file contains compressed patch data<br/>
            Bit 6: If set indicates strong encryption was used.<br/>
            Bit 7-10: Unused or reserved<br/>
            Bit 11: If set the name and comments for this entry are in <a href="http://www.unicode.org">unicode</a>.<br/>
            Bit 12-15: Unused or reserved<br/>
            </remarks>
            <seealso cref="P:ICSharpCode.SharpZipLib.Zip.ZipEntry.IsUnicodeText"></seealso>
            <seealso cref="P:ICSharpCode.SharpZipLib.Zip.ZipEntry.IsCrypted"></seealso>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipEntry.ZipFileIndex">
            <summary>
            Get/Set index of this entry in Zip file
            </summary>
            <remarks>This is only valid when the entry is part of a <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipFile"></see></remarks>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipEntry.Offset">
            <summary>
            Get/set offset for use in central header
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipEntry.ExternalFileAttributes">
            <summary>
            Get/Set external file attributes as an integer.
            The values of this are operating system dependant see
            <see cref="P:ICSharpCode.SharpZipLib.Zip.ZipEntry.HostSystem">HostSystem</see> for details
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipEntry.VersionMadeBy">
            <summary>
            Get the version made by for this entry or zero if unknown.
            The value / 10 indicates the major version number, and 
            the value mod 10 is the minor version number
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipEntry.IsDOSEntry">
            <summary>
            Get a value indicating this entry is for a DOS/Windows system.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipEntry.HostSystem">
            <summary>
            Gets the compatability information for the <see cref="P:ICSharpCode.SharpZipLib.Zip.ZipEntry.ExternalFileAttributes">external file attribute</see>
            If the external file attributes are compatible with MS-DOS and can be read
            by PKZIP for DOS version 2.04g then this value will be zero.  Otherwise the value
            will be non-zero and identify the host system on which the attributes are compatible.
            </summary>
            		
            <remarks>
            The values for this as defined in the Zip File format and by others are shown below.  The values are somewhat
            misleading in some cases as they are not all used as shown.  You should consult the relevant documentation
            to obtain up to date and correct information.  The modified appnote by the infozip group is
            particularly helpful as it documents a lot of peculiarities.  The document is however a little dated.
            <list type="table">
            <item>0 - MS-DOS and OS/2 (FAT / VFAT / FAT32 file systems)</item>
            <item>1 - Amiga</item>
            <item>2 - OpenVMS</item>
            <item>3 - Unix</item>
            <item>4 - VM/CMS</item>
            <item>5 - Atari ST</item>
            <item>6 - OS/2 HPFS</item>
            <item>7 - Macintosh</item>
            <item>8 - Z-System</item>
            <item>9 - CP/M</item>
            <item>10 - Windows NTFS</item>
            <item>11 - MVS (OS/390 - Z/OS)</item>
            <item>12 - VSE</item>
            <item>13 - Acorn Risc</item>
            <item>14 - VFAT</item>
            <item>15 - Alternate MVS</item>
            <item>16 - BeOS</item>
            <item>17 - Tandem</item>
            <item>18 - OS/400</item>
            <item>19 - OS/X (Darwin)</item>
            <item>99 - WinZip AES</item>
            <item>remainder - unused</item>
            </list>
            </remarks>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipEntry.Version">
            <summary>
            Get minimum Zip feature version required to extract this entry
            </summary>		
            <remarks>
            Minimum features are defined as:<br/>
            1.0 - Default value<br/>
            1.1 - File is a volume label<br/>
            2.0 - File is a folder/directory<br/>
            2.0 - File is compressed using Deflate compression<br/>
            2.0 - File is encrypted using traditional encryption<br/>
            2.1 - File is compressed using Deflate64<br/>
            2.5 - File is compressed using PKWARE DCL Implode<br/>
            2.7 - File is a patch data set<br/>
            4.5 - File uses Zip64 format extensions<br/>
            4.6 - File is compressed using BZIP2 compression<br/>
            5.0 - File is encrypted using DES<br/>
            5.0 - File is encrypted using 3DES<br/>
            5.0 - File is encrypted using original RC2 encryption<br/>
            5.0 - File is encrypted using RC4 encryption<br/>
            5.1 - File is encrypted using AES encryption<br/>
            5.1 - File is encrypted using corrected RC2 encryption<br/>
            5.1 - File is encrypted using corrected RC2-64 encryption<br/>
            6.1 - File is encrypted using non-OAEP key wrapping<br/>
            6.2 - Central directory encryption (not confirmed yet)<br/>
            6.3 - File is compressed using LZMA<br/>
            6.3 - File is compressed using PPMD+<br/>
            6.3 - File is encrypted using Blowfish<br/>
            6.3 - File is encrypted using Twofish<br/>
            </remarks>
            <seealso cref="P:ICSharpCode.SharpZipLib.Zip.ZipEntry.CanDecompress"></seealso>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipEntry.CanDecompress">
            <summary>
            Get a value indicating whether this entry can be decompressed by the library.
            </summary>
            <remarks>This is based on the <see cref="P:ICSharpCode.SharpZipLib.Zip.ZipEntry.Version"></see> and 
            wether the <see cref="M:ICSharpCode.SharpZipLib.Zip.ZipEntry.IsCompressionMethodSupported">compression method</see> is supported.</remarks>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipEntry.LocalHeaderRequiresZip64">
            <summary>
            Gets a value indicating if the entry requires Zip64 extensions 
            to store the full entry values.
            </summary>
            <value>A <see cref="T:System.Boolean"/> value of true if a local header requires Zip64 extensions; false if not.</value>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipEntry.CentralHeaderRequiresZip64">
            <summary>
            Get a value indicating wether the central directory entry requires Zip64 extensions to be stored.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipEntry.DosTime">
            <summary>
            Get/Set DosTime value.
            </summary>
            <remarks>
            The MS-DOS date format can only represent dates between 1/1/1980 and 12/31/2107.
            </remarks>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipEntry.DateTime">
            <summary>
            Gets/Sets the time of last modification of the entry.
            </summary>
            <remarks>
            The <see cref="P:ICSharpCode.SharpZipLib.Zip.ZipEntry.DosTime"></see> property is updated to match this as far as possible.
            </remarks>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipEntry.Name">
             <summary>
             Returns the entry name.
             </summary>
             <remarks>
             The unix naming convention is followed.
             Path components in the entry should always separated by forward slashes ('/').
             Dos device names like C: should also be removed.
             See the <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipNameTransform"/> class, or <see cref="M:ICSharpCode.SharpZipLib.Zip.ZipEntry.CleanName(System.String)"/>
            </remarks>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipEntry.Size">
            <summary>
            Gets/Sets the size of the uncompressed data.
            </summary>
            <returns>
            The size or -1 if unknown.
            </returns>
            <remarks>Setting the size before adding an entry to an archive can help
            avoid compatability problems with some archivers which dont understand Zip64 extensions.</remarks>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipEntry.CompressedSize">
            <summary>
            Gets/Sets the size of the compressed data.
            </summary>
            <returns>
            The compressed entry size or -1 if unknown.
            </returns>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipEntry.Crc">
            <summary>
            Gets/Sets the crc of the uncompressed data.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Crc is not in the range 0..0xffffffffL
            </exception>
            <returns>
            The crc value or -1 if unknown.
            </returns>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipEntry.CompressionMethod">
            <summary>
            Gets/Sets the compression method. Only Deflated and Stored are supported.
            </summary>
            <returns>
            The compression method for this entry
            </returns>
            <see cref="F:ICSharpCode.SharpZipLib.Zip.CompressionMethod.Deflated"/>
            <see cref="F:ICSharpCode.SharpZipLib.Zip.CompressionMethod.Stored"/>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipEntry.CompressionMethodForHeader">
            <summary>
            Gets the compression method for outputting to the local or central header.
            Returns same value as CompressionMethod except when AES encrypting, which
            places 99 in the method and places the real method in the extra data.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipEntry.ExtraData">
            <summary>
            Gets/Sets the extra data.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Extra data is longer than 64KB (0xffff) bytes.
            </exception>
            <returns>
            Extra data or null if not set.
            </returns>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipEntry.AESKeySize">
            <summary>
            For AES encrypted files returns or sets the number of bits of encryption (128, 192 or 256).
            When setting, only 0 (off), 128 or 256 is supported.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipEntry.AESEncryptionStrength">
            <summary>
            AES Encryption strength for storage in extra data in entry header.
            1 is 128 bit, 2 is 192 bit, 3 is 256 bit.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipEntry.AESSaltLen">
            <summary>
            Returns the length of the salt, in bytes 
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipEntry.AESOverheadSize">
            <summary>
            Number of extra bytes required to hold the AES Header fields (Salt, Pwd verify, AuthCode)
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipEntry.Comment">
            <summary>
            Gets/Sets the entry comment.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If comment is longer than 0xffff.
            </exception>
            <returns>
            The comment or null if not set.
            </returns>
            <remarks>
            A comment is only available for entries when read via the <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipFile"/> class.
            The <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipInputStream"/> class doesnt have the comment data available.
            </remarks>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipEntry.IsDirectory">
            <summary>
            Gets a value indicating if the entry is a directory.
            however.
            </summary>
            <remarks>
            A directory is determined by an entry name with a trailing slash '/'.
            The external file attributes can also indicate an entry is for a directory.
            Currently only dos/windows attributes are tested in this manner.
            The trailing slash convention should always be followed.
            </remarks>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipEntry.IsFile">
            <summary>
            Get a value of true if the entry appears to be a file; false otherwise
            </summary>
            <remarks>
            This only takes account of DOS/Windows attributes.  Other operating systems are ignored.
            For linux and others the result may be incorrect.
            </remarks>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Zip.ZipOutputStream">
             <summary>
             This is a DeflaterOutputStream that writes the files into a zip
             archive one after another.  It has a special method to start a new
             zip entry.  The zip entries contains information about the file name
             size, compressed size, CRC, etc.
             
             It includes support for Stored and Deflated entries.
             This class is not thread safe.
             <br/>
             <br/>Author of the original java version : Jochen Hoenicke
             </summary>
             <example> This sample shows how to create a zip file
             <code>
             using System;
             using System.IO;
             
             using ICSharpCode.SharpZipLib.Core;
             using ICSharpCode.SharpZipLib.Zip;
             
             class MainClass
             {
             	public static void Main(string[] args)
             	{
             		string[] filenames = Directory.GetFiles(args[0]);
             		byte[] buffer = new byte[4096];
             		
             		using ( ZipOutputStream s = new ZipOutputStream(File.Create(args[1])) ) {
             		
             			s.SetLevel(9); // 0 - store only to 9 - means best compression
             		
             			foreach (string file in filenames) {
             				ZipEntry entry = new ZipEntry(file);
             				s.PutNextEntry(entry);
            
             				using (FileStream fs = File.OpenRead(file)) {
            						StreamUtils.Copy(fs, s, buffer);
             				}
             			}
             		}
             	}
             }	
             </code>
             </example>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream">
            <summary>
            A special stream deflating or compressing the bytes that are
            written to it.  It uses a Deflater to perform actual deflating.<br/>
            Authors of the original java version : Tom Tromey, Jochen Hoenicke 
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream.#ctor(System.IO.Stream)">
            <summary>
            Creates a new DeflaterOutputStream with a default Deflater and default buffer size.
            </summary>
            <param name="baseOutputStream">
            the output stream where deflated output should be written.
            </param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream.#ctor(System.IO.Stream,ICSharpCode.SharpZipLib.Zip.Compression.Deflater)">
            <summary>
            Creates a new DeflaterOutputStream with the given Deflater and
            default buffer size.
            </summary>
            <param name="baseOutputStream">
            the output stream where deflated output should be written.
            </param>
            <param name="deflater">
            the underlying deflater.
            </param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream.#ctor(System.IO.Stream,ICSharpCode.SharpZipLib.Zip.Compression.Deflater,System.Int32)">
            <summary>
            Creates a new DeflaterOutputStream with the given Deflater and
            buffer size.
            </summary>
            <param name="baseOutputStream">
            The output stream where deflated output is written.
            </param>
            <param name="deflater">
            The underlying deflater to use
            </param>
            <param name="bufferSize">
            The buffer size in bytes to use when deflating (minimum value 512)
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            bufsize is less than or equal to zero.
            </exception>
            <exception cref="T:System.ArgumentException">
            baseOutputStream does not support writing
            </exception>
            <exception cref="T:System.ArgumentNullException">
            deflater instance is null
            </exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream.Finish">
            <summary>
            Finishes the stream by calling finish() on the deflater. 
            </summary>
            <exception cref="T:ICSharpCode.SharpZipLib.SharpZipBaseException">
            Not all input is deflated
            </exception>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream.AESAuthCode">
            <summary>
            Returns the 10 byte AUTH CODE to be appended immediately following the AES data stream.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream.EncryptBlock(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Encrypt a block of data
            </summary>
            <param name="buffer">
            Data to encrypt.  NOTE the original contents of the buffer are lost
            </param>
            <param name="offset">
            Offset of first byte in buffer to encrypt
            </param>
            <param name="length">
            Number of bytes in buffer to encrypt
            </param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream.InitializePassword(System.String)">
            <summary>
            Initializes encryption keys based on given <paramref name="password"/>.
            </summary>
            <param name="password">The password.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream.InitializeAESPassword(ICSharpCode.SharpZipLib.Zip.ZipEntry,System.String,System.Byte[]@,System.Byte[]@)">
            <summary>
            Initializes encryption keys based on given password.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream.Deflate">
            <summary>
            Deflates everything in the input buffers.  This will call
            <code>def.deflate()</code> until all bytes from the input buffers
            are processed.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets the current position of this stream to the given value. Not supported by this class!
            </summary>
            <param name="offset">The offset relative to the <paramref name="origin"/> to seek.</param>
            <param name="origin">The <see cref="T:System.IO.SeekOrigin"/> to seek from.</param>
            <returns>The new position in the stream.</returns>
            <exception cref="T:System.NotSupportedException">Any access</exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream.SetLength(System.Int64)">
            <summary>
            Sets the length of this stream to the given value. Not supported by this class!
            </summary>
            <param name="value">The new stream length.</param>
            <exception cref="T:System.NotSupportedException">Any access</exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream.ReadByte">
            <summary>
            Read a byte from stream advancing position by one
            </summary>
            <returns>The byte read cast to an int.  THe value is -1 if at the end of the stream.</returns>
            <exception cref="T:System.NotSupportedException">Any access</exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Read a block of bytes from stream
            </summary>
            <param name="buffer">The buffer to store read data in.</param>
            <param name="offset">The offset to start storing at.</param>
            <param name="count">The maximum number of bytes to read.</param>
            <returns>The actual number of bytes read.  Zero if end of stream is detected.</returns>
            <exception cref="T:System.NotSupportedException">Any access</exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronous reads are not supported a NotSupportedException is always thrown
            </summary>
            <param name="buffer">The buffer to read into.</param>
            <param name="offset">The offset to start storing data at.</param>
            <param name="count">The number of bytes to read</param>
            <param name="callback">The async callback to use.</param>
            <param name="state">The state to use.</param>
            <returns>Returns an <see cref="T:System.IAsyncResult"/></returns>
            <exception cref="T:System.NotSupportedException">Any access</exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronous writes arent supported, a NotSupportedException is always thrown
            </summary>
            <param name="buffer">The buffer to write.</param>
            <param name="offset">The offset to begin writing at.</param>
            <param name="count">The number of bytes to write.</param>
            <param name="callback">The <see cref="T:System.AsyncCallback"/> to use.</param>
            <param name="state">The state object.</param>
            <returns>Returns an IAsyncResult.</returns>
            <exception cref="T:System.NotSupportedException">Any access</exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream.Flush">
            <summary>
            Flushes the stream by calling <see cref="M:ICSharpCode.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream.Flush">Flush</see> on the deflater and then
            on the underlying stream.  This ensures that all bytes are flushed.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream.Close">
            <summary>
            Calls <see cref="M:ICSharpCode.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream.Finish"/> and closes the underlying
            stream when <see cref="P:ICSharpCode.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream.IsStreamOwner"></see> is true.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream.WriteByte(System.Byte)">
            <summary>
            Writes a single byte to the compressed output stream.
            </summary>
            <param name="value">
            The byte value.
            </param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes bytes from an array to the compressed stream.
            </summary>
            <param name="buffer">
            The byte array
            </param>
            <param name="offset">
            The offset into the byte array where to start.
            </param>
            <param name="count">
            The number of bytes to write.
            </param>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream.buffer_">
            <summary>
            This buffer is used temporarily to retrieve the bytes from the
            deflater and write them to the underlying output stream.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream.deflater_">
            <summary>
            The deflater which is used to deflate the stream.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream.baseOutputStream_">
            <summary>
            Base stream the deflater depends on.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream.IsStreamOwner">
            <summary>
            Get/set flag indicating ownership of the underlying stream.
            When the flag is true <see cref="M:ICSharpCode.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream.Close"></see> will close the underlying stream also.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream.CanPatchEntries">
            <summary>
            Allows client to determine if an entry can be patched after its added
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream.Password">
            <summary>
            Get/set the password used for encryption.
            </summary>
            <remarks>When set to null or if the password is empty no encryption is performed</remarks>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream.CanRead">
            <summary>
            Gets value indicating stream can be read from
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream.CanSeek">
            <summary>
            Gets a value indicating if seeking is supported for this stream
            This property always returns false
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream.CanWrite">
            <summary>
            Get value indicating if this stream supports writing
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream.Length">
            <summary>
            Get current length of stream
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream.Position">
            <summary>
            Gets the current position within the stream.
            </summary>
            <exception cref="T:System.NotSupportedException">Any attempt to set position</exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipOutputStream.#ctor(System.IO.Stream)">
            <summary>
            Creates a new Zip output stream, writing a zip archive.
            </summary>
            <param name="baseOutputStream">
            The output stream to which the archive contents are written.
            </param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipOutputStream.#ctor(System.IO.Stream,System.Int32)">
            <summary>
            Creates a new Zip output stream, writing a zip archive.
            </summary>
            <param name="baseOutputStream">The output stream to which the archive contents are written.</param>
            <param name="bufferSize">Size of the buffer to use.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipOutputStream.SetComment(System.String)">
            <summary>
            Set the zip file comment.
            </summary>
            <param name="comment">
            The comment text for the entire archive.
            </param>
            <exception name ="ArgumentOutOfRangeException">
            The converted comment is longer than 0xffff bytes.
            </exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipOutputStream.SetLevel(System.Int32)">
            <summary>
            Sets the compression level.  The new level will be activated
            immediately.
            </summary>
            <param name="level">The new compression level (1 to 9).</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Level specified is not supported.
            </exception>
            <see cref="T:ICSharpCode.SharpZipLib.Zip.Compression.Deflater"/>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipOutputStream.GetLevel">
            <summary>
            Get the current deflater compression level
            </summary>
            <returns>The current compression level</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipOutputStream.WriteLeShort(System.Int32)">
            <summary>
            Write an unsigned short in little endian byte order.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipOutputStream.WriteLeInt(System.Int32)">
            <summary>
            Write an int in little endian byte order.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipOutputStream.WriteLeLong(System.Int64)">
            <summary>
            Write an int in little endian byte order.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipOutputStream.PutNextEntry(ICSharpCode.SharpZipLib.Zip.ZipEntry)">
            <summary>
            Starts a new Zip entry. It automatically closes the previous
            entry if present.
            All entry elements bar name are optional, but must be correct if present.
            If the compression method is stored and the output is not patchable
            the compression for that entry is automatically changed to deflate level 0
            </summary>
            <param name="entry">
            the entry.
            </param>
            <exception cref="T:System.ArgumentNullException">
            if entry passed is null.
            </exception>
            <exception cref="T:System.IO.IOException">
            if an I/O error occured.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            if stream was finished
            </exception>
            <exception cref="T:ICSharpCode.SharpZipLib.Zip.ZipException">
            Too many entries in the Zip file<br/>
            Entry name is too long<br/>
            Finish has already been called<br/>
            </exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipOutputStream.CloseEntry">
            <summary>
            Closes the current entry, updating header and footer information as required
            </summary>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            No entry is active.
            </exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipOutputStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes the given buffer to the current entry.
            </summary>
            <param name="buffer">The buffer containing data to write.</param>
            <param name="offset">The offset of the first byte to write.</param>
            <param name="count">The number of bytes to write.</param>
            <exception cref="T:ICSharpCode.SharpZipLib.Zip.ZipException">Archive size is invalid</exception>
            <exception cref="T:System.InvalidOperationException">No entry is active.</exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipOutputStream.Finish">
            <summary>
            Finishes the stream.  This will write the central directory at the
            end of the zip file and flush the stream.
            </summary>
            <remarks>
            This is automatically called when the stream is closed.
            </remarks>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
            <exception cref="T:ICSharpCode.SharpZipLib.Zip.ZipException">
            Comment exceeds the maximum length<br/>
            Entry name exceeds the maximum length
            </exception>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.ZipOutputStream.entries">
            <summary>
            The entries for the archive.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.ZipOutputStream.crc">
            <summary>
            Used to track the crc of data added to entries.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.ZipOutputStream.curEntry">
            <summary>
            The current entry being added.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.ZipOutputStream.size">
            <summary>
            Used to track the size of data for an entry during writing.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.ZipOutputStream.offset">
            <summary>
            Offset to be recorded for each entry in the central header.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.ZipOutputStream.zipComment">
            <summary>
            Comment for the entire archive recorded in central header.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.ZipOutputStream.patchEntryHeader">
            <summary>
            Flag indicating that header patching is required for the current entry.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.ZipOutputStream.crcPatchPos">
            <summary>
            Position to patch crc
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.ZipOutputStream.sizePatchPos">
            <summary>
            Position to patch size.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipOutputStream.IsFinished">
            <summary>
            Gets a flag value of true if the central header has been added for this archive; false if it has not been added.
            </summary>
            <remarks>No further entries can be added once this has been done.</remarks>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipOutputStream.UseZip64">
            <summary>
            Get / set a value indicating how Zip64 Extension usage is determined when adding entries.
            </summary>
            <remarks>Older archivers may not understand Zip64 extensions.
            If backwards compatability is an issue be careful when adding <see cref="P:ICSharpCode.SharpZipLib.Zip.ZipEntry.Size">entries</see> to an archive.
            Setting this property to off is workable but less desirable as in those circumstances adding a file
            larger then 4GB will fail.</remarks>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Zip.ZipException">
            <summary>
            Represents exception conditions specific to Zip archive handling
            </summary>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.SharpZipBaseException">
            <summary>
            SharpZipBaseException is the base exception class for the SharpZipLibrary.
            All library exceptions are derived from this.
            </summary>
            <remarks>NOTE: Not all exceptions thrown will be derived from this class.
            A variety of other exceptions are possible for example <see cref="T:System.ArgumentNullException"></see></remarks>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.SharpZipBaseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor 
            </summary>
            <param name="info"><see cref="T:System.Runtime.Serialization.SerializationInfo"/> for this constructor</param>
            <param name="context"><see cref="T:System.Runtime.Serialization.StreamingContext"/> for this constructor</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.SharpZipBaseException.#ctor">
            <summary>
            Initializes a new instance of the SharpZipBaseException class.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.SharpZipBaseException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the SharpZipBaseException class with a specified error message.
            </summary>
            <param name="message">A message describing the exception.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.SharpZipBaseException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the SharpZipBaseException class with a specified
            error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">A message describing the exception.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor 
            </summary>
            <param name="info"><see cref="T:System.Runtime.Serialization.SerializationInfo"/> for this constructor</param>
            <param name="context"><see cref="T:System.Runtime.Serialization.StreamingContext"/> for this constructor</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipException.#ctor">
            <summary>
            Initializes a new instance of the ZipException class.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ZipException class with a specified error message.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipException.#ctor(System.String,System.Exception)">
            <summary>
            Initialise a new instance of ZipException.
            </summary>
            <param name="message">A message describing the error.</param>
            <param name="exception">The exception that is the cause of the current exception.</param>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterHuffman">
            <summary>
            This is the DeflaterHuffman class.
            
            This class is <i>not</i> thread safe.  This is inherent in the API, due
            to the split of Deflate and SetInput.
            
            author of the original java version : Jochen Hoenicke
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterHuffman.pending">
            <summary>
            Pending buffer to use
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterHuffman.#ctor(ICSharpCode.SharpZipLib.Zip.Compression.DeflaterPending)">
            <summary>
            Construct instance with pending buffer
            </summary>
            <param name="pending">Pending buffer to use</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterHuffman.Reset">
            <summary>
            Reset internal state
            </summary>		
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterHuffman.SendAllTrees(System.Int32)">
            <summary>
            Write all trees to pending buffer
            </summary>
            <param name="blTreeCodes">The number/rank of treecodes to send.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterHuffman.CompressBlock">
            <summary>
            Compress current buffer writing data to pending buffer
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterHuffman.FlushStoredBlock(System.Byte[],System.Int32,System.Int32,System.Boolean)">
            <summary>
            Flush block to output with no compression
            </summary>
            <param name="stored">Data to write</param>
            <param name="storedOffset">Index of first byte to write</param>
            <param name="storedLength">Count of bytes to write</param>
            <param name="lastBlock">True if this is the last block</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterHuffman.FlushBlock(System.Byte[],System.Int32,System.Int32,System.Boolean)">
            <summary>
            Flush block to output with compression
            </summary>		
            <param name="stored">Data to flush</param>
            <param name="storedOffset">Index of first byte to flush</param>
            <param name="storedLength">Count of bytes to flush</param>
            <param name="lastBlock">True if this is the last block</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterHuffman.IsFull">
            <summary>
            Get value indicating if internal buffer is full
            </summary>
            <returns>true if buffer is full</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterHuffman.TallyLit(System.Int32)">
            <summary>
            Add literal to buffer
            </summary>
            <param name="literal">Literal value to add to buffer.</param>
            <returns>Value indicating internal buffer is full</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterHuffman.TallyDist(System.Int32,System.Int32)">
            <summary>
            Add distance code and length to literal and distance trees
            </summary>
            <param name="distance">Distance code</param>
            <param name="length">Length</param>
            <returns>Value indicating if internal buffer is full</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterHuffman.BitReverse(System.Int32)">
            <summary>
            Reverse the bits of a 16 bit value.
            </summary>
            <param name="toReverse">Value to reverse bits</param>
            <returns>Value with bits reversed</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterHuffman.Tree.Reset">
            <summary>
            Resets the internal state of the tree
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterHuffman.Tree.CheckEmpty">
            <summary>
            Check that all frequencies are zero
            </summary>
            <exception cref="T:ICSharpCode.SharpZipLib.SharpZipBaseException">
            At least one frequency is non-zero
            </exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterHuffman.Tree.SetStaticCodes(System.Int16[],System.Byte[])">
            <summary>
            Set static codes and length
            </summary>
            <param name="staticCodes">new codes</param>
            <param name="staticLengths">length for new codes</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterHuffman.Tree.BuildCodes">
            <summary>
            Build dynamic codes and lengths
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterHuffman.Tree.GetEncodedLength">
            <summary>
            Get encoded length
            </summary>
            <returns>Encoded length, the sum of frequencies * lengths</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterHuffman.Tree.CalcBLFreq(ICSharpCode.SharpZipLib.Zip.Compression.DeflaterHuffman.Tree)">
            <summary>
            Scan a literal or distance tree to determine the frequencies of the codes
            in the bit length tree.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterHuffman.Tree.WriteTree(ICSharpCode.SharpZipLib.Zip.Compression.DeflaterHuffman.Tree)">
            <summary>
            Write tree values
            </summary>
            <param name="blTree">Tree to write</param>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Checksums.Adler32">
            <summary>
            Computes Adler32 checksum for a stream of data. An Adler32
            checksum is not as reliable as a CRC32 checksum, but a lot faster to
            compute.
            
            The specification for Adler32 may be found in RFC 1950.
            ZLIB Compressed Data Format Specification version 3.3)
            
            
            From that document:
            
                 "ADLER32 (Adler-32 checksum)
                  This contains a checksum value of the uncompressed data
                  (excluding any dictionary data) computed according to Adler-32
                  algorithm. This algorithm is a 32-bit extension and improvement
                  of the Fletcher algorithm, used in the ITU-T X.224 / ISO 8073
                  standard.
            
                  Adler-32 is composed of two sums accumulated per byte: s1 is
                  the sum of all bytes, s2 is the sum of all s1 values. Both sums
                  are done modulo 65521. s1 is initialized to 1, s2 to zero.  The
                  Adler-32 checksum is stored as s2*65536 + s1 in most-
                  significant-byte first (network) order."
            
             "8.2. The Adler-32 algorithm
            
               The Adler-32 algorithm is much faster than the CRC32 algorithm yet
               still provides an extremely low probability of undetected errors.
            
               The modulo on unsigned long accumulators can be delayed for 5552
               bytes, so the modulo operation time is negligible.  If the bytes
               are a, b, c, the second sum is 3a + 2b + c + 3, and so is position
               and order sensitive, unlike the first sum, which is just a
               checksum.  That 65521 is prime is important to avoid a possible
               large class of two-byte errors that leave the check unchanged.
               (The Fletcher checksum uses 255, which is not prime and which also
               makes the Fletcher check insensitive to single byte changes 0 -
               255.)
            
               The sum s1 is initialized to 1 instead of zero to make the length
               of the sequence part of s2, so that the length does not have to be
               checked separately. (Any sequence of zeroes has a Fletcher
               checksum of zero.)"
            </summary>
            <see cref="T:ICSharpCode.SharpZipLib.Zip.Compression.Streams.InflaterInputStream"/>
            <see cref="T:ICSharpCode.SharpZipLib.Zip.Compression.Streams.DeflaterOutputStream"/>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Checksums.IChecksum">
            <summary>
            Interface to compute a data checksum used by checked input/output streams.
            A data checksum can be updated by one byte or with a byte array. After each
            update the value of the current checksum can be returned by calling
            <code>getValue</code>. The complete checksum object can also be reset
            so it can be used again with new data.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Checksums.IChecksum.Reset">
            <summary>
            Resets the data checksum as if no update was ever called.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Checksums.IChecksum.Update(System.Int32)">
            <summary>
            Adds one byte to the data checksum.
            </summary>
            <param name = "value">
            the data value to add. The high byte of the int is ignored.
            </param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Checksums.IChecksum.Update(System.Byte[])">
            <summary>
            Updates the data checksum with the bytes taken from the array.
            </summary>
            <param name="buffer">
            buffer an array of bytes
            </param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Checksums.IChecksum.Update(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Adds the byte array to the data checksum.
            </summary>
            <param name = "buffer">
            The buffer which contains the data
            </param>
            <param name = "offset">
            The offset in the buffer where the data starts
            </param>
            <param name = "count">
            the number of data bytes to add.
            </param>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Checksums.IChecksum.Value">
            <summary>
            Returns the data checksum computed so far.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Checksums.Adler32.BASE">
            <summary>
            largest prime smaller than 65536
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Checksums.Adler32.#ctor">
            <summary>
            Creates a new instance of the Adler32 class.
            The checksum starts off with a value of 1.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Checksums.Adler32.Reset">
            <summary>
            Resets the Adler32 checksum to the initial value.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Checksums.Adler32.Update(System.Int32)">
            <summary>
            Updates the checksum with a byte value.
            </summary>
            <param name="value">
            The data value to add. The high byte of the int is ignored.
            </param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Checksums.Adler32.Update(System.Byte[])">
            <summary>
            Updates the checksum with an array of bytes.
            </summary>
            <param name="buffer">
            The source of the data to update with.
            </param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Checksums.Adler32.Update(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Updates the checksum with the bytes taken from the array.
            </summary>
            <param name="buffer">
            an array of bytes
            </param>
            <param name="offset">
            the start of the data used for this update
            </param>
            <param name="count">
            the number of bytes to use for this update
            </param>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Checksums.Adler32.Value">
            <summary>
            Returns the Adler32 data checksum computed so far.
            </summary>
        </member>
        <member name="T:Top.Api.Domain.RptTaskDTO">
            <summary>
            RptTaskDTO Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RptTaskDTO.FilePath">
            <summary>
            报表下载地址，空代表没有（当状态为任务创建或任务开始时，表示还未生成下载文件；当状态为下载完成时，表示没有查询到相关数据，因而未生成文件）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RptTaskDTO.Status">
            <summary>
            任务状态，0：任务创建，1：任务开始，2：任务完成，3：任务失败
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RptTaskDTO.TaskId">
            <summary>
            下载任务id标识
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaCampaignPlatformUpdateResponse">
            <summary>
            SimbaCampaignPlatformUpdateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaCampaignPlatformUpdateResponse.CampaignPlatform">
            <summary>
            修改后的推广计划投放平台设置
            </summary>
        </member>
        <member name="T:Top.Api.Response.TmallItemPriceUpdateResponse">
            <summary>
            TmallItemPriceUpdateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallItemPriceUpdateResponse.PriceUpdateResult">
            <summary>
            价格更新结果
            </summary>
        </member>
        <member name="T:Top.Api.Response.TmallItemDapeiTemplateGetResponse">
            <summary>
            TmallItemDapeiTemplateGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallItemDapeiTemplateGetResponse.Result">
            <summary>
            result
            </summary>
        </member>
        <member name="T:Top.Api.Response.TmallItemDapeiTemplateGetResponse.DapeiTemplateItemDomain">
            <summary>
            DapeiTemplateItemDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallItemDapeiTemplateGetResponse.DapeiTemplateItemDomain.Img">
            <summary>
            img
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallItemDapeiTemplateGetResponse.DapeiTemplateItemDomain.ItemId">
            <summary>
            itemId
            </summary>
        </member>
        <member name="T:Top.Api.Response.TmallItemDapeiTemplateGetResponse.DapeiDomain">
            <summary>
            DapeiDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallItemDapeiTemplateGetResponse.DapeiDomain.Desc">
            <summary>
            desc
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallItemDapeiTemplateGetResponse.DapeiDomain.Id">
            <summary>
            id
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallItemDapeiTemplateGetResponse.DapeiDomain.Items">
            <summary>
            items
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallItemDapeiTemplateGetResponse.DapeiDomain.Title">
            <summary>
            title
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallItemDapeiTemplateGetResponse.DapeiDomain.Url">
            <summary>
            url
            </summary>
        </member>
        <member name="T:Top.Api.Response.TmallItemDapeiTemplateGetResponse.ResultDomain">
            <summary>
            ResultDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallItemDapeiTemplateGetResponse.ResultDomain.Error">
            <summary>
            error
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallItemDapeiTemplateGetResponse.ResultDomain.ErrorCode">
            <summary>
            errorCode
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallItemDapeiTemplateGetResponse.ResultDomain.ErrorMsg">
            <summary>
            errorMsg
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallItemDapeiTemplateGetResponse.ResultDomain.Results">
            <summary>
            firstResult
            </summary>
        </member>
        <member name="T:Top.Api.Response.TmallProductSchemaMatchResponse">
            <summary>
            TmallProductSchemaMatchResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallProductSchemaMatchResponse.MatchResult">
            <summary>
            返回匹配产品ID，部分类目可能返回多个产品ID，以逗号分隔。
            </summary>
        </member>
        <member name="T:Top.Api.Response.TmallItemAddSchemaGetResponse">
            <summary>
            TmallItemAddSchemaGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallItemAddSchemaGetResponse.AddItemResult">
            <summary>
            返回发布商品的规则文档
            </summary>
        </member>
        <member name="T:Top.Api.Response.TmallProductSchemaAddResponse">
            <summary>
            TmallProductSchemaAddResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallProductSchemaAddResponse.AddProductResult">
            <summary>
            新发产品结果
            </summary>
        </member>
        <member name="T:Top.Api.Response.FuwuSaleLinkGenResponse">
            <summary>
            FuwuSaleLinkGenResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.FuwuSaleLinkGenResponse.Url">
            <summary>
            通过营销链接接口生成的营销链接短地址
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaInsightCatsworddataGetResponse">
            <summary>
            SimbaInsightCatsworddataGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaInsightCatsworddataGetResponse.CatwordDataList">
            <summary>
            关键词在类目下的数据
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaInsightRelatedwordsGetResponse">
            <summary>
            SimbaInsightRelatedwordsGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaInsightRelatedwordsGetResponse.RelatedWordsResultList">
            <summary>
            相关词列表，最多可传100个。
            </summary>
        </member>
        <member name="T:Top.Api.Response.SubuserDepartmentDeleteResponse">
            <summary>
            SubuserDepartmentDeleteResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SubuserDepartmentDeleteResponse.IsSuccess">
            <summary>
            操作是否成功 true:操作成功; false:操作失败
            </summary>
        </member>
        <member name="T:Top.Api.Response.ItemsListGetResponse">
            <summary>
            ItemsListGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ItemsListGetResponse.Items">
            <summary>
            获取的商品 具体字段根据权限和设定的fields决定
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaKeywordidsDeletedGetResponse">
            <summary>
            SimbaKeywordidsDeletedGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaKeywordidsDeletedGetResponse.DeletedKeywordIds">
            <summary>
            词ID列表
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaAdgroupMobilediscountDeleteResponse">
            <summary>
            SimbaAdgroupMobilediscountDeleteResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaAdgroupMobilediscountDeleteResponse.Key">
            <summary>
            返回码
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaAdgroupMobilediscountDeleteResponse.Message">
            <summary>
            返回信息
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaAdgroupMobilediscountDeleteResponse.Result">
            <summary>
            返回成功个数
            </summary>
        </member>
        <member name="T:Top.Api.Response.SellercenterRoleInfoGetResponse">
            <summary>
            SellercenterRoleInfoGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SellercenterRoleInfoGetResponse.Role">
            <summary>
            角色具体信息
            </summary>
        </member>
        <member name="T:Top.Api.Response.ItempropsGetResponse">
            <summary>
            ItempropsGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ItempropsGetResponse.ItemProps">
            <summary>
            类目属性信息(如果是取全量或者增量，不包括属性值),根据fields传入的参数返回相应的结果
            </summary>
        </member>
        <member name="P:Top.Api.Response.ItempropsGetResponse.LastModified">
            <summary>
            最近修改时间(只有取全量或增量的时候会返回该字段)。格式:yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="T:Top.Api.Response.RefundMessagesGetResponse">
            <summary>
            RefundMessagesGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.RefundMessagesGetResponse.RefundMessages">
            <summary>
            查询到的退款留言/凭证列表
            </summary>
        </member>
        <member name="P:Top.Api.Response.RefundMessagesGetResponse.TotalResults">
            <summary>
            查询到的退款留言/凭证总数
            </summary>
        </member>
        <member name="T:Top.Api.Response.ItemBarcodeUpdateResponse">
            <summary>
            ItemBarcodeUpdateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ItemBarcodeUpdateResponse.Item">
            <summary>
            商品结构里的num_iid，modified
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaRptCustbaseGetResponse">
            <summary>
            SimbaRptCustbaseGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaRptCustbaseGetResponse.RptCustBaseList">
            <summary>
            用户帐户结果
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaRptAdgroupeffectGetResponse">
            <summary>
            SimbaRptAdgroupeffectGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaRptAdgroupeffectGetResponse.RptAdgroupEffectList">
            <summary>
            推广组效果报表数据对象
            </summary>
        </member>
        <member name="T:Top.Api.Response.WirelessBuntingItemShorturlCreateResponse">
            <summary>
            WirelessBuntingItemShorturlCreateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.WirelessBuntingItemShorturlCreateResponse.Shorturl">
            <summary>
            短地址
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaCampaignBudgetUpdateRequest">
            <summary>
            TOP API: taobao.simba.campaign.budget.update
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaCampaignBudgetUpdateRequest.Budget">
            <summary>
            如果为空则取消限额；否则必须为整数，单位是元，不得小于30；
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaCampaignBudgetUpdateRequest.CampaignId">
            <summary>
            推广计划Id
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaCampaignBudgetUpdateRequest.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaCampaignBudgetUpdateRequest.UseSmooth">
            <summary>
            是否平滑消耗：false-否，true-是
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaCampaignScheduleGetRequest">
            <summary>
            TOP API: taobao.simba.campaign.schedule.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaCampaignScheduleGetRequest.CampaignId">
            <summary>
            推广计划Id
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaCampaignScheduleGetRequest.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="T:Top.Api.Request.TmallItemPriceUpdateRequest">
            <summary>
            TOP API: tmall.item.price.update
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemPriceUpdateRequest.ItemId">
            <summary>
            商品ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemPriceUpdateRequest.ItemPrice">
            <summary>
            被更新商品价格
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemPriceUpdateRequest.Options">
            <summary>
            商品价格更新时候的可选参数
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemPriceUpdateRequest.SkuPrices">
            <summary>
            更新SKU价格时候的SKU价格对象；如果没有SKU或者不更新SKU价格，可以不填;查找SKU目前支持ID，属性串和商家编码三种模式，建议选用一种最合适的，切勿滥用，一次调用中如果混合使用，更新结果不可预期！
            </summary>
        </member>
        <member name="T:Top.Api.Request.TmallItemPriceUpdateRequest.UpdateSkuPriceDomain">
            <summary>
            UpdateSkuPriceDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemPriceUpdateRequest.UpdateSkuPriceDomain.OuterId">
            <summary>
            Sku的商家外部id，用于指定被修改价格的SKU
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemPriceUpdateRequest.UpdateSkuPriceDomain.Price">
            <summary>
            属于这个sku的商品的价格 取值范围:0-100000000;精确到2位小数;单位:元。如:200.07，表示:200元7分。
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemPriceUpdateRequest.UpdateSkuPriceDomain.Properties">
            <summary>
            Sku属性串。格式:pid:vid;pid:vid,如: 1627207:3232483;1630696:3284570,表示机身颜色:军绿色;手机套餐:一电一充，用于指定被修改价格的SKU
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemPriceUpdateRequest.UpdateSkuPriceDomain.SkuId">
            <summary>
            SkuID，用于指定被修改价格的SKU
            </summary>
        </member>
        <member name="T:Top.Api.Request.TmallItemPriceUpdateRequest.UpdateItemPriceOptionDomain">
            <summary>
            UpdateItemPriceOptionDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemPriceUpdateRequest.UpdateItemPriceOptionDomain.CurrencyType">
            <summary>
            目标币种，非必填，仅支持天猫国际官网同购商家将外币价格修改成人民币价格时使用
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemPriceUpdateRequest.UpdateItemPriceOptionDomain.IgnoreFakeCredit">
            <summary>
            是否忽略涉嫌炒信警告信息
            </summary>
        </member>
        <member name="T:Top.Api.Request.UserrecommendItemsGetRequest">
            <summary>
            TOP API: taobao.userrecommend.items.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.UserrecommendItemsGetRequest.Count">
            <summary>
            请求个数，建议取20个
            </summary>
        </member>
        <member name="P:Top.Api.Request.UserrecommendItemsGetRequest.Ext">
            <summary>
            额外参数
            </summary>
        </member>
        <member name="P:Top.Api.Request.UserrecommendItemsGetRequest.RecommendType">
            <summary>
            请求类型，1：用户购买意图。其他值当非法值处理
            </summary>
        </member>
        <member name="T:Top.Api.Request.FuwuScoresGetRequest">
            <summary>
            TOP API: taobao.fuwu.scores.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.FuwuScoresGetRequest.CurrentPage">
            <summary>
            当前页
            </summary>
        </member>
        <member name="P:Top.Api.Request.FuwuScoresGetRequest.Date">
            <summary>
            评价日期，查询某一天的评价
            </summary>
        </member>
        <member name="P:Top.Api.Request.FuwuScoresGetRequest.PageSize">
            <summary>
            每页获取条数。默认值40，最小值1，最大值100。
            </summary>
        </member>
        <member name="T:Top.Api.Request.ShopRemainshowcaseGetRequest">
            <summary>
            TOP API: taobao.shop.remainshowcase.get
            </summary>
        </member>
        <member name="T:Top.Api.Request.LogisticsDummySendRequest">
            <summary>
            TOP API: taobao.logistics.dummy.send
            </summary>
        </member>
        <!-- 对于成员“P:Top.Api.Request.LogisticsDummySendRequest.Feature”忽略有格式错误的 XML 注释 -->
        <member name="P:Top.Api.Request.LogisticsDummySendRequest.SellerIp">
            <summary>
            商家的IP地址
            </summary>
        </member>
        <member name="P:Top.Api.Request.LogisticsDummySendRequest.Tid">
            <summary>
            淘宝交易ID
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaNonsearchAdgroupplacesDeleteRequest">
            <summary>
            TOP API: taobao.simba.nonsearch.adgroupplaces.delete
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaNonsearchAdgroupplacesDeleteRequest.AdgroupPlacesJson">
            <summary>
            推广组id，投放位置id  json数组字符串，数组个数最多200个。其中json数组中的key必须和对应实体AdGroupPlace中的属性字段保持一致，否则对应的实体对象属性获取不到相应的值
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaNonsearchAdgroupplacesDeleteRequest.CampaignId">
            <summary>
            推广计划ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaNonsearchAdgroupplacesDeleteRequest.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaCreativesChangedGetRequest">
            <summary>
            TOP API: taobao.simba.creatives.changed.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaCreativesChangedGetRequest.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaCreativesChangedGetRequest.PageNo">
            <summary>
            返回的第几页数据，默认为1
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaCreativesChangedGetRequest.PageSize">
            <summary>
            返回的每页数据量大小,默认200最大1000
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaCreativesChangedGetRequest.StartTime">
            <summary>
            得到此时间点之后的数据，不能大于一个月
            </summary>
        </member>
        <member name="T:Top.Api.Request.PictureIsreferencedGetRequest">
            <summary>
            TOP API: taobao.picture.isreferenced.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.PictureIsreferencedGetRequest.PictureId">
            <summary>
            图片id
            </summary>
        </member>
        <member name="T:Top.Api.Request.ItemPriceUpdateRequest">
            <summary>
            TOP API: taobao.item.price.update
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemPriceUpdateRequest.ApproveStatus">
            <summary>
            商品上传后的状态。可选值:onsale（出售中）,instock（库中），如果同时更新商品状态为出售中及list_time为将来的时间，则商品还是处于定时上架的状态, 此时item.is_timing为true
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemPriceUpdateRequest.AuctionPoint">
            <summary>
            商品的积分返点比例。如：5 表示返点比例0.5%. 注意：返点比例必须是>0的整数，而且最大是90,即为9%.B商家在发布非虚拟商品时，返点必须是 5的倍数，即0.5%的倍数。其它是1的倍数，即0.1%的倍数。无名良品商家发布商品时，复用该字段记录积分宝返点比例，返点必须是对应类目的返点步长的整数倍，默认是5，即0.5%。注意此时该字段值依旧必须是>0的整数，注意此时该字段值依旧必须是>0的整数，最高值不超过500，即50%
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemPriceUpdateRequest.AutoFill">
            <summary>
            代充商品类型。只有少数类目下的商品可以标记上此字段，具体哪些类目可以上传可以通过taobao.itemcat.features.get获得。在代充商品的类目下，不传表示不标记商品类型（交易搜索中就不能通过标记搜到相关的交易了）。可选类型：   no_mark(不做类型标记)   time_card(点卡软件代充)   fee_card(话费软件代充)
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemPriceUpdateRequest.AutoRepost">
            <summary>
            自动重发。可选值:true,false;
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemPriceUpdateRequest.Cid">
            <summary>
            叶子类目id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemPriceUpdateRequest.CodPostageId">
            <summary>
            货到付款运费模板ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemPriceUpdateRequest.Desc">
            <summary>
            商品描述. 字数要大于5个字符，小于25000个字符 ，受违禁词控制
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemPriceUpdateRequest.EmsFee">
            <summary>
            ems费用。取值范围:0.01-999.00;精确到2位小数;单位:元。如:25.07，表示:25元7分
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemPriceUpdateRequest.ExpressFee">
            <summary>
            快递费用。取值范围:0.01-999.00;精确到2位小数;单位:元。如:15.07，表示:15元7分
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemPriceUpdateRequest.FreightPayer">
            <summary>
            运费承担方式。运费承担方式。可选值:seller（卖家承担）,buyer(买家承担);
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemPriceUpdateRequest.HasDiscount">
            <summary>
            支持会员打折。可选值:true,false;
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemPriceUpdateRequest.HasInvoice">
            <summary>
            是否有发票。可选值:true,false (商城卖家此字段必须为true)
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemPriceUpdateRequest.HasShowcase">
            <summary>
            橱窗推荐。可选值:true,false;
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemPriceUpdateRequest.HasWarranty">
            <summary>
            是否有保修。可选值:true,false;
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemPriceUpdateRequest.Ignorewarning">
            <summary>
            忽略警告提示.
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemPriceUpdateRequest.Image">
            <summary>
            商品图片。类型:JPG,GIF;最大长度:500k
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemPriceUpdateRequest.Increment">
            <summary>
            加价幅度 如果为0，代表系统代理幅度
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemPriceUpdateRequest.InputPids">
            <summary>
            用户自行输入的类目属性ID串，结构："pid1,pid2,pid3"，如："20000"（表示品牌） 注：通常一个类目下用户可输入的关键属性不超过1个。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemPriceUpdateRequest.InputStr">
            <summary>
            用户自行输入的子属性名和属性值，结构:"父属性值;一级子属性名;一级子属性值;二级子属性名;自定义输入值,....",如：“耐克;耐克系列;科比系列;科比系列;2K5,Nike乔丹鞋;乔丹系列;乔丹鞋系列;乔丹鞋系列;json5”，多个自定义属性用','分割，input_str需要与input_pids一一对应，注：通常一个类目下用户可输入的关键属性不超过1个。所有属性别名加起来不能超过3999字节。此处不可以使用“其他”、“其它”和“其她”这三个词。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemPriceUpdateRequest.Is3D">
            <summary>
            是否是3D
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemPriceUpdateRequest.IsEx">
            <summary>
            是否在外店显示
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemPriceUpdateRequest.IsLightningConsignment">
            <summary>
            实物闪电发货。注意：在售的闪电发货产品不允许取消闪电发货，需要先下架商品才能取消闪电发货标记
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemPriceUpdateRequest.IsReplaceSku">
            <summary>
            是否替换sku
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemPriceUpdateRequest.IsTaobao">
            <summary>
            是否在淘宝上显示
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemPriceUpdateRequest.IsXinpin">
            <summary>
            商品是否为新品。只有在当前类目开通新品,并且当前用户拥有该类目下发布新品权限时才能设置is_xinpin为true，否则设置true后会返回错误码:isv.invalid-permission:xinpin。同时只有一口价全新的宝贝才能设置为新品，否则会返回错误码：isv.invalid-parameter:xinpin。不设置参数就保持原有值。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemPriceUpdateRequest.Lang">
            <summary>
            商品文字的版本，繁体传入”zh_HK”，简体传入”zh_CN”
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemPriceUpdateRequest.ListTime">
            <summary>
            上架时间。不论是更新架下的商品还是出售中的商品，如果这个字段小于当前时间则直接上架商品，并且上架的时间为更新商品的时间，此时item.is_timing为false，如果大于当前时间则宝贝会下架进入定时上架的宝贝中。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemPriceUpdateRequest.LocationCity">
            <summary>
            所在地城市。如杭州 具体可以下载http://dl.open.taobao.com/sdk/商品城市列表.rar 取到
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemPriceUpdateRequest.LocationState">
            <summary>
            所在地省份。如浙江 具体可以下载http://dl.open.taobao.com/sdk/商品城市列表.rar 取到
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemPriceUpdateRequest.Num">
            <summary>
            商品数量，取值范围:0-999999的整数。且需要等于Sku所有数量的和
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemPriceUpdateRequest.NumIid">
            <summary>
            商品数字ID，该参数必须
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemPriceUpdateRequest.OuterId">
            <summary>
            商家编码
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemPriceUpdateRequest.PicPath">
            <summary>
            商品主图需要关联的图片空间的相对url。这个url所对应的图片必须要属于当前用户。pic_path和image只需要传入一个,如果两个都传，默认选择pic_path
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemPriceUpdateRequest.PostFee">
            <summary>
            平邮费用。取值范围:0.01-999.00;精确到2位小数;单位:元。如:5.07，表示:5元7分, 注:post_fee,express_fee,ems_fee需一起填写
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemPriceUpdateRequest.PostageId">
            <summary>
            宝贝所属的运费模板ID。取值范围：整数且必须是该卖家的运费模板的ID（可通过taobao.postages.get获得当前会话用户的所有邮费模板）
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemPriceUpdateRequest.Price">
            <summary>
            商品价格。取值范围:0-100000000;精确到2位小数;单位:元。如:200.07，表示:200元7分。需要在正确的价格区间内。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemPriceUpdateRequest.ProductId">
            <summary>
            商品所属的产品ID(B商家发布商品需要用)
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemPriceUpdateRequest.PropertyAlias">
            <summary>
            属性值别名。如pid:vid:别名;pid1:vid1:别名1， pid:属性id vid:值id。总长度不超过512字节
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemPriceUpdateRequest.Props">
            <summary>
            商品属性列表。格式:pid:vid;pid:vid。属性的pid调用taobao.itemprops.get取得，属性值的vid用taobao.itempropvalues.get取得vid。 如果该类目下面没有属性，可以不用填写。如果有属性，必选属性必填，其他非必选属性可以选择不填写.属性不能超过35对。所有属性加起来包括分割符不能超过549字节，单个属性没有限制。 如果有属性是可输入的话，则用字段input_str填入属性的值。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemPriceUpdateRequest.SellPromise">
            <summary>
            是否承诺退换货服务!虚拟商品无须设置此项!
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemPriceUpdateRequest.SellerCids">
            <summary>
            重新关联商品与店铺类目，结构:",cid1,cid2,...,"，如果店铺类目存在二级类目，必须传入子类目cids。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemPriceUpdateRequest.Shape">
            <summary>
            宝贝形态:  1代表电子券;0或其他代表实物
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemPriceUpdateRequest.SkuOuterIds">
            <summary>
            Sku的外部id串，结构如：1234,1342,… sku_properties, sku_quantities, sku_prices, sku_outer_ids在输入数据时要一一对应，如果没有sku_outer_ids也要写上这个参数，入参是","(这个是两个sku的示列，逗号数应该是sku个数减1)；该参数最大长度是512个字节
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemPriceUpdateRequest.SkuPrices">
            <summary>
            更新的Sku的价格串，结构如：10.00,5.00,… 精确到2位小数;单位:元。如:200.07，表示:200元7分
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemPriceUpdateRequest.SkuProperties">
            <summary>
            更新的Sku的属性串，调用taobao.itemprops.get获取类目属性，如果属性是销售属性，再用taobao.itempropvalues.get取得vid。格式:pid:vid;pid:vid。该字段内的销售属性也需要在props字段填写 。如果更新时有对Sku进行操作，则Sku的properties一定要传入。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemPriceUpdateRequest.SkuQuantities">
            <summary>
            更新的Sku的数量串，结构如：num1,num2,num3 如:2,3,4
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemPriceUpdateRequest.StuffStatus">
            <summary>
            商品新旧程度。可选值:new（全新）,unused（闲置）,second（二手）。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemPriceUpdateRequest.SubStock">
            <summary>
            商品是否支持拍下减库存:1支持;2取消支持(付款减库存);0(默认)不更改 集市卖家默认拍下减库存; 商城卖家默认付款减库存
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemPriceUpdateRequest.Title">
            <summary>
            宝贝标题. 不能超过60字符,受违禁词控制
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemPriceUpdateRequest.ValidThru">
            <summary>
            有效期。可选值:7,14;单位:天;
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemPriceUpdateRequest.Weight">
            <summary>
            商品的重量(商超卖家专用字段)
            </summary>
        </member>
        <member name="T:Top.Api.Request.ItemBarcodeUpdateRequest">
            <summary>
            TOP API: taobao.item.barcode.update
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemBarcodeUpdateRequest.Isforce">
            <summary>
            是否强制保存商品条码。  true：强制保存  false ：需要执行条码库校验
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemBarcodeUpdateRequest.ItemBarcode">
            <summary>
            商品条形码，如果不用更新，可选择不填
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemBarcodeUpdateRequest.ItemId">
            <summary>
            被更新商品的ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemBarcodeUpdateRequest.SkuBarcodes">
            <summary>
            SKU维度的条形码，和sku_ids字段一一对应，中间以英文逗号分隔
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemBarcodeUpdateRequest.SkuIds">
            <summary>
            被更新SKU的ID列表，中间以英文逗号进行分隔。如果没有SKU或者不需要更新SKU的条形码，不需要设置
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemBarcodeUpdateRequest.Src">
            <summary>
            访问来源，这字段提供给千牛扫码枪用，  其他调用方，不需要填写
            </summary>
        </member>
        <member name="T:Top.Api.Request.ShopGetRequest">
            <summary>
            TOP API: taobao.shop.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.ShopGetRequest.Fields">
            <summary>
            需返回的字段列表。可选值：Shop 结构中的所有字段；多个字段之间用逗号(,)分隔
            </summary>
        </member>
        <member name="P:Top.Api.Request.ShopGetRequest.Nick">
            <summary>
            卖家昵称
            </summary>
        </member>
        <member name="T:Top.Api.Request.RefundsReceiveGetRequest">
            <summary>
            TOP API: taobao.refunds.receive.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.RefundsReceiveGetRequest.BuyerNick">
            <summary>
            买家昵称
            </summary>
        </member>
        <member name="P:Top.Api.Request.RefundsReceiveGetRequest.EndModified">
            <summary>
            查询修改时间结束。格式: yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="P:Top.Api.Request.RefundsReceiveGetRequest.Fields">
            <summary>
            需要返回的字段。目前支持有：refund_id, tid, title, buyer_nick, seller_nick, total_fee, status, created, refund_fee, oid, good_status, company_name, sid, payment, reason, desc, has_good_return, modified, order_status,refund_phase
            </summary>
        </member>
        <member name="P:Top.Api.Request.RefundsReceiveGetRequest.PageNo">
            <summary>
            页码。取值范围:大于零的整数; 默认值:1
            </summary>
        </member>
        <member name="P:Top.Api.Request.RefundsReceiveGetRequest.PageSize">
            <summary>
            每页条数。取值范围:大于零的整数; 默认值:40;最大值:100
            </summary>
        </member>
        <member name="P:Top.Api.Request.RefundsReceiveGetRequest.StartModified">
            <summary>
            查询修改时间开始。格式: yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="P:Top.Api.Request.RefundsReceiveGetRequest.Status">
            <summary>
            退款状态，默认查询所有退款状态的数据，除了默认值外每次只能查询一种状态。WAIT_SELLER_AGREE(买家已经申请退款，等待卖家同意) WAIT_BUYER_RETURN_GOODS(卖家已经同意退款，等待买家退货) WAIT_SELLER_CONFIRM_GOODS(买家已经退货，等待卖家确认收货) SELLER_REFUSE_BUYER(卖家拒绝退款) CLOSED(退款关闭) SUCCESS(退款成功)
            </summary>
        </member>
        <member name="P:Top.Api.Request.RefundsReceiveGetRequest.Type">
            <summary>
            交易类型列表，一次查询多种类型可用半角逗号分隔，默认同时查询guarantee_trade, auto_delivery这两种类型的数据，<a href="http://open.taobao.com/doc/detail.htm?id=102855" target="_blank">查看可选值</a>
            </summary>
        </member>
        <member name="P:Top.Api.Request.RefundsReceiveGetRequest.UseHasNext">
            <summary>
            是否启用has_next的分页方式，如果指定true,则返回的结果中不包含总记录数，但是会新增一个是否存在下一页的的字段，通过此种方式获取增量退款，接口调用成功率在原有的基础上有所提升。
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaRptAdgroupcreativeeffectGetRequest">
            <summary>
            TOP API: taobao.simba.rpt.adgroupcreativeeffect.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptAdgroupcreativeeffectGetRequest.AdgroupId">
            <summary>
            推广组id
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptAdgroupcreativeeffectGetRequest.CampaignId">
            <summary>
            查询推广计划id
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptAdgroupcreativeeffectGetRequest.EndTime">
            <summary>
            结束日期，格式yyyy-mm-dd
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptAdgroupcreativeeffectGetRequest.Nick">
            <summary>
            昵称
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptAdgroupcreativeeffectGetRequest.PageNo">
            <summary>
            页码
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptAdgroupcreativeeffectGetRequest.PageSize">
            <summary>
            每页大小
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptAdgroupcreativeeffectGetRequest.SearchType">
            <summary>
            报表类型（搜索：SEARCH,类目出价：CAT, 定向投放：NOSEARCH汇总：SUMMARY）SUMMARY必须单选，其他值可多选例如：SEARCH,CAT
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptAdgroupcreativeeffectGetRequest.Source">
            <summary>
            数据来源（PC站内：1，PC站外：2，无线站内：4，无线站外 : 5，汇总：SUMMARY）SUMMARY必须单选，其他值可多选例如1,2
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptAdgroupcreativeeffectGetRequest.StartTime">
            <summary>
            开始日期，格式yyyy-mm-dd
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptAdgroupcreativeeffectGetRequest.SubwayToken">
            <summary>
            权限验证信息
            </summary>
        </member>
        <member name="T:Top.Api.Request.TmallProductSpecPicUploadRequest">
            <summary>
            TOP API: tmall.product.spec.pic.upload
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallProductSpecPicUploadRequest.CertifyPic">
            <summary>
            上传的认证图片文件
            </summary>
        </member>
        <!-- 对于成员“P:Top.Api.Request.TmallProductSpecPicUploadRequest.CertifyType”忽略有格式错误的 XML 注释 -->
        <member name="T:Top.Api.Request.ItemGetRequest">
            <summary>
            TOP API: taobao.item.get
            </summary>
        </member>
        <!-- 对于成员“P:Top.Api.Request.ItemGetRequest.Fields”忽略有格式错误的 XML 注释 -->
        <member name="P:Top.Api.Request.ItemGetRequest.NumIid">
            <summary>
            商品数字ID
            </summary>
        </member>
        <member name="T:Top.Api.Request.LogisticsTraceSearchRequest">
            <summary>
            TOP API: taobao.logistics.trace.search
            </summary>
        </member>
        <member name="P:Top.Api.Request.LogisticsTraceSearchRequest.IsSplit">
            <summary>
            表明是否是拆单，默认值0，1表示拆单
            </summary>
        </member>
        <member name="P:Top.Api.Request.LogisticsTraceSearchRequest.SellerNick">
            <summary>
            卖家昵称
            </summary>
        </member>
        <member name="P:Top.Api.Request.LogisticsTraceSearchRequest.SubTid">
            <summary>
            拆单子订单列表，当is_split=1时，需要传人；对应的数据是：子订单号的列表。
            </summary>
        </member>
        <member name="P:Top.Api.Request.LogisticsTraceSearchRequest.Tid">
            <summary>
            淘宝交易号，请勿传非淘宝交易号
            </summary>
        </member>
        <member name="T:Top.Api.Domain.KfcSearchResult">
            <summary>
            KfcSearchResult Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.KfcSearchResult.Content">
            <summary>
            过滤后的文本：  当匹配到B等级的词时，文本中的关键词被替换为*号，content即为关键词替换后的文本；  其他情况，content始终为null
            </summary>
        </member>
        <member name="P:Top.Api.Domain.KfcSearchResult.Level">
            <summary>
            匹配到的关键词的等级，值为null，或为A、B、C、D。  当匹配不到关键词时，值为null，否则值为A、B、C、D中的一个。  A、B、C、D等级按严重程度从高至低排列。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.KfcSearchResult.Matched">
            <summary>
            是否匹配到关键词,匹配到则为true.
            </summary>
        </member>
        <member name="T:Top.Api.Domain.ADGroup">
            <summary>
            ADGroup Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ADGroup.AdgroupId">
            <summary>
            推广组id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ADGroup.CampaignId">
            <summary>
            推广计划Id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ADGroup.CategoryIds">
            <summary>
            商品类目id，从根类目到子类目，用空格分割
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ADGroup.CreateTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ADGroup.DefaultPrice">
            <summary>
            默认出价，单位为分，不能小于5
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ADGroup.IsNonsearchDefaultPrice">
            <summary>
            非搜索是否使用默认出价，false-不用；true-使用；默认为true;
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ADGroup.ModifiedTime">
            <summary>
            最后修改时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ADGroup.Nick">
            <summary>
            推广组主人昵称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ADGroup.NonsearchMaxPrice">
            <summary>
            非搜索出价，单位为分，不能小于5
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ADGroup.NonsearchStatus">
            <summary>
            通投状态,1：开启；0：暂停；默认为1
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ADGroup.NumIid">
            <summary>
            商品数字id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ADGroup.OfflineType">
            <summary>
            online-上线；audit_offline-审核下线；crm_offline-CRM下线；默认为online
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ADGroup.OnlineStatus">
            <summary>
            用户设置的上下线状态，offline-下线(暂停竞价)；online-上线；默认为online
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ADGroup.Reason">
            <summary>
            审核下线原因
            </summary>
        </member>
        <member name="T:Top.Api.Domain.BrandCatControl">
            <summary>
            BrandCatControl Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.BrandCatControl.BrandId">
            <summary>
            被管控的品牌的ID号码
            </summary>
        </member>
        <member name="P:Top.Api.Domain.BrandCatControl.BrandName">
            <summary>
            被管控的品牌名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.BrandCatControl.CatId">
            <summary>
            被管控的类目的ID号
            </summary>
        </member>
        <member name="P:Top.Api.Domain.BrandCatControl.CatName">
            <summary>
            被管控的类目的ID号
            </summary>
        </member>
        <member name="P:Top.Api.Domain.BrandCatControl.CertifiedData">
            <summary>
            以;隔开多个认证资料。:隔开资料ID与内容。如？1:产品包装图片;2:完整产品资质
            </summary>
        </member>
        <member name="T:Top.Api.Domain.Role">
            <summary>
            Role Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Role.CreateTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Role.Description">
            <summary>
            角色描述
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Role.ModifiedTime">
            <summary>
            修改时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Role.Permissions">
            <summary>
            所拥有权限
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Role.RoleId">
            <summary>
            角色id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Role.RoleName">
            <summary>
            角色名
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Role.SellerId">
            <summary>
            卖家Id
            </summary>
        </member>
        <member name="T:Top.Api.Domain.Qscore">
            <summary>
            Qscore Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Qscore.CatmatchQscore">
            <summary>
            类目出价质量得分
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Qscore.KeywordQscoreList">
            <summary>
            词质量得分列表
            </summary>
        </member>
        <member name="T:Top.Api.Domain.SubAccountInfo">
            <summary>
            SubAccountInfo Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubAccountInfo.SubDispatchStatus">
            <summary>
            子账号是否参与分流 true:参与分流 false:未参与分流
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubAccountInfo.SubId">
            <summary>
            子账号Id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubAccountInfo.SubNick">
            <summary>
            子账号用户名
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubAccountInfo.SubOwedStatus">
            <summary>
            子账号是否已欠费 true:已欠费 false:未欠费
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubAccountInfo.SubStatus">
            <summary>
            子账号当前状态：1正常，2卖家停用，3处罚冻结
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubAccountInfo.UserId">
            <summary>
            主账号Id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubAccountInfo.UserNick">
            <summary>
            主账号用户名
            </summary>
        </member>
        <member name="T:Top.Api.Domain.DescModuleInfo">
            <summary>
            DescModuleInfo Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DescModuleInfo.AnchorModuleIds">
            <summary>
            代表宝贝描述中规范化打标使用到的模块id列表，以逗号分隔。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DescModuleInfo.IdsModuleIds">
            <summary>
            宝贝模块id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DescModuleInfo.Type">
            <summary>
            类型代表规范化打标的类型：人工或自动化
            </summary>
        </member>
        <member name="T:Top.Api.Domain.Sku">
            <summary>
            Sku Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Sku.Barcode">
            <summary>
            商品级别的条形码
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Sku.ChangeProp">
            <summary>
            基础色数据
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Sku.Created">
            <summary>
            sku创建日期 时间格式：yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Sku.ExtraId">
            <summary>
            扩展sku的id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Sku.GmtModified">
            <summary>
            
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Sku.Iid">
            <summary>
            sku所属商品id(注意：iid近期即将废弃，请用num_iid参数)
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Sku.Memo">
            <summary>
            扩展sku的备注信息
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Sku.Modified">
            <summary>
            sku最后修改日期 时间格式：yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Sku.NumIid">
            <summary>
            sku所属商品数字id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Sku.OuterId">
            <summary>
            商家设置的外部id。天猫和集市的卖家，需要登录才能获取到自己的商家编码，不能获取到他人的商家编码。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Sku.Price">
            <summary>
            属于这个sku的商品的价格 取值范围:0-100000000;精确到2位小数;单位:元。如:200.07，表示:200元7分。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Sku.Properties">
            <summary>
            sku的销售属性组合字符串（颜色，大小，等等，可通过类目API获取某类目下的销售属性）,格式是p1:v1;p2:v2
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Sku.PropertiesName">
            <summary>
            sku所对应的销售属性的中文名字串，格式如：pid1:vid1:pid_name1:vid_name1;pid2:vid2:pid_name2:vid_name2……
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Sku.Quantity">
            <summary>
            属于这个sku的商品的数量，
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Sku.SkuDeliveryTime">
            <summary>
            sku级别发货时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Sku.SkuId">
            <summary>
            sku的id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Sku.SkuSpecId">
            <summary>
            表示SKu上的产品规格信息
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Sku.Status">
            <summary>
            sku状态。 normal:正常 ；delete:删除
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Sku.WithHoldQuantity">
            <summary>
            商品在付款减库存的状态下，该sku上未付款的订单数量
            </summary>
        </member>
        <member name="T:DingTalk.Api.DefaultDingTalkClient">
            <summary>
            基于REST的TOP客户端。
            </summary>
        </member>
        <member name="T:DingTalk.Api.IDingTalkClient">
            <summary>
            TOP客户端。
            </summary>
        </member>
        <member name="M:DingTalk.Api.IDingTalkClient.Execute``1(DingTalk.Api.IDingTalkRequest{``0})">
            <summary>
            执行TOP公开API请求。
            </summary>
            <typeparam name="T">领域对象</typeparam>
            <param name="request">具体的TOP API请求</param>
            <returns>领域对象</returns>
        </member>
        <member name="M:DingTalk.Api.IDingTalkClient.Execute``1(DingTalk.Api.IDingTalkRequest{``0},System.String)">
            <summary>
            执行TOP隐私API请求。
            </summary>
            <typeparam name="T">领域对象</typeparam>
            <param name="request">具体的TOP API请求</param>
            <param name="session">用户会话码</param>
            <returns>领域对象</returns>
        </member>
        <member name="M:DingTalk.Api.IDingTalkClient.Execute``1(DingTalk.Api.IDingTalkRequest{``0},System.String,System.DateTime)">
            <summary>
            执行TOP隐私API请求。
            </summary>
            <typeparam name="T">领域对象</typeparam>
            <param name="request">具体的TOP API请求</param>
            <param name="session">用户会话码</param>
            <param name="timestamp">请求时间戳</param>
            <returns>领域对象</returns>
        </member>
        <member name="P:Aliyun.Api.AliyunResponse.Code">
            <summary>
            错误码
            </summary>
        </member>
        <member name="P:Aliyun.Api.AliyunResponse.Message">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="P:Aliyun.Api.AliyunResponse.Body">
            <summary>
            响应原始内容
            </summary>
        </member>
        <member name="P:Aliyun.Api.AliyunResponse.IsError">
            <summary>
            响应结果是否错误
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAdvertiserAdgroupRptsDayGetResponse">
            <summary>
            ZuanshiAdvertiserAdgroupRptsDayGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRptsDayGetResponse.AdgroupOfflineRptDaysList">
            <summary>
            结果
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAdvertiserAdgroupRptsDayGetResponse.DataDomain">
            <summary>
            DataDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRptsDayGetResponse.DataDomain.AdPv">
            <summary>
            展现量
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRptsDayGetResponse.DataDomain.AdgroupId">
            <summary>
            单元id
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRptsDayGetResponse.DataDomain.AdgroupName">
            <summary>
            单元名称
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRptsDayGetResponse.DataDomain.AlipayInShopNum">
            <summary>
            成交量
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRptsDayGetResponse.DataDomain.AlipayInshopAmt">
            <summary>
            成交额
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRptsDayGetResponse.DataDomain.AvgAccessPageNum">
            <summary>
            平均访问页面数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRptsDayGetResponse.DataDomain.AvgAccessTime">
            <summary>
            平均访问时长
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRptsDayGetResponse.DataDomain.CampaignId">
            <summary>
            计划id
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRptsDayGetResponse.DataDomain.CampaignName">
            <summary>
            计划名称
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRptsDayGetResponse.DataDomain.CartNum">
            <summary>
            加购物车数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRptsDayGetResponse.DataDomain.Charge">
            <summary>
            花费
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRptsDayGetResponse.DataDomain.Click">
            <summary>
            点击率
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRptsDayGetResponse.DataDomain.Ctr">
            <summary>
            ctr
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRptsDayGetResponse.DataDomain.Cvr">
            <summary>
            cvr
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRptsDayGetResponse.DataDomain.DeepInshopUv">
            <summary>
            深度进店uv
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRptsDayGetResponse.DataDomain.DirShopColNum">
            <summary>
            店铺收藏数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRptsDayGetResponse.DataDomain.Ecpc">
            <summary>
            ecpc
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRptsDayGetResponse.DataDomain.Ecpm">
            <summary>
            ecpm
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRptsDayGetResponse.DataDomain.GmvInshopAmt">
            <summary>
            gmv成交额
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRptsDayGetResponse.DataDomain.GmvInshopNum">
            <summary>
            gmv成交量
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRptsDayGetResponse.DataDomain.InshopItemColNum">
            <summary>
            宝贝收藏数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRptsDayGetResponse.DataDomain.LogDate">
            <summary>
            日期
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRptsDayGetResponse.DataDomain.Roi">
            <summary>
            roi
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRptsDayGetResponse.DataDomain.Uv">
            <summary>
            uv
            </summary>
        </member>
        <member name="T:Top.Api.Response.WangwangClientidUnbindResponse">
            <summary>
            WangwangClientidUnbindResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.WangwangClientidUnbindResponse.Result">
            <summary>
            返回0表示成功， 其他值为错误
            </summary>
        </member>
        <member name="T:Top.Api.Response.TmcMsgSendrecordResponse">
            <summary>
            TmcMsgSendrecordResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmcMsgSendrecordResponse.TbSendList">
            <summary>
            淘宝发送时间
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmcMsgSendrecordResponse.TbSendTimes">
            <summary>
            淘宝发送测试
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmcMsgSendrecordResponse.TmcSendList">
            <summary>
            TMC发送时间
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmcMsgSendrecordResponse.TmcSendTimes">
            <summary>
            tmc发送次数
            </summary>
        </member>
        <member name="T:Top.Api.Response.TmcMessagesProduceResponse">
            <summary>
            TmcMessagesProduceResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmcMessagesProduceResponse.IsAllSuccess">
            <summary>
            是否全部成功
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmcMessagesProduceResponse.Results">
            <summary>
            发送结果，与发送时的参数顺序一致。如果is_all_success为true时，不用校验result是否成功
            </summary>
        </member>
        <member name="T:Top.Api.Response.TbkSpreadGetResponse">
            <summary>
            TbkSpreadGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkSpreadGetResponse.Results">
            <summary>
            传播形式对象列表
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkSpreadGetResponse.TotalResults">
            <summary>
            totalResults
            </summary>
        </member>
        <member name="T:Top.Api.Response.TbkSpreadGetResponse.TbkSpreadDomain">
            <summary>
            TbkSpreadDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkSpreadGetResponse.TbkSpreadDomain.Content">
            <summary>
            传播形式, 目前只支持短链接
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkSpreadGetResponse.TbkSpreadDomain.ErrMsg">
            <summary>
            调用错误信息；由于是批量接口，请重点关注每条请求返回的结果，如果非OK，则说明该结果对应的content不正常，请酌情处理;
            </summary>
        </member>
        <member name="T:Top.Api.Response.ScitemMapAddResponse">
            <summary>
            ScitemMapAddResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ScitemMapAddResponse.OuterCode">
            <summary>
            接口调用返回结果信息：商家编码
            </summary>
        </member>
        <member name="T:Top.Api.Response.RegionPriceCancleResponse">
            <summary>
            RegionPriceCancleResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.RegionPriceCancleResponse.Result">
            <summary>
            result
            </summary>
        </member>
        <member name="T:Top.Api.Response.RegionPriceCancleResponse.BaseResultDomain">
            <summary>
            BaseResultDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.RegionPriceCancleResponse.BaseResultDomain.ErrorCode">
            <summary>
            errorCode
            </summary>
        </member>
        <member name="P:Top.Api.Response.RegionPriceCancleResponse.BaseResultDomain.ErrorMsg">
            <summary>
            errorMsg
            </summary>
        </member>
        <member name="P:Top.Api.Response.RegionPriceCancleResponse.BaseResultDomain.Success">
            <summary>
            success
            </summary>
        </member>
        <member name="T:Top.Api.Response.OpenimTribeExpelResponse">
            <summary>
            OpenimTribeExpelResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.OpenimTribeExpelResponse.TribeCode">
            <summary>
            群服务code
            </summary>
        </member>
        <member name="T:Top.Api.Response.FenxiaoRefundMessageAddResponse">
            <summary>
            FenxiaoRefundMessageAddResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoRefundMessageAddResponse.IsSuccess">
            <summary>
            退款是否创建成功
            </summary>
        </member>
        <member name="T:Top.Api.Response.FenxiaoProductImageDeleteResponse">
            <summary>
            FenxiaoProductImageDeleteResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoProductImageDeleteResponse.Created">
            <summary>
            操作时间
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoProductImageDeleteResponse.Result">
            <summary>
            操作结果
            </summary>
        </member>
        <member name="T:Top.Api.Response.FenxiaoOrderMessageAddResponse">
            <summary>
            FenxiaoOrderMessageAddResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoOrderMessageAddResponse.IsSuccess">
            <summary>
            是否成功
            </summary>
        </member>
        <member name="T:Top.Api.Response.FenxiaoOrderConfirmPaidResponse">
            <summary>
            FenxiaoOrderConfirmPaidResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoOrderConfirmPaidResponse.IsSuccess">
            <summary>
            确认结果成功与否
            </summary>
        </member>
        <member name="T:Top.Api.Response.FenxiaoLoginUserGetResponse">
            <summary>
            FenxiaoLoginUserGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoLoginUserGetResponse.LoginUser">
            <summary>
            登录用户信息
            </summary>
        </member>
        <member name="T:Top.Api.Response.FenxiaoDealerRequisitionorderRemarkUpdateResponse">
            <summary>
            FenxiaoDealerRequisitionorderRemarkUpdateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoDealerRequisitionorderRemarkUpdateResponse.IsSuccess">
            <summary>
            操作是否成功
            </summary>
        </member>
        <member name="T:Top.Api.Response.FenxiaoDealerRequisitionorderCreateResponse">
            <summary>
            FenxiaoDealerRequisitionorderCreateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoDealerRequisitionorderCreateResponse.DealerOrderId">
            <summary>
            经销采购申请编号
            </summary>
        </member>
        <member name="T:Top.Api.Response.FenxiaoDealerRequisitionorderAgreeResponse">
            <summary>
            FenxiaoDealerRequisitionorderAgreeResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoDealerRequisitionorderAgreeResponse.IsSuccess">
            <summary>
            操作是否成功。true：成功；false：失败。
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiBannerCpcTargetingFindRequest">
            <summary>
            TOP API: taobao.zuanshi.banner.cpc.targeting.find
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiAdvertiserTargetRptsDayGetRequest">
            <summary>
            TOP API: taobao.zuanshi.advertiser.target.rpts.day.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserTargetRptsDayGetRequest.AdgroupId">
            <summary>
            单元id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserTargetRptsDayGetRequest.CampaignId">
            <summary>
            计划id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserTargetRptsDayGetRequest.CampaignModel">
            <summary>
            计划类型。1：全店推广；4单品推广
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserTargetRptsDayGetRequest.Effect">
            <summary>
            效果周期，取值范围：3,7,15。分别表示效果转化周期-3天/7天/15天。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserTargetRptsDayGetRequest.EffectType">
            <summary>
            效果类型。“impression”：展现效果；“click”：点击效果
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserTargetRptsDayGetRequest.EndTime">
            <summary>
            结束日期
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserTargetRptsDayGetRequest.StartTime">
            <summary>
            开始日期
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserTargetRptsDayGetRequest.TargetId">
            <summary>
            定向id
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiAdvertiserTargetAdzoneRtrptsGetRequest">
            <summary>
            TOP API: taobao.zuanshi.advertiser.target.adzone.rtrpts.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserTargetAdzoneRtrptsGetRequest.AdgroupId">
            <summary>
            单元id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserTargetAdzoneRtrptsGetRequest.AdzoneId">
            <summary>
            资源位id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserTargetAdzoneRtrptsGetRequest.CampaignId">
            <summary>
            计划id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserTargetAdzoneRtrptsGetRequest.LogDate">
            <summary>
            日期
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserTargetAdzoneRtrptsGetRequest.TargetId">
            <summary>
            定向id
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiAdvertiserCreativeRtrptsTotalGetRequest">
            <summary>
            TOP API: taobao.zuanshi.advertiser.creative.rtrpts.total.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserCreativeRtrptsTotalGetRequest.AdgroupId">
            <summary>
            推广单元id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserCreativeRtrptsTotalGetRequest.CampaignId">
            <summary>
            计划id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserCreativeRtrptsTotalGetRequest.CampaignModel">
            <summary>
            计划类型。1：全店推广，4：单品推广。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserCreativeRtrptsTotalGetRequest.CreativeId">
            <summary>
            创意id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserCreativeRtrptsTotalGetRequest.LogDate">
            <summary>
            日期
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserCreativeRtrptsTotalGetRequest.Offset">
            <summary>
            偏移量
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserCreativeRtrptsTotalGetRequest.PageSize">
            <summary>
            每页记录数
            </summary>
        </member>
        <member name="T:Top.Api.Request.TbkUatmEventItemGetRequest">
            <summary>
            TOP API: taobao.tbk.uatm.event.item.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkUatmEventItemGetRequest.AdzoneId">
            <summary>
            推广位id，需要在淘宝联盟后台创建；且属于appkey对应的备案媒体id（siteid），如何获取adzoneid，请参考：http://club.alimama.com/read-htm-tid-6333967.html?spm=0.0.0.0.msZnx5
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkUatmEventItemGetRequest.EventId">
            <summary>
            招商活动id
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkUatmEventItemGetRequest.Fields">
            <summary>
            需要输出则字段列表，逗号分隔
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkUatmEventItemGetRequest.PageNo">
            <summary>
            第几页，默认：１，从1开始计数
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkUatmEventItemGetRequest.PageSize">
            <summary>
            页大小，默认20，1~100
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkUatmEventItemGetRequest.Platform">
            <summary>
            链接形式：1：PC，2：无线，默认：１
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkUatmEventItemGetRequest.Unid">
            <summary>
            自定义输入串，英文和数字组成，长度不能大于12个字符，区分不同的推广渠道
            </summary>
        </member>
        <member name="T:Top.Api.Request.OpenimTribelogsGetRequest">
            <summary>
            TOP API: taobao.openim.tribelogs.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimTribelogsGetRequest.Begin">
            <summary>
            查询起始时间，UTC秒数。必须在一个月内。
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimTribelogsGetRequest.Count">
            <summary>
            查询条数
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimTribelogsGetRequest.End">
            <summary>
            查询结束时间，UTC秒数。必须大于起始时间并小于当前时间
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimTribelogsGetRequest.Next">
            <summary>
            迭代key
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimTribelogsGetRequest.TribeId">
            <summary>
            群号
            </summary>
        </member>
        <member name="T:Top.Api.Request.JushitaJmsGroupAddRequest">
            <summary>
            TOP API: taobao.jushita.jms.group.add
            </summary>
        </member>
        <member name="P:Top.Api.Request.JushitaJmsGroupAddRequest.GroupName">
            <summary>
            分组名称，同一个应用下需要保证唯一性，最长32个字符。添加分组后，消息通道会为用户的消息分配独立分组，但之前的消息还是存储于默认分组中。不能以default开头，default开头为系统默认组。
            </summary>
        </member>
        <member name="P:Top.Api.Request.JushitaJmsGroupAddRequest.UserNicks">
            <summary>
            用户昵称列表，以半角逗号分隔，支持子账号，支持增量添加用户
            </summary>
        </member>
        <member name="P:Top.Api.Request.JushitaJmsGroupAddRequest.UserPlatform">
            <summary>
            用户所属于的平台类型，tbUIC:淘宝用户; icbu: icbu用户
            </summary>
        </member>
        <member name="T:Top.Api.Request.InventoryStoreManageRequest">
            <summary>
            TOP API: taobao.inventory.store.manage
            </summary>
        </member>
        <member name="P:Top.Api.Request.InventoryStoreManageRequest.Address">
            <summary>
            仓库的物理地址，可更新
            </summary>
        </member>
        <member name="P:Top.Api.Request.InventoryStoreManageRequest.AddressAreaName">
            <summary>
            仓库区域名，可更新
            </summary>
        </member>
        <member name="P:Top.Api.Request.InventoryStoreManageRequest.AliasName">
            <summary>
            仓库简称，可更新
            </summary>
        </member>
        <member name="P:Top.Api.Request.InventoryStoreManageRequest.Contact">
            <summary>
            联系人，可更新
            </summary>
        </member>
        <member name="P:Top.Api.Request.InventoryStoreManageRequest.OperateType">
            <summary>
            参数定义，ADD：新建; UPDATE：更新
            </summary>
        </member>
        <member name="P:Top.Api.Request.InventoryStoreManageRequest.Phone">
            <summary>
            联系电话，可更新
            </summary>
        </member>
        <member name="P:Top.Api.Request.InventoryStoreManageRequest.Postcode">
            <summary>
            邮编，可更新
            </summary>
        </member>
        <member name="P:Top.Api.Request.InventoryStoreManageRequest.StoreCode">
            <summary>
            商家的仓库编码，不允许重复，不允许更新
            </summary>
        </member>
        <member name="P:Top.Api.Request.InventoryStoreManageRequest.StoreName">
            <summary>
            商家的仓库名称，可更新
            </summary>
        </member>
        <member name="P:Top.Api.Request.InventoryStoreManageRequest.StoreType">
            <summary>
            仓库类型，可更新。目前只支持自有仓，TYPE_OWN：自有物理仓
            </summary>
        </member>
        <member name="T:Top.Api.Request.FenxiaoRequisitionsGetRequest">
            <summary>
            TOP API: taobao.fenxiao.requisitions.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoRequisitionsGetRequest.ApplyEnd">
            <summary>
            申请结束时间yyyy-MM-dd
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoRequisitionsGetRequest.ApplyStart">
            <summary>
            申请开始时间yyyy-MM-dd
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoRequisitionsGetRequest.PageNo">
            <summary>
            页码（大于0的整数，默认1）
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoRequisitionsGetRequest.PageSize">
            <summary>
            每页记录数（默认20，最大50）
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoRequisitionsGetRequest.Status">
            <summary>
            申请状态（1-申请中、2-成功、3-被退回、4-已撤消、5-过期）
            </summary>
        </member>
        <member name="T:Top.Api.Request.FenxiaoRefundMessageAddRequest">
            <summary>
            TOP API: taobao.fenxiao.refund.message.add
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoRefundMessageAddRequest.Image">
            <summary>
            留言凭证
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoRefundMessageAddRequest.MessageContent">
            <summary>
            留言内容
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoRefundMessageAddRequest.SubOrderId">
            <summary>
            发生退款的子采购单id
            </summary>
        </member>
        <member name="T:Top.Api.Request.DmpCrowdsFindRequest">
            <summary>
            TOP API: taobao.dmp.crowds.find
            </summary>
        </member>
        <member name="P:Top.Api.Request.DmpCrowdsFindRequest.CrowdQueryDTO">
            <summary>
            人群查询条件
            </summary>
        </member>
        <member name="T:Top.Api.Request.DmpCrowdsFindRequest.CrowdQueryDTODomain">
            <summary>
            CrowdQueryDTODomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Request.DmpCrowdsFindRequest.CrowdQueryDTODomain.CrowdName">
            <summary>
            人群名称模糊查询
            </summary>
        </member>
        <member name="P:Top.Api.Request.DmpCrowdsFindRequest.CrowdQueryDTODomain.QueryStatus">
            <summary>
            3-未同步钻展渠道人群;2-过期失效人群,11-钻展同步中,12-钻展已同步,10-钻展同步中和已同步人群
            </summary>
        </member>
        <member name="T:Top.Api.Request.AplatformWeakgetRequest">
            <summary>
            TOP API: taobao.aplatform.weakget
            </summary>
        </member>
        <member name="P:Top.Api.Request.AplatformWeakgetRequest.ParamDto">
            <summary>
            业务自定义参数
            </summary>
        </member>
        <member name="P:Top.Api.Request.AplatformWeakgetRequest.ParamRichClientInfo">
            <summary>
            客户端自带参数
            </summary>
        </member>
        <member name="T:Top.Api.Request.AplatformWeakgetRequest.RichClientInfoDomain">
            <summary>
            RichClientInfoDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Request.AplatformWeakgetRequest.RichClientInfoDomain.Appkey">
            <summary>
            appkey
            </summary>
        </member>
        <member name="P:Top.Api.Request.AplatformWeakgetRequest.RichClientInfoDomain.BuyerId">
            <summary>
            用户id
            </summary>
        </member>
        <member name="P:Top.Api.Request.AplatformWeakgetRequest.RichClientInfoDomain.BuyerNick">
            <summary>
            用户昵称
            </summary>
        </member>
        <member name="P:Top.Api.Request.AplatformWeakgetRequest.RichClientInfoDomain.DeviceId">
            <summary>
            设备号
            </summary>
        </member>
        <member name="P:Top.Api.Request.AplatformWeakgetRequest.RichClientInfoDomain.Ip">
            <summary>
            来源ip
            </summary>
        </member>
        <member name="P:Top.Api.Request.AplatformWeakgetRequest.RichClientInfoDomain.Lat">
            <summary>
            纬度
            </summary>
        </member>
        <member name="P:Top.Api.Request.AplatformWeakgetRequest.RichClientInfoDomain.Lng">
            <summary>
            经度
            </summary>
        </member>
        <member name="T:Top.Api.Request.AplatformWeakgetRequest.ParamDtoDomain">
            <summary>
            ParamDtoDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Request.AplatformWeakgetRequest.ParamDtoDomain.BizParam">
            <summary>
            业务参数，json格式字符串
            </summary>
        </member>
        <member name="P:Top.Api.Request.AplatformWeakgetRequest.ParamDtoDomain.BizType">
            <summary>
            区分业务类型及方法
            </summary>
        </member>
        <member name="P:Top.Api.Request.AplatformWeakgetRequest.ParamDtoDomain.ExtraParam">
            <summary>
            扩展参数
            </summary>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Zip.UseZip64">
            <summary>
            Determines how entries are tested to see if they should use Zip64 extensions or not.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.UseZip64.Off">
            <summary>
            Zip64 will not be forced on entries during processing.
            </summary>
            <remarks>An entry can have this overridden if required <see cref="M:ICSharpCode.SharpZipLib.Zip.ZipEntry.ForceZip64"></see></remarks>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.UseZip64.On">
            <summary>
            Zip64 should always be used.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.UseZip64.Dynamic">
            <summary>
            #ZipLib will determine use based on entry values when added to archive.
            </summary>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Zip.CompressionMethod">
            <summary>
            The kind of compression used for an entry in an archive
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.CompressionMethod.Stored">
            <summary>
            A direct copy of the file contents is held in the archive
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.CompressionMethod.Deflated">
            <summary>
            Common Zip compression method using a sliding dictionary 
            of up to 32KB and secondary compression from Huffman/Shannon-Fano trees
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.CompressionMethod.Deflate64">
            <summary>
            An extension to deflate with a 64KB window. Not supported by #Zip currently
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.CompressionMethod.BZip2">
            <summary>
            BZip2 compression. Not supported by #Zip.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.CompressionMethod.WinZipAES">
            <summary>
            WinZip special for AES encryption, Now supported by #Zip.
            </summary>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Zip.EncryptionAlgorithm">
            <summary>
            Identifies the encryption algorithm used for an entry
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.EncryptionAlgorithm.None">
            <summary>
            No encryption has been used.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.EncryptionAlgorithm.PkzipClassic">
            <summary>
            Encrypted using PKZIP 2.0 or 'classic' encryption.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.EncryptionAlgorithm.Des">
            <summary>
            DES encryption has been used.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.EncryptionAlgorithm.RC2">
            <summary>
            RCS encryption has been used for encryption.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.EncryptionAlgorithm.TripleDes168">
            <summary>
            Triple DES encryption with 168 bit keys has been used for this entry.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.EncryptionAlgorithm.TripleDes112">
            <summary>
            Triple DES with 112 bit keys has been used for this entry.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.EncryptionAlgorithm.Aes128">
            <summary>
            AES 128 has been used for encryption.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.EncryptionAlgorithm.Aes192">
            <summary>
            AES 192 has been used for encryption.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.EncryptionAlgorithm.Aes256">
            <summary>
            AES 256 has been used for encryption.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.EncryptionAlgorithm.RC2Corrected">
            <summary>
            RC2 corrected has been used for encryption.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.EncryptionAlgorithm.Blowfish">
            <summary>
            Blowfish has been used for encryption.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.EncryptionAlgorithm.Twofish">
            <summary>
            Twofish has been used for encryption.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.EncryptionAlgorithm.RC4">
            <summary>
            RC4 has been used for encryption.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.EncryptionAlgorithm.Unknown">
            <summary>
            An unknown algorithm has been used for encryption.
            </summary>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Zip.GeneralBitFlags">
            <summary>
            Defines the contents of the general bit flags field for an archive entry.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.GeneralBitFlags.Encrypted">
            <summary>
            Bit 0 if set indicates that the file is encrypted
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.GeneralBitFlags.Method">
            <summary>
            Bits 1 and 2 - Two bits defining the compression method (only for Method 6 Imploding and 8,9 Deflating)
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.GeneralBitFlags.Descriptor">
            <summary>
            Bit 3 if set indicates a trailing data desciptor is appended to the entry data
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.GeneralBitFlags.ReservedPKware4">
            <summary>
            Bit 4 is reserved for use with method 8 for enhanced deflation
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.GeneralBitFlags.Patched">
            <summary>
            Bit 5 if set indicates the file contains Pkzip compressed patched data.
            Requires version 2.7 or greater.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.GeneralBitFlags.StrongEncryption">
            <summary>
            Bit 6 if set indicates strong encryption has been used for this entry.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.GeneralBitFlags.Unused7">
            <summary>
            Bit 7 is currently unused
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.GeneralBitFlags.Unused8">
            <summary>
            Bit 8 is currently unused
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.GeneralBitFlags.Unused9">
            <summary>
            Bit 9 is currently unused
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.GeneralBitFlags.Unused10">
            <summary>
            Bit 10 is currently unused
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.GeneralBitFlags.UnicodeText">
            <summary>
            Bit 11 if set indicates the filename and 
            comment fields for this file must be encoded using UTF-8.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.GeneralBitFlags.EnhancedCompress">
            <summary>
            Bit 12 is documented as being reserved by PKware for enhanced compression.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.GeneralBitFlags.HeaderMasked">
            <summary>
            Bit 13 if set indicates that values in the local header are masked to hide
            their actual values, and the central directory is encrypted.
            </summary>
            <remarks>
            Used when encrypting the central directory contents.
            </remarks>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.GeneralBitFlags.ReservedPkware14">
            <summary>
            Bit 14 is documented as being reserved for use by PKware
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.GeneralBitFlags.ReservedPkware15">
            <summary>
            Bit 15 is documented as being reserved for use by PKware
            </summary>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Zip.ZipConstants">
            <summary>
            This class contains constants used for Zip format files
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.ZipConstants.VersionMadeBy">
            <summary>
            The version made by field for entries in the central header when created by this library
            </summary>
            <remarks>
            This is also the Zip version for the library when comparing against the version required to extract
            for an entry.  See <see cref="P:ICSharpCode.SharpZipLib.Zip.ZipEntry.CanDecompress"/>.
            </remarks>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.ZipConstants.VERSION_MADE_BY">
            <summary>
            The version made by field for entries in the central header when created by this library
            </summary>
            <remarks>
            This is also the Zip version for the library when comparing against the version required to extract
            for an entry.  See <see cref="P:ICSharpCode.SharpZipLib.Zip.ZipInputStream.CanDecompressEntry">ZipInputStream.CanDecompressEntry</see>.
            </remarks>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.ZipConstants.VersionStrongEncryption">
            <summary>
            The minimum version required to support strong encryption
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.ZipConstants.VERSION_STRONG_ENCRYPTION">
            <summary>
            The minimum version required to support strong encryption
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.ZipConstants.VERSION_AES">
            <summary>
            Version indicating AES encryption
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.ZipConstants.VersionZip64">
            <summary>
            The version required for Zip64 extensions (4.5 or higher)
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.ZipConstants.LocalHeaderBaseSize">
            <summary>
            Size of local entry header (excluding variable length fields at end)
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.ZipConstants.LOCHDR">
            <summary>
            Size of local entry header (excluding variable length fields at end)
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.ZipConstants.Zip64DataDescriptorSize">
            <summary>
            Size of Zip64 data descriptor
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.ZipConstants.DataDescriptorSize">
            <summary>
            Size of data descriptor
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.ZipConstants.EXTHDR">
            <summary>
            Size of data descriptor
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.ZipConstants.CentralHeaderBaseSize">
            <summary>
            Size of central header entry (excluding variable fields)
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.ZipConstants.CENHDR">
            <summary>
            Size of central header entry
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.ZipConstants.EndOfCentralRecordBaseSize">
            <summary>
            Size of end of central record (excluding variable fields)
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.ZipConstants.ENDHDR">
            <summary>
            Size of end of central record (excluding variable fields)
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.ZipConstants.CryptoHeaderSize">
            <summary>
            Size of 'classic' cryptographic header stored before any entry data
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.ZipConstants.CRYPTO_HEADER_SIZE">
            <summary>
            Size of cryptographic header stored before entry data
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.ZipConstants.LocalHeaderSignature">
            <summary>
            Signature for local entry header
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.ZipConstants.LOCSIG">
            <summary>
            Signature for local entry header
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.ZipConstants.SpanningSignature">
            <summary>
            Signature for spanning entry
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.ZipConstants.SPANNINGSIG">
            <summary>
            Signature for spanning entry
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.ZipConstants.SpanningTempSignature">
            <summary>
            Signature for temporary spanning entry
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.ZipConstants.SPANTEMPSIG">
            <summary>
            Signature for temporary spanning entry
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.ZipConstants.DataDescriptorSignature">
            <summary>
            Signature for data descriptor
            </summary>
            <remarks>
            This is only used where the length, Crc, or compressed size isnt known when the
            entry is created and the output stream doesnt support seeking.
            The local entry cannot be 'patched' with the correct values in this case
            so the values are recorded after the data prefixed by this header, as well as in the central directory.
            </remarks>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.ZipConstants.EXTSIG">
            <summary>
            Signature for data descriptor
            </summary>
            <remarks>
            This is only used where the length, Crc, or compressed size isnt known when the
            entry is created and the output stream doesnt support seeking.
            The local entry cannot be 'patched' with the correct values in this case
            so the values are recorded after the data prefixed by this header, as well as in the central directory.
            </remarks>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.ZipConstants.CENSIG">
            <summary>
            Signature for central header
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.ZipConstants.CentralHeaderSignature">
            <summary>
            Signature for central header
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.ZipConstants.Zip64CentralFileHeaderSignature">
            <summary>
            Signature for Zip64 central file header
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.ZipConstants.CENSIG64">
            <summary>
            Signature for Zip64 central file header
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.ZipConstants.Zip64CentralDirLocatorSignature">
            <summary>
            Signature for Zip64 central directory locator
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.ZipConstants.ArchiveExtraDataSignature">
            <summary>
            Signature for archive extra data signature (were headers are encrypted).
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.ZipConstants.CentralHeaderDigitalSignature">
            <summary>
            Central header digitial signature
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.ZipConstants.CENDIGITALSIG">
            <summary>
            Central header digitial signature
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.ZipConstants.EndOfCentralDirectorySignature">
            <summary>
            End of central directory record signature
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.ZipConstants.ENDSIG">
            <summary>
            End of central directory record signature
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipConstants.ConvertToString(System.Byte[],System.Int32)">
            <summary>
            Convert a portion of a byte array to a string.
            </summary>		
            <param name="data">
            Data to convert to string
            </param>
            <param name="count">
            Number of bytes to convert starting from index 0
            </param>
            <returns>
            data[0]..data[length - 1] converted to a string
            </returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipConstants.ConvertToString(System.Byte[])">
            <summary>
            Convert a byte array to string
            </summary>
            <param name="data">
            Byte array to convert
            </param>
            <returns>
            <paramref name="data">data</paramref>converted to a string
            </returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipConstants.ConvertToStringExt(System.Int32,System.Byte[],System.Int32)">
            <summary>
            Convert a byte array to string
            </summary>
            <param name="flags">The applicable general purpose bits flags</param>
            <param name="data">
            Byte array to convert
            </param>
            <param name="count">The number of bytes to convert.</param>
            <returns>
            <paramref name="data">data</paramref>converted to a string
            </returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipConstants.ConvertToStringExt(System.Int32,System.Byte[])">
            <summary>
            Convert a byte array to string
            </summary>
            <param name="data">
            Byte array to convert
            </param>
            <param name="flags">The applicable general purpose bits flags</param>
            <returns>
            <paramref name="data">data</paramref>converted to a string
            </returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipConstants.ConvertToArray(System.String)">
            <summary>
            Convert a string to a byte array
            </summary>
            <param name="str">
            String to convert to an array
            </param>
            <returns>Converted array</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipConstants.ConvertToArray(System.Int32,System.String)">
            <summary>
            Convert a string to a byte array
            </summary>
            <param name="flags">The applicable <see cref="T:ICSharpCode.SharpZipLib.Zip.GeneralBitFlags">general purpose bits flags</see></param>
            <param name="str">
            String to convert to an array
            </param>
            <returns>Converted array</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipConstants.#ctor">
            <summary>
            Initialise default instance of <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipConstants">ZipConstants</see>
            </summary>
            <remarks>
            Private to prevent instances being created.
            </remarks>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipConstants.DefaultCodePage">
            <summary>
            Default encoding used for string conversion.  0 gives the default system OEM code page.
            Dont use unicode encodings if you want to be Zip compatible!
            Using the default code page isnt the full solution neccessarily
            there are many variable factors, codepage 850 is often a good choice for
            European users, however be careful about compatability.
            </summary>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Checksums.Crc32">
             <summary>
             Generate a table for a byte-wise 32-bit CRC calculation on the polynomial:
             x^32+x^26+x^23+x^22+x^16+x^12+x^11+x^10+x^8+x^7+x^5+x^4+x^2+x+1.
            
             Polynomials over GF(2) are represented in binary, one bit per coefficient,
             with the lowest powers in the most significant bit.  Then adding polynomials
             is just exclusive-or, and multiplying a polynomial by x is a right shift by
             one.  If we call the above polynomial p, and represent a byte as the
             polynomial q, also with the lowest power in the most significant bit (so the
             byte 0xb1 is the polynomial x^7+x^3+x+1), then the CRC is (q*x^32) mod p,
             where a mod b means the remainder after dividing a by b.
            
             This calculation is done using the shift-register method of multiplying and
             taking the remainder.  The register is initialized to zero, and for each
             incoming bit, x^32 is added mod p to the register if the bit is a one (where
             x^32 mod p is p+x^32 = x^26+...+1), and the register is multiplied mod p by
             x (which is shifting right by one and adding x^32 mod p if the bit shifted
             out is a one).  We start with the highest power (least significant bit) of
             q and repeat for all eight bits of q.
            
             The table is simply the CRC of all possible eight bit values.  This is all
             the information needed to generate CRC's on data a byte at a time for all
             combinations of CRC register values and incoming bytes.
             </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Checksums.Crc32.crc">
            <summary>
            The crc data checksum so far.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Checksums.Crc32.Reset">
            <summary>
            Resets the CRC32 data checksum as if no update was ever called.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Checksums.Crc32.Update(System.Int32)">
            <summary>
            Updates the checksum with the int bval.
            </summary>
            <param name = "value">
            the byte is taken as the lower 8 bits of value
            </param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Checksums.Crc32.Update(System.Byte[])">
            <summary>
            Updates the checksum with the bytes taken from the array.
            </summary>
            <param name="buffer">
            buffer an array of bytes
            </param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Checksums.Crc32.Update(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Adds the byte array to the data checksum.
            </summary>
            <param name = "buffer">
            The buffer which contains the data
            </param>
            <param name = "offset">
            The offset in the buffer where the data starts
            </param>
            <param name = "count">
            The number of data bytes to update the CRC with.
            </param>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Checksums.Crc32.Value">
            <summary>
            Returns the CRC32 data checksum computed so far.
            </summary>
        </member>
        <member name="T:Top.Api.ITopClientStone">
            <summary>
            TOP客户端。
            </summary>
        </member>
        <member name="M:Top.Api.ITopClientStone.Execute``1(Top.Api.ITopRequest{``0},System.String,System.String)">
            <summary>
            执行TOP隐私API请求。
            </summary>
            <typeparam name="T">领域对象</typeparam>
            <param name="request">具体的TOP API请求</param>
            <param name="session">用户会话码</param>
            <returns>领域对象</returns>
        </member>
        <member name="M:Top.Api.ITopClientStone.Execute``1(Top.Api.ITopRequest{``0},System.String,System.String,System.DateTime)">
            <summary>
            执行TOP隐私API请求。
            </summary>
            <typeparam name="T">领域对象</typeparam>
            <param name="request">具体的TOP API请求</param>
            <param name="session">用户会话码</param>
            <param name="timestamp">请求时间戳</param>
            <returns>领域对象</returns>
        </member>
        <member name="T:Top.Api.Domain.ProductCat">
            <summary>
            ProductCat Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ProductCat.CostPercent">
            <summary>
            产品代销采购价
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ProductCat.CostPercentAgent">
            <summary>
            代销采购价百分比
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ProductCat.CostPercentDealer">
            <summary>
            经销采购价百分比
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ProductCat.CostPercentDealerYuan">
            <summary>
            产品经销采购价
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ProductCat.CostPercentYuan">
            <summary>
            产品代销采购价
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ProductCat.Id">
            <summary>
            产品线ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ProductCat.Name">
            <summary>
            产品线名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ProductCat.ProductNum">
            <summary>
            产品数量
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ProductCat.RetailHighPercent">
            <summary>
            最高零食价百分比
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ProductCat.RetailHighPercentYuan">
            <summary>
            产品最高零售价
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ProductCat.RetailLowPercent">
            <summary>
            最低零售价百分比
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ProductCat.RetailLowPercentYuan">
            <summary>
            产品最低零售价
            </summary>
        </member>
        <member name="T:Top.Api.Domain.NTbkItem">
            <summary>
            NTbkItem Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.NTbkItem.CatLeafName">
            <summary>
            叶子类目名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.NTbkItem.CatName">
            <summary>
            一级类目名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.NTbkItem.ClickUrl">
            <summary>
            淘客地址
            </summary>
        </member>
        <member name="P:Top.Api.Domain.NTbkItem.CommissionRate">
            <summary>
            佣金比例
            </summary>
        </member>
        <member name="P:Top.Api.Domain.NTbkItem.CouponAmount">
            <summary>
            couponAmount
            </summary>
        </member>
        <member name="P:Top.Api.Domain.NTbkItem.CouponPrice">
            <summary>
            优惠券额度
            </summary>
        </member>
        <member name="P:Top.Api.Domain.NTbkItem.CouponStartFee">
            <summary>
            优惠券使用门槛金额
            </summary>
        </member>
        <member name="P:Top.Api.Domain.NTbkItem.ItemUrl">
            <summary>
            商品地址
            </summary>
        </member>
        <member name="P:Top.Api.Domain.NTbkItem.Nick">
            <summary>
            卖家昵称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.NTbkItem.NumIid">
            <summary>
            商品ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.NTbkItem.PictUrl">
            <summary>
            商品主图
            </summary>
        </member>
        <member name="P:Top.Api.Domain.NTbkItem.Provcity">
            <summary>
            宝贝所在地
            </summary>
        </member>
        <member name="P:Top.Api.Domain.NTbkItem.ReservePrice">
            <summary>
            商品一口价格
            </summary>
        </member>
        <member name="P:Top.Api.Domain.NTbkItem.SellerId">
            <summary>
            卖家id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.NTbkItem.ShopTitle">
            <summary>
            
            </summary>
        </member>
        <member name="P:Top.Api.Domain.NTbkItem.SmallImages">
            <summary>
            商品小图列表
            </summary>
        </member>
        <member name="P:Top.Api.Domain.NTbkItem.Title">
            <summary>
            商品标题
            </summary>
        </member>
        <member name="P:Top.Api.Domain.NTbkItem.TkRate">
            <summary>
            
            </summary>
        </member>
        <member name="P:Top.Api.Domain.NTbkItem.UserType">
            <summary>
            卖家类型，0表示集市，1表示商城
            </summary>
        </member>
        <member name="P:Top.Api.Domain.NTbkItem.Volume">
            <summary>
            30天销量
            </summary>
        </member>
        <member name="P:Top.Api.Domain.NTbkItem.ZkFinalPrice">
            <summary>
            商品折扣价格
            </summary>
        </member>
        <member name="P:Top.Api.Domain.NTbkItem.ZkFinalPriceWap">
            <summary>
            
            </summary>
        </member>
        <member name="T:Top.Api.Domain.FenxiaoPdu">
            <summary>
            FenxiaoPdu Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoPdu.DistributorId">
            <summary>
            分销商ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoPdu.DistributorName">
            <summary>
            分销商用户名
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoPdu.ProductId">
            <summary>
            产品ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoPdu.QuantityAgent">
            <summary>
            产品代销配额库存
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoPdu.SkuProperties">
            <summary>
            产品销售属性值
            </summary>
        </member>
        <member name="T:Top.Api.Domain.DiscountDetail">
            <summary>
            DiscountDetail Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DiscountDetail.Created">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DiscountDetail.DetailId">
            <summary>
            折扣详情ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DiscountDetail.DiscountType">
            <summary>
            优惠方式:PERCENT（按折扣优惠）、PRICE（按减价优惠）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DiscountDetail.DiscountValue">
            <summary>
            优惠比率或者优惠价格 10%或10
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DiscountDetail.Modified">
            <summary>
            修改时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DiscountDetail.TargetId">
            <summary>
            会员等级的id或者分销商id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DiscountDetail.TargetName">
            <summary>
            等级名称或者分销商名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DiscountDetail.TargetType">
            <summary>
            折扣类型:GRADE（按会员等级优惠）、DISTRIBUTOR（按分销商优惠）
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaCampaignAddResponse">
            <summary>
            SimbaCampaignAddResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaCampaignAddResponse.Campaign">
            <summary>
            创建的推广计划
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaCampaignScheduleUpdateResponse">
            <summary>
            SimbaCampaignScheduleUpdateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaCampaignScheduleUpdateResponse.CampaignSchedule">
            <summary>
            修改后的推广计划分时折扣
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaAdgroupCatmatchUpdateResponse">
            <summary>
            SimbaAdgroupCatmatchUpdateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaAdgroupCatmatchUpdateResponse.Adgroupcatmatch">
            <summary>
            推广组的类目出价对象
            </summary>
        </member>
        <member name="T:Top.Api.Response.ShoprecommendItemsGetResponse">
            <summary>
            ShoprecommendItemsGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ShoprecommendItemsGetResponse.FavoriteItems">
            <summary>
            返回与店铺关联的宝贝集合
            </summary>
        </member>
        <member name="T:Top.Api.Response.TmallItemSchemaIncrementUpdateResponse">
            <summary>
            TmallItemSchemaIncrementUpdateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallItemSchemaIncrementUpdateResponse.GmtModified">
            <summary>
            商品更新操作成功时间
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallItemSchemaIncrementUpdateResponse.UpdateItemResult">
            <summary>
            返回商品发布结果
            </summary>
        </member>
        <member name="T:Top.Api.Response.LogisticsAddressModifyResponse">
            <summary>
            LogisticsAddressModifyResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.LogisticsAddressModifyResponse.AddressResult">
            <summary>
            只返回修改时间modify_date
            </summary>
        </member>
        <member name="T:Top.Api.Response.LogisticsAddressAddResponse">
            <summary>
            LogisticsAddressAddResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.LogisticsAddressAddResponse.AddressResult">
            <summary>
            只返回修改日期modify_date
            </summary>
        </member>
        <member name="T:Top.Api.Response.TopSecretGetResponse">
            <summary>
            TopSecretGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TopSecretGetResponse.AppConfig">
            <summary>
            app配置信息
            </summary>
        </member>
        <member name="P:Top.Api.Response.TopSecretGetResponse.Interval">
            <summary>
            下次更新秘钥间隔，单位（秒）
            </summary>
        </member>
        <member name="P:Top.Api.Response.TopSecretGetResponse.MaxInterval">
            <summary>
            最长有效期，容灾使用，单位（秒）
            </summary>
        </member>
        <member name="P:Top.Api.Response.TopSecretGetResponse.Secret">
            <summary>
            秘钥值
            </summary>
        </member>
        <member name="P:Top.Api.Response.TopSecretGetResponse.SecretVersion">
            <summary>
            秘钥版本号
            </summary>
        </member>
        <member name="T:Top.Api.Response.SubuserDepartmentAddResponse">
            <summary>
            SubuserDepartmentAddResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SubuserDepartmentAddResponse.IsSuccess">
            <summary>
            操作是否成功 true:操作成功; false:操作失败
            </summary>
        </member>
        <member name="T:Top.Api.Response.PicturePicturesCountResponse">
            <summary>
            PicturePicturesCountResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.PicturePicturesCountResponse.Totals">
            <summary>
            查询的文件总数
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaAdgroupidsDeletedGetResponse">
            <summary>
            SimbaAdgroupidsDeletedGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaAdgroupidsDeletedGetResponse.DeletedAdgroupIds">
            <summary>
            推广组ID列表
            </summary>
        </member>
        <member name="T:Top.Api.Response.SellercenterSubuserPermissionsRolesGetResponse">
            <summary>
            SellercenterSubuserPermissionsRolesGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SellercenterSubuserPermissionsRolesGetResponse.SubuserPermission">
            <summary>
            子账号被所拥有的权限
            </summary>
        </member>
        <member name="T:Top.Api.Response.ItemRecommendAddResponse">
            <summary>
            ItemRecommendAddResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ItemRecommendAddResponse.Item">
            <summary>
            被推荐的商品的信息
            </summary>
        </member>
        <member name="T:Top.Api.Response.TradeConfirmfeeGetResponse">
            <summary>
            TradeConfirmfeeGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TradeConfirmfeeGetResponse.TradeConfirmFee">
            <summary>
            获取到的交易确认收货费用
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaNonsearchDemographicsGetResponse">
            <summary>
            SimbaNonsearchDemographicsGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaNonsearchDemographicsGetResponse.DemographicSettingList">
            <summary>
            人群维度设置列表
            </summary>
        </member>
        <member name="T:Top.Api.Response.TimeGetResponse">
            <summary>
            TimeGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TimeGetResponse.Time">
            <summary>
            淘宝系统当前时间。格式:yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="T:Top.Api.Response.DeliveryTemplateDeleteResponse">
            <summary>
            DeliveryTemplateDeleteResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.DeliveryTemplateDeleteResponse.Complete">
            <summary>
            表示删除成功还是失败
            </summary>
        </member>
        <member name="T:Top.Api.Response.ProductImgDeleteResponse">
            <summary>
            ProductImgDeleteResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ProductImgDeleteResponse.ProductImg">
            <summary>
            返回productimg中的：id,product_id
            </summary>
        </member>
        <member name="T:Top.Api.Response.TmallItemSizemappingTemplateUpdateResponse">
            <summary>
            TmallItemSizemappingTemplateUpdateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallItemSizemappingTemplateUpdateResponse.SizeMappingTemplate">
            <summary>
            尺码表模板
            </summary>
        </member>
        <member name="T:Top.Api.Response.TraderatesGetResponse">
            <summary>
            TraderatesGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TraderatesGetResponse.HasNext">
            <summary>
            当使用use_has_next时返回信息，如果还有下一页则返回true
            </summary>
        </member>
        <member name="P:Top.Api.Response.TraderatesGetResponse.TotalResults">
            <summary>
            搜索到的评价总数。相同的查询时间段条件下，最大只能获取总共1500条评价记录。所以当评价大于等于1500时 ISV可以通过start_date及end_date来进行拆分，以保证可以查询到全部数据
            </summary>
        </member>
        <member name="P:Top.Api.Response.TraderatesGetResponse.TradeRates">
            <summary>
            评价列表。返回的TradeRate包含的具体信息为入参fields请求的字段信息
            </summary>
        </member>
        <member name="T:Top.Api.Response.RefundsApplyGetResponse">
            <summary>
            RefundsApplyGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.RefundsApplyGetResponse.Refunds">
            <summary>
            搜索到的退款信息列表
            </summary>
        </member>
        <member name="P:Top.Api.Response.RefundsApplyGetResponse.TotalResults">
            <summary>
            搜索到的交易信息总数
            </summary>
        </member>
        <member name="T:Top.Api.Response.TmallProductSpecPicUploadResponse">
            <summary>
            TmallProductSpecPicUploadResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallProductSpecPicUploadResponse.SpecPicUrl">
            <summary>
            上传成功的产品规格认证图片url
            </summary>
        </member>
        <member name="T:Top.Api.Response.ItemUpdateListingResponse">
            <summary>
            ItemUpdateListingResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ItemUpdateListingResponse.Item">
            <summary>
            上架后返回的商品信息：返回的结果就是:num_iid和modified
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaCampaignAreaUpdateRequest">
            <summary>
            TOP API: taobao.simba.campaign.area.update
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaCampaignAreaUpdateRequest.Area">
            <summary>
            值为：“all”；或者用“,”分割的数字，数字必须是直通车全国省市列表的AreaID；
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaCampaignAreaUpdateRequest.CampaignId">
            <summary>
            推广计划Id
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaCampaignAreaUpdateRequest.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaCampaignScheduleUpdateRequest">
            <summary>
            TOP API: taobao.simba.campaign.schedule.update
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaCampaignScheduleUpdateRequest.CampaignId">
            <summary>
            推广计划Id
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaCampaignScheduleUpdateRequest.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaCampaignScheduleUpdateRequest.Schedule">
            <summary>
            值为：“all”；或者用“;”分割的每天的设置字符串，该字符串为用“,”分割的时段折扣字符串，格式为：起始时间-结束时间:折扣，其中时间是24小时格式记录，折扣是1-150整数，表示折扣百分比；
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaCreativesRecordGetRequest">
            <summary>
            TOP API: taobao.simba.creatives.record.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaCreativesRecordGetRequest.CreativeIds">
            <summary>
            创意Id数组，最多200个
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaCreativesRecordGetRequest.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="T:Top.Api.Request.TmallItemSchemaAddRequest">
            <summary>
            TOP API: tmall.item.schema.add
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemSchemaAddRequest.CategoryId">
            <summary>
            商品发布的目标类目，必须是叶子类目
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemSchemaAddRequest.ProductId">
            <summary>
            发布商品的productId，如果tmall.product.match.schema.get获取到得字段为空，这个参数传入0，否则需要通过tmall.product.schema.match查询到得可用productId
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemSchemaAddRequest.XmlData">
            <summary>
            根据tmall.item.add.schema.get生成的商品发布规则入参数据
            </summary>
        </member>
        <member name="T:Top.Api.Request.TmallProductSchemaMatchRequest">
            <summary>
            TOP API: tmall.product.schema.match
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallProductSchemaMatchRequest.CategoryId">
            <summary>
            商品发布的目标类目，必须是叶子类目
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallProductSchemaMatchRequest.Propvalues">
            <summary>
            根据tmall.product.match.schema.get获取到的模板，ISV将需要的字段填充好相应的值结果XML。
            </summary>
        </member>
        <member name="T:Top.Api.Request.VasSubscSearchRequest">
            <summary>
            TOP API: taobao.vas.subsc.search
            </summary>
        </member>
        <member name="P:Top.Api.Request.VasSubscSearchRequest.ArticleCode">
            <summary>
            应用收费代码，从合作伙伴后台（my.open.taobao.com）-收费管理-收费项目列表 能够获得该应用的收费代码
            </summary>
        </member>
        <member name="P:Top.Api.Request.VasSubscSearchRequest.Autosub">
            <summary>
            是否自动续费，true=自动续费 false=非自动续费 空=全部
            </summary>
        </member>
        <member name="P:Top.Api.Request.VasSubscSearchRequest.EndDeadline">
            <summary>
            到期时间结束值
            </summary>
        </member>
        <member name="P:Top.Api.Request.VasSubscSearchRequest.ExpireNotice">
            <summary>
            是否到期提醒，true=到期提醒 false=非到期提醒 空=全部
            </summary>
        </member>
        <member name="P:Top.Api.Request.VasSubscSearchRequest.ItemCode">
            <summary>
            收费项目代码，从合作伙伴后台（my.open.taobao.com）-收费管理-收费项目列表 能够获得收费项目代码
            </summary>
        </member>
        <member name="P:Top.Api.Request.VasSubscSearchRequest.Nick">
            <summary>
            淘宝会员名
            </summary>
        </member>
        <member name="P:Top.Api.Request.VasSubscSearchRequest.PageNo">
            <summary>
            页码
            </summary>
        </member>
        <member name="P:Top.Api.Request.VasSubscSearchRequest.PageSize">
            <summary>
            一页包含的记录数
            </summary>
        </member>
        <member name="P:Top.Api.Request.VasSubscSearchRequest.StartDeadline">
            <summary>
            到期时间起始值（当start_deadline和end_deadline都不填写时，默认返回最近90天的数据）
            </summary>
        </member>
        <member name="P:Top.Api.Request.VasSubscSearchRequest.Status">
            <summary>
            订购记录状态，1=有效 2=过期 空=全部
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaInsightWordsdataGetRequest">
            <summary>
            TOP API: taobao.simba.insight.wordsdata.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaInsightWordsdataGetRequest.BidwordList">
            <summary>
            关键词列表，最多可传100个。
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaInsightWordsdataGetRequest.EndDate">
            <summary>
            结束时间
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaInsightWordsdataGetRequest.StartDate">
            <summary>
            开始时间
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaInsightCatsinfoGetRequest">
            <summary>
            TOP API: taobao.simba.insight.catsinfo.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaInsightCatsinfoGetRequest.CategoryIdList">
            <summary>
            需要查询的类目id
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaInsightCatsinfoGetRequest.Type">
            <summary>
            表示请求的类型：0表示请求所有顶级类目的信息，这时可以忽略第二个参数，1表示获取给定的类目id的详细信息，2表示获取给定类目id的所有子类目的详细信息
            </summary>
        </member>
        <member name="T:Top.Api.Request.SubusersGetRequest">
            <summary>
            TOP API: taobao.subusers.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SubusersGetRequest.UserNick">
            <summary>
            主账号用户名
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaRtrptBidwordGetRequest">
            <summary>
            TOP API: taobao.simba.rtrpt.bidword.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRtrptBidwordGetRequest.AdgroupId">
            <summary>
            推广组id
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRtrptBidwordGetRequest.CampaignId">
            <summary>
            推广计划id
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRtrptBidwordGetRequest.Nick">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRtrptBidwordGetRequest.TheDate">
            <summary>
            日期，格式yyyy-mm-dd
            </summary>
        </member>
        <member name="T:Top.Api.Request.TradeShippingaddressUpdateRequest">
            <summary>
            TOP API: taobao.trade.shippingaddress.update
            </summary>
        </member>
        <member name="P:Top.Api.Request.TradeShippingaddressUpdateRequest.ReceiverAddress">
            <summary>
            收货地址。最大长度为228个字节。
            </summary>
        </member>
        <member name="P:Top.Api.Request.TradeShippingaddressUpdateRequest.ReceiverCity">
            <summary>
            城市。最大长度为32个字节。如：杭州
            </summary>
        </member>
        <member name="P:Top.Api.Request.TradeShippingaddressUpdateRequest.ReceiverDistrict">
            <summary>
            区/县。最大长度为32个字节。如：西湖区
            </summary>
        </member>
        <member name="P:Top.Api.Request.TradeShippingaddressUpdateRequest.ReceiverMobile">
            <summary>
            移动电话。最大长度为11个字节。
            </summary>
        </member>
        <member name="P:Top.Api.Request.TradeShippingaddressUpdateRequest.ReceiverName">
            <summary>
            收货人全名。最大长度为50个字节。
            </summary>
        </member>
        <member name="P:Top.Api.Request.TradeShippingaddressUpdateRequest.ReceiverPhone">
            <summary>
            固定电话。最大长度为30个字节。
            </summary>
        </member>
        <member name="P:Top.Api.Request.TradeShippingaddressUpdateRequest.ReceiverState">
            <summary>
            省份。最大长度为32个字节。如：浙江
            </summary>
        </member>
        <member name="P:Top.Api.Request.TradeShippingaddressUpdateRequest.ReceiverZip">
            <summary>
            邮政编码。必须由6个数字组成。
            </summary>
        </member>
        <member name="P:Top.Api.Request.TradeShippingaddressUpdateRequest.Tid">
            <summary>
            交易编号。
            </summary>
        </member>
        <member name="T:Top.Api.Request.ItemSellerGetRequest">
            <summary>
            TOP API: taobao.item.seller.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemSellerGetRequest.Fields">
            <summary>
            需要返回的商品字段列表。可选值：Item商品结构体中所有字段均可返回，多个字段用“,”分隔。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemSellerGetRequest.NumIid">
            <summary>
            商品数字ID
            </summary>
        </member>
        <member name="T:Top.Api.Request.SellercenterRolesGetRequest">
            <summary>
            TOP API: taobao.sellercenter.roles.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SellercenterRolesGetRequest.Nick">
            <summary>
            卖家昵称(只允许查询自己的信息：当前登陆者)
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaAdgroupNonsearchstatesUpdateRequest">
            <summary>
            TOP API: taobao.simba.adgroup.nonsearchstates.update
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupNonsearchstatesUpdateRequest.AdgroupidNonsearchstateJson">
            <summary>
            推广组ID通投状态json数组字符串，数组个数最多200个。json数组中的key必须和对应实体ADGroup 中的属性字段保持一致，否则对应的实体对象属性获取不到相应的值推广组ID,通投状态不传默认为1
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupNonsearchstatesUpdateRequest.CampaignId">
            <summary>
            推广计划ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupNonsearchstatesUpdateRequest.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="T:Top.Api.Request.TopSecretRegisterRequest">
            <summary>
            TOP API: taobao.top.secret.register
            </summary>
        </member>
        <member name="P:Top.Api.Request.TopSecretRegisterRequest.UserId">
            <summary>
            用户id，保证唯一
            </summary>
        </member>
        <member name="T:Top.Api.Request.ProductImgDeleteRequest">
            <summary>
            TOP API: taobao.product.img.delete
            </summary>
        </member>
        <member name="P:Top.Api.Request.ProductImgDeleteRequest.Id">
            <summary>
            非主图ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.ProductImgDeleteRequest.ProductId">
            <summary>
            产品ID.Product的id,通过taobao.product.add接口新增产品的时候会返回id.
            </summary>
        </member>
        <member name="T:Top.Api.Request.ItemSkuPriceUpdateRequest">
            <summary>
            TOP API: taobao.item.sku.price.update
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemSkuPriceUpdateRequest.Ignorewarning">
            <summary>
            忽略警告提示.
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemSkuPriceUpdateRequest.ItemPrice">
            <summary>
            sku所属商品的价格。当用户更新sku，使商品价格不属于sku价格之间的时候，用于修改商品的价格，使sku能够更新成功
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemSkuPriceUpdateRequest.Lang">
            <summary>
            Sku文字的版本。可选值:zh_HK(繁体),zh_CN(简体);默认值:zh_CN
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemSkuPriceUpdateRequest.NumIid">
            <summary>
            Sku所属商品数字id，可通过 taobao.item.get 获取
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemSkuPriceUpdateRequest.OuterId">
            <summary>
            Sku的商家外部id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemSkuPriceUpdateRequest.Price">
            <summary>
            Sku的销售价格。精确到2位小数;单位:元。如:200.07，表示:200元7分。修改后的sku价格要保证商品的价格在所有sku价格所形成的价格区间内（例如：商品价格为6元，sku价格有5元、10元两种，如果要修改5元sku的价格，那么修改的范围只能是0-6元之间；如果要修改10元的sku，那么修改的范围只能是6到无穷大的区间中）
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemSkuPriceUpdateRequest.Properties">
            <summary>
            Sku属性串。格式:pid:vid;pid:vid,如: 1627207:3232483;1630696:3284570,表示机身颜色:军绿色;手机套餐:一电一充
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemSkuPriceUpdateRequest.Quantity">
            <summary>
            Sku的库存数量。sku的总数量应该小于等于商品总数量(Item的NUM)，sku数量变化后item的总数量也会随着变化。取值范围:大于等于零的整数
            </summary>
        </member>
        <member name="T:Top.Api.Request.TmallItemSizemappingTemplateUpdateRequest">
            <summary>
            TOP API: tmall.item.sizemapping.template.update
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemSizemappingTemplateUpdateRequest.TemplateContent">
            <summary>
            尺码表模板内容，格式为"尺码值:维度名称:数值,尺码值:维度名称:数值"。其中，数值的单位，长度单位为厘米（cm），体重单位为公斤（kg）。尺码值，维度数据不能包含数字，特殊字符。数值为0-999.9的数字，且最多一位小数。
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemSizemappingTemplateUpdateRequest.TemplateId">
            <summary>
            尺码表模板ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemSizemappingTemplateUpdateRequest.TemplateName">
            <summary>
            尺码表模板名称
            </summary>
        </member>
        <member name="T:Top.Api.Request.WirelessBuntingItemShorturlCreateRequest">
            <summary>
            TOP API: taobao.wireless.bunting.item.shorturl.create
            </summary>
        </member>
        <member name="P:Top.Api.Request.WirelessBuntingItemShorturlCreateRequest.ItemId">
            <summary>
            商品ID
            </summary>
        </member>
        <member name="T:Top.Api.Request.ItemUpdateDelistingRequest">
            <summary>
            TOP API: taobao.item.update.delisting
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateDelistingRequest.NumIid">
            <summary>
            商品数字ID，该参数必须
            </summary>
        </member>
        <member name="T:Top.Api.Request.ItemUpdateRequest">
            <summary>
            TOP API: taobao.item.update
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.AfterSaleId">
            <summary>
            售后说明模板id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.ApproveStatus">
            <summary>
            商品上传后的状态。可选值:onsale（出售中）,instock（库中），如果同时更新商品状态为出售中及list_time为将来的时间，则商品还是处于定时上架的状态, 此时item.is_timing为true
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.AuctionPoint">
            <summary>
            商品的积分返点比例。如：5 表示返点比例0.5%. 注意：返点比例必须是>0的整数，而且最大是90,即为9%.B商家在发布非虚拟商品时，返点必须是 5的倍数，即0.5%的倍数。其它是1的倍数，即0.1%的倍数。无名良品商家发布商品时，复用该字段记录积分宝返点比例，返点必须是对应类目的返点步长的整数倍，默认是5，即0.5%。注意此时该字段值依旧必须是>0的整数，注意此时该字段值依旧必须是>0的整数，最高值不超过500，即50%
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.AutoFill">
            <summary>
            代充商品类型。只有少数类目下的商品可以标记上此字段，具体哪些类目可以上传可以通过taobao.itemcat.features.get获得。在代充商品的类目下，不传表示不标记商品类型（交易搜索中就不能通过标记搜到相关的交易了）。可选类型： no_mark(不做类型标记) time_card(点卡软件代充) fee_card(话费软件代充)
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.AutoRepost">
            <summary>
            自动重发。可选值:true,false;
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.Barcode">
            <summary>
            商品条形码
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.ChangeProp">
            <summary>
            基础色数据
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.ChaoshiExtendsInfo">
            <summary>
            天猫超市扩展字段，天猫超市专用。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.Cid">
            <summary>
            叶子类目id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.CodPostageId">
            <summary>
            货到付款运费模板ID该字段已经废弃，货到付款模板已经集成到运费模板中。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.CpvMemo">
            <summary>
            针对当前商品的标准属性值的补充说明，让买家更加了解商品信息减少交易纠纷
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.DeliveryTimeDeliveryTime">
            <summary>
            商品级别设置的发货时间。设置了商品级别的发货时间，相对发货时间，则填写相对发货时间的天数（大于3）；绝对发货时间，则填写yyyy-mm-dd格式，如2013-11-11
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.DeliveryTimeDeliveryTimeType">
            <summary>
            发货时间类型：绝对发货时间或者相对发货时间
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.DeliveryTimeNeedDeliveryTime">
            <summary>
            设置是否使用发货时间，商品级别，sku级别
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.Desc">
            <summary>
            商品描述. 字数要大于5个字符，小于25000个字符 ，受违禁词控制
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.DescModules">
            <summary>
            商品描述模块化，模块列表，由List转化成jsonArray存入，后端逻辑验证通过，拼装成模块内容+锚点导航后存入desc中。数据结构具体参见Item_Desc_Module
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.EmptyFields">
            <summary>
            支持宝贝信息的删除,如需删除对应的食品安全信息中的储藏方法、保质期， 则应该设置此参数的值为：food_security.plan_storage,food_security.period; 各个参数的名称之间用【,】分割, 如果对应的参数有设置过值，即使在这个列表中，也不会被删除; 目前支持此功能的宝贝信息如下：食品安全信息所有字段、电子交易凭证字段（locality_life，locality_life.verification，locality_life.refund_ratio，locality_life.network_id ，locality_life.onsale_auto_refund_ratio）。支持对全球购宝贝信息的清除（字符串中包含global_stock）
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.EmsFee">
            <summary>
            ems费用。取值范围:0.01-999.00;精确到2位小数;单位:元。如:25.07，表示:25元7分
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.ExpressFee">
            <summary>
            快递费用。取值范围:0.01-999.00;精确到2位小数;单位:元。如:15.07，表示:15元7分
            </summary>
        </member>
        <!-- 对于成员“P:Top.Api.Request.ItemUpdateRequest.Features”忽略有格式错误的 XML 注释 -->
        <member name="P:Top.Api.Request.ItemUpdateRequest.FoodSecurityContact">
            <summary>
            厂家联系方式
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.FoodSecurityDesignCode">
            <summary>
            产品标准号
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.FoodSecurityFactory">
            <summary>
            厂名
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.FoodSecurityFactorySite">
            <summary>
            厂址
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.FoodSecurityFoodAdditive">
            <summary>
            食品添加剂
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.FoodSecurityHealthProductNo">
            <summary>
            健字号，保健品/膳食营养补充剂 这个类目下特有的信息，此类目下无需填写生产许可证编号（QS），如果填写了生产许可证编号（QS）将被忽略不保存；保存宝贝时，标题前会自动加上健字号产品名称一起作为宝贝标题；
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.FoodSecurityMix">
            <summary>
            配料表
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.FoodSecurityPeriod">
            <summary>
            保质期
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.FoodSecurityPlanStorage">
            <summary>
            储藏方法
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.FoodSecurityPrdLicenseNo">
            <summary>
            生产许可证号
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.FoodSecurityProductDateEnd">
            <summary>
            生产结束日期,格式必须为yyyy-MM-dd
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.FoodSecurityProductDateStart">
            <summary>
            生产开始日期，格式必须为yyyy-MM-dd
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.FoodSecurityStockDateEnd">
            <summary>
            进货结束日期，要在生产日期之后，格式必须为yyyy-MM-dd
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.FoodSecurityStockDateStart">
            <summary>
            进货开始日期，要在生产日期之后，格式必须为yyyy-MM-dd
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.FoodSecuritySupplier">
            <summary>
            供货商
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.FreightPayer">
            <summary>
            运费承担方式。运费承担方式。可选值:seller（卖家承担）,buyer(买家承担);
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.GlobalStockCountry">
            <summary>
            全球购商品采购地（地区/国家）,默认值只在全球购商品采购地（库存类型选择情况生效），地区国家值为（美国, 香港, 日本, 英国, 新西兰, 德国, 韩国, 荷兰, 澳洲, 法国, 意大利, 台湾, 澳门, 加拿大, 瑞士, 西班牙, 泰国, 新加坡, 马来西亚, 菲律宾, 其他）
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.GlobalStockDeliveryPlace">
            <summary>
            全球购商品发货地，发货地现在有两种类型：“国内”和“海外及港澳台”，参数值为1时代表“国内”，值为2时代表“海外及港澳台”
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.GlobalStockTaxFreePromise">
            <summary>
            全球购商品卖家包税承诺，当值为true时，代表卖家承诺包税。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.GlobalStockType">
            <summary>
            全球购商品采购地（库存类型）全球购商品有两种库存类型：现货和代购 参数值为1时代表现货，值为2时代表代购。注意：使用时请与 全球购商品采购地（地区/国家）配合使用
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.HasDiscount">
            <summary>
            支持会员打折。可选值:true,false;
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.HasInvoice">
            <summary>
            是否有发票。可选值:true,false (商城卖家此字段必须为true)
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.HasShowcase">
            <summary>
            橱窗推荐。可选值:true,false;
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.HasWarranty">
            <summary>
            是否有保修。可选值:true,false;
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.Ignorewarning">
            <summary>
            忽略警告提示.
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.Image">
            <summary>
            商品图片。类型:JPG,GIF;最大长度:3M
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.Increment">
            <summary>
            加价(降价)幅度。如果为0，代表系统代理幅度。对于增价拍和荷兰拍来说是加价幅度，对于降价拍来说是降价幅度。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.InputCustomCpv">
            <summary>
            针对当前商品的自定义属性值
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.InputPids">
            <summary>
            用户自行输入的类目属性ID串，结构："pid1,pid2,pid3"，如："20000"（表示品牌） 注：通常一个类目下用户可输入的关键属性不超过1个。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.InputStr">
            <summary>
            用户自行输入的子属性名和属性值，结构:"父属性值;一级子属性名;一级子属性值;二级子属性名;自定义输入值,....",如：“耐克;耐克系列;科比系列;科比系列;2K5,Nike乔丹鞋;乔丹系列;乔丹鞋系列;乔丹鞋系列;json5”，多个自定义属性用','分割，input_str需要与input_pids一一对应，注：通常一个类目下用户可输入的关键属性不超过1个。所有属性别名加起来不能超过3999字节。此处不可以使用“其他”、“其它”和“其她”这三个词。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.Is3D">
            <summary>
            是否是3D
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.IsEx">
            <summary>
            是否在外店显示
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.IsLightningConsignment">
            <summary>
            实物闪电发货。注意：在售的闪电发货产品不允许取消闪电发货，需要先下架商品才能取消闪电发货标记
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.IsOffline">
            <summary>
            是否是线下商品。1：线上商品（默认值）；2：线上或线下商品；3：线下商品。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.IsReplaceSku">
            <summary>
            是否替换sku
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.IsTaobao">
            <summary>
            是否在淘宝上显示（如果传FALSE，则在淘宝主站无法显示该商品）
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.IsXinpin">
            <summary>
            商品是否为新品。只有在当前类目开通新品,并且当前用户拥有该类目下发布新品权限时才能设置is_xinpin为true，否则设置true后会返回错误码:isv.invalid-permission:xinpin。同时只有一口价全新的宝贝才能设置为新品，否则会返回错误码：isv.invalid-parameter:xinpin。不设置参数就保持原有值。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.ItemSize">
            <summary>
            表示商品的体积，如果需要使用按体积计费的运费模板，一定要设置这个值。该值的单位为立方米（m3），如果是其他单位，请转换成成立方米。该值支持两种格式的设置：格式1：bulk:3,单位为立方米(m3),表示直接设置为商品的体积。格式2：length:10;breadth:10;height:10，单位为米（m）。体积和长宽高都支持小数类型。在传入体积或长宽高时候，不能带单位。体积的单位默认为立方米（m3），长宽高的单位默认为米(m)在编辑的时候，如果需要删除体积属性，请设置该值为0，如bulk:0
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.ItemWeight">
            <summary>
            商品的重量，用于按重量计费的运费模板。注意：单位为kg。 只能传入数值类型（包含小数），不能带单位，单位默认为kg。 在编辑时候，如果需要在商品里删除重量的信息，就需要将值设置为0
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.Lang">
            <summary>
            商品文字的版本，繁体传入”zh_HK”，简体传入”zh_CN”
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.ListTime">
            <summary>
            上架时间。大于当前时间则宝贝会下架进入定时上架的宝贝中。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.LocalityLifeChooseLogis">
            <summary>
            编辑电子凭证宝贝时候表示是否使用邮寄0: 代表不使用邮寄；1：代表使用邮寄；如果不设置这个值，代表不使用邮寄
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.LocalityLifeEticket">
            <summary>
            电子凭证业务属性，数据字典是: 1、is_card:1 (暂时不用) 2、consume_way:4 （1 串码 ，4 身份证）3、consume_midmnick ：(核销放行账号:用户id-用户名，支持多个，用逗号分隔,例如 1234-测试账号35,1345-测试账号56）4、market:eticket (电子凭证商品标记) 5、has_pos:1 (1 表示商品配置线下门店，在detail上进行展示 ，没有或者其他值只不展示)格式是: k1:v2;k2:v2;........ 如：has_pos:1;market:eticket;consume_midmnick:901409638-OPPO;consume_way:4
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.LocalityLifeExpirydate">
            <summary>
            本地生活电子交易凭证业务，目前此字段只涉及到的信息为有效期;如果有效期为起止日期类型，此值为2012-08-06,2012-08-16如果有效期为【购买成功日 至】类型则格式为2012-08-16如果有效期为天数类型则格式为15
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.LocalityLifeMerchant">
            <summary>
            码商信息，格式为 码商id:nick
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.LocalityLifeNetworkId">
            <summary>
            网点ID,在参数empty_fields里设置locality_life.network_id可删除网点ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.LocalityLifeObs">
            <summary>
            预约门店是否支持门店自提,1:是
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.LocalityLifeOnsaleAutoRefundRatio">
            <summary>
            电子凭证售中自动退款比例，百分比%前的数字，介于1-100之间的整数
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.LocalityLifePackageid">
            <summary>
            新版电子凭证包id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.LocalityLifeRefundRatio">
            <summary>
            退款比例，百分比%前的数字,1-100的正整数值; 在参数empty_fields里设置locality_life.refund_ratio可删除退款比例
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.LocalityLifeRefundmafee">
            <summary>
            退款码费承担方。发布电子凭证宝贝的时候会增加“退款码费承担方”配置项，可选填：(1)s（卖家承担） (2)b(买家承担)
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.LocalityLifeVerification">
            <summary>
            核销打款,1代表核销打款 0代表非核销打款; 在参数empty_fields里设置locality_life.verification可删除核销打款
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.LocalityLifeVersion">
            <summary>
            电子凭证版本 新版电子凭证值:1
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.LocationCity">
            <summary>
            所在地城市。如杭州
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.LocationState">
            <summary>
            所在地省份。如浙江
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.MsPaymentPrice">
            <summary>
            订金
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.MsPaymentReferencePrice">
            <summary>
            参考价
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.MsPaymentVoucherPrice">
            <summary>
            尾款可抵扣金额
            </summary>
        </member>
        <!-- 对于成员“P:Top.Api.Request.ItemUpdateRequest.Newprepay”忽略有格式错误的 XML 注释 -->
        <member name="P:Top.Api.Request.ItemUpdateRequest.Num">
            <summary>
            商品数量，取值范围:0-900000000的整数。且需要等于Sku所有数量的和 拍卖商品中增加拍只能为1，荷兰拍要在[2,500)范围内。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.NumIid">
            <summary>
            商品数字ID，该参数必须
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.O2oBindService">
            <summary>
            汽车O2O绑定线下服务标记，如不为空，表示关联服务，否则，不关联服务。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.OuterId">
            <summary>
            商家编码
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.PaimaiInfoDeposit">
            <summary>
            拍卖宝贝的保证金。对于增价拍和荷兰拍来说保证金有两种模式：淘宝默认模式（首次出价金额的10%），自定义固定保证金（固定冻结金额只能输入不超过30万的正整数），并且保证金只冻结1次。对于降价拍来说保证金只有淘宝默认的（竞拍价格的10% * 竞拍数量），并且每次出价都需要冻结保证金。对于拍卖宝贝来说，保证金是必须的，但是默认使用淘宝默认保证金模式，只有用户需要使用自定义固定保证金的时候才需要使用到这个参数。如果该参数不传或传入0则代表使用默认。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.PaimaiInfoInterval">
            <summary>
            降价拍宝贝的降价周期(分钟)。降价拍宝贝的价格每隔paimai_info.interval时间会下降一次increment。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.PaimaiInfoMode">
            <summary>
            拍卖商品选择的拍卖类型，拍卖类型包括三种：增价拍(1)，荷兰拍(2)和降价拍(3)。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.PaimaiInfoReserve">
            <summary>
            降价拍宝贝的保留价。对于降价拍来说，paimai_info.reserve必须大于0，且小于price-increment，而且（price-paimai_info.reserve）/increment的计算结果必须为整数
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.PaimaiInfoValidHour">
            <summary>
            自定义销售周期的小时数。拍卖宝贝可以自定义销售周期，这里指定销售周期的小时数。自定义销售周期的小时数。拍卖宝贝可以自定义销售周期，这里指定销售周期的小时数。注意，该参数只作为输入参数，不能通过taobao.item.get接口获取。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.PaimaiInfoValidMinute">
            <summary>
            自定义销售周期的分钟数。拍卖宝贝可以自定义销售周期，这里是指定销售周期的分钟数。自定义销售周期的小时数。拍卖宝贝可以自定义销售周期，这里指定销售周期的小时数。注意，该参数只作为输入参数，不能通过taobao.item.get接口获取。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.PicPath">
            <summary>
            商品主图需要关联的图片空间的相对url。这个url所对应的图片必须要属于当前用户。pic_path和image只需要传入一个,如果两个都传，默认选择pic_path
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.PostFee">
            <summary>
            平邮费用。取值范围:0.01-999.00;精确到2位小数;单位:元。如:5.07，表示:5元7分, 注:post_fee,express_fee,ems_fee需一起填写
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.PostageId">
            <summary>
            宝贝所属的运费模板ID。取值范围：整数且必须是该卖家的运费模板的ID（可通过taobao.delivery.templates.get获得当前会话用户的所有邮费模板）
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.Price">
            <summary>
            商品价格。取值范围:0-100000000;精确到2位小数;单位:元。如:200.07，表示:200元7分。需要在正确的价格区间内。 拍卖商品对应的起拍价。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.ProductId">
            <summary>
            商品所属的产品ID(B商家发布商品需要用)
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.PropertyAlias">
            <summary>
            属性值别名。如pid:vid:别名;pid1:vid1:别名1， pid:属性id vid:值id。总长度不超过511字节
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.Props">
            <summary>
            商品属性列表。格式:pid:vid;pid:vid。属性的pid调用taobao.itemprops.get取得，属性值的vid用taobao.itempropvalues.get取得vid。 如果该类目下面没有属性，可以不用填写。如果有属性，必选属性必填，其他非必选属性可以选择不填写.属性不能超过35对。所有属性加起来包括分割符不能超过549字节，单个属性没有限制。 如果有属性是可输入的话，则用字段input_str填入属性的值。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.Qualification">
            <summary>
            商品资质信息
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.ScenicTicketBookCost">
            <summary>
            景区门票在选择订金支付时候，需要交的预订费。传入的值是1到20之间的数值，小数点后最多可以保留两位（多余的部分将做四舍五入的处理）。这个数值表示的是预订费的比例，最终的预订费为 scenic_ticket_book_cost乘一口价除以100
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.ScenicTicketPayWay">
            <summary>
            景区门票类宝贝编辑时候，当卖家签订了支付宝代扣协议时候，需要选择支付方式：全额支付和订金支付。当scenic_ticket_pay_way为1时表示全额支付，为2时表示订金支付
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.SellPoint">
            <summary>
            商品卖点信息，最长150个字符。天猫和集市都可用
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.SellPromise">
            <summary>
            是否承诺退换货服务!虚拟商品无须设置此项!
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.SellerCids">
            <summary>
            重新关联商品与店铺类目，结构:",cid1,cid2,...,"，如果店铺类目存在二级类目，必须传入子类目cids。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.Shape">
            <summary>
            宝贝形态:1代表电子券;0或其他代表实物
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.SkuBarcode">
            <summary>
            sku层面的条形码，多个SKU情况，与SKU价格库存格式类似，用逗号分隔
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.SkuDeliveryTimes">
            <summary>
            此参数暂时不起作用
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.SkuHdHeight">
            <summary>
            家装建材类目，商品SKU的高度，单位为cm，部分类目必选。天猫商家专用。 可选值为："0-15", "15-25", "25-50", "50-60", "60-80", "80-120", "120-160", "160-200"。 数据和SKU一一对应，用,分隔，如：15-25,25-50,25-50
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.SkuHdLampQuantity">
            <summary>
            家装建材类目，商品SKU的灯头数量，正整数，大于等于3，部分类目必选。天猫商家专用。 数据和SKU一一对应，用,分隔，如：3,5,7
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.SkuHdLength">
            <summary>
            家装建材类目，商品SKU的长度，正整数，单位为cm，部分类目必选。天猫商家专用。 数据和SKU一一对应，用,分隔，如：20,30,30
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.SkuOuterIds">
            <summary>
            Sku的外部id串，结构如：1234,1342,… sku_properties, sku_quantities, sku_prices, sku_outer_ids在输入数据时要一一对应，如果没有sku_outer_ids也要写上这个参数，入参是","(这个是两个sku的示列，逗号数应该是sku个数减1)；该参数最大长度是512个字节
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.SkuPrices">
            <summary>
            更新的Sku的价格串，结构如：10.00,5.00,… 精确到2位小数;单位:元。如:200.07，表示:200元7分
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.SkuProperties">
            <summary>
            更新的sku的属性串，调用taobao.itemprops.get获取。格式:pid1:vid;pid2:vid,多个sku属性之间用逗号分隔。该字段内的属性需要在props字段同时包含。如果新增商品包含了sku，则此字段一定要传入,字段长度要控制在512个字节以内。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.SkuQuantities">
            <summary>
            更新的Sku的数量串，结构如：num1,num2,num3 如:2,3,4
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.SkuSpecIds">
            <summary>
            此参数暂时不起作用
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.SpuConfirm">
            <summary>
            手机类目spu 确认信息字段
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.StuffStatus">
            <summary>
            商品新旧程度。可选值:new（全新）,unused（闲置）,second（二手）。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.SubStock">
            <summary>
            商品是否支持拍下减库存:1支持;2取消支持(付款减库存);0(默认)不更改 集市卖家默认拍下减库存; 商城卖家默认付款减库存
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.Title">
            <summary>
            宝贝标题. 不能超过30字符,受违禁词控制
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.ValidThru">
            <summary>
            有效期。可选值:7,14;单位:天;
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.Weight">
            <summary>
            商品的重量(商超卖家专用字段)
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateRequest.WirelessDesc">
            <summary>
            无线的宝贝描述
            </summary>
        </member>
        <member name="T:Top.Api.Request.AftersaleGetRequest">
            <summary>
            TOP API: taobao.aftersale.get
            </summary>
        </member>
        <member name="T:Top.Api.Domain.Location">
            <summary>
            Location Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Location.Address">
            <summary>
            详细地址，最大256个字节（128个中文）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Location.City">
            <summary>
            所在城市（中文名称）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Location.Country">
            <summary>
            国家名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Location.District">
            <summary>
            区/县（只适用于物流API）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Location.State">
            <summary>
            所在省份（中文名称）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Location.Zip">
            <summary>
            邮政编码
            </summary>
        </member>
        <member name="T:Top.Api.Domain.NonreplyStatById">
            <summary>
            NonreplyStatById Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.NonreplyStatById.NonReplyCustomId">
            <summary>
            客服人员未回复的客户ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.NonreplyStatById.NonReplyNum">
            <summary>
            客服未回复数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.NonreplyStatById.ServiceStaffId">
            <summary>
            客服人员ID
            </summary>
        </member>
        <member name="T:Top.Api.Domain.TradeConfirmFee">
            <summary>
            TradeConfirmFee Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeConfirmFee.ConfirmFee">
            <summary>
            确认收货的金额(不包含邮费)。精确到2位小数;单位:元。如:200.07，表示:200元7分
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeConfirmFee.ConfirmPostFee">
            <summary>
            需确认收货的邮费，当不是最后一笔收货或者没有邮费时是0.00。精确到2位小数;单位:元。如:200.07，表示:200元7分
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeConfirmFee.IsLastOrder">
            <summary>
            是否是最后一笔订单（只对子订单有效，当其他子订单都是交易完成时，返回true，否则false）
            </summary>
        </member>
        <member name="T:Top.Api.Domain.AreaOption">
            <summary>
            AreaOption Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.AreaOption.AreaId">
            <summary>
            地域id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.AreaOption.Level">
            <summary>
            地域级别，目前自治区、省、直辖市是1，其他城市、地区是2
            </summary>
        </member>
        <member name="P:Top.Api.Domain.AreaOption.Name">
            <summary>
            地域名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.AreaOption.ParentId">
            <summary>
            父地域id，若该字段为0表示该行政区为顶层，例如像北京，国外等。
            </summary>
        </member>
        <member name="T:Top.Api.Domain.RankedItem">
            <summary>
            RankedItem Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RankedItem.LinkUrl">
            <summary>
            商品链接
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RankedItem.MaxPrice">
            <summary>
            最高出价
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RankedItem.Nick">
            <summary>
            客户昵称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RankedItem.Order">
            <summary>
            排名
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RankedItem.RankScore">
            <summary>
            原始质量评分
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RankedItem.Title">
            <summary>
            创意标题
            </summary>
        </member>
        <member name="T:Top.Api.Domain.InsightRelatedWords">
            <summary>
            InsightRelatedWords Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightRelatedWords.Bidword">
            <summary>
            原词
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightRelatedWords.RelatedWordItemsList">
            <summary>
            相关词信息列表
            </summary>
        </member>
        <member name="T:Top.Api.Domain.KeywordQscore">
            <summary>
            KeywordQscore Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.KeywordQscore.AdgroupId">
            <summary>
            推广组id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.KeywordQscore.CampaignId">
            <summary>
            推广计划id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.KeywordQscore.CreativeScore">
            <summary>
            创意得分
            </summary>
        </member>
        <member name="P:Top.Api.Domain.KeywordQscore.CustScore">
            <summary>
            基础分
            </summary>
        </member>
        <member name="P:Top.Api.Domain.KeywordQscore.CvrScore">
            <summary>
            买家体验分
            </summary>
        </member>
        <member name="P:Top.Api.Domain.KeywordQscore.KeywordId">
            <summary>
            关键词id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.KeywordQscore.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.KeywordQscore.Qscore">
            <summary>
            质量总分
            </summary>
        </member>
        <member name="P:Top.Api.Domain.KeywordQscore.ReleScore">
            <summary>
            相关性
            </summary>
        </member>
        <member name="P:Top.Api.Domain.KeywordQscore.Word">
            <summary>
            关键词
            </summary>
        </member>
        <member name="T:Top.Api.Domain.ADGroupPage">
            <summary>
            ADGroupPage Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ADGroupPage.AdgroupList">
            <summary>
            商品对象列表
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ADGroupPage.PageNo">
            <summary>
            返回第几页的数据从1开始
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ADGroupPage.PageSize">
            <summary>
            每页数据大小
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ADGroupPage.TotalItem">
            <summary>
            所查询的数据总数，只有当返回第一页数据时有值，当要求返回的数据非第一页时，此返回值无效
            </summary>
        </member>
        <member name="T:Top.Api.Domain.Shipping">
            <summary>
            Shipping Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Shipping.BuyerNick">
            <summary>
            买家昵称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Shipping.CompanyName">
            <summary>
            物流公司名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Shipping.Created">
            <summary>
            运单创建时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Shipping.DeliveryEnd">
            <summary>
            预约取货结束时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Shipping.DeliveryStart">
            <summary>
            预约取货开始时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Shipping.FreightPayer">
            <summary>
            谁承担运费.可选值:buyer(买家承担),seller(卖家承担运费).
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Shipping.IsQuickCodOrder">
            <summary>
            标示为是否快捷COD订单
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Shipping.IsSpilt">
            <summary>
            表明是否是拆单，默认值0，1表示拆单
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Shipping.IsSuccess">
            <summary>
            返回发货是否成功。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Shipping.ItemTitle">
            <summary>
            货物名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Shipping.Location">
            <summary>
            收件人地址信息(在传输请求参数Fields字段时，必须使用“receiver_location”才能返回此字段)
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Shipping.Modified">
            <summary>
            运单修改时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Shipping.OrderCode">
            <summary>
            物流订单编号
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Shipping.OutSid">
            <summary>
            运单号.具体一个物流公司的运单号码.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Shipping.ReceiverMobile">
            <summary>
            收件人手机号码
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Shipping.ReceiverName">
            <summary>
            收件人姓名
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Shipping.ReceiverPhone">
            <summary>
            收件人电话
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Shipping.SellerConfirm">
            <summary>
            卖家是否确认发货.可选值:yes(是),no(否).
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Shipping.SellerNick">
            <summary>
            卖家昵称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Shipping.Status">
            <summary>
            物流订单状态,可选值:CREATED(订单已创建) RECREATED(订单重新创建) CANCELLED(订单已取消) CLOSED(订单关闭) SENDING(等候发送给物流公司) ACCEPTING(已发送给物流公司,等待接单) ACCEPTED(物流公司已接单) REJECTED(物流公司不接单) PICK_UP(物流公司揽收成功) PICK_UP_FAILED(物流公司揽收失败) LOST(物流公司丢单) REJECTED_BY_RECEIVER(对方拒签) ACCEPTED_BY_RECEIVER(发货方式在线下单：对方已签收；自己联系：卖家已发货)
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Shipping.SubTids">
            <summary>
            拆单子订单列表，对应的数据是：该物流订单下的全部子订单
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Shipping.Tid">
            <summary>
            交易ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Shipping.Type">
            <summary>
            物流方式.可选值:free(卖家包邮),post(平邮),express(快递),ems(EMS).
            </summary>
        </member>
        <member name="M:Top.Api.Security.SecretContext.IsValid">
            <summary>
            判断是否过期
            </summary>
            <returns></returns>
        </member>
        <member name="M:Top.Api.Security.SecretContext.IsMaxValid">
            <summary>
            容灾，调用api获取秘钥可能会失败，在失败情况下最长有效期
            </summary>
            <returns></returns>
        </member>
        <member name="P:Top.Api.Security.SecretContext.Secret">
            <summary>
             秘钥
            </summary>
        </member>
        <member name="P:Top.Api.Security.SecretContext.SecretVersion">
            <summary>
            秘钥版本
            </summary>
        </member>
        <member name="P:Top.Api.Security.SecretContext.InvalidTime">
            <summary>
            过期时间，单位（毫秒）
            </summary>
        </member>
        <member name="P:Top.Api.Security.SecretContext.MaxInvalidTime">
            <summary>
            最长有效期，单位（毫秒）
            </summary>
        </member>
        <member name="T:Top.Api.DefaultTopClient">
            <summary>
            基于REST的TOP客户端。
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerCampaignDeleteResponse">
            <summary>
            ZuanshiBannerCampaignDeleteResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCampaignDeleteResponse.Result">
            <summary>
            result
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerCampaignDeleteResponse.ResultDTODomain">
            <summary>
            ResultDTODomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCampaignDeleteResponse.ResultDTODomain.Message">
            <summary>
            message
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCampaignDeleteResponse.ResultDTODomain.Success">
            <summary>
            调用是否成功
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerAdgroupDeleteResponse">
            <summary>
            ZuanshiBannerAdgroupDeleteResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdgroupDeleteResponse.Result">
            <summary>
            result
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerAdgroupDeleteResponse.ResultDtoDomain">
            <summary>
            ResultDtoDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdgroupDeleteResponse.ResultDtoDomain.Message">
            <summary>
            message
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdgroupDeleteResponse.ResultDtoDomain.Success">
            <summary>
            success
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerAccountBudgetGetResponse">
            <summary>
            ZuanshiBannerAccountBudgetGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAccountBudgetGetResponse.Result">
            <summary>
            返回结果对象
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerAccountBudgetGetResponse.ResultDTODomain">
            <summary>
            ResultDTODomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAccountBudgetGetResponse.ResultDTODomain.Budget">
            <summary>
            计划日预算总额，单位：分
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAccountBudgetGetResponse.ResultDTODomain.Message">
            <summary>
            message
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAccountBudgetGetResponse.ResultDTODomain.Success">
            <summary>
            调用是否成功,true-成功，false-失败
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRptsDayGetResponse">
            <summary>
            ZuanshiAdvertiserTargetAdzoneRptsDayGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRptsDayGetResponse.TargetAdzoneOfflineRptDaysList">
            <summary>
            结果
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRptsDayGetResponse.DataDomain">
            <summary>
            DataDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRptsDayGetResponse.DataDomain.AdPv">
            <summary>
            展现量
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRptsDayGetResponse.DataDomain.AdgroupId">
            <summary>
            单元id
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRptsDayGetResponse.DataDomain.AdgroupName">
            <summary>
            推广单元名称
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRptsDayGetResponse.DataDomain.AdzoneId">
            <summary>
            资源位id
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRptsDayGetResponse.DataDomain.AdzoneName">
            <summary>
            资源位名称
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRptsDayGetResponse.DataDomain.AlipayInShopNum">
            <summary>
            成交量
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRptsDayGetResponse.DataDomain.AlipayInshopAmt">
            <summary>
            成交额
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRptsDayGetResponse.DataDomain.AvgAccessPageNum">
            <summary>
            平均访问页面数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRptsDayGetResponse.DataDomain.AvgAccessTime">
            <summary>
            平均访问时长
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRptsDayGetResponse.DataDomain.CampaignId">
            <summary>
            计划id
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRptsDayGetResponse.DataDomain.CampaignName">
            <summary>
            计划名称
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRptsDayGetResponse.DataDomain.CartNum">
            <summary>
            加购物车数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRptsDayGetResponse.DataDomain.Charge">
            <summary>
            花费
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRptsDayGetResponse.DataDomain.Click">
            <summary>
            点击量
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRptsDayGetResponse.DataDomain.Ctr">
            <summary>
            ctr
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRptsDayGetResponse.DataDomain.Cvr">
            <summary>
            cvr
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRptsDayGetResponse.DataDomain.DeepInshopUv">
            <summary>
            深度进店uv
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRptsDayGetResponse.DataDomain.DirShopColNum">
            <summary>
            店铺收藏数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRptsDayGetResponse.DataDomain.Ecpc">
            <summary>
            ecpc
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRptsDayGetResponse.DataDomain.Ecpm">
            <summary>
            ecpm
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRptsDayGetResponse.DataDomain.GmvInshopAmt">
            <summary>
            gmv成交额
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRptsDayGetResponse.DataDomain.GmvInshopNum">
            <summary>
            gmv成交量
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRptsDayGetResponse.DataDomain.InshopItemColNum">
            <summary>
            宝贝收藏数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRptsDayGetResponse.DataDomain.LogDate">
            <summary>
            日期
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRptsDayGetResponse.DataDomain.Roi">
            <summary>
            投入产出比
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRptsDayGetResponse.DataDomain.TargetId">
            <summary>
            定向id
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRptsDayGetResponse.DataDomain.TargetName">
            <summary>
            定向名称
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRptsDayGetResponse.DataDomain.Uv">
            <summary>
            uv
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAdvertiserCreativeRtrptsTotalGetResponse">
            <summary>
            ZuanshiAdvertiserCreativeRtrptsTotalGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRtrptsTotalGetResponse.CreativeRealtimeRptTotalList">
            <summary>
            结果
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAdvertiserCreativeRtrptsTotalGetResponse.DataDomain">
            <summary>
            DataDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRtrptsTotalGetResponse.DataDomain.AdPv">
            <summary>
            展现量
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRtrptsTotalGetResponse.DataDomain.AdgroupId">
            <summary>
            单元id
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRtrptsTotalGetResponse.DataDomain.AdgroupName">
            <summary>
            单元名称
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRtrptsTotalGetResponse.DataDomain.CampaignId">
            <summary>
            计划id
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRtrptsTotalGetResponse.DataDomain.CampaignName">
            <summary>
            计划名称
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRtrptsTotalGetResponse.DataDomain.Charge">
            <summary>
            花费
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRtrptsTotalGetResponse.DataDomain.Click">
            <summary>
            点击量
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRtrptsTotalGetResponse.DataDomain.CreativeId">
            <summary>
            创意id
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRtrptsTotalGetResponse.DataDomain.CreativeName">
            <summary>
            创意名称
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRtrptsTotalGetResponse.DataDomain.Ctr">
            <summary>
            ctr
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRtrptsTotalGetResponse.DataDomain.Ecpc">
            <summary>
            ecpc
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRtrptsTotalGetResponse.DataDomain.Ecpm">
            <summary>
            ecpm
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRtrptsTotalGetResponse.DataDomain.ImgUrl">
            <summary>
            图片url
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRtrptsTotalGetResponse.DataDomain.LogDate">
            <summary>
            日期
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAdvertiserCampaignRtrptsTotalGetResponse">
            <summary>
            ZuanshiAdvertiserCampaignRtrptsTotalGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCampaignRtrptsTotalGetResponse.CampaignRealtimeRptTotalList">
            <summary>
            查询结果
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAdvertiserCampaignRtrptsTotalGetResponse.DataDomain">
            <summary>
            DataDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCampaignRtrptsTotalGetResponse.DataDomain.AdPv">
            <summary>
            展现量
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCampaignRtrptsTotalGetResponse.DataDomain.CampaignId">
            <summary>
            计划id
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCampaignRtrptsTotalGetResponse.DataDomain.CampaignName">
            <summary>
            计划名称
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCampaignRtrptsTotalGetResponse.DataDomain.Charge">
            <summary>
            花费
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCampaignRtrptsTotalGetResponse.DataDomain.Click">
            <summary>
            点击量
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCampaignRtrptsTotalGetResponse.DataDomain.Ctr">
            <summary>
            ctr
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCampaignRtrptsTotalGetResponse.DataDomain.Ecpc">
            <summary>
            ecpc
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCampaignRtrptsTotalGetResponse.DataDomain.Ecpm">
            <summary>
            ecpm
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCampaignRtrptsTotalGetResponse.DataDomain.LogDate">
            <summary>
            日期
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAdvertiserAccountRptsTotalGetResponse">
            <summary>
            ZuanshiAdvertiserAccountRptsTotalGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAccountRptsTotalGetResponse.AccountOfflineRptTotalList">
            <summary>
            结果
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAdvertiserAccountRptsTotalGetResponse.DataDomain">
            <summary>
            DataDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAccountRptsTotalGetResponse.DataDomain.AdPv">
            <summary>
            展现数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAccountRptsTotalGetResponse.DataDomain.AlipayInShopNum">
            <summary>
            成交数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAccountRptsTotalGetResponse.DataDomain.AlipayInshopAmt">
            <summary>
            成交额
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAccountRptsTotalGetResponse.DataDomain.AvgAccessPageNum">
            <summary>
            平均访问页面数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAccountRptsTotalGetResponse.DataDomain.AvgAccessTime">
            <summary>
            平均访问时长
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAccountRptsTotalGetResponse.DataDomain.CartNum">
            <summary>
            加购物车数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAccountRptsTotalGetResponse.DataDomain.Charge">
            <summary>
            花费
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAccountRptsTotalGetResponse.DataDomain.Click">
            <summary>
            点击数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAccountRptsTotalGetResponse.DataDomain.Ctr">
            <summary>
            ctr
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAccountRptsTotalGetResponse.DataDomain.Cvr">
            <summary>
            cvr
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAccountRptsTotalGetResponse.DataDomain.DeepInshopUv">
            <summary>
            深度进店uv
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAccountRptsTotalGetResponse.DataDomain.DirShopColNum">
            <summary>
            店铺收藏数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAccountRptsTotalGetResponse.DataDomain.Ecpc">
            <summary>
            ecpc
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAccountRptsTotalGetResponse.DataDomain.Ecpm">
            <summary>
            ecpm
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAccountRptsTotalGetResponse.DataDomain.GmvInshopAmt">
            <summary>
            gmv成交额
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAccountRptsTotalGetResponse.DataDomain.GmvInshopNum">
            <summary>
            gmv成交数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAccountRptsTotalGetResponse.DataDomain.InshopItemColNum">
            <summary>
            宝贝收藏数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAccountRptsTotalGetResponse.DataDomain.Roi">
            <summary>
            投入产出比
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAccountRptsTotalGetResponse.DataDomain.Uv">
            <summary>
            uv
            </summary>
        </member>
        <member name="T:Top.Api.Response.TmcUserGetResponse">
            <summary>
            TmcUserGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmcUserGetResponse.TmcUser">
            <summary>
            开通的用户数据
            </summary>
        </member>
        <member name="T:Top.Api.Response.TbkShopGetResponse">
            <summary>
            TbkShopGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkShopGetResponse.Results">
            <summary>
            淘宝客店铺
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkShopGetResponse.TotalResults">
            <summary>
            搜索到符合条件的结果总数
            </summary>
        </member>
        <member name="T:Top.Api.Response.RegionSaleQueryResponse">
            <summary>
            RegionSaleQueryResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.RegionSaleQueryResponse.Result">
            <summary>
            result
            </summary>
        </member>
        <member name="T:Top.Api.Response.RegionSaleQueryResponse.BaseResultDomain">
            <summary>
            BaseResultDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.RegionSaleQueryResponse.BaseResultDomain.Data">
            <summary>
            data
            </summary>
        </member>
        <member name="P:Top.Api.Response.RegionSaleQueryResponse.BaseResultDomain.ErrorCode">
            <summary>
            errorCode
            </summary>
        </member>
        <member name="P:Top.Api.Response.RegionSaleQueryResponse.BaseResultDomain.ErrorMsg">
            <summary>
            errorMsg
            </summary>
        </member>
        <member name="P:Top.Api.Response.RegionSaleQueryResponse.BaseResultDomain.Success">
            <summary>
            success
            </summary>
        </member>
        <member name="T:Top.Api.Response.OpenimUsersUpdateResponse">
            <summary>
            OpenimUsersUpdateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.OpenimUsersUpdateResponse.FailMsg">
            <summary>
            对应每一个失败用户的具体错误信息
            </summary>
        </member>
        <member name="P:Top.Api.Response.OpenimUsersUpdateResponse.UidFail">
            <summary>
            失败的uid列表
            </summary>
        </member>
        <member name="P:Top.Api.Response.OpenimUsersUpdateResponse.UidSucc">
            <summary>
            成功的uid列表
            </summary>
        </member>
        <member name="T:Top.Api.Response.OpenimIoscertProductionSetResponse">
            <summary>
            OpenimIoscertProductionSetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.OpenimIoscertProductionSetResponse.Code">
            <summary>
            操作成功
            </summary>
        </member>
        <member name="T:Top.Api.Response.FenxiaoProductcatUpdateResponse">
            <summary>
            FenxiaoProductcatUpdateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoProductcatUpdateResponse.IsSuccess">
            <summary>
            操作是否成功
            </summary>
        </member>
        <member name="T:Top.Api.Response.FenxiaoGradesGetResponse">
            <summary>
            FenxiaoGradesGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoGradesGetResponse.FenxiaoGrades">
            <summary>
            分销商等级信息
            </summary>
        </member>
        <member name="T:Top.Api.Response.FenxiaoDealerRequisitionorderQueryResponse">
            <summary>
            FenxiaoDealerRequisitionorderQueryResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoDealerRequisitionorderQueryResponse.DealerOrders">
            <summary>
            经销采购单结果列表
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiShopItemFindRequest">
            <summary>
            TOP API: taobao.zuanshi.shop.item.find
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiShopItemFindRequest.ItemName">
            <summary>
            宝贝名称关键字
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiShopItemFindRequest.PageNum">
            <summary>
            当前页数
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiShopItemFindRequest.PageSize">
            <summary>
            分页大小,最大20
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiBannerDmpCrowdCancelRequest">
            <summary>
            TOP API: taobao.zuanshi.banner.dmp.crowd.cancel
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerDmpCrowdCancelRequest.CrowdId">
            <summary>
            DMP人群ID
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiBannerCrowdUpdateRequest">
            <summary>
            TOP API: taobao.zuanshi.banner.crowd.update
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCrowdUpdateRequest.AdgroupId">
            <summary>
            单元ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCrowdUpdateRequest.CampaignId">
            <summary>
            计划ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCrowdUpdateRequest.Crowds">
            <summary>
            按类型更新,需先根据crowdType查询出定向再修改；如果像访客定向添加了自主店铺和种子店铺，修改时只传了一个则另一个被删除
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiBannerCrowdUpdateRequest.SubCrowdDomain">
            <summary>
            SubCrowdDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCrowdUpdateRequest.SubCrowdDomain.SubCrowdName">
            <summary>
            子人群名称
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCrowdUpdateRequest.SubCrowdDomain.SubCrowdValue">
            <summary>
            子人群取值
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiBannerCrowdUpdateRequest.MatrixPriceDomain">
            <summary>
            MatrixPriceDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCrowdUpdateRequest.MatrixPriceDomain.AdzoneId">
            <summary>
            资源位ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCrowdUpdateRequest.MatrixPriceDomain.Price">
            <summary>
            出价，单位：分
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiBannerCrowdUpdateRequest.CrowdDomain">
            <summary>
            CrowdDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCrowdUpdateRequest.CrowdDomain.CrowdName">
            <summary>
            人群名称
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCrowdUpdateRequest.CrowdDomain.CrowdType">
            <summary>
            定向类型
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCrowdUpdateRequest.CrowdDomain.CrowdValue">
            <summary>
            人群取值
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCrowdUpdateRequest.CrowdDomain.MatrixPrices">
            <summary>
            交叉出价,必须填完整的所有资源位的交叉出价信息
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCrowdUpdateRequest.CrowdDomain.SubCrowds">
            <summary>
            子人群
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiBannerCrowdAddRequest">
            <summary>
            TOP API: taobao.zuanshi.banner.crowd.add
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCrowdAddRequest.AdgroupId">
            <summary>
            单元ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCrowdAddRequest.CampaignId">
            <summary>
            计划ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCrowdAddRequest.Crowds">
            <summary>
            定向对象列表
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiBannerCrowdAddRequest.SubCrowdDomain">
            <summary>
            SubCrowdDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCrowdAddRequest.SubCrowdDomain.SubCrowdName">
            <summary>
            子人群名称
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCrowdAddRequest.SubCrowdDomain.SubCrowdValue">
            <summary>
            子人群取值
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiBannerCrowdAddRequest.MatrixPriceDomain">
            <summary>
            MatrixPriceDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCrowdAddRequest.MatrixPriceDomain.AdzoneId">
            <summary>
            资源位ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCrowdAddRequest.MatrixPriceDomain.Price">
            <summary>
            出价，单位分
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiBannerCrowdAddRequest.CrowdDomain">
            <summary>
            CrowdDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCrowdAddRequest.CrowdDomain.CrowdName">
            <summary>
            人群名称
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCrowdAddRequest.CrowdDomain.CrowdType">
            <summary>
            定向类型
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCrowdAddRequest.CrowdDomain.CrowdValue">
            <summary>
            人群取值
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCrowdAddRequest.CrowdDomain.MatrixPrices">
            <summary>
            交叉出价
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCrowdAddRequest.CrowdDomain.SubCrowds">
            <summary>
            定向人群对象
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiBannerCreativeCreateRequest">
            <summary>
            TOP API: taobao.zuanshi.banner.creative.create
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCreativeCreateRequest.CatId">
            <summary>
            类目ID，1,女装 2,彩妆，护肤 3,女鞋 4,男装 5,男鞋 6,箱包 7,食品，茶叶，烟酒 8,内衣 9,保健 10,饰品，服饰 11,运动 12,居家 13,童装，母婴 14,电器 15,数码 16,游戏 17,团购 18,其他
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCreativeCreateRequest.ClickUrl">
            <summary>
            点击链接
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCreativeCreateRequest.Image">
            <summary>
            图片内容.图片最大为2M,只支持jpg,png,jpeg
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCreativeCreateRequest.IsTransToWifi">
            <summary>
            是否需要pc转无线链接，true：是，false：否
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCreativeCreateRequest.Name">
            <summary>
            创意名称
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiBannerCreativeConditionRequest">
            <summary>
            TOP API: taobao.zuanshi.banner.creative.condition
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiBannerAdgroupStatusRequest">
            <summary>
            TOP API: taobao.zuanshi.banner.adgroup.status
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerAdgroupStatusRequest.AdgroupIdList">
            <summary>
            单元ID列表
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerAdgroupStatusRequest.CampaignId">
            <summary>
            单元计划ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerAdgroupStatusRequest.Status">
            <summary>
            状态，投放：1，暂停：0，结束：9
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiBannerAccountBudgetGetRequest">
            <summary>
            TOP API: taobao.zuanshi.banner.account.budget.get
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiAdvertiserDestRptsDownloadRequest">
            <summary>
            TOP API: taobao.zuanshi.advertiser.dest.rpts.download
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserDestRptsDownloadRequest.EndTime">
            <summary>
            查询结束时间
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserDestRptsDownloadRequest.RptType">
            <summary>
            计划类型，1代表展示网络，3代表视频网络
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserDestRptsDownloadRequest.StartTime">
            <summary>
            查询开始时间
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiAdvertiserCampaignRtrptsGetRequest">
            <summary>
            TOP API: taobao.zuanshi.advertiser.campaign.rtrpts.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserCampaignRtrptsGetRequest.CampaignId">
            <summary>
            计划id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserCampaignRtrptsGetRequest.CampaignModel">
            <summary>
            计划类型。1：全店推广，4：单品推广。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserCampaignRtrptsGetRequest.LogDate">
            <summary>
            查询日期
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiAdvertiserAccountRtrptsGetRequest">
            <summary>
            TOP API: taobao.zuanshi.advertiser.account.rtrpts.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAccountRtrptsGetRequest.CampaignModel">
            <summary>
            计划类型。1：返回全店推广汇总数据，4：返回单品推广汇总数据。不传值，返回所有推广账号级别汇总数据。不传返回全店和单品加和数据。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAccountRtrptsGetRequest.LogDate">
            <summary>
            查询日期
            </summary>
        </member>
        <member name="T:Top.Api.Request.TmcGroupDeleteRequest">
            <summary>
            TOP API: taobao.tmc.group.delete
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmcGroupDeleteRequest.GroupName">
            <summary>
            分组名称，分组删除后，用户的消息将会存储于默认分组中。警告：由于分组已经删除，用户之前未消费的消息将无法再获取。不能以default开头，default开头为系统默认组。
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmcGroupDeleteRequest.Nicks">
            <summary>
            用户列表，不传表示删除整个分组，如果用户全部删除后，也会自动删除整个分组
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmcGroupDeleteRequest.UserPlatform">
            <summary>
            用户所属于的平台类型，tbUIC:淘宝用户; icbu: icbu用户
            </summary>
        </member>
        <member name="T:Top.Api.Request.TbkUatmFavoritesItemGetRequest">
            <summary>
            TOP API: taobao.tbk.uatm.favorites.item.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkUatmFavoritesItemGetRequest.AdzoneId">
            <summary>
            推广位id，需要在淘宝联盟后台创建；且属于appkey备案的媒体id（siteid），如何获取adzoneid，请参考，http://club.alimama.com/read-htm-tid-6333967.html?spm=0.0.0.0.msZnx5
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkUatmFavoritesItemGetRequest.FavoritesId">
            <summary>
            选品库的id
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkUatmFavoritesItemGetRequest.Fields">
            <summary>
            需要输出则字段列表，逗号分隔
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkUatmFavoritesItemGetRequest.PageNo">
            <summary>
            第几页，默认：1，从1开始计数
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkUatmFavoritesItemGetRequest.PageSize">
            <summary>
            页大小，默认20，1~100
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkUatmFavoritesItemGetRequest.Platform">
            <summary>
            链接形式：1：PC，2：无线，默认：１
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkUatmFavoritesItemGetRequest.Unid">
            <summary>
            自定义输入串，英文和数字组成，长度不能大于12个字符，区分不同的推广渠道
            </summary>
        </member>
        <member name="T:Top.Api.Request.TbkUatmFavoritesGetRequest">
            <summary>
            TOP API: taobao.tbk.uatm.favorites.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkUatmFavoritesGetRequest.Fields">
            <summary>
            需要返回的字段列表，不能为空，字段名之间使用逗号分隔
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkUatmFavoritesGetRequest.PageNo">
            <summary>
            第几页，从1开始计数
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkUatmFavoritesGetRequest.PageSize">
            <summary>
            默认20，页大小，即每一页的活动个数
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkUatmFavoritesGetRequest.Type">
            <summary>
            默认值-1；选品库类型，1：普通选品组，2：高佣选品组，-1，同时输出所有类型的选品组
            </summary>
        </member>
        <member name="T:Top.Api.Request.TbkShopGetRequest">
            <summary>
            TOP API: taobao.tbk.shop.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkShopGetRequest.EndAuctionCount">
            <summary>
            累计推广商品上限
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkShopGetRequest.EndCommissionRate">
            <summary>
            淘客佣金比率上限，1~10000
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkShopGetRequest.EndCredit">
            <summary>
            信用等级上限，1~20
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkShopGetRequest.EndTotalAction">
            <summary>
            店铺商品总数上限
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkShopGetRequest.Fields">
            <summary>
            需返回的字段列表
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkShopGetRequest.IsTmall">
            <summary>
            是否商城的店铺，设置为true表示该是属于淘宝商城的店铺，设置为false或不设置表示不判断这个属性
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkShopGetRequest.PageNo">
            <summary>
            第几页，默认1，1~100
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkShopGetRequest.PageSize">
            <summary>
            页大小，默认20，1~100
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkShopGetRequest.Platform">
            <summary>
            链接形式：1：PC，2：无线，默认：１
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkShopGetRequest.Q">
            <summary>
            查询词
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkShopGetRequest.Sort">
            <summary>
            排序_des（降序），排序_asc（升序），佣金比率（commission_rate）， 商品数量（auction_count），销售总数量（total_auction）
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkShopGetRequest.StartAuctionCount">
            <summary>
            累计推广商品下限
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkShopGetRequest.StartCommissionRate">
            <summary>
            淘客佣金比率下限，1~10000
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkShopGetRequest.StartCredit">
            <summary>
            信用等级下限，1~20
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkShopGetRequest.StartTotalAction">
            <summary>
            店铺商品总数下限
            </summary>
        </member>
        <member name="T:Top.Api.Request.OpenimTribeUnsetmanagerRequest">
            <summary>
            TOP API: taobao.openim.tribe.unsetmanager
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimTribeUnsetmanagerRequest.Member">
            <summary>
            用户信息
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimTribeUnsetmanagerRequest.Tid">
            <summary>
            群id
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimTribeUnsetmanagerRequest.User">
            <summary>
            用户信息
            </summary>
        </member>
        <member name="T:Top.Api.Request.InventoryAdjustExternalRequest">
            <summary>
            TOP API: taobao.inventory.adjust.external
            </summary>
        </member>
        <member name="P:Top.Api.Request.InventoryAdjustExternalRequest.BizType">
            <summary>
            biz_type
            </summary>
        </member>
        <member name="P:Top.Api.Request.InventoryAdjustExternalRequest.BizUniqueCode">
            <summary>
            商家外部定单号
            </summary>
        </member>
        <member name="P:Top.Api.Request.InventoryAdjustExternalRequest.Items">
            <summary>
            商品初始库存信息： [{"scItemId":"商品后端ID，如果有传scItemCode,参数可以为0","scItemCode":"商品商家编码","inventoryType":"库存类型 1：正常,”direction”: 1: 盘盈 -1: 盘亏,参数可选,"quantity":"数量(正数)"}]
            </summary>
        </member>
        <member name="P:Top.Api.Request.InventoryAdjustExternalRequest.OccupyOperateCode">
            <summary>
            库存占用返回的操作码.operate_type 为OUTBOUND时，如果是确认事先进行过的库存占用，需要传入当时返回的操作码，并且明细必须与申请时保持一致
            </summary>
        </member>
        <member name="P:Top.Api.Request.InventoryAdjustExternalRequest.OperateTime">
            <summary>
            业务操作时间
            </summary>
        </member>
        <member name="P:Top.Api.Request.InventoryAdjustExternalRequest.OperateType">
            <summary>
            operate_type
            </summary>
        </member>
        <member name="P:Top.Api.Request.InventoryAdjustExternalRequest.ReduceType">
            <summary>
            reduce_type
            </summary>
        </member>
        <member name="P:Top.Api.Request.InventoryAdjustExternalRequest.StoreCode">
            <summary>
            商家仓库编码
            </summary>
        </member>
        <member name="T:Top.Api.Request.FenxiaoRefundMessageGetRequest">
            <summary>
            TOP API: taobao.fenxiao.refund.message.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoRefundMessageGetRequest.PageNo">
            <summary>
            页码。（大于0的整数。默认为1）
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoRefundMessageGetRequest.PageSize">
            <summary>
            每页条数。（默认10）
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoRefundMessageGetRequest.SubOrderId">
            <summary>
            子采购单id
            </summary>
        </member>
        <member name="T:Top.Api.Request.FenxiaoProductSkusGetRequest">
            <summary>
            TOP API: taobao.fenxiao.product.skus.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductSkusGetRequest.ProductId">
            <summary>
            产品ID
            </summary>
        </member>
        <member name="T:Top.Api.Request.FenxiaoProductGradepriceGetRequest">
            <summary>
            TOP API: taobao.fenxiao.product.gradeprice.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductGradepriceGetRequest.ProductId">
            <summary>
            产品id
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductGradepriceGetRequest.SkuId">
            <summary>
            skuId
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductGradepriceGetRequest.TradeType">
            <summary>
            经、代销模式（1：代销、2：经销）
            </summary>
        </member>
        <member name="T:Top.Api.Request.FenxiaoDistributorsGetRequest">
            <summary>
            TOP API: taobao.fenxiao.distributors.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoDistributorsGetRequest.Nicks">
            <summary>
            分销商用户名列表。多个之间以“,”分隔;最多支持50个分销商用户名。
            </summary>
        </member>
        <member name="T:Top.Api.Request.FenxiaoDealerRequisitionorderGetRequest">
            <summary>
            TOP API: taobao.fenxiao.dealer.requisitionorder.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoDealerRequisitionorderGetRequest.EndDate">
            <summary>
            采购申请/经销采购单最迟修改时间。与start_date字段的最大时间间隔不能超过30天
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoDealerRequisitionorderGetRequest.Fields">
            <summary>
            多个字段用","分隔。 fields 如果为空：返回所有采购申请/经销采购单对象(dealer_orders)字段。 如果不为空：返回指定采购单对象(dealer_orders)字段。 例1： dealer_order_details.product_id 表示只返回product_id 例2： dealer_order_details 表示只返回明细列表
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoDealerRequisitionorderGetRequest.Identity">
            <summary>
            查询者自己在所要查询的采购申请/经销采购单中的身份。  1：供应商。  2：分销商。  注：填写其他值当做错误处理。
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoDealerRequisitionorderGetRequest.OrderStatus">
            <summary>
            采购申请/经销采购单状态。  0：全部状态。  1：分销商提交申请，待供应商审核。  2：供应商驳回申请，待分销商确认。  3：供应商修改后，待分销商确认。  4：分销商拒绝修改，待供应商再审核。  5：审核通过下单成功，待分销商付款。  7：付款成功，待供应商发货。  8：供应商发货，待分销商收货。  9：分销商收货，交易成功。  10：采购申请/经销采购单关闭。    注：无值按默认值0计，超出状态范围返回错误信息。
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoDealerRequisitionorderGetRequest.PageNo">
            <summary>
            页码（大于0的整数。无值或小于1的值按默认值1计）
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoDealerRequisitionorderGetRequest.PageSize">
            <summary>
            每页条数（大于0但小于等于50的整数。无值或大于50或小于1的值按默认值50计）
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoDealerRequisitionorderGetRequest.StartDate">
            <summary>
            采购申请/经销采购单最早修改时间
            </summary>
        </member>
        <member name="T:Top.Api.Request.FenxiaoCooperationProductcatAddRequest">
            <summary>
            TOP API: taobao.fenxiao.cooperation.productcat.add
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoCooperationProductcatAddRequest.CooperateId">
            <summary>
            合作关系id
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoCooperationProductcatAddRequest.GradeId">
            <summary>
            等级ID（为空则不修改）
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoCooperationProductcatAddRequest.ProductLineList">
            <summary>
            产品线id列表，若有多个，以逗号分隔
            </summary>
        </member>
        <member name="T:Top.Api.Request.DmpTagFindRequest">
            <summary>
            TOP API: taobao.dmp.tag.find
            </summary>
        </member>
        <member name="P:Top.Api.Request.DmpTagFindRequest.TagName">
            <summary>
            标签名称模糊查询
            </summary>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Core.INameTransform">
            <summary>
            INameTransform defines how file system names are transformed for use with archives, or vice versa.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Core.INameTransform.TransformFile(System.String)">
            <summary>
            Given a file name determine the transformed value.
            </summary>
            <param name="name">The name to transform.</param>
            <returns>The transformed file name.</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Core.INameTransform.TransformDirectory(System.String)">
            <summary>
            Given a directory name determine the transformed value.
            </summary>
            <param name="name">The name to transform.</param>
            <returns>The transformed directory name</returns>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Zip.Compression.InflaterHuffmanTree">
            <summary>
            Huffman tree used for inflation
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.InflaterHuffmanTree.defLitLenTree">
            <summary>
            Literal length tree
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.InflaterHuffmanTree.defDistTree">
            <summary>
            Distance tree
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.InflaterHuffmanTree.#ctor(System.Byte[])">
            <summary>
            Constructs a Huffman tree from the array of code lengths.
            </summary>
            <param name = "codeLengths">
            the array of code lengths
            </param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.InflaterHuffmanTree.GetSymbol(ICSharpCode.SharpZipLib.Zip.Compression.Streams.StreamManipulator)">
            <summary>
            Reads the next symbol from input.  The symbol is encoded using the
            huffman tree.
            </summary>
            <param name="input">
            input the input source.
            </param>
            <returns>
            the next symbol, or -1 if not enough input is available.
            </returns>
        </member>
        <member name="T:Top.Api.Domain.RptAdzoneCatPvCtrDTO">
            <summary>
            RptAdzoneCatPvCtrDTO Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RptAdzoneCatPvCtrDTO.AdzoneId">
            <summary>
            资源位id标识
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RptAdzoneCatPvCtrDTO.AdzoneName">
            <summary>
            资源位名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RptAdzoneCatPvCtrDTO.AveClick">
            <summary>
            点击率
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RptAdzoneCatPvCtrDTO.FPv">
            <summary>
            展现量
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RptAdzoneCatPvCtrDTO.LogDate">
            <summary>
            报表日期
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RptAdzoneCatPvCtrDTO.MainCatName">
            <summary>
            主营类目
            </summary>
        </member>
        <member name="T:Top.Api.Domain.FenxiaoItemRecord">
            <summary>
            FenxiaoItemRecord Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoItemRecord.Created">
            <summary>
            下载时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoItemRecord.DistributorId">
            <summary>
            分销商ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoItemRecord.ItemId">
            <summary>
            商品ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoItemRecord.Modified">
            <summary>
            更新时间（系统时间，无业务意义）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoItemRecord.ProductId">
            <summary>
            产品ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoItemRecord.TradeType">
            <summary>
            分销方式：AGENT（只做代销，默认值）、DEALER（只做经销）
            </summary>
        </member>
        <member name="T:Top.Api.Domain.FenxiaoImage">
            <summary>
            FenxiaoImage Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoImage.ImageId">
            <summary>
            图片id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoImage.ImagePosition">
            <summary>
            图片顺序
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoImage.ImageUrl">
            <summary>
            图片对应的url
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoImage.Properties">
            <summary>
            当图片类型为属性图片时，表示图片对应的属性pv对。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoImage.Type">
            <summary>
            图片类型（PRODUCT：产品图片  EXTPRODUCT：产品辅图  PROPERTIES：产品属性图片 ）
            </summary>
        </member>
        <member name="T:Top.Api.Domain.Discount">
            <summary>
            Discount Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Discount.Created">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Discount.Details">
            <summary>
            折扣详情
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Discount.DiscountId">
            <summary>
            折扣ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Discount.Modified">
            <summary>
            修改时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Discount.Name">
            <summary>
            折扣名称
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaCampaignAreaUpdateResponse">
            <summary>
            SimbaCampaignAreaUpdateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaCampaignAreaUpdateResponse.CampaignArea">
            <summary>
            修改后的推广计划投放地域
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaAdgroupCatmatchGetResponse">
            <summary>
            SimbaAdgroupCatmatchGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaAdgroupCatmatchGetResponse.Adgroupcatmatch">
            <summary>
            推广组的类目出价对象
            </summary>
        </member>
        <member name="T:Top.Api.Response.UserrecommendItemsGetResponse">
            <summary>
            UserrecommendItemsGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.UserrecommendItemsGetResponse.FavoriteItems">
            <summary>
            返回用户相关的关联宝贝集合
            </summary>
        </member>
        <member name="T:Top.Api.Response.PromotionMealGetResponse">
            <summary>
            PromotionMealGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.PromotionMealGetResponse.MealList">
            <summary>
            搭配套餐列表。
            </summary>
        </member>
        <member name="T:Top.Api.Response.PromotionActivityGetResponse">
            <summary>
            PromotionActivityGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.PromotionActivityGetResponse.Activitys">
            <summary>
            活动列表
            </summary>
        </member>
        <member name="T:Top.Api.Response.TmallProductSchemaGetResponse">
            <summary>
            TmallProductSchemaGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallProductSchemaGetResponse.GetProductResult">
            <summary>
            产品信息数据。schema形式
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaInsightCatsinfoGetResponse">
            <summary>
            SimbaInsightCatsinfoGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaInsightCatsinfoGetResponse.CategoryInfoList">
            <summary>
            类目详细信息
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaAdgroupsbycampaignidGetResponse">
            <summary>
            SimbaAdgroupsbycampaignidGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaAdgroupsbycampaignidGetResponse.Adgroups">
            <summary>
            返回的推广组分页对象
            </summary>
        </member>
        <member name="T:Top.Api.Response.SubuserDutysGetResponse">
            <summary>
            SubuserDutysGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SubuserDutysGetResponse.Dutys">
            <summary>
            职务信息
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaCreativeidsDeletedGetResponse">
            <summary>
            SimbaCreativeidsDeletedGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaCreativeidsDeletedGetResponse.DeletedCreativeIds">
            <summary>
            创意ID列表
            </summary>
        </member>
        <member name="T:Top.Api.Response.SellercenterRolesGetResponse">
            <summary>
            SellercenterRolesGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SellercenterRolesGetResponse.Roles">
            <summary>
            卖家子账号角色列表。<br/>返回对象为 role数据对象中的role_id，role_name，description，seller_id，create_time，modified_time。不包含permissions(权限点)
            </summary>
        </member>
        <member name="T:Top.Api.Response.ItemcatsAuthorizeGetResponse">
            <summary>
            ItemcatsAuthorizeGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ItemcatsAuthorizeGetResponse.SellerAuthorize">
            <summary>
            里面有3个数组：  Brand[]品牌列表,  ItemCat[] 类目列表  XinpinItemCat[] 针对于C卖家新品类目列表
            </summary>
        </member>
        <member name="T:Top.Api.Response.WangwangEserviceGroupmemberGetResponse">
            <summary>
            WangwangEserviceGroupmemberGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.WangwangEserviceGroupmemberGetResponse.GroupMemberList">
            <summary>
            组及其成员列表
            </summary>
        </member>
        <member name="T:Top.Api.Response.PictureIsreferencedGetResponse">
            <summary>
            PictureIsreferencedGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.PictureIsreferencedGetResponse.IsReferenced">
            <summary>
            图片是否被引用
            </summary>
        </member>
        <member name="T:Top.Api.Response.ProductPropimgDeleteResponse">
            <summary>
            ProductPropimgDeleteResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ProductPropimgDeleteResponse.ProductPropImg">
            <summary>
            返回product_prop_img数据结构中的：product_id,id
            </summary>
        </member>
        <member name="T:Top.Api.Response.TmallItemSizemappingTemplatesListResponse">
            <summary>
            TmallItemSizemappingTemplatesListResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallItemSizemappingTemplatesListResponse.SizeMappingTemplates">
            <summary>
            尺码表模板列表
            </summary>
        </member>
        <member name="T:Top.Api.Response.ShopUpdateResponse">
            <summary>
            ShopUpdateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ShopUpdateResponse.Shop">
            <summary>
            店铺信息
            </summary>
        </member>
        <member name="T:Top.Api.Response.ShopGetResponse">
            <summary>
            ShopGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ShopGetResponse.Shop">
            <summary>
            店铺信息
            </summary>
        </member>
        <member name="T:Top.Api.Response.TraderateAddResponse">
            <summary>
            TraderateAddResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TraderateAddResponse.TradeRate">
            <summary>
            返回tid、oid、create
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaRptCampadgroupbaseGetResponse">
            <summary>
            SimbaRptCampadgroupbaseGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaRptCampadgroupbaseGetResponse.RptCampadgroupBaseList">
            <summary>
            推广计划下推广组的基础数据列表
            </summary>
        </member>
        <member name="T:Top.Api.Response.TmcUserCancelResponse">
            <summary>
            TmcUserCancelResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmcUserCancelResponse.IsSuccess">
            <summary>
            是否成功,如果为false并且没有错误码，表示删除的用户不存在。
            </summary>
        </member>
        <member name="T:Top.Api.Response.ItemsOnsaleGetResponse">
            <summary>
            ItemsOnsaleGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ItemsOnsaleGetResponse.Items">
            <summary>
            搜索到的商品列表，具体字段根据设定的fields决定，不包括desc字段
            </summary>
        </member>
        <member name="P:Top.Api.Response.ItemsOnsaleGetResponse.TotalResults">
            <summary>
            搜索到符合条件的结果总数
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaCampaignAddRequest">
            <summary>
            TOP API: taobao.simba.campaign.add
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaCampaignAddRequest.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaCampaignAddRequest.Title">
            <summary>
            推广计划名称，不能多余20个汉字，不能和客户其他推广计划同名。
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaAccountBalanceGetRequest">
            <summary>
            TOP API: taobao.simba.account.balance.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAccountBalanceGetRequest.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaCampaignAreaoptionsGetRequest">
            <summary>
            TOP API: taobao.simba.campaign.areaoptions.get
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaAdgroupCatmatchUpdateRequest">
            <summary>
            TOP API: taobao.simba.adgroup.catmatch.update
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupCatmatchUpdateRequest.AdgroupId">
            <summary>
            推广组Id
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupCatmatchUpdateRequest.CatmatchId">
            <summary>
            类目出价Id
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupCatmatchUpdateRequest.MaxPrice">
            <summary>
            类目出价，单位为分，不能小于5。如果use_default_price字段为使用默认出价，则此max_price字段所传入的值不起作用。商品将会使用默认出价。
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupCatmatchUpdateRequest.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupCatmatchUpdateRequest.OnlineStatus">
            <summary>
            是否启用类目出价； offline-不启用 online-启用,如果此字段状态为offline时，则max_price,use_default_price字段值不起作用
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupCatmatchUpdateRequest.UseDefaultPrice">
            <summary>
            是否使用推广组默认出价false为不使用，true为使用
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaCreativeDeleteRequest">
            <summary>
            TOP API: taobao.simba.creative.delete
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaCreativeDeleteRequest.CreativeId">
            <summary>
            创意Id
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaCreativeDeleteRequest.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaKeywordsRecommendGetRequest">
            <summary>
            TOP API: taobao.simba.keywords.recommend.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaKeywordsRecommendGetRequest.AdgroupId">
            <summary>
            推广组ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaKeywordsRecommendGetRequest.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaKeywordsRecommendGetRequest.OrderBy">
            <summary>
            排序方式: 搜索量 search_volume 市场平均价格 average_price 相关度 relevance 不排序 non 默认为 non
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaKeywordsRecommendGetRequest.PageNo">
            <summary>
            返回的第几页数据，默认为1
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaKeywordsRecommendGetRequest.PageSize">
            <summary>
            返回的每页数据量大小,最大200
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaKeywordsRecommendGetRequest.Pertinence">
            <summary>
            相关度
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaKeywordsRecommendGetRequest.Search">
            <summary>
            搜索量,设置此值后返回的就是大于此搜索量的词列表
            </summary>
        </member>
        <member name="T:Top.Api.Request.TmallProductAddSchemaGetRequest">
            <summary>
            TOP API: tmall.product.add.schema.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallProductAddSchemaGetRequest.BrandId">
            <summary>
            品牌ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallProductAddSchemaGetRequest.CategoryId">
            <summary>
            商品发布的目标类目，必须是叶子类目
            </summary>
        </member>
        <member name="T:Top.Api.Request.SubuserDutyUpdateRequest">
            <summary>
            TOP API: taobao.subuser.duty.update
            </summary>
        </member>
        <member name="P:Top.Api.Request.SubuserDutyUpdateRequest.DutyId">
            <summary>
            职务ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.SubuserDutyUpdateRequest.DutyLevel">
            <summary>
            职务级别
            </summary>
        </member>
        <member name="P:Top.Api.Request.SubuserDutyUpdateRequest.DutyName">
            <summary>
            职务名称
            </summary>
        </member>
        <member name="P:Top.Api.Request.SubuserDutyUpdateRequest.UserNick">
            <summary>
            主账号用户名
            </summary>
        </member>
        <member name="T:Top.Api.Request.AppstoreSubscribeGetRequest">
            <summary>
            TOP API: taobao.appstore.subscribe.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.AppstoreSubscribeGetRequest.LeaseId">
            <summary>
            插件实例ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.AppstoreSubscribeGetRequest.Nick">
            <summary>
            用户昵称
            </summary>
        </member>
        <member name="T:Top.Api.Request.JushitaJdpTaskUpdateRequest">
            <summary>
            TOP API: taobao.jushita.jdp.task.update
            </summary>
        </member>
        <member name="P:Top.Api.Request.JushitaJdpTaskUpdateRequest.ErrorMessage">
            <summary>
            任务执行失败的错误信息，可以方便排查问题。
            </summary>
        </member>
        <member name="P:Top.Api.Request.JushitaJdpTaskUpdateRequest.ExecuteHost">
            <summary>
            任务执行的机器主机名,用于方便排查问题。
            </summary>
        </member>
        <member name="P:Top.Api.Request.JushitaJdpTaskUpdateRequest.Id">
            <summary>
            任务的编号
            </summary>
        </member>
        <member name="P:Top.Api.Request.JushitaJdpTaskUpdateRequest.NextExecuteTime">
            <summary>
            任务的下次开始执行时间。
            </summary>
        </member>
        <member name="P:Top.Api.Request.JushitaJdpTaskUpdateRequest.NowSyncTime">
            <summary>
            任务当前同步到的时间点。
            </summary>
        </member>
        <member name="P:Top.Api.Request.JushitaJdpTaskUpdateRequest.Params">
            <summary>
            任务的参数，用json格式表示
            </summary>
        </member>
        <member name="P:Top.Api.Request.JushitaJdpTaskUpdateRequest.Status">
            <summary>
            任务的状态，0表示任务新建或未执行完成，1表示任务停止，2表示任务已经完成，-1表示任务执行失败。
            </summary>
        </member>
        <member name="P:Top.Api.Request.JushitaJdpTaskUpdateRequest.TargetAppkey">
            <summary>
            普通isv不能传入此参数
            </summary>
        </member>
        <member name="P:Top.Api.Request.JushitaJdpTaskUpdateRequest.Type">
            <summary>
            任务的类型,
            </summary>
        </member>
        <member name="P:Top.Api.Request.JushitaJdpTaskUpdateRequest.Version">
            <summary>
            任务更新时的版本号，此值在选择出的任务中获取到。
            </summary>
        </member>
        <member name="T:Top.Api.Request.SellercenterUserPermissionsGetRequest">
            <summary>
            TOP API: taobao.sellercenter.user.permissions.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SellercenterUserPermissionsGetRequest.Nick">
            <summary>
            用户标识，次入参必须为子账号比如zhangsan:cool。如果只输入主账号zhangsan，将报错。
            </summary>
        </member>
        <member name="T:Top.Api.Request.PromotionLimitdiscountDetailGetRequest">
            <summary>
            TOP API: taobao.promotion.limitdiscount.detail.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.PromotionLimitdiscountDetailGetRequest.LimitDiscountId">
            <summary>
            限时打折ID。这个针对查询唯一限时打折情况。
            </summary>
        </member>
        <member name="T:Top.Api.Request.ItemsCustomGetRequest">
            <summary>
            TOP API: taobao.items.custom.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemsCustomGetRequest.Fields">
            <summary>
            需返回的字段列表，参考：Item商品结构体说明，其中barcode、sku.barcode等条形码字段暂不支持；多个字段之间用“,”分隔。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemsCustomGetRequest.OuterId">
            <summary>
            商品的外部商品ID，支持批量，最多不超过40个。
            </summary>
        </member>
        <member name="T:Top.Api.Request.TradeConfirmfeeGetRequest">
            <summary>
            TOP API: taobao.trade.confirmfee.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.TradeConfirmfeeGetRequest.Tid">
            <summary>
            交易主订单或子订单ID
            </summary>
        </member>
        <member name="T:Top.Api.Request.ItempropsGetRequest">
            <summary>
            TOP API: taobao.itemprops.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItempropsGetRequest.AttrKeys">
            <summary>
            属性的Key，支持多条，以“,”分隔
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItempropsGetRequest.ChildPath">
            <summary>
            类目子属性路径,由该子属性上层的类目属性和类目属性值组成,格式pid:vid;pid:vid.取类目子属性需要传child_path,cid
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItempropsGetRequest.Cid">
            <summary>
            叶子类目ID，如果只传cid，则只返回一级属性,通过taobao.itemcats.get获得叶子类目ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItempropsGetRequest.Datetime">
            <summary>
            增量时间戳。格式:yyyy-MM-dd HH:mm:ss假如传2005-01-01 00:00:00，则取所有的属性和子属性ID(如果传了pid会忽略datetime)
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItempropsGetRequest.Fields">
            <summary>
            需要返回的字段列表，见：ItemProp，默认返回：pid, name, must, multi, prop_values
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItempropsGetRequest.IsColorProp">
            <summary>
            是否颜色属性。可选值:true(是),false(否) (删除的属性不会匹配和返回这个条件)
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItempropsGetRequest.IsEnumProp">
            <summary>
            是否枚举属性。可选值:true(是),false(否) (删除的属性不会匹配和返回这个条件)。如果返回true，属性值是下拉框选择输入，如果返回false，属性值是用户自行手工输入。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItempropsGetRequest.IsInputProp">
            <summary>
            在is_enum_prop是true的前提下，是否是卖家可以自行输入的属性（注：如果is_enum_prop返回false，该参数统一返回false）。可选值:true(是),false(否) (删除的属性不会匹配和返回这个条件)
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItempropsGetRequest.IsItemProp">
            <summary>
            是否商品属性，这个属性只能放于发布商品时使用。可选值:true(是),false(否)
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItempropsGetRequest.IsKeyProp">
            <summary>
            是否关键属性。可选值:true(是),false(否)
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItempropsGetRequest.IsSaleProp">
            <summary>
            是否销售属性。可选值:true(是),false(否)
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItempropsGetRequest.ParentPid">
            <summary>
            父属性ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItempropsGetRequest.Pid">
            <summary>
            属性id (取类目属性时，传pid，不用同时传PID和parent_pid)
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItempropsGetRequest.Type">
            <summary>
            获取类目的类型：1代表集市、2代表天猫
            </summary>
        </member>
        <member name="T:Top.Api.Request.RefundMessageAddRequest">
            <summary>
            TOP API: taobao.refund.message.add
            </summary>
        </member>
        <member name="P:Top.Api.Request.RefundMessageAddRequest.Content">
            <summary>
            留言内容。最大长度: 400个字节
            </summary>
        </member>
        <member name="P:Top.Api.Request.RefundMessageAddRequest.Image">
            <summary>
            图片（凭证）。类型: JPG,GIF,PNG;最大为: 500K
            </summary>
        </member>
        <member name="P:Top.Api.Request.RefundMessageAddRequest.RefundId">
            <summary>
            退款编号。
            </summary>
        </member>
        <member name="T:Top.Api.Request.WangwangEserviceEvalsGetRequest">
            <summary>
            TOP API: taobao.wangwang.eservice.evals.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.WangwangEserviceEvalsGetRequest.EndDate">
            <summary>
            结束时间。结束时间和开始时间间隔必须在7天内
            </summary>
        </member>
        <member name="P:Top.Api.Request.WangwangEserviceEvalsGetRequest.ServiceStaffId">
            <summary>
            想要查询的账号列表
            </summary>
        </member>
        <member name="P:Top.Api.Request.WangwangEserviceEvalsGetRequest.StartDate">
            <summary>
            开始时间。查询的开始时间和当前时间比，不能超过14天。且开始时间和结束时间间隔，必须在7天内。
            </summary>
        </member>
        <member name="T:Top.Api.Request.LogisticsConsignResendRequest">
            <summary>
            TOP API: taobao.logistics.consign.resend
            </summary>
        </member>
        <!-- 对于成员“P:Top.Api.Request.LogisticsConsignResendRequest.CompanyCode”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“P:Top.Api.Request.LogisticsConsignResendRequest.Feature”忽略有格式错误的 XML 注释 -->
        <member name="P:Top.Api.Request.LogisticsConsignResendRequest.IsSplit">
            <summary>
            表明是否是拆单，默认值0，1表示拆单
            </summary>
        </member>
        <member name="P:Top.Api.Request.LogisticsConsignResendRequest.OutSid">
            <summary>
            运单号.具体一个物流公司的真实运单号码。淘宝官方物流会校验，请谨慎传入；
            </summary>
        </member>
        <member name="P:Top.Api.Request.LogisticsConsignResendRequest.SellerIp">
            <summary>
            商家的IP地址
            </summary>
        </member>
        <member name="P:Top.Api.Request.LogisticsConsignResendRequest.SubTid">
            <summary>
            拆单子订单列表，对应的数据是：子订单号列表。可以不传，但是如果传了则必须符合传递的规则。子订单必须是操作的物流订单的子订单的真子集！
            </summary>
        </member>
        <member name="P:Top.Api.Request.LogisticsConsignResendRequest.Tid">
            <summary>
            淘宝交易ID
            </summary>
        </member>
        <member name="T:Top.Api.Request.WirelessBuntingShopShorturlCreateRequest">
            <summary>
            TOP API: taobao.wireless.bunting.shop.shorturl.create
            </summary>
        </member>
        <member name="P:Top.Api.Request.WirelessBuntingShopShorturlCreateRequest.ShopId">
            <summary>
            商店id
            </summary>
        </member>
        <member name="T:Top.Api.Request.WangwangEserviceReceivenumGetRequest">
            <summary>
            TOP API: taobao.wangwang.eservice.receivenum.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.WangwangEserviceReceivenumGetRequest.EndDate">
            <summary>
            查询接待人数的结束日期 时间精确到日 时分秒可以直接传00:00:00
            </summary>
        </member>
        <member name="P:Top.Api.Request.WangwangEserviceReceivenumGetRequest.ServiceStaffId">
            <summary>
            客服人员id：cntaobao+淘宝nick，例如cntaobaotest
            </summary>
        </member>
        <member name="P:Top.Api.Request.WangwangEserviceReceivenumGetRequest.StartDate">
            <summary>
            查询接待人数的开始日期 时间精确到日 时分秒可直接传 00:00:00
            </summary>
        </member>
        <member name="T:Top.Api.Request.TmallProductSpecAddRequest">
            <summary>
            TOP API: tmall.product.spec.add
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallProductSpecAddRequest.Barcode">
            <summary>
            产品二维码
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallProductSpecAddRequest.CertifiedPicStr">
            <summary>
            存放产品规格认证类型-认证图片url映射信息，格式为k:v;k:v;，其中key为认证类型数字id，value为调用tmall.product.spec.pic.upload返回的认证图片url文本
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallProductSpecAddRequest.CertifiedTxtStr">
            <summary>
            存放产品规格认证类型-认证文本映射信息，格式为k:v;k:v;，其中key为认证类型数字id，value为认证文本值
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallProductSpecAddRequest.ChangeProp">
            <summary>
            产品基础色，数据格式为：pid:vid:rvid1,rvid2,rvid3;pid:vid:rvid1
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallProductSpecAddRequest.CustomerSpecProps">
            <summary>
            用户自定义销售属性，结构：pid1:value1;pid2:value2。在
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallProductSpecAddRequest.Image">
            <summary>
            产品图片
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallProductSpecAddRequest.LabelPrice">
            <summary>
            产品规格吊牌价，以分为单位，无默认值，上限999999999
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallProductSpecAddRequest.MarketTime">
            <summary>
            产品上市时间
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallProductSpecAddRequest.ProductCode">
            <summary>
            产品货号
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallProductSpecAddRequest.ProductId">
            <summary>
            产品ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallProductSpecAddRequest.SpecProps">
            <summary>
            产品的规格属性
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallProductSpecAddRequest.SpecPropsAlias">
            <summary>
            规格属性别名,只允许传颜色别名
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaLoginAuthsignGetRequest">
            <summary>
            TOP API: taobao.simba.login.authsign.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaLoginAuthsignGetRequest.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaRptCampadgroupbaseGetRequest">
            <summary>
            TOP API: taobao.simba.rpt.campadgroupbase.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptCampadgroupbaseGetRequest.CampaignId">
            <summary>
            查询推广计划id
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptCampadgroupbaseGetRequest.EndTime">
            <summary>
            结束日期,格式yyyy-mm-dd
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptCampadgroupbaseGetRequest.Nick">
            <summary>
            昵称
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptCampadgroupbaseGetRequest.PageNo">
            <summary>
            页码
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptCampadgroupbaseGetRequest.PageSize">
            <summary>
            每页大小
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptCampadgroupbaseGetRequest.SearchType">
            <summary>
            报表类型（搜索：SEARCH,类目出价：CAT, 定向投放：NOSEARCH汇总：SUMMARY）SUMMARY必须单选，其他值可多选例如：SEARCH,CAT
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptCampadgroupbaseGetRequest.Source">
            <summary>
            数据来源（PC站内：1，PC站外：2，无线站内：4，无线站外 : 5, 汇总：SUMMARY）SUMMARY必须单选，其他值可多选例如1,2
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptCampadgroupbaseGetRequest.StartTime">
            <summary>
            开始日期,格式yyyy-mm-dd
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptCampadgroupbaseGetRequest.SubwayToken">
            <summary>
            权限验证信息
            </summary>
        </member>
        <member name="T:Top.Api.Request.ItemSkuUpdateRequest">
            <summary>
            TOP API: taobao.item.sku.update
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemSkuUpdateRequest.Barcode">
            <summary>
            SKU条形码
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemSkuUpdateRequest.Ignorewarning">
            <summary>
            忽略警告提示.
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemSkuUpdateRequest.ItemPrice">
            <summary>
            sku所属商品的价格。当用户更新sku，使商品价格不属于sku价格之间的时候，用于修改商品的价格，使sku能够更新成功
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemSkuUpdateRequest.Lang">
            <summary>
            Sku文字的版本。可选值:zh_HK(繁体),zh_CN(简体);默认值:zh_CN
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemSkuUpdateRequest.NumIid">
            <summary>
            Sku所属商品数字id，可通过 taobao.item.get 获取
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemSkuUpdateRequest.OuterId">
            <summary>
            Sku的商家外部id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemSkuUpdateRequest.Price">
            <summary>
            Sku的销售价格。精确到2位小数;单位:元。如:200.07，表示:200元7分。修改后的sku价格要保证商品的价格在所有sku价格所形成的价格区间内（例如：商品价格为6元，sku价格有5元、10元两种，如果要修改5元sku的价格，那么修改的范围只能是0-6元之间；如果要修改10元的sku，那么修改的范围只能是6到无穷大的区间中）
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemSkuUpdateRequest.Properties">
            <summary>
            Sku属性串。格式:pid:vid;pid:vid,如: 1627207:3232483;1630696:3284570,表示机身颜色:军绿色;手机套餐:一电一充。  如果包含自定义属性，则格式为pid:vid;pid2:vid2;$pText:vText , 其中$pText:vText为自定义属性。限制：其中$pText的’$’前缀不能少，且pText和vText文本中不可以存在 冒号:和分号;以及逗号，
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemSkuUpdateRequest.Quantity">
            <summary>
            Sku的库存数量。sku的总数量应该小于等于商品总数量(Item的NUM)，sku数量变化后item的总数量也会随着变化。取值范围:大于等于零的整数
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemSkuUpdateRequest.SpecId">
            <summary>
            产品的规格信息。
            </summary>
        </member>
        <member name="T:Top.Api.Request.ItemsOnsaleGetRequest">
            <summary>
            TOP API: taobao.items.onsale.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemsOnsaleGetRequest.Cid">
            <summary>
            商品类目ID。ItemCat中的cid字段。可以通过taobao.itemcats.get取到
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemsOnsaleGetRequest.EndModified">
            <summary>
            结束的修改时间
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemsOnsaleGetRequest.Fields">
            <summary>
            需返回的字段列表。可选值：Item商品结构体中的以下字段： approve_status,num_iid,title,nick,type,cid,pic_url,num,props,valid_thru,list_time,price,has_discount,has_invoice,has_warranty,has_showcase,modified,delist_time,postage_id,seller_cids,outer_id,sold_quantity ；字段之间用“,”分隔。不支持其他字段，如果需要获取其他字段数据，调用taobao.item.seller.get 获取。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemsOnsaleGetRequest.HasDiscount">
            <summary>
            是否参与会员折扣。可选值：true，false。默认不过滤该条件
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemsOnsaleGetRequest.HasShowcase">
            <summary>
            是否橱窗推荐。 可选值：true，false。默认不过滤该条件
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemsOnsaleGetRequest.IsCombine">
            <summary>
            组合商品
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemsOnsaleGetRequest.IsCspu">
            <summary>
            是否挂接了达尔文标准产品体系
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemsOnsaleGetRequest.IsEx">
            <summary>
            商品是否在外部网店显示
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemsOnsaleGetRequest.IsTaobao">
            <summary>
            商品是否在淘宝显示
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemsOnsaleGetRequest.OrderBy">
            <summary>
            排序方式。格式为column:asc/desc ，column可选值:list_time(上架时间),delist_time(下架时间),num(商品数量)，modified(最近修改时间)，sold_quantity（商品销量）,;默认上架时间降序(即最新上架排在前面)。如按照上架时间降序排序方式为list_time:desc
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemsOnsaleGetRequest.PageNo">
            <summary>
            页码。取值范围:大于零的整数。默认值为1,即默认返回第一页数据。用此接口获取数据时，当翻页获取的条数（page_no*page_size）超过10万,为了保护后台搜索引擎，接口将报错。所以请大家尽可能的细化自己的搜索条件，例如根据修改时间分段获取商品
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemsOnsaleGetRequest.PageSize">
            <summary>
            每页条数。取值范围:大于零的整数;最大值：200；默认值：40。用此接口获取数据时，当翻页获取的条数（page_no*page_size）超过2万,为了保护后台搜索引擎，接口将报错。所以请大家尽可能的细化自己的搜索条件，例如根据修改时间分段获取商品
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemsOnsaleGetRequest.Q">
            <summary>
            搜索字段。搜索商品的title。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemsOnsaleGetRequest.SellerCids">
            <summary>
            卖家店铺内自定义类目ID。多个之间用“,”分隔。可以根据taobao.sellercats.list.get获得.(<font color="red">注：目前最多支持32个ID号传入</font>)
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemsOnsaleGetRequest.StartModified">
            <summary>
            起始的修改时间
            </summary>
        </member>
        <member name="T:Top.Api.Request.ProductsGetRequest">
            <summary>
            TOP API: taobao.products.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.ProductsGetRequest.Fields">
            <summary>
            需返回的字段列表.可选值:Product数据结构中的所有字段;多个字段之间用","分隔
            </summary>
        </member>
        <member name="P:Top.Api.Request.ProductsGetRequest.Nick">
            <summary>
            用户昵称
            </summary>
        </member>
        <member name="P:Top.Api.Request.ProductsGetRequest.PageNo">
            <summary>
            页码.传入值为1代表第一页,传入值为2代表第二页,依此类推.默认返回的数据是从第一页开始.
            </summary>
        </member>
        <member name="P:Top.Api.Request.ProductsGetRequest.PageSize">
            <summary>
            每页条数.每页返回最多返回100条,默认值为40
            </summary>
        </member>
        <member name="T:Top.Api.Domain.InsightWordsAreaDistributeDataDTO">
            <summary>
            InsightWordsAreaDistributeDataDTO Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordsAreaDistributeDataDTO.Bidword">
            <summary>
            关键词
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordsAreaDistributeDataDTO.Cityname">
            <summary>
            市名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordsAreaDistributeDataDTO.Click">
            <summary>
            点击量
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordsAreaDistributeDataDTO.Competition">
            <summary>
            竞争度
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordsAreaDistributeDataDTO.Cost">
            <summary>
            花费，单位（分）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordsAreaDistributeDataDTO.Coverage">
            <summary>
            点击转化率
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordsAreaDistributeDataDTO.Cpc">
            <summary>
            平均点击花费
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordsAreaDistributeDataDTO.Ctr">
            <summary>
            点击率
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordsAreaDistributeDataDTO.Directtransaction">
            <summary>
            直接成交金额
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordsAreaDistributeDataDTO.Directtransactionshipping">
            <summary>
            直接成交笔数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordsAreaDistributeDataDTO.Favitemtotal">
            <summary>
            宝贝搜藏数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordsAreaDistributeDataDTO.Favshoptotal">
            <summary>
            店铺搜藏数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordsAreaDistributeDataDTO.Favtotal">
            <summary>
            总的收藏数，包括宝贝收藏和店铺收藏
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordsAreaDistributeDataDTO.Impression">
            <summary>
            展现量
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordsAreaDistributeDataDTO.Indirecttransaction">
            <summary>
            间接成交金额
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordsAreaDistributeDataDTO.Indirecttransactionshipping">
            <summary>
            间接成交笔数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordsAreaDistributeDataDTO.Provincename">
            <summary>
            省名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordsAreaDistributeDataDTO.Roi">
            <summary>
            投入产出比
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordsAreaDistributeDataDTO.Transactionshippingtotal">
            <summary>
            总的成交笔数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordsAreaDistributeDataDTO.Transactiontotal">
            <summary>
            成交总金额
            </summary>
        </member>
        <member name="T:Top.Api.Domain.ProductImg">
            <summary>
            ProductImg Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ProductImg.Created">
            <summary>
            添加时间.格式:yyyy-mm-dd hh:mm:ss
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ProductImg.Id">
            <summary>
            产品图片ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ProductImg.Modified">
            <summary>
            修改时间.格式:yyyy-mm-dd hh:mm:ss
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ProductImg.Position">
            <summary>
            图片序号。产品里的图片展示顺序，数据越小越靠前。要求是正整数。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ProductImg.ProductId">
            <summary>
            图片所属产品的ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ProductImg.Url">
            <summary>
            图片地址.(绝对地址,格式:http://host/image_path)
            </summary>
        </member>
        <member name="T:Top.Api.Domain.Department">
            <summary>
            Department Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Department.DepartmentId">
            <summary>
            部门ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Department.DepartmentName">
            <summary>
            部门名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Department.ParentId">
            <summary>
            当前部门的父部门ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Department.SubUserIds">
            <summary>
            部门下关联的子账号id列表
            </summary>
        </member>
        <member name="T:Top.Api.Domain.UserCredit">
            <summary>
            UserCredit Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.UserCredit.GoodNum">
            <summary>
            收到的好评总条数。取值范围:大于零的整数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.UserCredit.Level">
            <summary>
            信用等级（是根据score生成的），信用等级：淘宝会员在淘宝网上的信用度，分为20个级别，级别如：level = 1 时，表示一心；level = 2 时，表示二心
            </summary>
        </member>
        <member name="P:Top.Api.Domain.UserCredit.Score">
            <summary>
            信用总分（“好评”加一分，“中评”不加分，“差评”扣一分。分越高，等级越高）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.UserCredit.TotalNum">
            <summary>
            收到的评价总条数。取值范围:大于零的整数
            </summary>
        </member>
        <member name="T:Top.Api.Domain.PromotionInShop">
            <summary>
            PromotionInShop Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PromotionInShop.Name">
            <summary>
            优惠活动名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PromotionInShop.PromotionDetailDesc">
            <summary>
            优惠详情描述。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PromotionInShop.PromotionId">
            <summary>
            idValue值
            </summary>
        </member>
        <member name="T:Top.Api.Domain.FavoriteItem">
            <summary>
            FavoriteItem Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FavoriteItem.ItemId">
            <summary>
            商品ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FavoriteItem.ItemName">
            <summary>
            商品名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FavoriteItem.ItemPictrue">
            <summary>
            商品图片地址
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FavoriteItem.ItemPrice">
            <summary>
            商品价格
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FavoriteItem.ItemUrl">
            <summary>
            商品的详情页面地址
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FavoriteItem.PromotionPrice">
            <summary>
            促销价格
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FavoriteItem.SellCount">
            <summary>
            商品销售次数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FavoriteItem.TrackIid">
            <summary>
            商品id（具有跟踪效果）代替原来的item_id  <a href="http://dev.open.taobao.com/bbs/read.php?tid=24323">详细说明</a>
            </summary>
        </member>
        <member name="T:Top.Api.Domain.LoginLog">
            <summary>
            LoginLog Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.LoginLog.Time">
            <summary>
            用户登录或退出客户端的时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.LoginLog.Type">
            <summary>
            标志用户登录或退出。 0表示登陆，1表示退出。
            </summary>
        </member>
        <member name="T:Top.Api.Domain.HistoryTradeRelationDo">
            <summary>
            HistoryTradeRelationDo Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.HistoryTradeRelationDo.GmtCreated">
            <summary>
            记录的创建时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.HistoryTradeRelationDo.GmtModified">
            <summary>
            记录的最新修改时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.HistoryTradeRelationDo.Id">
            <summary>
            订单标签记录id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.HistoryTradeRelationDo.TagName">
            <summary>
            标签名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.HistoryTradeRelationDo.TagType">
            <summary>
            标签类型       1：官方标签      2：自定义标签
            </summary>
        </member>
        <member name="P:Top.Api.Domain.HistoryTradeRelationDo.TagValue">
            <summary>
            标签值，json格式
            </summary>
        </member>
        <member name="P:Top.Api.Domain.HistoryTradeRelationDo.Tid">
            <summary>
            订单id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.HistoryTradeRelationDo.Visible">
            <summary>
            该标签在消费者端是否显示,0:不显示,1：显示
            </summary>
        </member>
        <member name="T:Top.Api.Domain.UserSubscribe">
            <summary>
            UserSubscribe Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.UserSubscribe.EndDate">
            <summary>
            订购结束时间。格式:yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="P:Top.Api.Domain.UserSubscribe.StartDate">
            <summary>
            订购开始时间。格式:yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="P:Top.Api.Domain.UserSubscribe.Status">
            <summary>
            订购状况。应用订购者：subscribeUser;尚未订购：unsubscribeUser；非法用户：invalidateUser
            </summary>
        </member>
        <member name="P:Top.Api.Domain.UserSubscribe.VersionNo">
            <summary>
            0-无版本信息；1-初级版；2-中级版；3-高级版
            </summary>
        </member>
        <member name="T:Top.Api.Domain.CampaignPlatform">
            <summary>
            CampaignPlatform Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.CampaignPlatform.CampaignId">
            <summary>
            推广计划ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.CampaignPlatform.CreateTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.CampaignPlatform.MobileDiscount">
            <summary>
            无线折扣百分比。必须大于等于1，小于等于200的整数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.CampaignPlatform.ModifiedTime">
            <summary>
            最后修改时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.CampaignPlatform.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.CampaignPlatform.NonsearchChannels">
            <summary>
            非搜索投放频道代码数组，频道代码必须是直通车非搜索类频道列表中的值。？
            </summary>
        </member>
        <member name="P:Top.Api.Domain.CampaignPlatform.OutsideDiscount">
            <summary>
            溢价的百分比，必须是大于等于 1小于等于200的整数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.CampaignPlatform.SearchChannels">
            <summary>
            搜索投放频道代码数组，频道代码必须是直通车搜索类频道列表中的值。
            </summary>
        </member>
        <member name="T:Top.Api.Domain.ProductBooks">
            <summary>
            ProductBooks Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ProductBooks.Author">
            <summary>
            作者/著者
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ProductBooks.BarCode">
            <summary>
            条形码，13位，9787开头
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ProductBooks.BookName">
            <summary>
            完整的图书名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ProductBooks.CategoryId">
            <summary>
            类目id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ProductBooks.Isbn">
            <summary>
            ISBN号
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ProductBooks.Price">
            <summary>
            图书价格，若有多个，则以';'号分隔
            </summary>
        </member>
        <member name="T:Top.Api.Domain.InsightCategoryInfoDTO">
            <summary>
            InsightCategoryInfoDTO Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightCategoryInfoDTO.CatId">
            <summary>
            类目Id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightCategoryInfoDTO.CatLevel">
            <summary>
            类目的级别
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightCategoryInfoDTO.CatName">
            <summary>
            类目名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightCategoryInfoDTO.CatPathId">
            <summary>
            表示该类目的所有父级类目，按层级顺序排列，层级越高的在前面，不同的层级之间用空格分隔
            </summary>
        </member>
        <!-- 对于成员“P:Top.Api.Domain.InsightCategoryInfoDTO.CatPathName”忽略有格式错误的 XML 注释 -->
        <member name="P:Top.Api.Domain.InsightCategoryInfoDTO.LastSyncTime">
            <summary>
            表示类目信息上次同步的时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightCategoryInfoDTO.ParentCatId">
            <summary>
            父类目Id
            </summary>
        </member>
        <member name="T:Top.Api.Domain.ItemMaterialProp">
            <summary>
            ItemMaterialProp Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ItemMaterialProp.Materials">
            <summary>
            材质值列表
            </summary>
        </member>
        <member name="T:Top.Api.Domain.ItemDescModule">
            <summary>
            ItemDescModule Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ItemDescModule.Content">
            <summary>
            描述具体内容
            </summary>
        </member>
        <!-- 对于成员“P:Top.Api.Domain.ItemDescModule.Intros”忽略有格式错误的 XML 注释 -->
        <member name="P:Top.Api.Domain.ItemDescModule.ModuleId">
            <summary>
            模块id ,(注意:用户自定义模块不用填此项。)
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ItemDescModule.ModuleName">
            <summary>
            模块名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ItemDescModule.Required">
            <summary>
            是否必填 （isv提交时可忽略不传）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ItemDescModule.TplUrls">
            <summary>
            淘宝图片空间的地址链接，示例模板，最多不超过三个（isv提交时可忽略不传）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ItemDescModule.Type">
            <summary>
            cat_mod:表示是运营设置的类目维度模块，usr_mod表示的是商家自定义模块。
            </summary>
        </member>
        <member name="T:Top.Api.Domain.Subtask">
            <summary>
            Subtask Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Subtask.IsSuccess">
            <summary>
            标记子任务是否成功。为true表示子任务成功，用户可以按照正确执行的结果格式解析sub_task_result。为false表示子任务失败了，用户需要按照失败的结果格式解析sub_task_result（里面只有sub_code和sub_msg）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Subtask.SubTaskRequest">
            <summary>
            子任务的有效请求参数，以json格式进行key:value的组合
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Subtask.SubTaskResult">
            <summary>
            子任务返回的结果，以json格式进行key:value组合，可以和单个api请求结果解析复用。以获取交易订单详情为例：子任务执行成功返回的结果格式为：{“trade”:{"tid":123456,"seller_nick":"淘宝卖家"}}；子任务执行失败结果格式为{"sub_code":"isv.trade-not-exist","sub_msg":"交易订单不存在"}
            </summary>
        </member>
        <member name="T:DingTalk.Api.IDingTalkRequest`1">
            <summary>
            TOP请求接口。
            </summary>
        </member>
        <member name="M:DingTalk.Api.IDingTalkRequest`1.GetApiName">
            <summary>
            获取TOP的API名称。
            </summary>
        </member>
        <member name="M:DingTalk.Api.IDingTalkRequest`1.GetParameters">
            <summary>
            获取所有的Key-Value形式的文本请求参数字典。
            </summary>
        </member>
        <member name="M:DingTalk.Api.IDingTalkRequest`1.GetHeaderParameters">
            <summary>
            获取自定义HTTP请求头参数。
            </summary>
        </member>
        <member name="M:DingTalk.Api.IDingTalkRequest`1.Validate">
            <summary>
            客户端参数检查，减少服务端无效调用。
            </summary>
        </member>
        <member name="T:Top.Api.Parser.ITopReader">
            <summary>
            TOP API响应读取器接口。响应格式可以是XML, JSON等等。
            </summary>
        </member>
        <member name="M:Top.Api.Parser.ITopReader.HasReturnField(System.Object)">
            <summary>
            判断响应中是否包含指定的属性。
            </summary>
            <param name="name">属性名称</param>
            <returns>true/false</returns>
        </member>
        <member name="M:Top.Api.Parser.ITopReader.GetPrimitiveObject(System.Object)">
            <summary>
            获取值类型属性的值。
            </summary>
            <param name="name">属性名称</param>
            <returns>值对象</returns>
        </member>
        <member name="M:Top.Api.Parser.ITopReader.GetReferenceObject(System.Object,System.Type,Top.Api.Parser.DTopConvert)">
            <summary>
            获取引用类型的值。
            </summary>
            <param name="name">属性名称</param>
            <param name="type">引用类型</param>
            <param name="convert">转换器</param>
            <returns>引用对象</returns>
        </member>
        <member name="M:Top.Api.Parser.ITopReader.GetListObjects(System.String,System.String,System.Type,Top.Api.Parser.DTopConvert)">
            <summary>
            获取列表类型的值。
            </summary>
            <param name="listName">列表属性名称</param>
            <param name="itemName">列表项名称</param>
            <param name="type">引用类型</param>
            <param name="convert">转换器</param>
            <returns>列表对象</returns>
        </member>
        <member name="T:Top.Api.Parser.QimenXmlParser`1">
            <summary>
            奇门XML响应通用解释器。
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Top.Api.Parser.ITopParser`1">
            <summary>
            TOP API响应解释器接口。响应格式可以是XML, JSON等等。
            </summary>
        </member>
        <member name="M:Top.Api.Parser.ITopParser`1.Parse(System.String)">
            <summary>
            把响应字符串解释成相应的领域对象。
            </summary>
            <typeparam name="T">领域对象</typeparam>
            <param name="body">响应字符串</param>
            <returns>领域对象</returns>
        </member>
        <member name="M:Top.Api.Parser.ITopParser`1.Parse(System.String,System.Type)">
            <summary>
            把响应字符串解释成相应的领域对象。
            </summary>
            <param name="body">响应字符串</param>
            <param name="type">领域对象</param>
            <returns>领域对象</returns>
        </member>
        <member name="T:Top.Api.Util.RequestValidator">
            <summary>
            请求验证器。
            </summary>
        </member>
        <member name="M:Top.Api.Util.RequestValidator.ValidateRequired(System.String,System.Object)">
            <summary>
            验证参数是否为空。
            </summary>
            <param name="name">参数名</param>
            <param name="value">参数值</param>
        </member>
        <member name="M:Top.Api.Util.RequestValidator.ValidateMaxLength(System.String,System.String,System.Int32)">
            <summary>
            验证字符串参数的最大长度。
            </summary>
            <param name="name">参数名</param>
            <param name="value">参数值</param>
            <param name="maxLength">最大长度</param>
        </member>
        <member name="M:Top.Api.Util.RequestValidator.ValidateMaxLength(System.String,Top.Api.Util.FileItem,System.Int32)">
            <summary>
            验证上传文件的最大字节长度。
            </summary>
            <param name="name">参数名</param>
            <param name="value">参数值</param>
            <param name="maxLength">最大长度</param>
        </member>
        <member name="M:Top.Api.Util.RequestValidator.ValidateMaxListSize(System.String,System.String,System.Int32)">
            <summary>
            验证以逗号分隔的字符串参数的最大列表长度。
            </summary>
            <param name="name">参数名</param>
            <param name="value">参数值</param>
            <param name="maxSize">最大列表长度</param>
        </member>
        <member name="M:Top.Api.Util.RequestValidator.ValidateObjectMaxListSize(System.String,System.String,System.Int32)">
            <summary>
            验证复杂结构数组参数的最大列表长度。
            </summary>
            <param name="name">参数名</param>
            <param name="value">参数值</param>
            <param name="maxSize">最大列表长度</param>
        </member>
        <member name="M:Top.Api.Util.RequestValidator.ValidateMinLength(System.String,System.String,System.Int32)">
            <summary>
            验证字符串参数的最小长度。
            </summary>
            <param name="name">参数名</param>
            <param name="value">参数值</param>
            <param name="minLength">最小长度</param>
        </member>
        <member name="M:Top.Api.Util.RequestValidator.ValidateMaxValue(System.String,System.Nullable{System.Int64},System.Int64)">
            <summary>
            验证数字参数的最大值。
            </summary>
            <param name="name">参数名</param>
            <param name="value">参数值</param>
            <param name="maxValue">最大值</param>
        </member>
        <member name="M:Top.Api.Util.RequestValidator.ValidateMinValue(System.String,System.Nullable{System.Int64},System.Int64)">
            <summary>
            验证数字参数的最小值。
            </summary>
            <param name="name">参数名</param>
            <param name="value">参数值</param>
            <param name="minValue">最小值</param>
        </member>
        <member name="T:Top.Tmc.TmcClient">
            <summary>消息服务客户端</summary>
        </member>
        <member name="M:Top.Tmc.TmcClient.#ctor(System.String,System.String)">
            <summary>以默认分组，初始化TMC客户端</summary>
        </member>
        <member name="M:Top.Tmc.TmcClient.#ctor(System.String,System.String,System.String)">
            <summary>初始化TMC客户端</summary>
        </member>
        <member name="M:Top.Tmc.TmcClient.Connect(System.String)">
            <summary>连接到 TMC Server</summary>
            <param name="uri">TMC server address, eg: ws://mc.api.taobao.com/</param>
        </member>
        <member name="M:Top.Tmc.TmcClient.Send(System.String,System.String)">
            <summary>向指定的主题发布一条与用户无关的消息。</summary>
            <param name="topic">主题名称</param>
            <param name="content">严格根据主题定义的消息内容（JSON/XML）</param>
        </member>
        <member name="M:Top.Tmc.TmcClient.Send(System.String,System.String,System.String)">
            <summary>向指定的主题发布一条与用户相关的消息。</summary>
            <param name="topic">主题名称</param>
            <param name="content">严格根据主题定义的消息内容（JSON/XML）</param>
            <param name="session">用户授权码</param>
        </member>
        <member name="M:Top.Tmc.TmcClient.PullRequest">
            <summary>向服务端发送消息拉取请求</summary>
        </member>
        <member name="M:Top.Tmc.TmcClient.Confirm(Top.Tmc.Message)">
            <summary>确认消息</summary>
        </member>
        <member name="P:Top.Tmc.TmcClient.Log">
            <summary>获取或设置Log</summary>
        </member>
        <member name="P:Top.Tmc.TmcClient.PullRequestIntervalSeconds">
            <summary>获取或设置定时发送拉取请求的周期（单位：秒）</summary>
        </member>
        <member name="P:Top.Tmc.TmcClient.ReconnectIntervalSeconds">
            <summary>获取或设置自动重连间隔（单位：秒）</summary>
        </member>
        <member name="P:Top.Api.Security.SecretData.OriginalValue">
            <summary>
             明文、h_mac数据
            </summary>
        </member>
        <member name="P:Top.Api.Security.SecretData.OriginalBase64Value">
            <summary>
             原始base64加密之后的密文数据
            </summary>
        </member>
        <member name="P:Top.Api.Security.SecretData.SecretVersion">
            <summary>
            秘钥版本
            </summary>
        </member>
        <member name="P:Top.Api.Security.SecretData.Search">
            <summary>
            搜索
            </summary>
        </member>
        <member name="T:Aliyun.Api.IAliyunRequest`1">
            <summary>
            TOP请求接口。
            </summary>
        </member>
        <member name="M:Aliyun.Api.IAliyunRequest`1.GetApiName">
            <summary>
            获取TOP的API名称。
            </summary>
            <returns>API名称</returns>
        </member>
        <member name="M:Aliyun.Api.IAliyunRequest`1.GetParameters">
            <summary>
            获取所有的Key-Value形式的文本请求参数字典。其中：
            Key: 请求参数名
            Value: 请求参数文本值
            </summary>
            <returns>文本请求参数字典</returns>
        </member>
        <member name="M:Aliyun.Api.IAliyunRequest`1.Validate">
            <summary>
            提前验证参数。
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRtrptsTotalGetResponse">
            <summary>
            ZuanshiAdvertiserTargetAdzoneRtrptsTotalGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRtrptsTotalGetResponse.TargetAdzoneRealtimeRptTotalList">
            <summary>
            查询结果
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRtrptsTotalGetResponse.DataDomain">
            <summary>
            DataDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRtrptsTotalGetResponse.DataDomain.AdPv">
            <summary>
            展现量
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRtrptsTotalGetResponse.DataDomain.AdzoneId">
            <summary>
            资源位id
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRtrptsTotalGetResponse.DataDomain.AdzoneName">
            <summary>
            资源位名称
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRtrptsTotalGetResponse.DataDomain.CampaignId">
            <summary>
            计划id
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRtrptsTotalGetResponse.DataDomain.CampaignName">
            <summary>
            单元名称
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRtrptsTotalGetResponse.DataDomain.Charge">
            <summary>
            花费
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRtrptsTotalGetResponse.DataDomain.Click">
            <summary>
            点击量
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRtrptsTotalGetResponse.DataDomain.Ctr">
            <summary>
            ctr
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRtrptsTotalGetResponse.DataDomain.Ecpc">
            <summary>
            ecpc
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRtrptsTotalGetResponse.DataDomain.Ecpm">
            <summary>
            ecpm
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRtrptsTotalGetResponse.DataDomain.LogDate">
            <summary>
            期权
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRtrptsTotalGetResponse.DataDomain.TargetId">
            <summary>
            定向id
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRtrptsTotalGetResponse.DataDomain.TargetName">
            <summary>
            定向名称
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRtrptsTotalGetResponse.DataDomain.TransId">
            <summary>
            单元id
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRtrptsTotalGetResponse.DataDomain.TransName">
            <summary>
            单元名称
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAdvertiserCampaignRtrptsGetResponse">
            <summary>
            ZuanshiAdvertiserCampaignRtrptsGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCampaignRtrptsGetResponse.CampaignRealtimeRptList">
            <summary>
            campaign_realtime_rpt_list
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAdvertiserCampaignRtrptsGetResponse.DataDomain">
            <summary>
            DataDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCampaignRtrptsGetResponse.DataDomain.AdPv">
            <summary>
            展现量
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCampaignRtrptsGetResponse.DataDomain.CampaignId">
            <summary>
            campaignId
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCampaignRtrptsGetResponse.DataDomain.Charge">
            <summary>
            消耗，单位元
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCampaignRtrptsGetResponse.DataDomain.Click">
            <summary>
            点击量
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCampaignRtrptsGetResponse.DataDomain.Ctr">
            <summary>
            点击率，click/ad_pv，小数点后保留四位，没有乘100%
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCampaignRtrptsGetResponse.DataDomain.Ecpc">
            <summary>
            点击单价
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCampaignRtrptsGetResponse.DataDomain.Ecpm">
            <summary>
            千次展现成本
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCampaignRtrptsGetResponse.DataDomain.HourId">
            <summary>
            小时数，取值范围0-23
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCampaignRtrptsGetResponse.DataDomain.LogDate">
            <summary>
            logDate
            </summary>
        </member>
        <member name="T:Top.Api.Response.TmcGroupAddResponse">
            <summary>
            TmcGroupAddResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmcGroupAddResponse.Created">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmcGroupAddResponse.GroupName">
            <summary>
            分组名称
            </summary>
        </member>
        <member name="T:Top.Api.Response.ScitemQueryResponse">
            <summary>
            ScitemQueryResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ScitemQueryResponse.QueryPagination">
            <summary>
            分页
            </summary>
        </member>
        <!-- 对于成员“P:Top.Api.Response.ScitemQueryResponse.ScItemList”忽略有格式错误的 XML 注释 -->
        <member name="P:Top.Api.Response.ScitemQueryResponse.TotalPage">
            <summary>
            商品条数
            </summary>
        </member>
        <member name="T:Top.Api.Response.OpenimTribeQuitResponse">
            <summary>
            OpenimTribeQuitResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.OpenimTribeQuitResponse.TribeCode">
            <summary>
            群服务code
            </summary>
        </member>
        <member name="T:Top.Api.Response.OpenimTribeInviteResponse">
            <summary>
            OpenimTribeInviteResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.OpenimTribeInviteResponse.TribeCode">
            <summary>
            群服务code
            </summary>
        </member>
        <member name="T:Top.Api.Response.OpenimImmsgPushResponse">
            <summary>
            OpenimImmsgPushResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.OpenimImmsgPushResponse.Msgid">
            <summary>
            消息id，方便定位问题
            </summary>
        </member>
        <member name="T:Top.Api.Response.JushitaJmsGroupAddResponse">
            <summary>
            JushitaJmsGroupAddResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.JushitaJmsGroupAddResponse.Created">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Top.Api.Response.JushitaJmsGroupAddResponse.GroupName">
            <summary>
            分组名称
            </summary>
        </member>
        <member name="T:Top.Api.Response.ItemSchemaUpdateResponse">
            <summary>
            ItemSchemaUpdateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ItemSchemaUpdateResponse.UpdateResult">
            <summary>
            编辑商品返回的结果信息，暂时只返回 itemId
            </summary>
        </member>
        <member name="T:Top.Api.Response.InventoryInitialItemResponse">
            <summary>
            InventoryInitialItemResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.InventoryInitialItemResponse.TipInfos">
            <summary>
            提示信息
            </summary>
        </member>
        <member name="T:Top.Api.Response.FenxiaoRefundCreateResponse">
            <summary>
            FenxiaoRefundCreateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoRefundCreateResponse.IsSuccess">
            <summary>
            退款是否创建成功
            </summary>
        </member>
        <member name="T:Top.Api.Response.FenxiaoProductUpdateResponse">
            <summary>
            FenxiaoProductUpdateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoProductUpdateResponse.Modified">
            <summary>
            更新时间，时间格式：yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoProductUpdateResponse.Pid">
            <summary>
            产品ID
            </summary>
        </member>
        <member name="T:Top.Api.Response.FenxiaoProductcatsGetResponse">
            <summary>
            FenxiaoProductcatsGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoProductcatsGetResponse.Productcats">
            <summary>
            产品线列表。返回 ProductCat 包含的字段信息。
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoProductcatsGetResponse.TotalResults">
            <summary>
            查询结果记录数
            </summary>
        </member>
        <member name="T:Top.Api.Response.DmpCrowdRemoveResponse">
            <summary>
            DmpCrowdRemoveResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.DmpCrowdRemoveResponse.Result">
            <summary>
            返回结果
            </summary>
        </member>
        <member name="T:Top.Api.Response.DmpCrowdRemoveResponse.ResultDTODomain">
            <summary>
            ResultDTODomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.DmpCrowdRemoveResponse.ResultDTODomain.Msg">
            <summary>
            调用消息
            </summary>
        </member>
        <member name="P:Top.Api.Response.DmpCrowdRemoveResponse.ResultDTODomain.Success">
            <summary>
            调用是否成功
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiRptTaskGetRequest">
            <summary>
            TOP API: taobao.zuanshi.rpt.task.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiRptTaskGetRequest.TaskId">
            <summary>
            任务id标识
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiBannerCreativeModifyRequest">
            <summary>
            TOP API: taobao.zuanshi.banner.creative.modify
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCreativeModifyRequest.CatId">
            <summary>
            类目ID，1,女装 2,彩妆，护肤 3,女鞋 4,男装 5,男鞋 6,箱包 7,食品，茶叶，烟酒 8,内衣 9,保健 10,饰品，服饰 11,运动 12,居家 13,童装，母婴 14,电器 15,数码 16,游戏 17,团购 18,其他
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCreativeModifyRequest.ClickUrl">
            <summary>
            点击链接
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCreativeModifyRequest.Id">
            <summary>
            创意ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCreativeModifyRequest.Image">
            <summary>
            图片内容.图片最大为2M,只支持jpg,png,jpeg
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCreativeModifyRequest.IsTransToWifi">
            <summary>
            是否需要pc转无线链接，true：是，false：否
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCreativeModifyRequest.Name">
            <summary>
            创意名称
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiAdvertiserCategoryRptsGetRequest">
            <summary>
            TOP API: taobao.zuanshi.advertiser.category.rpts.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserCategoryRptsGetRequest.EndTime">
            <summary>
            查询结束时间
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserCategoryRptsGetRequest.StartTime">
            <summary>
            查询开始时间
            </summary>
        </member>
        <member name="T:Top.Api.Request.TmcMsgSendrecordRequest">
            <summary>
            TOP API: taobao.tmc.msg.sendrecord
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmcMsgSendrecordRequest.DataId">
            <summary>
            消息主键ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmcMsgSendrecordRequest.GroupName">
            <summary>
            消息分组名
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmcMsgSendrecordRequest.TopicName">
            <summary>
            TOPIC名称
            </summary>
        </member>
        <member name="T:Top.Api.Request.TbkItemGetRequest">
            <summary>
            TOP API: taobao.tbk.item.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkItemGetRequest.Cat">
            <summary>
            后台类目ID，用,分割，最大10个，该ID可以通过taobao.itemcats.get接口获取到
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkItemGetRequest.EndPrice">
            <summary>
            折扣价范围上限，单位：元
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkItemGetRequest.EndTkRate">
            <summary>
            淘客佣金比率下限，如：1234表示12.34%
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkItemGetRequest.Fields">
            <summary>
            需返回的字段列表
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkItemGetRequest.IsOverseas">
            <summary>
            是否海外商品，设置为true表示该商品是属于海外商品，设置为false或不设置表示不判断这个属性
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkItemGetRequest.IsTmall">
            <summary>
            是否商城商品，设置为true表示该商品是属于淘宝商城商品，设置为false或不设置表示不判断这个属性
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkItemGetRequest.Itemloc">
            <summary>
            所在地
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkItemGetRequest.PageNo">
            <summary>
            第几页，默认：１
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkItemGetRequest.PageSize">
            <summary>
            页大小，默认20，1~100
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkItemGetRequest.Platform">
            <summary>
            链接形式：1：PC，2：无线，默认：１
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkItemGetRequest.Q">
            <summary>
            查询词
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkItemGetRequest.Sort">
            <summary>
            排序_des（降序），排序_asc（升序），销量（total_sales），淘客佣金比率（tk_rate）， 累计推广量（tk_total_sales），总支出佣金（tk_total_commi）
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkItemGetRequest.StartPrice">
            <summary>
            折扣价范围下限，单位：元
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkItemGetRequest.StartTkRate">
            <summary>
            淘客佣金比率上限，如：1234表示12.34%
            </summary>
        </member>
        <member name="T:Top.Api.Request.ScitemMapDeleteRequest">
            <summary>
            TOP API: taobao.scitem.map.delete
            </summary>
        </member>
        <member name="P:Top.Api.Request.ScitemMapDeleteRequest.ScItemId">
            <summary>
            后台商品ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.ScitemMapDeleteRequest.UserNick">
            <summary>
            店铺用户nick。 如果该参数为空则删除后端商品与当前调用人的商品映射关系;如果不为空则删除指定用户与后端商品的映射关系
            </summary>
        </member>
        <member name="T:Top.Api.Request.OpenimTribeGetalltribesRequest">
            <summary>
            TOP API: taobao.openim.tribe.getalltribes
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimTribeGetalltribesRequest.TribeTypes">
            <summary>
            群类型
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimTribeGetalltribesRequest.User">
            <summary>
            用户信息
            </summary>
        </member>
        <member name="T:Top.Api.Request.JushitaJmsGroupGetRequest">
            <summary>
            TOP API: taobao.jushita.jms.group.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.JushitaJmsGroupGetRequest.GroupNames">
            <summary>
            要查询分组的名称，多个分组用半角逗号分隔，不传代表查询所有分组信息，但不会返回组下面的用户信息。如果应用没有设置分组则返回空。组名不能以default开头，default开头是系统默认的组。
            </summary>
        </member>
        <member name="P:Top.Api.Request.JushitaJmsGroupGetRequest.PageNo">
            <summary>
            页码
            </summary>
        </member>
        <member name="P:Top.Api.Request.JushitaJmsGroupGetRequest.PageSize">
            <summary>
            每页返回多少个分组
            </summary>
        </member>
        <member name="T:Top.Api.Request.FenxiaoProductSkuAddRequest">
            <summary>
            TOP API: taobao.fenxiao.product.sku.add
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductSkuAddRequest.AgentCostPrice">
            <summary>
            代销采购价
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductSkuAddRequest.DealerCostPrice">
            <summary>
            经销采购价
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductSkuAddRequest.ProductId">
            <summary>
            产品ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductSkuAddRequest.Properties">
            <summary>
            sku属性
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductSkuAddRequest.Quantity">
            <summary>
            sku产品库存，在0到1000000之间，如果不传，则库存为0
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductSkuAddRequest.SkuNumber">
            <summary>
            商家编码
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductSkuAddRequest.StandardPrice">
            <summary>
            采购基准价，最大值1000000000
            </summary>
        </member>
        <member name="T:FastJSON.JsonParser">
            <summary>
            This class encodes and decodes JSON strings.
            Spec. details, see http://www.json.org/
            </summary>
        </member>
        <member name="T:Taobao.Top.Link.Channel.IClientChannelSelector">
            <summary>channel holder/pool that switch channel by uri.scheme
            </summary>
        </member>
        <member name="M:Taobao.Top.Link.Channel.IClientChannelSelector.GetChannel(System.Uri)">
            <summary>get channel
            </summary>
            <param name="uri"></param>
            <returns></returns>
        </member>
        <member name="M:Taobao.Top.Link.Channel.IClientChannelSelector.ReturnChannel(Taobao.Top.Link.Channel.IClientChannel)">
            <summary>return channel
            </summary>
            <param name="channel"></param>
        </member>
        <member name="T:Taobao.Top.Link.Endpoints.Message">
            <summary>for endpoints talking
            </summary>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Zip.Compression.DeflateStrategy">
            <summary>
            Strategies for deflater
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.DeflateStrategy.Default">
            <summary>
            The default strategy
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.DeflateStrategy.Filtered">
            <summary>
            This strategy will only allow longer string repetitions.  It is
            useful for random data with a small character set.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.DeflateStrategy.HuffmanOnly">
            <summary>
            This strategy will not look for string repetitions at all.  It
            only encodes with Huffman trees (which means, that more common
            characters get a smaller encoding.
            </summary>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterEngine">
            <summary>
            Low level compression engine for deflate algorithm which uses a 32K sliding window
            with secondary compression from Huffman/Shannon-Fano codes.
            </summary>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterConstants">
            <summary>
            This class contains constants used for deflation.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterConstants.DEBUGGING">
            <summary>
            Set to true to enable debugging
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterConstants.STORED_BLOCK">
            <summary>
            Written to Zip file to identify a stored block
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterConstants.STATIC_TREES">
            <summary>
            Identifies static tree in Zip file
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterConstants.DYN_TREES">
            <summary>
            Identifies dynamic tree in Zip file
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterConstants.PRESET_DICT">
            <summary>
            Header flag indicating a preset dictionary for deflation
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterConstants.DEFAULT_MEM_LEVEL">
            <summary>
            Sets internal buffer sizes for Huffman encoding
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterConstants.MAX_MATCH">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterConstants.MIN_MATCH">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterConstants.MAX_WBITS">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterConstants.WSIZE">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterConstants.WMASK">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterConstants.HASH_BITS">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterConstants.HASH_SIZE">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterConstants.HASH_MASK">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterConstants.HASH_SHIFT">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterConstants.MIN_LOOKAHEAD">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterConstants.MAX_DIST">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterConstants.PENDING_BUF_SIZE">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterConstants.DEFLATE_STORED">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterConstants.DEFLATE_FAST">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterConstants.DEFLATE_SLOW">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterConstants.MAX_BLOCK_SIZE">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterConstants.GOOD_LENGTH">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterConstants.MAX_LAZY">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterConstants.NICE_LENGTH">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterConstants.MAX_CHAIN">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterConstants.COMPR_FUNC">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterEngine.#ctor(ICSharpCode.SharpZipLib.Zip.Compression.DeflaterPending)">
            <summary>
            Construct instance with pending buffer
            </summary>
            <param name="pending">
            Pending buffer to use
            </param>>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterEngine.Deflate(System.Boolean,System.Boolean)">
            <summary>
            Deflate drives actual compression of data
            </summary>
            <param name="flush">True to flush input buffers</param>
            <param name="finish">Finish deflation with the current input.</param>
            <returns>Returns true if progress has been made.</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterEngine.SetInput(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sets input data to be deflated.  Should only be called when <code>NeedsInput()</code>
            returns true
            </summary>
            <param name="buffer">The buffer containing input data.</param>
            <param name="offset">The offset of the first byte of data.</param>
            <param name="count">The number of bytes of data to use as input.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterEngine.NeedsInput">
            <summary>
            Determines if more <see cref="M:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterEngine.SetInput(System.Byte[],System.Int32,System.Int32)">input</see> is needed.
            </summary>		
            <returns>Return true if input is needed via <see cref="M:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterEngine.SetInput(System.Byte[],System.Int32,System.Int32)">SetInput</see></returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterEngine.SetDictionary(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Set compression dictionary
            </summary>
            <param name="buffer">The buffer containing the dictionary data</param>
            <param name="offset">The offset in the buffer for the first byte of data</param>
            <param name="length">The length of the dictionary data.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterEngine.Reset">
            <summary>
            Reset internal state
            </summary>		
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterEngine.ResetAdler">
            <summary>
            Reset Adler checksum
            </summary>		
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterEngine.SetLevel(System.Int32)">
            <summary>
            Set the deflate level (0-9)
            </summary>
            <param name="level">The value to set the level to.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterEngine.FillWindow">
            <summary>
            Fill the window
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterEngine.InsertString">
            <summary>
            Inserts the current string in the head hash and returns the previous
            value for this hash.
            </summary>
            <returns>The previous hash value</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterEngine.FindLongestMatch(System.Int32)">
             <summary>
             Find the best (longest) string in the window matching the 
             string starting at strstart.
            
             Preconditions:
             <code>
             strstart + MAX_MATCH &lt;= window.length.</code>
             </summary>
             <param name="curMatch"></param>
             <returns>True if a match greater than the minimum length is found</returns>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterEngine.head">
            <summary>
            Hashtable, hashing three characters to an index for window, so
            that window[index]..window[index+2] have this hash code.  
            Note that the array should really be unsigned short, so you need
            to and the values with 0xffff.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterEngine.prev">
            <summary>
            <code>prev[index &amp; WMASK]</code> points to the previous index that has the
            same hash code as the string starting at index.  This way 
            entries with the same hash code are in a linked list.
            Note that the array should really be unsigned short, so you need
            to and the values with 0xffff.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterEngine.strstart">
            <summary>
            Points to the current character in the window.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterEngine.lookahead">
            <summary>
            lookahead is the number of characters starting at strstart in
            window that are valid.
            So window[strstart] until window[strstart+lookahead-1] are valid
            characters.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterEngine.window">
            <summary>
            This array contains the part of the uncompressed stream that 
            is of relevance.  The current character is indexed by strstart.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterEngine.compressionFunction">
            <summary>
            The current compression function.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterEngine.inputBuf">
            <summary>
            The input data for compression.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterEngine.totalIn">
            <summary>
            The total bytes of input read.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterEngine.inputOff">
            <summary>
            The offset into inputBuf, where input data starts.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterEngine.inputEnd">
            <summary>
            The end offset of the input data.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterEngine.adler">
            <summary>
            The adler checksum
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterEngine.Adler">
            <summary>
            Get current value of Adler checksum
            </summary>		
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterEngine.TotalIn">
            <summary>
            Total data processed
            </summary>		
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterEngine.Strategy">
            <summary>
            Get/set the <see cref="T:ICSharpCode.SharpZipLib.Zip.Compression.DeflateStrategy">deflate strategy</see>
            </summary>		
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Zip.Compression.Streams.InflaterInputBuffer">
            <summary>
            An input buffer customised for use by <see cref="T:ICSharpCode.SharpZipLib.Zip.Compression.Streams.InflaterInputStream"/>
            </summary>
            <remarks>
            The buffer supports decryption of incoming data.
            </remarks>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Streams.InflaterInputBuffer.#ctor(System.IO.Stream)">
            <summary>
            Initialise a new instance of <see cref="T:ICSharpCode.SharpZipLib.Zip.Compression.Streams.InflaterInputBuffer"/> with a default buffer size
            </summary>
            <param name="stream">The stream to buffer.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Streams.InflaterInputBuffer.#ctor(System.IO.Stream,System.Int32)">
            <summary>
            Initialise a new instance of <see cref="T:ICSharpCode.SharpZipLib.Zip.Compression.Streams.InflaterInputBuffer"/>
            </summary>
            <param name="stream">The stream to buffer.</param>
            <param name="bufferSize">The size to use for the buffer</param>
            <remarks>A minimum buffer size of 1KB is permitted.  Lower sizes are treated as 1KB.</remarks>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Streams.InflaterInputBuffer.SetInflaterInput(ICSharpCode.SharpZipLib.Zip.Compression.Inflater)">
            <summary>
            Call <see cref="M:ICSharpCode.SharpZipLib.Zip.Compression.Inflater.SetInput(System.Byte[],System.Int32,System.Int32)"/> passing the current clear text buffer contents.
            </summary>
            <param name="inflater">The inflater to set input for.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Streams.InflaterInputBuffer.Fill">
            <summary>
            Fill the buffer from the underlying input stream.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Streams.InflaterInputBuffer.ReadRawBuffer(System.Byte[])">
            <summary>
            Read a buffer directly from the input stream
            </summary>
            <param name="buffer">The buffer to fill</param>
            <returns>Returns the number of bytes read.</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Streams.InflaterInputBuffer.ReadRawBuffer(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Read a buffer directly from the input stream
            </summary>
            <param name="outBuffer">The buffer to read into</param>
            <param name="offset">The offset to start reading data into.</param>
            <param name="length">The number of bytes to read.</param>
            <returns>Returns the number of bytes read.</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Streams.InflaterInputBuffer.ReadClearTextBuffer(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Read clear text data from the input stream.
            </summary>
            <param name="outBuffer">The buffer to add data to.</param>
            <param name="offset">The offset to start adding data at.</param>
            <param name="length">The number of bytes to read.</param>
            <returns>Returns the number of bytes actually read.</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Streams.InflaterInputBuffer.ReadLeByte">
            <summary>
            Read a <see cref="T:System.Byte"/> from the input stream.
            </summary>
            <returns>Returns the byte read.</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Streams.InflaterInputBuffer.ReadLeShort">
            <summary>
            Read an <see cref="T:System.Int16"/> in little endian byte order.
            </summary>
            <returns>The short value read case to an int.</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Streams.InflaterInputBuffer.ReadLeInt">
            <summary>
            Read an <see cref="T:System.Int32"/> in little endian byte order.
            </summary>
            <returns>The int value read.</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Streams.InflaterInputBuffer.ReadLeLong">
            <summary>
            Read a <see cref="T:System.Int64"/> in little endian byte order.
            </summary>
            <returns>The long value read.</returns>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.Compression.Streams.InflaterInputBuffer.RawLength">
            <summary>
            Get the length of bytes bytes in the <see cref="P:ICSharpCode.SharpZipLib.Zip.Compression.Streams.InflaterInputBuffer.RawData"/>
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.Compression.Streams.InflaterInputBuffer.RawData">
            <summary>
            Get the contents of the raw data buffer.
            </summary>
            <remarks>This may contain encrypted data.</remarks>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.Compression.Streams.InflaterInputBuffer.ClearTextLength">
            <summary>
            Get the number of useable bytes in <see cref="P:ICSharpCode.SharpZipLib.Zip.Compression.Streams.InflaterInputBuffer.ClearText"/>
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.Compression.Streams.InflaterInputBuffer.ClearText">
            <summary>
            Get the contents of the clear text buffer.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.Compression.Streams.InflaterInputBuffer.Available">
            <summary>
            Get/set the number of bytes available
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.Compression.Streams.InflaterInputBuffer.CryptoTransform">
            <summary>
            Get/set the <see cref="T:System.Security.Cryptography.ICryptoTransform"/> to apply to any data.
            </summary>
            <remarks>Set this value to null to have no transform applied.</remarks>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Zip.Compression.Streams.InflaterInputStream">
             <summary>
             This filter stream is used to decompress data compressed using the "deflate"
             format. The "deflate" format is described in RFC 1951.
            
             This stream may form the basis for other decompression filters, such
             as the <see cref="!:ICSharpCode.SharpZipLib.GZip.GZipInputStream">GZipInputStream</see>.
            
             Author of the original java version : John Leuner.
             </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Streams.InflaterInputStream.#ctor(System.IO.Stream)">
            <summary>
            Create an InflaterInputStream with the default decompressor
            and a default buffer size of 4KB.
            </summary>
            <param name = "baseInputStream">
            The InputStream to read bytes from
            </param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Streams.InflaterInputStream.#ctor(System.IO.Stream,ICSharpCode.SharpZipLib.Zip.Compression.Inflater)">
            <summary>
            Create an InflaterInputStream with the specified decompressor
            and a default buffer size of 4KB.
            </summary>
            <param name = "baseInputStream">
            The source of input data
            </param>
            <param name = "inf">
            The decompressor used to decompress data read from baseInputStream
            </param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Streams.InflaterInputStream.#ctor(System.IO.Stream,ICSharpCode.SharpZipLib.Zip.Compression.Inflater,System.Int32)">
            <summary>
            Create an InflaterInputStream with the specified decompressor
            and the specified buffer size.
            </summary>
            <param name = "baseInputStream">
            The InputStream to read bytes from
            </param>
            <param name = "inflater">
            The decompressor to use
            </param>
            <param name = "bufferSize">
            Size of the buffer to use
            </param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Streams.InflaterInputStream.Skip(System.Int64)">
            <summary>
            Skip specified number of bytes of uncompressed data
            </summary>
            <param name="count">
            Number of bytes to skip
            </param>
            <returns>
            The number of bytes skipped, zero if the end of 
            stream has been reached
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="count">The number of bytes</paramref> to skip is less than or equal to zero.
            </exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Streams.InflaterInputStream.StopDecrypting">
            <summary>
            Clear any cryptographic state.
            </summary>		
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Streams.InflaterInputStream.Fill">
            <summary>
            Fills the buffer with more data to decompress.
            </summary>
            <exception cref="T:ICSharpCode.SharpZipLib.SharpZipBaseException">
            Stream ends early
            </exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Streams.InflaterInputStream.Flush">
            <summary>
            Flushes the baseInputStream
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Streams.InflaterInputStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets the position within the current stream
            Always throws a NotSupportedException
            </summary>
            <param name="offset">The relative offset to seek to.</param>
            <param name="origin">The <see cref="T:System.IO.SeekOrigin"/> defining where to seek from.</param>
            <returns>The new position in the stream.</returns>
            <exception cref="T:System.NotSupportedException">Any access</exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Streams.InflaterInputStream.SetLength(System.Int64)">
            <summary>
            Set the length of the current stream
            Always throws a NotSupportedException
            </summary>
            <param name="value">The new length value for the stream.</param>
            <exception cref="T:System.NotSupportedException">Any access</exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Streams.InflaterInputStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a sequence of bytes to stream and advances the current position
            This method always throws a NotSupportedException
            </summary>
            <param name="buffer">Thew buffer containing data to write.</param>
            <param name="offset">The offset of the first byte to write.</param>
            <param name="count">The number of bytes to write.</param>
            <exception cref="T:System.NotSupportedException">Any access</exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Streams.InflaterInputStream.WriteByte(System.Byte)">
            <summary>
            Writes one byte to the current stream and advances the current position
            Always throws a NotSupportedException
            </summary>
            <param name="value">The byte to write.</param>
            <exception cref="T:System.NotSupportedException">Any access</exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Streams.InflaterInputStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Entry point to begin an asynchronous write.  Always throws a NotSupportedException.
            </summary>
            <param name="buffer">The buffer to write data from</param>
            <param name="offset">Offset of first byte to write</param>
            <param name="count">The maximum number of bytes to write</param>
            <param name="callback">The method to be called when the asynchronous write operation is completed</param>
            <param name="state">A user-provided object that distinguishes this particular asynchronous write request from other requests</param>
            <returns>An <see cref="T:System.IAsyncResult">IAsyncResult</see> that references the asynchronous write</returns>
            <exception cref="T:System.NotSupportedException">Any access</exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Streams.InflaterInputStream.Close">
            <summary>
            Closes the input stream.  When <see cref="P:ICSharpCode.SharpZipLib.Zip.Compression.Streams.InflaterInputStream.IsStreamOwner"></see>
            is true the underlying stream is also closed.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Streams.InflaterInputStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads decompressed data into the provided buffer byte array
            </summary>
            <param name="buffer">
            The array to read and decompress data into
            </param>
            <param name="offset">
            The offset indicating where the data should be placed
            </param>
            <param name="count">
            The number of bytes to decompress
            </param>
            <returns>The number of bytes read.  Zero signals the end of stream</returns>
            <exception cref="T:ICSharpCode.SharpZipLib.SharpZipBaseException">
            Inflater needs a dictionary
            </exception>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.Streams.InflaterInputStream.inf">
            <summary>
            Decompressor for this stream
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.Streams.InflaterInputStream.inputBuffer">
            <summary>
            <see cref="T:ICSharpCode.SharpZipLib.Zip.Compression.Streams.InflaterInputBuffer">Input buffer</see> for this stream.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.Streams.InflaterInputStream.baseInputStream">
            <summary>
            Base stream the inflater reads from.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.Streams.InflaterInputStream.csize">
            <summary>
            The compressed size
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.Streams.InflaterInputStream.isClosed">
            <summary>
            Flag indicating wether this instance has been closed or not.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.Streams.InflaterInputStream.isStreamOwner">
            <summary>
            Flag indicating wether this instance is designated the stream owner.
            When closing if this flag is true the underlying stream is closed.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.Compression.Streams.InflaterInputStream.IsStreamOwner">
            <summary>
            Get/set flag indicating ownership of underlying stream.
            When the flag is true <see cref="M:ICSharpCode.SharpZipLib.Zip.Compression.Streams.InflaterInputStream.Close"/> will close the underlying stream also.
            </summary>
            <remarks>
            The default value is true.
            </remarks>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.Compression.Streams.InflaterInputStream.Available">
            <summary>
            Returns 0 once the end of the stream (EOF) has been reached.
            Otherwise returns 1.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.Compression.Streams.InflaterInputStream.CanRead">
            <summary>
            Gets a value indicating whether the current stream supports reading
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.Compression.Streams.InflaterInputStream.CanSeek">
            <summary>
            Gets a value of false indicating seeking is not supported for this stream.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.Compression.Streams.InflaterInputStream.CanWrite">
            <summary>
            Gets a value of false indicating that this stream is not writeable.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.Compression.Streams.InflaterInputStream.Length">
            <summary>
            A value representing the length of the stream in bytes.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.Compression.Streams.InflaterInputStream.Position">
            <summary>
            The current position within the stream.
            Throws a NotSupportedException when attempting to set the position
            </summary>
            <exception cref="T:System.NotSupportedException">Attempting to set the position</exception>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Zip.Compression.Streams.StreamManipulator">
             <summary>
             This class allows us to retrieve a specified number of bits from
             the input buffer, as well as copy big byte blocks.
            
             It uses an int buffer to store up to 31 bits for direct
             manipulation.  This guarantees that we can get at least 16 bits,
             but we only need at most 15, so this is all safe.
            
             There are some optimizations in this class, for example, you must
             never peek more than 8 bits more than needed, and you must first
             peek bits before you may drop them.  This is not a general purpose
             class but optimized for the behaviour of the Inflater.
            
             authors of the original java version : John Leuner, Jochen Hoenicke
             </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Streams.StreamManipulator.#ctor">
            <summary>
            Constructs a default StreamManipulator with all buffers empty
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Streams.StreamManipulator.PeekBits(System.Int32)">
            <summary>
            Get the next sequence of bits but don't increase input pointer.  bitCount must be
            less or equal 16 and if this call succeeds, you must drop
            at least n - 8 bits in the next call.
            </summary>
            <param name="bitCount">The number of bits to peek.</param>
            <returns>
            the value of the bits, or -1 if not enough bits available.  */
            </returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Streams.StreamManipulator.DropBits(System.Int32)">
            <summary>
            Drops the next n bits from the input.  You should have called PeekBits
            with a bigger or equal n before, to make sure that enough bits are in
            the bit buffer.
            </summary>
            <param name="bitCount">The number of bits to drop.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Streams.StreamManipulator.GetBits(System.Int32)">
            <summary>
            Gets the next n bits and increases input pointer.  This is equivalent
            to <see cref="M:ICSharpCode.SharpZipLib.Zip.Compression.Streams.StreamManipulator.PeekBits(System.Int32)"/> followed by <see cref="M:ICSharpCode.SharpZipLib.Zip.Compression.Streams.StreamManipulator.DropBits(System.Int32)"/>, except for correct error handling.
            </summary>
            <param name="bitCount">The number of bits to retrieve.</param>
            <returns>
            the value of the bits, or -1 if not enough bits available.
            </returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Streams.StreamManipulator.SkipToByteBoundary">
            <summary>
            Skips to the next byte boundary.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Streams.StreamManipulator.CopyBytes(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Copies bytes from input buffer to output buffer starting
            at output[offset].  You have to make sure, that the buffer is
            byte aligned.  If not enough bytes are available, copies fewer
            bytes.
            </summary>
            <param name="output">
            The buffer to copy bytes to.
            </param>
            <param name="offset">
            The offset in the buffer at which copying starts
            </param>
            <param name="length">
            The length to copy, 0 is allowed.
            </param>
            <returns>
            The number of bytes copied, 0 if no bytes were available.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Length is less than zero
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Bit buffer isnt byte aligned
            </exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Streams.StreamManipulator.Reset">
            <summary>
            Resets state and empties internal buffers
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Streams.StreamManipulator.SetInput(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Add more input for consumption.
            Only call when IsNeedingInput returns true
            </summary>
            <param name="buffer">data to be input</param>
            <param name="offset">offset of first byte of input</param>
            <param name="count">number of bytes of input to add.</param>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.Compression.Streams.StreamManipulator.AvailableBits">
            <summary>
            Gets the number of bits available in the bit buffer.  This must be
            only called when a previous PeekBits() returned -1.
            </summary>
            <returns>
            the number of bits available.
            </returns>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.Compression.Streams.StreamManipulator.AvailableBytes">
            <summary>
            Gets the number of bytes available.
            </summary>
            <returns>
            The number of bytes available.
            </returns>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.Compression.Streams.StreamManipulator.IsNeedingInput">
            <summary>
            Returns true when SetInput can be called
            </summary>
        </member>
        <member name="T:Top.Api.Domain.TmcUser">
            <summary>
            TmcUser Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TmcUser.Created">
            <summary>
            用户首次开通时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TmcUser.GroupName">
            <summary>
            接收用户消息的组名
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TmcUser.IsValid">
            <summary>
            用户授权是否有效，true表示授权有效，false表示授权过期
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TmcUser.Modified">
            <summary>
            用户最后开通时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TmcUser.Topics">
            <summary>
            用户开通的消息类型列表。如果为空表示应用开通的所有类型
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TmcUser.UserId">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TmcUser.UserNick">
            <summary>
            用户昵称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TmcUser.UserPlatform">
            <summary>
            用户所属的平台类型，tbUIC:淘宝用户; icbu: icbu用户
            </summary>
        </member>
        <member name="T:Top.Api.Domain.GradeDiscount">
            <summary>
            GradeDiscount Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.GradeDiscount.DiscountId">
            <summary>
            等级ID或分销商ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.GradeDiscount.DiscountType">
            <summary>
            折扣类型：1-等级、2-分销商折扣
            </summary>
        </member>
        <member name="P:Top.Api.Domain.GradeDiscount.Price">
            <summary>
            采购价格
            </summary>
        </member>
        <member name="P:Top.Api.Domain.GradeDiscount.SkuId">
            <summary>
            skuId
            </summary>
        </member>
        <member name="P:Top.Api.Domain.GradeDiscount.TradeType">
            <summary>
            模式：1-代销、2-经销
            </summary>
        </member>
        <member name="T:Top.Api.Domain.DealerOrderDetail">
            <summary>
            DealerOrderDetail Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DealerOrderDetail.DealerDetailId">
            <summary>
            经销采购单明细id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DealerOrderDetail.DealerOrderId">
            <summary>
            经销采购单编号
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DealerOrderDetail.Features">
            <summary>
            属性列表，key-value形式。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DealerOrderDetail.FinalPrice">
            <summary>
            最终价格(精确到2位小数;单位:元。如:200.07，表示:200元7分 )
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DealerOrderDetail.IsDeleted">
            <summary>
            该条明细是否已删除。true：已删除；false：未删除。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DealerOrderDetail.OriginalPrice">
            <summary>
            原始价格(精确到2位小数;单位:元。如:200.07，表示:200元7分 )
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DealerOrderDetail.PriceCount">
            <summary>
            金额小计(采购数量乘以最终价格。精确到2位小数;单位:元。如:200.07，表示:200元7分 )
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DealerOrderDetail.ProductId">
            <summary>
            产品id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DealerOrderDetail.ProductTitle">
            <summary>
            产品标题
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DealerOrderDetail.Quantity">
            <summary>
            采购数量
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DealerOrderDetail.SkuId">
            <summary>
            sku id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DealerOrderDetail.SkuNumber">
            <summary>
            商家编码，是sku则为sku的商家编码，否则是产品的商家编码
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DealerOrderDetail.SkuSpec">
            <summary>
            产品规格
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DealerOrderDetail.SnapshotUrl">
            <summary>
            产品快照url
            </summary>
        </member>
        <member name="T:Top.Api.Domain.DealerOrder">
            <summary>
            DealerOrder Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DealerOrder.AlipayNo">
            <summary>
            支付宝交易号
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DealerOrder.AppliedTime">
            <summary>
            申请时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DealerOrder.ApplierNick">
            <summary>
            分销商nick
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DealerOrder.AuditTimeApplier">
            <summary>
            分销商最后一次确认/申请/拒绝的时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DealerOrder.AuditTimeSupplier">
            <summary>
            供应商最后一次审核通过/修改/驳回的时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DealerOrder.CloseReason">
            <summary>
            关闭原因
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DealerOrder.DealerOrderDetails">
            <summary>
            产品明细
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DealerOrder.DealerOrderId">
            <summary>
            经销采购单编号，API发货使用此字段
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DealerOrder.DeliveredQuantityCount">
            <summary>
            已发货数量
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DealerOrder.Features">
            <summary>
            属性信息列表，key-value形式。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DealerOrder.LogisticsFee">
            <summary>
            物流费用(精确到2位小数;单位:元。如:200.07，表示:200元7分 )
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DealerOrder.LogisticsType">
            <summary>
            物流方式：SELF_PICKUP（自提）、LOGISTICS（物流发货)
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DealerOrder.ModifiedTime">
            <summary>
            修改时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DealerOrder.OrderStatus">
            <summary>
            WAIT_FOR_SUPPLIER_AUDIT1：分销商提交申请，待供应商审核；SUPPLIER_REFUSE：供应商驳回申请，待分销商确认；WAIT_FOR_APPLIER_AUDIT：供应商修改后，待分销商确认；WAIT_FOR_SUPPLIER_AUDIT2：分销商拒绝修改，待供应商再审核；BOTH_AGREE_WAIT_PAY：审核通过下单成功，待分销商付款WAIT_FOR_SUPPLIER_DELIVER：付款成功，待供应商发货；WAIT_FOR_APPLIER_STORAGE：供应商发货，待分销商收货；TRADE_FINISHED：分销商收货，交易成功；TRADE_CLOSED：经销采购单关闭。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DealerOrder.PayTime">
            <summary>
            付款时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DealerOrder.PayType">
            <summary>
            支付方式：ALIPAY_SURETY（支付宝担保交易）TRANSFER（线下转账）PREPAY（预存款）IMMEDIATELY（即时到账）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DealerOrder.QuantityCount">
            <summary>
            总采购数量
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DealerOrder.RebateFee">
            <summary>
            折让费用(精确到2位小数;单位:元。如:200.07，表示:200元7分 )
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DealerOrder.Receiver">
            <summary>
            收货人信息
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DealerOrder.RefuseReasonApplier">
            <summary>
            分销商拒绝供应商修改的原因
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DealerOrder.RefuseReasonSupplier">
            <summary>
            供应商驳回申请的原因
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DealerOrder.SupplierMemo">
            <summary>
            供应商备注。仅供应商可见。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DealerOrder.SupplierMemoFlag">
            <summary>
            供应商备注旗帜。1:红色 2:黄色 3:绿色 4:蓝色 5:粉红色。仅供应商可见。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DealerOrder.SupplierNick">
            <summary>
            供应商nick
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DealerOrder.TotalPrice">
            <summary>
            采购总价(精确到2位小数;单位:元。如:200.07，表示:200元7分 )
            </summary>
        </member>
        <member name="T:Top.Api.Response.JushitaJdpUsersGetResponse">
            <summary>
            JushitaJdpUsersGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.JushitaJdpUsersGetResponse.TotalResults">
            <summary>
            总记录数
            </summary>
        </member>
        <member name="P:Top.Api.Response.JushitaJdpUsersGetResponse.Users">
            <summary>
            用户列表
            </summary>
        </member>
        <member name="T:Top.Api.Response.PromotionCouponsGetResponse">
            <summary>
            PromotionCouponsGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.PromotionCouponsGetResponse.Coupons">
            <summary>
            优惠券列表
            </summary>
        </member>
        <member name="P:Top.Api.Response.PromotionCouponsGetResponse.TotalResults">
            <summary>
            查询的总数量
            </summary>
        </member>
        <member name="T:Top.Api.Response.LogisticsOnlineCancelResponse">
            <summary>
            LogisticsOnlineCancelResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.LogisticsOnlineCancelResponse.IsSuccess">
            <summary>
            成功与失败
            </summary>
        </member>
        <member name="P:Top.Api.Response.LogisticsOnlineCancelResponse.ModifyTime">
            <summary>
            修改时间
            </summary>
        </member>
        <member name="P:Top.Api.Response.LogisticsOnlineCancelResponse.RecreatedOrderId">
            <summary>
            重新创建物流订单id
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaRtrptCampaignGetResponse">
            <summary>
            SimbaRtrptCampaignGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaRtrptCampaignGetResponse.Resultss">
            <summary>
            111
            </summary>
        </member>
        <member name="T:Top.Api.Response.ItemsSellerListGetResponse">
            <summary>
            ItemsSellerListGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ItemsSellerListGetResponse.Items">
            <summary>
            商品详细信息列表
            </summary>
        </member>
        <member name="T:Top.Api.Response.ItemPriceUpdateResponse">
            <summary>
            ItemPriceUpdateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ItemPriceUpdateResponse.Item">
            <summary>
            商品结构里的num_iid，modified
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaLoginAuthsignGetResponse">
            <summary>
            SimbaLoginAuthsignGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaLoginAuthsignGetResponse.SubwayToken">
            <summary>
            登陆签名
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaRptCampaigneffectGetResponse">
            <summary>
            SimbaRptCampaigneffectGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaRptCampaigneffectGetResponse.RptCampaignEffectList">
            <summary>
            推广计划效果报表数据对象
            </summary>
        </member>
        <member name="T:Top.Api.Response.TradesSoldGetResponse">
            <summary>
            TradesSoldGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TradesSoldGetResponse.HasNext">
            <summary>
            是否存在下一页
            </summary>
        </member>
        <member name="P:Top.Api.Response.TradesSoldGetResponse.TotalResults">
            <summary>
            搜索到的交易信息总数
            </summary>
        </member>
        <member name="P:Top.Api.Response.TradesSoldGetResponse.Trades">
            <summary>
            搜索到的交易信息列表，返回的Trade和Order中包含的具体信息为入参fields请求的字段信息
            </summary>
        </member>
        <member name="T:Top.Api.Response.ItemImgDeleteResponse">
            <summary>
            ItemImgDeleteResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ItemImgDeleteResponse.ItemImg">
            <summary>
            商品图片结构
            </summary>
        </member>
        <member name="T:Top.Api.Request.JushitaJdpRdsinfoGetRequest">
            <summary>
            TOP API: taobao.jushita.jdp.rdsinfo.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.JushitaJdpRdsinfoGetRequest.TargetAppkey">
            <summary>
            查询的appkey
            </summary>
        </member>
        <member name="T:Top.Api.Request.ItemIncrementUpdateSchemaGetRequest">
            <summary>
            TOP API: taobao.item.increment.update.schema.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemIncrementUpdateSchemaGetRequest.CategoryId">
            <summary>
            宝贝类目id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemIncrementUpdateSchemaGetRequest.ItemId">
            <summary>
            宝贝id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemIncrementUpdateSchemaGetRequest.UpdateFields">
            <summary>
            修改字段
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaKeywordsQscoreGetRequest">
            <summary>
            TOP API: taobao.simba.keywords.qscore.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaKeywordsQscoreGetRequest.AdgroupId">
            <summary>
            推广组Id
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaKeywordsQscoreGetRequest.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="T:Top.Api.Request.PromotionCouponsGetRequest">
            <summary>
            TOP API: taobao.promotion.coupons.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.PromotionCouponsGetRequest.CouponId">
            <summary>
            优惠券的id，唯一标识这个优惠券
            </summary>
        </member>
        <member name="P:Top.Api.Request.PromotionCouponsGetRequest.Denominations">
            <summary>
            优惠券的面额，必须是3，5，10，20，50,100
            </summary>
        </member>
        <member name="P:Top.Api.Request.PromotionCouponsGetRequest.EndTime">
            <summary>
            优惠券的截止日期
            </summary>
        </member>
        <member name="P:Top.Api.Request.PromotionCouponsGetRequest.PageNo">
            <summary>
            查询的页号，结果集是分页返回的，每页20条
            </summary>
        </member>
        <member name="P:Top.Api.Request.PromotionCouponsGetRequest.PageSize">
            <summary>
            每页条数
            </summary>
        </member>
        <member name="T:Top.Api.Request.SubuserDepartmentDeleteRequest">
            <summary>
            TOP API: taobao.subuser.department.delete
            </summary>
        </member>
        <member name="P:Top.Api.Request.SubuserDepartmentDeleteRequest.DepartmentId">
            <summary>
            部门ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.SubuserDepartmentDeleteRequest.UserNick">
            <summary>
            主账号用户名
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaAdgroupsbycampaignidGetRequest">
            <summary>
            TOP API: taobao.simba.adgroupsbycampaignid.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupsbycampaignidGetRequest.CampaignId">
            <summary>
            推广计划Id
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupsbycampaignidGetRequest.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupsbycampaignidGetRequest.PageNo">
            <summary>
            页码，从1开始
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupsbycampaignidGetRequest.PageSize">
            <summary>
            页尺寸，最大200，如果入参adgroup_ids有传入值，则page_size和page_no值不起作用。如果adgrpup_ids为空而campaign_id有值，此时page_size和page_no值才是返回的页数据大小和页码
            </summary>
        </member>
        <member name="T:Top.Api.Request.TopSdkFeedbackUploadRequest">
            <summary>
            TOP API: taobao.top.sdk.feedback.upload
            </summary>
        </member>
        <member name="P:Top.Api.Request.TopSdkFeedbackUploadRequest.Content">
            <summary>
            具体内容，json形式
            </summary>
        </member>
        <member name="P:Top.Api.Request.TopSdkFeedbackUploadRequest.Type">
            <summary>
            1、回传加密信息
            </summary>
        </member>
        <member name="T:Top.Api.Request.LogisticsPartnersGetRequest">
            <summary>
            TOP API: taobao.logistics.partners.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.LogisticsPartnersGetRequest.GoodsValue">
            <summary>
            货物价格.只有当选择货到付款此参数才会有效
            </summary>
        </member>
        <member name="P:Top.Api.Request.LogisticsPartnersGetRequest.IsNeedCarriage">
            <summary>
            是否需要揽收资费信息，默认false。在此值为false时，返回内容中将无carriage。在未设置source_id或target_id的情况下，无法查询揽收资费信息。自己联系无揽收资费记录。
            </summary>
        </member>
        <member name="P:Top.Api.Request.LogisticsPartnersGetRequest.ServiceType">
            <summary>
            服务类型，根据此参数可查出提供相应服务类型的物流公司信息(物流公司状态正常)，可选值：cod(货到付款)、online(在线下单)、 offline(自己联系)、limit(限时物流)。然后再根据source_id,target_id,goods_value这三个条件来过滤物流公司. 目前输入自己联系服务类型将会返回空，因为自己联系并没有具体的服务信息，所以不会有记录。
            </summary>
        </member>
        <member name="P:Top.Api.Request.LogisticsPartnersGetRequest.SourceId">
            <summary>
            物流公司揽货地地区码（必须是区、县一级的）.参考:http://www.stats.gov.cn/tjsj/tjbz/xzqhdm/201401/t20140116_501070.html或者调用 taobao.areas.get 获取
            </summary>
        </member>
        <member name="P:Top.Api.Request.LogisticsPartnersGetRequest.TargetId">
            <summary>
            物流公司派送地地区码（必须是区、县一级的）.参考:http://www.stats.gov.cn/tjsj/tjbz/xzqhdm/201401/t20140116_501070.html或者调用 taobao.areas.get 获取
            </summary>
        </member>
        <member name="T:Top.Api.Request.LogisticsOfflineSendRequest">
            <summary>
            TOP API: taobao.logistics.offline.send
            </summary>
        </member>
        <member name="P:Top.Api.Request.LogisticsOfflineSendRequest.CancelId">
            <summary>
            卖家联系人地址库ID，可以通过taobao.logistics.address.search接口查询到地址库ID。 如果为空，取的卖家的默认退货地址
            </summary>
        </member>
        <member name="P:Top.Api.Request.LogisticsOfflineSendRequest.CompanyCode">
            <summary>
            物流公司代码.如"POST"就代表中国邮政,"ZJS"就代表宅急送.调用 taobao.logistics.companies.get 获取。
            </summary>
        </member>
        <member name="P:Top.Api.Request.LogisticsOfflineSendRequest.Feature">
            <summary>
            feature参数格式 范例: identCode=tid1:识别码1,识别码2|tid2:识别码3;machineCode=tid3:3C机器号A,3C机器号B identCode为识别码的KEY,machineCode为3C的KEY,多个key之间用”;”分隔 “tid1:识别码1,识别码2|tid2:识别码3”为identCode对应的value。 "|"不同商品间的分隔符。 例1商品和2商品，之间就用"|"分开。 TID就是商品代表的子订单号，对应taobao.trade.fullinfo.get 接口获得的oid字段。(通过OID可以唯一定位到当前商品上) ":"TID和具体传入参数间的分隔符。冒号前表示TID,之后代表该商品的参数属性。 "," 属性间分隔符。（对应商品数量，当存在一个商品的数量超过1个时，用逗号分开）。 具体:当订单中A商品的数量为2个，其中手机串号分别为"12345","67890"。 参数格式：identCode=TIDA:12345,67890。 TIDA对应了A宝贝，冒号后用逗号分隔的"12345","67890".说明本订单A宝贝的数量为2，值分别为"12345","67890"。 当存在"|"时，就说明订单中存在多个商品，商品间用"|"分隔了开来。|"之后的内容含义同上。
            </summary>
        </member>
        <member name="P:Top.Api.Request.LogisticsOfflineSendRequest.IsSplit">
            <summary>
            表明是否是拆单，默认值0，1表示拆单
            </summary>
        </member>
        <member name="P:Top.Api.Request.LogisticsOfflineSendRequest.OutSid">
            <summary>
            运单号.具体一个物流公司的真实运单号码。淘宝官方物流会校验，请谨慎传入；
            </summary>
        </member>
        <member name="P:Top.Api.Request.LogisticsOfflineSendRequest.SellerIp">
            <summary>
            商家的IP地址
            </summary>
        </member>
        <member name="P:Top.Api.Request.LogisticsOfflineSendRequest.SenderId">
            <summary>
            卖家联系人地址库ID，可以通过taobao.logistics.address.search接口查询到地址库ID。如果为空，取的卖家的默认取货地址
            </summary>
        </member>
        <member name="P:Top.Api.Request.LogisticsOfflineSendRequest.SubTid">
            <summary>
            需要拆单发货的子订单集合，针对的是一笔交易下有多个子订单需要分开发货的场景；1次可传人多个子订单号，子订单间用逗号隔开；为空表示不做拆单发货。
            </summary>
        </member>
        <member name="P:Top.Api.Request.LogisticsOfflineSendRequest.Tid">
            <summary>
            淘宝交易ID
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaRtrptCampaignGetRequest">
            <summary>
            TOP API: taobao.simba.rtrpt.campaign.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRtrptCampaignGetRequest.Nick">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRtrptCampaignGetRequest.TheDate">
            <summary>
            日期，格式yyyy-mm-dd
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaAdgroupMobilediscountUpdateRequest">
            <summary>
            TOP API: taobao.simba.adgroup.mobilediscount.update
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupMobilediscountUpdateRequest.AdgroupIds">
            <summary>
            推广组id数组(推广组id集合元素个数在1-200个之间，推广组id需要在同一个推广计划中)
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupMobilediscountUpdateRequest.MobileDiscount">
            <summary>
            折扣（折扣值在1-400之间）
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupMobilediscountUpdateRequest.Nick">
            <summary>
            昵称
            </summary>
        </member>
        <member name="T:Top.Api.Request.ItemRecommendAddRequest">
            <summary>
            TOP API: taobao.item.recommend.add
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemRecommendAddRequest.NumIid">
            <summary>
            商品数字ID，该参数必须
            </summary>
        </member>
        <member name="T:Top.Api.Request.ItemcatsAuthorizeGetRequest">
            <summary>
            TOP API: taobao.itemcats.authorize.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemcatsAuthorizeGetRequest.Fields">
            <summary>
            需要返回的字段。目前支持有：  brand.vid, brand.name,   item_cat.cid, item_cat.name, item_cat.status,item_cat.sort_order,item_cat.parent_cid,item_cat.is_parent,  xinpin_item_cat.cid,   xinpin_item_cat.name,   xinpin_item_cat.status,  xinpin_item_cat.sort_order,  xinpin_item_cat.parent_cid,  xinpin_item_cat.is_parent
            </summary>
        </member>
        <member name="T:Top.Api.Request.TmallProductUpdateSchemaGetRequest">
            <summary>
            TOP API: tmall.product.update.schema.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallProductUpdateSchemaGetRequest.ProductId">
            <summary>
            产品编号
            </summary>
        </member>
        <member name="T:Top.Api.Request.DeliveryTemplateUpdateRequest">
            <summary>
            TOP API: taobao.delivery.template.update
            </summary>
        </member>
        <!-- 对于成员“P:Top.Api.Request.DeliveryTemplateUpdateRequest.Assumer”忽略有格式错误的 XML 注释 -->
        <member name="P:Top.Api.Request.DeliveryTemplateUpdateRequest.Name">
            <summary>
            模板名称，长度不能大于50个字节
            </summary>
        </member>
        <!-- 对于成员“P:Top.Api.Request.DeliveryTemplateUpdateRequest.TemplateAddFees”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“P:Top.Api.Request.DeliveryTemplateUpdateRequest.TemplateAddStandards”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“P:Top.Api.Request.DeliveryTemplateUpdateRequest.TemplateDests”忽略有格式错误的 XML 注释 -->
        <member name="P:Top.Api.Request.DeliveryTemplateUpdateRequest.TemplateId">
            <summary>
            需要修改的模板对应的模板ID
            </summary>
        </member>
        <!-- 对于成员“P:Top.Api.Request.DeliveryTemplateUpdateRequest.TemplateStartFees”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“P:Top.Api.Request.DeliveryTemplateUpdateRequest.TemplateStartStandards”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“P:Top.Api.Request.DeliveryTemplateUpdateRequest.TemplateTypes”忽略有格式错误的 XML 注释 -->
        <member name="T:Top.Api.Request.TmallProductTemplateGetRequest">
            <summary>
            TOP API: tmall.product.template.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallProductTemplateGetRequest.Cid">
            <summary>
            类目ID
            </summary>
        </member>
        <member name="T:Top.Api.Request.ShopcatsListGetRequest">
            <summary>
            TOP API: taobao.shopcats.list.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.ShopcatsListGetRequest.Fields">
            <summary>
            需要返回的字段列表，见ShopCat，默认返回：cid,parent_cid,name,is_parent
            </summary>
        </member>
        <member name="T:Top.Api.Request.TraderateAddRequest">
            <summary>
            TOP API: taobao.traderate.add
            </summary>
        </member>
        <member name="P:Top.Api.Request.TraderateAddRequest.Anony">
            <summary>
            是否匿名,卖家评不能匿名。可选值:true(匿名),false(非匿名)。注意：如果交易订单匿名，则评价也匿名
            </summary>
        </member>
        <member name="P:Top.Api.Request.TraderateAddRequest.Content">
            <summary>
            评价内容,最大长度: 500个汉字 .注意：当评价结果为good时就不用输入评价内容.评价内容为neutral/bad的时候需要输入评价内容
            </summary>
        </member>
        <member name="P:Top.Api.Request.TraderateAddRequest.Oid">
            <summary>
            子订单ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.TraderateAddRequest.Result">
            <summary>
            评价结果,可选值:good(好评),neutral(中评),bad(差评)
            </summary>
        </member>
        <member name="P:Top.Api.Request.TraderateAddRequest.Role">
            <summary>
            评价者角色,可选值:seller(卖家),buyer(买家)
            </summary>
        </member>
        <member name="P:Top.Api.Request.TraderateAddRequest.Tid">
            <summary>
            交易ID
            </summary>
        </member>
        <member name="T:Top.Api.Request.TradeFullinfoGetRequest">
            <summary>
            TOP API: taobao.trade.fullinfo.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.TradeFullinfoGetRequest.Fields">
            <summary>
            需要返回的字段列表，多个字段用半角逗号分隔，可选值为返回示例中能看到的所有字段。
            </summary>
        </member>
        <member name="P:Top.Api.Request.TradeFullinfoGetRequest.Tid">
            <summary>
            交易编号
            </summary>
        </member>
        <member name="T:Top.Api.Request.TradeAmountGetRequest">
            <summary>
            TOP API: taobao.trade.amount.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.TradeAmountGetRequest.Fields">
            <summary>
            订单帐务详情需要返回的字段信息，可选值如下：1. TradeAmount中可指定的fields：tid,alipay_no,created,pay_time,end_time,total_fee,payment,post_fee,cod_fee,commission_fee,buyer_obtain_point_fee2. OrderAmount中可指定的fields：order_amounts.oid,order_amounts.title,order_amounts.num_iid,order_amounts.sku_properties_name,order_amounts.sku_id,order_amounts.num,order_amounts.price,order_amounts.discount_fee,order_amounts.adjust_fee,order_amounts.payment,order_amounts.promotion_name3. order_amounts(返回OrderAmount的所有内容)4. promotion_details(指定该值会返回主订单的promotion_details中除id之外的所有字段)
            </summary>
        </member>
        <member name="P:Top.Api.Request.TradeAmountGetRequest.Tid">
            <summary>
            交易编号
            </summary>
        </member>
        <member name="T:Top.Api.Request.ItemUpdateListingRequest">
            <summary>
            TOP API: taobao.item.update.listing
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateListingRequest.Num">
            <summary>
            需要上架的商品的数量。取值范围:大于零的整数。如果商品有sku，则上架数量默认为所有sku数量总和，不可修改。否则商品数量根据设置数量调整为num
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateListingRequest.NumIid">
            <summary>
            商品数字ID，该参数必须
            </summary>
        </member>
        <member name="T:Top.Api.Domain.CatBrandSaleProp">
            <summary>
            CatBrandSaleProp Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.CatBrandSaleProp.BrandId">
            <summary>
            被管控的品牌的Id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.CatBrandSaleProp.CatId">
            <summary>
            被管控的类目ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.CatBrandSaleProp.DefMarketPropValue">
            <summary>
            如果该属性为营销属性，则获取默认值
            </summary>
        </member>
        <member name="P:Top.Api.Domain.CatBrandSaleProp.IsNotSpec">
            <summary>
            true表示：不是产品的规格属性  false表示：是产品的规格属性。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.CatBrandSaleProp.PropertyId">
            <summary>
            被管控的销售属性ID
            </summary>
        </member>
        <member name="T:Top.Api.Domain.ServiceOrder">
            <summary>
            ServiceOrder Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ServiceOrder.BuyerNick">
            <summary>
            卖家昵称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ServiceOrder.EtPlateNumber">
            <summary>
            车牌号
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ServiceOrder.EtSerTime">
            <summary>
            天猫汽车预约服务时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ServiceOrder.EtShopName">
            <summary>
            电子凭证预约门店地址
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ServiceOrder.EtVerifiedShopName">
            <summary>
            电子凭证核销门店地址
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ServiceOrder.ItemOid">
            <summary>
            服务所属的交易订单号。如果服务为一年包换，则item_oid这笔订单享受改服务的保护
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ServiceOrder.Num">
            <summary>
            购买数量，取值范围为大于0的整数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ServiceOrder.Oid">
            <summary>
            虚拟服务子订单订单号
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ServiceOrder.Payment">
            <summary>
            子订单实付金额。精确到2位小数，单位:元。如:200.07，表示:200元7分。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ServiceOrder.PicPath">
            <summary>
            服务图片地址
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ServiceOrder.Price">
            <summary>
            服务价格，精确到小数点后两位：单位:元
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ServiceOrder.RefundId">
            <summary>
            最近退款的id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ServiceOrder.SellerNick">
            <summary>
            卖家昵称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ServiceOrder.ServiceDetailUrl">
            <summary>
            服务详情的URL地址
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ServiceOrder.ServiceId">
            <summary>
            服务数字id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ServiceOrder.Title">
            <summary>
            商品名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ServiceOrder.TmserSpuCode">
            <summary>
            支持家装类物流的类型
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ServiceOrder.TotalFee">
            <summary>
            服务子订单总费用
            </summary>
        </member>
        <member name="T:Top.Api.Domain.QrcodeDO">
            <summary>
            QrcodeDO Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.QrcodeDO.ChannelId">
            <summary>
            二维码所属渠道ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.QrcodeDO.ChannelName">
            <summary>
            二维码对应的渠道名
            </summary>
        </member>
        <member name="P:Top.Api.Domain.QrcodeDO.EpsUrl">
            <summary>
            二维码的矢量图下载地址，只有设置入参need_eps为true且style不为官方模板时，才返回值
            </summary>
        </member>
        <member name="P:Top.Api.Domain.QrcodeDO.QrcodeId">
            <summary>
            二维码id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.QrcodeDO.QrcodeUrl">
            <summary>
            二维码图片链接
            </summary>
        </member>
        <member name="P:Top.Api.Domain.QrcodeDO.ShortUrl">
            <summary>
            二维码的短地址，每一个原始地址都会生成一个短地址
            </summary>
        </member>
        <member name="P:Top.Api.Domain.QrcodeDO.Url">
            <summary>
            二维码扫码后访问的目的地址
            </summary>
        </member>
        <member name="T:Top.Api.Domain.Product">
            <summary>
            Product Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Product.BarcodeStr">
            <summary>
            产品条码信息，仅在taobao.products.search接口且商城可用
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Product.Binds">
            <summary>
            产品的非关键属性列表.格式:pid:vid;pid:vid.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Product.BindsStr">
            <summary>
            产品的非关键属性字符串列表.格式同props_str(<strong>注：</strong><font color="red">属性名称中的冒号":"被转换为："#cln#";   分号";"被转换为："#scln#" </font>)
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Product.CatName">
            <summary>
            商品类目名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Product.Cid">
            <summary>
            商品类目ID.必须是叶子类目ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Product.CollectNum">
            <summary>
            产品的collect次数（不提供数据，返回0)
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Product.CommodityId">
            <summary>
            品类ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Product.Created">
            <summary>
            创建时间.格式:yyyy-mm-dd hh:mm:ss
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Product.CspuFeature">
            <summary>
            标识是否为达尔文体系下的产品 。  如果为空表示是非达尔文体系下的产品  如果cspu:0 表示是达尔文体系下的产品，有cspu正在待小二审核，但不能发布商品。  如果cspu:1 表示是达尔文体系下的产品，且有小二确认的cspu，能发布商品
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Product.CustomerProps">
            <summary>
            用户自定义属性,结构：pid1:value1;pid2:value2 例如：“20000:优衣库”，表示“品牌:优衣库”
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Product.Desc">
            <summary>
            产品的描述.最大25000个字节
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Product.IsSuiteEffective">
            <summary>
            标识套装产品是否有效，无效的套装产品需要重新发布
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Product.Level">
            <summary>
            产品的级别level
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Product.Modified">
            <summary>
            修改时间.格式:yyyy-mm-dd hh:mm:ss
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Product.Name">
            <summary>
            产品名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Product.OuterId">
            <summary>
            外部产品ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Product.PicPath">
            <summary>
            产品对应的图片路径
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Product.PicUrl">
            <summary>
            产品的主图片地址.(绝对地址,格式:http://host/image_path)
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Product.Price">
            <summary>
            产品的市场价.单位为元.精确到2位小数;如:200.07
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Product.ProductExtraInfos">
            <summary>
            产品扩展信息
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Product.ProductId">
            <summary>
            产品ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Product.ProductImgs">
            <summary>
            产品的子图片.目前最多支持4张。fields中设置为product_imgs.id、product_imgs.url、product_imgs.position 等形式就会返回相应的字段
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Product.ProductPropImgs">
            <summary>
            产品的属性图片.比如说黄色对应的产品图片,绿色对应的产品图片。fields中设置为product_prop_imgs.id、   product_prop_imgs.props、product_prop_imgs.url、product_prop_imgs.position等形式就会返回相应的字段
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Product.PropertyAlias">
            <summary>
            销售属性值别名。格式为pid1:vid1:alias1;pid1:vid2:alia2。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Product.Props">
            <summary>
            产品的关键属性列表.格式：pid:vid;pid:vid
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Product.PropsStr">
            <summary>
            产品的关键属性字符串列表.比如:品牌:诺基亚;型号:N73(<strong>注：</strong><font color="red">属性名称中的冒号":"被转换为："#cln#";   分号";"被转换为："#scln#" </font>)
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Product.RateNum">
            <summary>
            产品的评分次数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Product.SaleNum">
            <summary>
            产品的销售量
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Product.SaleProps">
            <summary>
            产品的销售属性列表.格式:pid:vid;pid:vid
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Product.SalePropsStr">
            <summary>
            产品的销售属性字符串列表.格式同props_str(<strong>注：</strong><font color="red">属性名称中的冒号":"被转换为："#cln#";   分号";"被转换为："#scln#" </font>)
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Product.SellPt">
            <summary>
            产品卖点描述，长度限制20个汉字
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Product.ShopPrice">
            <summary>
            产品的店内价格
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Product.StandardPrice">
            <summary>
            产品的标准价格
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Product.Status">
            <summary>
            当前状态(0 商家确认 1 屏蔽 3 小二确认 2 未确认 -1 删除)
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Product.SuiteItemsStr">
            <summary>
            套装产品关联的子规格,同时该字段不为空标识该产品是套装产品
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Product.TemplateId">
            <summary>
            模板ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Product.Tsc">
            <summary>
            淘宝标准产品编码
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Product.VerticalMarket">
            <summary>
            垂直市场,如：3（3C），4（鞋城）
            </summary>
        </member>
        <member name="T:Top.Api.Domain.Brand">
            <summary>
            Brand Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Brand.Name">
            <summary>
            vid的值
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Brand.Pid">
            <summary>
            品牌的属性id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Brand.PropName">
            <summary>
            品牌的属性名
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Brand.Vid">
            <summary>
            对应属性的 pid:vid 串中的vid
            </summary>
        </member>
        <member name="T:Top.Api.Domain.FoodSecurity">
            <summary>
            FoodSecurity Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FoodSecurity.Contact">
            <summary>
            厂家联系方式
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FoodSecurity.DesignCode">
            <summary>
            产品标准号
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FoodSecurity.Factory">
            <summary>
            厂名
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FoodSecurity.FactorySite">
            <summary>
            厂址
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FoodSecurity.FoodAdditive">
            <summary>
            食品添加剂
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FoodSecurity.HealthProductNo">
            <summary>
            健字号，保健品/膳食营养补充剂 这个类目下特有的信息，此类目下无需填写生产许可证编号（QS），如果填写了生产许可证编号（QS）将被忽略不保存；保存宝贝时，标题前会自动加上健字号产品名称一起作为宝贝标题；
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FoodSecurity.Mix">
            <summary>
            配料表
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FoodSecurity.Period">
            <summary>
            保质期
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FoodSecurity.PlanStorage">
            <summary>
            储藏方法
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FoodSecurity.PrdLicenseNo">
            <summary>
            生产许可证号
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FoodSecurity.ProductDateEnd">
            <summary>
            生产结束日期
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FoodSecurity.ProductDateStart">
            <summary>
            生产开始日期
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FoodSecurity.StockDateEnd">
            <summary>
            进货结束日期，要在生产日期之后
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FoodSecurity.StockDateStart">
            <summary>
            进货开始日期，要在生产日期之后
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FoodSecurity.Supplier">
            <summary>
            供货商
            </summary>
        </member>
        <member name="T:Top.Api.Domain.ItemTaosirDO">
            <summary>
            ItemTaosirDO Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ItemTaosirDO.ExprElList">
            <summary>
            表达式元素list
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ItemTaosirDO.Precision">
            <summary>
            数值小数点精度
            </summary>
        </member>
        <!-- 对于成员“P:Top.Api.Domain.ItemTaosirDO.StdUnitList”忽略有格式错误的 XML 注释 -->
        <member name="P:Top.Api.Domain.ItemTaosirDO.Type">
            <summary>
            时间类型：0表示非时间，1表示时间点，2表示时间范围
            </summary>
        </member>
        <member name="T:Top.Api.Domain.Picture">
            <summary>
            Picture Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Picture.ClientType">
            <summary>
            图片上传的来源，有电脑版本宝贝发布，手机版本宝贝发布
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Picture.Created">
            <summary>
            图片的创建时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Picture.Deleted">
            <summary>
            图片是否删除的标记
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Picture.GmtCreate">
            <summary>
            上传时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Picture.GmtModified">
            <summary>
            修改时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Picture.Md5">
            <summary>
            图片在后台处理之后的md5值当md5值为32位长度的字符串时为图片搬家后的文件md5验证码md5值为长整数时为图片替换后的时间戳
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Picture.Modified">
            <summary>
            图片的修改时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Picture.Name">
            <summary>
            图片名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Picture.PictureCategoryId">
            <summary>
            图片分类ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Picture.PictureId">
            <summary>
            图片ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Picture.PicturePath">
            <summary>
            返回的是绝对路径如：http://img07.taobaocdn.com/imgextra/i7/22670458/T2dD0kXb4cXXXXXXXX_!!22670458.jpg
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Picture.Pixel">
            <summary>
            图片相素,格式:长x宽，如450x150
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Picture.Referenced">
            <summary>
            图片是否被引用
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Picture.Sizes">
            <summary>
            图片大小,bite单位
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Picture.Status">
            <summary>
            图片状态,unfroze代表没有被冻结，froze代表被冻结,pass代表排查通过
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Picture.Success">
            <summary>
            是否删除
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Picture.Title">
            <summary>
            图片标题
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Picture.Uid">
            <summary>
            卖家ID
            </summary>
        </member>
        <member name="T:Top.Api.Domain.SubUserPermission">
            <summary>
            SubUserPermission Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubUserPermission.Permissions">
            <summary>
            子账号被直接赋予的权限点列表
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubUserPermission.Roles">
            <summary>
            子账号被赋予的角色信息(Role)列表。列表中的角色对象只有role_id，role_name，permissions信息
            </summary>
        </member>
        <member name="T:Top.Api.Domain.PartnerDetail">
            <summary>
            PartnerDetail Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PartnerDetail.AccountNo">
            <summary>
            物流公司支付宝账号
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PartnerDetail.CompanyCode">
            <summary>
            物流公司代码
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PartnerDetail.CompanyId">
            <summary>
            物流公司id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PartnerDetail.CompanyName">
            <summary>
            物流公司简称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PartnerDetail.FullName">
            <summary>
            物流公司全名
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PartnerDetail.RegMailNo">
            <summary>
            运单号验证正则表达式
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PartnerDetail.WangwangId">
            <summary>
            旺旺id
            </summary>
        </member>
        <member name="T:Top.Api.Parser.TopJsonParser`1">
            <summary>
            TOP JSON响应通用解释器。
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerCrowdUpdateResponse">
            <summary>
            ZuanshiBannerCrowdUpdateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCrowdUpdateResponse.Result">
            <summary>
            返回结果对象
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerCrowdUpdateResponse.ResultDtoDomain">
            <summary>
            ResultDtoDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCrowdUpdateResponse.ResultDtoDomain.Message">
            <summary>
            message
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCrowdUpdateResponse.ResultDtoDomain.Success">
            <summary>
            调用是否成功,true-成功，false-失败
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerCreativeConditionResponse">
            <summary>
            ZuanshiBannerCreativeConditionResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeConditionResponse.Result">
            <summary>
            返回数据
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerCreativeConditionResponse.ConditionDomain">
            <summary>
            ConditionDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeConditionResponse.ConditionDomain.CreativeCat">
            <summary>
            创意类目，类目ID，1,女装 2,彩妆，护肤 3,女鞋 4,男装 5,男鞋 6,箱包 7,食品，茶叶，烟酒 8,内衣 9,保健 10,饰品，服饰          11,运动 12,居家 13,童装，母婴 14,电器 15,数码 16,游戏 17,团购 18,其他
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeConditionResponse.ConditionDomain.CreativeFormatList">
            <summary>
            创意格式，图片创意：2 ，Flash创意：3，视频创意：4，文字链创意：5 ，Flash不遮盖创意：9， 模板创意：10
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeConditionResponse.ConditionDomain.CreativeLevelList">
            <summary>
            创意等级编码，一级：1，二级：2，三级：3 ，四级：4，十级：10 ，未分等级：99
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeConditionResponse.ConditionDomain.CreativeStatusList">
            <summary>
            创意审核状态主要包含待审核（【-4】，【-1】和【0】），审核通过（【1】）以及审核拒绝（【-2】，【-5】和【-9】）
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerCreativeConditionResponse.ResultDomain">
            <summary>
            ResultDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeConditionResponse.ResultDomain.Condition">
            <summary>
            查询条件
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeConditionResponse.ResultDomain.Message">
            <summary>
            错误时候，返回错误信息
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeConditionResponse.ResultDomain.Success">
            <summary>
            true：调用成功，false：调用失败
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerCatFindResponse">
            <summary>
            ZuanshiBannerCatFindResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCatFindResponse.Result">
            <summary>
            result
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerCatFindResponse.SeniorInterestDtoDomain">
            <summary>
            SeniorInterestDtoDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCatFindResponse.SeniorInterestDtoDomain.CatId">
            <summary>
            类目ID
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCatFindResponse.SeniorInterestDtoDomain.CatName">
            <summary>
            类目名称
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCatFindResponse.SeniorInterestDtoDomain.OptionName">
            <summary>
            选项名称
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCatFindResponse.SeniorInterestDtoDomain.OptionValue">
            <summary>
            选项值
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerCatFindResponse.ResultDtoDomain">
            <summary>
            ResultDtoDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCatFindResponse.ResultDtoDomain.Interests">
            <summary>
            类目数据
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCatFindResponse.ResultDtoDomain.Message">
            <summary>
            返回信息
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCatFindResponse.ResultDtoDomain.Success">
            <summary>
            success
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerCampaignStatusResponse">
            <summary>
            ZuanshiBannerCampaignStatusResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCampaignStatusResponse.Result">
            <summary>
            result
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerCampaignStatusResponse.ResultDtoDomain">
            <summary>
            ResultDtoDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCampaignStatusResponse.ResultDtoDomain.Message">
            <summary>
            message
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCampaignStatusResponse.ResultDtoDomain.Success">
            <summary>
            调用是否成功
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerCampaignGetResponse">
            <summary>
            ZuanshiBannerCampaignGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCampaignGetResponse.Result">
            <summary>
            返回数据
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerCampaignGetResponse.BannerTimeDomain">
            <summary>
            BannerTimeDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCampaignGetResponse.BannerTimeDomain.WeekEnds">
            <summary>
            周六和周日
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCampaignGetResponse.BannerTimeDomain.Workdays">
            <summary>
            周一到周五
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerCampaignGetResponse.CampaignDomain">
            <summary>
            CampaignDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCampaignGetResponse.CampaignDomain.AreaIdList">
            <summary>
            投放地域
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCampaignGetResponse.CampaignDomain.BannerTime">
            <summary>
            投放时间
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCampaignGetResponse.CampaignDomain.DayBudget">
            <summary>
            日预算（分）
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCampaignGetResponse.CampaignDomain.EndTime">
            <summary>
            结束时间
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCampaignGetResponse.CampaignDomain.Id">
            <summary>
            计划ID
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCampaignGetResponse.CampaignDomain.Name">
            <summary>
            计划名称
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCampaignGetResponse.CampaignDomain.OnlineStatus">
            <summary>
            计划状态
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCampaignGetResponse.CampaignDomain.SpeedType">
            <summary>
            投放方式，1：尽快，2：均匀
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCampaignGetResponse.CampaignDomain.StartTime">
            <summary>
            开始时间
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCampaignGetResponse.CampaignDomain.Type">
            <summary>
            计划类型
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerCampaignGetResponse.ResultDomain">
            <summary>
            ResultDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCampaignGetResponse.ResultDomain.Campaign">
            <summary>
            数据结果
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCampaignGetResponse.ResultDomain.Message">
            <summary>
            message
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCampaignGetResponse.ResultDomain.Success">
            <summary>
            true：调用成功，false：调用失败
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerAreaCodeFindResponse">
            <summary>
            ZuanshiBannerAreaCodeFindResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAreaCodeFindResponse.Result">
            <summary>
            结果对象
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerAreaCodeFindResponse.AreaCodeDomain">
            <summary>
            AreaCodeDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAreaCodeFindResponse.AreaCodeDomain.Code">
            <summary>
            编码
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAreaCodeFindResponse.AreaCodeDomain.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerAreaCodeFindResponse.ResultDomain">
            <summary>
            ResultDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAreaCodeFindResponse.ResultDomain.AreaCodes">
            <summary>
            地域对象集合
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAreaCodeFindResponse.ResultDomain.Message">
            <summary>
            message
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAreaCodeFindResponse.ResultDomain.Success">
            <summary>
            true：调用成功，false：调用失败
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerAdgroupStatusResponse">
            <summary>
            ZuanshiBannerAdgroupStatusResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdgroupStatusResponse.Result">
            <summary>
            result
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerAdgroupStatusResponse.ResultDTODomain">
            <summary>
            ResultDTODomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdgroupStatusResponse.ResultDTODomain.Message">
            <summary>
            message
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdgroupStatusResponse.ResultDTODomain.Success">
            <summary>
            success
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAdzonesGetResponse">
            <summary>
            ZuanshiAdzonesGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdzonesGetResponse.AdzoneList">
            <summary>
            资源位信息列表
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAdvertiserTargetRtrptsTotalGetResponse">
            <summary>
            ZuanshiAdvertiserTargetRtrptsTotalGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRtrptsTotalGetResponse.TargetRealtimeRptTotalList">
            <summary>
            查询结果
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAdvertiserTargetRtrptsTotalGetResponse.DataDomain">
            <summary>
            DataDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRtrptsTotalGetResponse.DataDomain.AdPv">
            <summary>
            展现量
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRtrptsTotalGetResponse.DataDomain.AdgroupId">
            <summary>
            推广单元id
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRtrptsTotalGetResponse.DataDomain.AdgroupName">
            <summary>
            transName
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRtrptsTotalGetResponse.DataDomain.CampaignId">
            <summary>
            计划id
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRtrptsTotalGetResponse.DataDomain.CampaignName">
            <summary>
            campaignName
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRtrptsTotalGetResponse.DataDomain.Charge">
            <summary>
            花费
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRtrptsTotalGetResponse.DataDomain.Click">
            <summary>
            点击量
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRtrptsTotalGetResponse.DataDomain.Ctr">
            <summary>
            ctr
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRtrptsTotalGetResponse.DataDomain.Ecpc">
            <summary>
            ecpc
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRtrptsTotalGetResponse.DataDomain.Ecpm">
            <summary>
            ecpm
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRtrptsTotalGetResponse.DataDomain.LogDate">
            <summary>
            日期
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRtrptsTotalGetResponse.DataDomain.TargetId">
            <summary>
            定向id
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRtrptsTotalGetResponse.DataDomain.TargetName">
            <summary>
            destName
            </summary>
        </member>
        <member name="T:Top.Api.Response.WangwangClientidBindResponse">
            <summary>
            WangwangClientidBindResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.WangwangClientidBindResponse.Result">
            <summary>
            0:表示成功  其它为错误
            </summary>
        </member>
        <member name="T:Top.Api.Response.TmcMessagesConsumeResponse">
            <summary>
            TmcMessagesConsumeResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmcMessagesConsumeResponse.Messages">
            <summary>
            消息列表
            </summary>
        </member>
        <member name="T:Top.Api.Response.TmcMessagesConfirmResponse">
            <summary>
            TmcMessagesConfirmResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmcMessagesConfirmResponse.IsSuccess">
            <summary>
            是否成功
            </summary>
        </member>
        <member name="T:Top.Api.Response.RegionWarehouseManageResponse">
            <summary>
            RegionWarehouseManageResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.RegionWarehouseManageResponse.Result">
            <summary>
            返回结果
            </summary>
        </member>
        <member name="T:Top.Api.Response.RegionWarehouseManageResponse.BaseResultDomain">
            <summary>
            BaseResultDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.RegionWarehouseManageResponse.BaseResultDomain.Data">
            <summary>
            true/false
            </summary>
        </member>
        <member name="P:Top.Api.Response.RegionWarehouseManageResponse.BaseResultDomain.ErrorCode">
            <summary>
            errorCode
            </summary>
        </member>
        <member name="P:Top.Api.Response.RegionWarehouseManageResponse.BaseResultDomain.ErrorMsg">
            <summary>
            errorMsg
            </summary>
        </member>
        <member name="P:Top.Api.Response.RegionWarehouseManageResponse.BaseResultDomain.Success">
            <summary>
            success
            </summary>
        </member>
        <member name="T:Top.Api.Response.OpenimUsersDeleteResponse">
            <summary>
            OpenimUsersDeleteResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.OpenimUsersDeleteResponse.Result">
            <summary>
            操作成功
            </summary>
        </member>
        <member name="T:Top.Api.Response.FenxiaoRefundQueryResponse">
            <summary>
            FenxiaoRefundQueryResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoRefundQueryResponse.RefundList">
            <summary>
            代销采购退款列表
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoRefundQueryResponse.TotalResults">
            <summary>
            按查询条件查到的记录总数
            </summary>
        </member>
        <member name="T:Top.Api.Response.FenxiaoRefundMessageGetResponse">
            <summary>
            FenxiaoRefundMessageGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoRefundMessageGetResponse.OrderMessages">
            <summary>
            退款留言
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoRefundMessageGetResponse.TotalResults">
            <summary>
            总留言条数
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiAdvertiserAccountRptsGetRequest">
            <summary>
            TOP API: taobao.zuanshi.advertiser.account.rpts.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAccountRptsGetRequest.EndTime">
            <summary>
            查询结束时间
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAccountRptsGetRequest.RptType">
            <summary>
            null代表所有计划类型整体报表，1代表展示网络计划，2代表明星店铺计划，3代表视频网络计划
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAccountRptsGetRequest.StartTime">
            <summary>
            查询开始时间
            </summary>
        </member>
        <member name="T:Top.Api.Request.WirelessShareTpwdCreateRequest">
            <summary>
            TOP API: taobao.wireless.share.tpwd.create
            </summary>
        </member>
        <member name="P:Top.Api.Request.WirelessShareTpwdCreateRequest.TpwdParam">
            <summary>
            口令参数
            </summary>
        </member>
        <member name="T:Top.Api.Request.WirelessShareTpwdCreateRequest.GenPwdIsvParamDtoDomain">
            <summary>
            GenPwdIsvParamDtoDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Request.WirelessShareTpwdCreateRequest.GenPwdIsvParamDtoDomain.Ext">
            <summary>
            扩展字段JSON格式
            </summary>
        </member>
        <member name="P:Top.Api.Request.WirelessShareTpwdCreateRequest.GenPwdIsvParamDtoDomain.Logo">
            <summary>
            口令弹框logoURL
            </summary>
        </member>
        <member name="P:Top.Api.Request.WirelessShareTpwdCreateRequest.GenPwdIsvParamDtoDomain.Text">
            <summary>
            口令弹框内容
            </summary>
        </member>
        <member name="P:Top.Api.Request.WirelessShareTpwdCreateRequest.GenPwdIsvParamDtoDomain.Url">
            <summary>
            口令跳转url
            </summary>
        </member>
        <member name="P:Top.Api.Request.WirelessShareTpwdCreateRequest.GenPwdIsvParamDtoDomain.UserId">
            <summary>
            生成口令的淘宝用户ID
            </summary>
        </member>
        <member name="T:Top.Api.Request.TmcMessagesConsumeRequest">
            <summary>
            TOP API: taobao.tmc.messages.consume
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmcMessagesConsumeRequest.GroupName">
            <summary>
            用户分组名称，不传表示消费默认分组，如果应用没有设置用户分组，传入分组名称将会返回错误
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmcMessagesConsumeRequest.Quantity">
            <summary>
            每次批量消费消息的条数
            </summary>
        </member>
        <member name="T:Top.Api.Request.TbkUatmEventGetRequest">
            <summary>
            TOP API: taobao.tbk.uatm.event.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkUatmEventGetRequest.Fields">
            <summary>
            需要返回的字段列表，不能为空，字段名之间使用逗号分隔
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkUatmEventGetRequest.PageNo">
            <summary>
            默认1，第几页，从1开始计数
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkUatmEventGetRequest.PageSize">
            <summary>
            默认20,  页大小，即每一页的活动个数
            </summary>
        </member>
        <member name="T:Top.Api.Request.ScitemQueryRequest">
            <summary>
            TOP API: taobao.scitem.query
            </summary>
        </member>
        <member name="P:Top.Api.Request.ScitemQueryRequest.BarCode">
            <summary>
            条形码
            </summary>
        </member>
        <member name="P:Top.Api.Request.ScitemQueryRequest.ItemName">
            <summary>
            商品名称
            </summary>
        </member>
        <member name="P:Top.Api.Request.ScitemQueryRequest.ItemType">
            <summary>
            ITEM类型(只允许输入以下英文或空) NORMAL 0:普通商品; COMBINE 1:是否是组合商品 DISTRIBUTION
            </summary>
        </member>
        <member name="P:Top.Api.Request.ScitemQueryRequest.OuterCode">
            <summary>
            商家给商品的一个编码
            </summary>
        </member>
        <member name="P:Top.Api.Request.ScitemQueryRequest.PageIndex">
            <summary>
            当前页码数
            </summary>
        </member>
        <member name="P:Top.Api.Request.ScitemQueryRequest.PageSize">
            <summary>
            分页记录个数，如果用户输入的记录数大于50，则一页显示50条记录
            </summary>
        </member>
        <member name="P:Top.Api.Request.ScitemQueryRequest.WmsCode">
            <summary>
            仓库编码
            </summary>
        </member>
        <member name="T:Top.Api.Request.OpenimTribeSetmembernickRequest">
            <summary>
            TOP API: taobao.openim.tribe.setmembernick
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimTribeSetmembernickRequest.Member">
            <summary>
            被设置昵称的群成员
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimTribeSetmembernickRequest.Nick">
            <summary>
            设置的昵称
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimTribeSetmembernickRequest.TribeId">
            <summary>
            群id
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimTribeSetmembernickRequest.User">
            <summary>
            发起设置昵称的操作者，如果是设置其他成员的昵称，只有普通组的群主和管理员有权限
            </summary>
        </member>
        <member name="T:Top.Api.Request.OpenimTribeSetmembernickRequest.UserDomain">
            <summary>
            UserDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimTribeSetmembernickRequest.UserDomain.AppKey">
            <summary>
            账户appkey
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimTribeSetmembernickRequest.UserDomain.TaobaoAccount">
            <summary>
            是否为淘宝账号
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimTribeSetmembernickRequest.UserDomain.Uid">
            <summary>
            用户id
            </summary>
        </member>
        <member name="T:Top.Api.Request.OpenimImmsgPushRequest">
            <summary>
            TOP API: taobao.openim.immsg.push
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimImmsgPushRequest.Immsg">
            <summary>
            openim消息结构体
            </summary>
        </member>
        <member name="T:Top.Api.Request.OpenimImmsgPushRequest.ImMsgDomain">
            <summary>
            ImMsgDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimImmsgPushRequest.ImMsgDomain.Context">
            <summary>
            发送的消息内容。根据不同消息类型，传不同的值。0(文本消息):填消息内容字符串。1(图片):base64编码的jpg或gif文件。3(语音):base64编码的amr文件。8(地理位置):经纬度，格式如 111,222
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimImmsgPushRequest.ImMsgDomain.FromTaobao">
            <summary>
            如果为1，则表示发送方是一个淘宝账号，该账号必须是本appkey绑定过的客服账号，并且只能给本appkey的用户发消息。通过该参数可以从服务端发起一个客服到用户的会话。
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimImmsgPushRequest.ImMsgDomain.FromUser">
            <summary>
            消息发送者
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimImmsgPushRequest.ImMsgDomain.MediaAttr">
            <summary>
            json map，媒体信息属性。根据msgtype变化。0(文本):填空即可。 1(图片):需要图片格式，{"type":"jpg"}或{"type":"gif"}。   2(语音): 需要文件格式和语音长度信息{"type":"amr","playtime":5}
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimImmsgPushRequest.ImMsgDomain.MsgType">
            <summary>
            消息类型。0:文本消息。1:图片消息，只支持jpg、gif。2:语音消息，只支持amr。8:地理位置信息。
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimImmsgPushRequest.ImMsgDomain.ToAppkey">
            <summary>
            接收方appkey，默认本app，跨app发送时需要用到
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimImmsgPushRequest.ImMsgDomain.ToUsers">
            <summary>
            消息接受者
            </summary>
        </member>
        <member name="T:Top.Api.Request.InventoryWarehouseQueryRequest">
            <summary>
            TOP API: taobao.inventory.warehouse.query
            </summary>
        </member>
        <member name="P:Top.Api.Request.InventoryWarehouseQueryRequest.PageNo">
            <summary>
            页码
            </summary>
        </member>
        <member name="P:Top.Api.Request.InventoryWarehouseQueryRequest.PageSize">
            <summary>
            页大小
            </summary>
        </member>
        <member name="M:WebSocketSharp.Net.HttpUtility.HtmlDecode(System.String)">
            <summary>
            Decodes an HTML-encoded string and returns the decoded string.
            </summary>
            <param name="s">The HTML string to decode.</param>
            <returns>The decoded text.</returns>
        </member>
        <member name="M:WebSocketSharp.Net.HttpUtility.HtmlDecode(System.String,System.IO.TextWriter)">
            <summary>
            Decodes an HTML-encoded string and sends the resulting output to a TextWriter output stream.
            </summary>
            <param name="s">The HTML string to decode.</param>
            <param name="output">The TextWriter output stream containing the decoded string.</param>
        </member>
        <member name="M:WebSocketSharp.Net.HttpUtility.HtmlEncode(System.String)">
            <summary>
            HTML-encodes a string and returns the encoded string.
            </summary>
            <param name="s">The text string to encode.</param>
            <returns>The HTML-encoded text.</returns>
        </member>
        <member name="M:WebSocketSharp.Net.HttpUtility.HtmlEncode(System.String,System.IO.TextWriter)">
            <summary>
            HTML-encodes a string and sends the resulting output to a TextWriter output stream.
            </summary>
            <param name="s">The string to encode.</param>
            <param name="output">The TextWriter output stream containing the encoded string.</param>
        </member>
        <member name="T:Taobao.Top.Link.Channel.ClientChannelSharedSelector">
            <summary>a channel pool that same uri sharing same channel
            </summary>
        </member>
        <member name="P:Taobao.Top.Link.Channel.ClientChannelSharedSelector.HeartbeatPeriod">
            <summary>get or set heartbeat interval time in milliseconds
            </summary>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Core.WindowsPathUtils">
            <summary>
            WindowsPathUtils provides simple utilities for handling windows paths.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Core.WindowsPathUtils.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ICSharpCode.SharpZipLib.Core.WindowsPathUtils"/> class.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Core.WindowsPathUtils.DropPathRoot(System.String)">
            <summary>
            Remove any path root present in the path
            </summary>
            <param name="path">A <see cref="T:System.String"/> containing path information.</param>
            <returns>The path with the root removed if it was present; path otherwise.</returns>
            <remarks>Unlike the <see cref="T:System.IO.Path"/> class the path isnt otherwise checked for validity.</remarks>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.InflaterDynHeader.mode">
            <summary>
            The current decode mode
            </summary>
        </member>
        <member name="T:Top.Api.ClusterTopClient">
            <summary>
            异地多活自动分配集群客户端。
            </summary>
        </member>
        <member name="T:Top.Api.Domain.InventorySum">
            <summary>
            InventorySum Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InventorySum.InventoryType">
            <summary>
            库存类型：  1：正常   2：损坏   3：冻结   10：质押   11-20:商家自定义
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InventorySum.InventoryTypeName">
            <summary>
            库存类型名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InventorySum.OccupyQuantity">
            <summary>
            总占用数量
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InventorySum.Quantity">
            <summary>
            总物理库存数量
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InventorySum.ReserveQuantity">
            <summary>
            总预扣数量
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InventorySum.ScItemCode">
            <summary>
            商品商家编码
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InventorySum.ScItemId">
            <summary>
            商品后端ID，如果有传sc_item_code,参数可以为0
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InventorySum.StoreCode">
            <summary>
            商家仓库编码
            </summary>
        </member>
        <member name="T:Top.Api.DefaultTopClientStone">
            <summary>
            基于REST的TOP客户端。
            </summary>
        </member>
        <member name="T:Top.Api.Response.WangwangEserviceAccountstatusGetResponse">
            <summary>
            WangwangEserviceAccountstatusGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.WangwangEserviceAccountstatusGetResponse.AccountInfos">
            <summary>
            账号操作记录列表。
            </summary>
        </member>
        <member name="P:Top.Api.Response.WangwangEserviceAccountstatusGetResponse.RetCode">
            <summary>
            接口调用返回码。 0：成功。100：部分成功。
            </summary>
        </member>
        <member name="T:Top.Api.Response.TopatsTaskDeleteResponse">
            <summary>
            TopatsTaskDeleteResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TopatsTaskDeleteResponse.IsSuccess">
            <summary>
            表示操作是否成功，是为true，否为false。
            </summary>
        </member>
        <member name="T:Top.Api.Response.JushitaJdpRdsinfoGetResponse">
            <summary>
            JushitaJdpRdsinfoGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.JushitaJdpRdsinfoGetResponse.RdsList">
            <summary>
            app的rds列表
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaAdgroupAdgroupcatmatchsGetResponse">
            <summary>
            SimbaAdgroupAdgroupcatmatchsGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaAdgroupAdgroupcatmatchsGetResponse.AdgroupCatmatchList">
            <summary>
            类目出价列表
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaInsightCatstopwordnewGetResponse">
            <summary>
            SimbaInsightCatstopwordnewGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaInsightCatstopwordnewGetResponse.TopwordDataList">
            <summary>
            类目下热门词详细数据
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaKeywordscatQscoreGetResponse">
            <summary>
            SimbaKeywordscatQscoreGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaKeywordscatQscoreGetResponse.Qscore">
            <summary>
            类目出价和词的质量得分对象
            </summary>
        </member>
        <member name="T:Top.Api.Response.TmallItemOuteridUpdateResponse">
            <summary>
            TmallItemOuteridUpdateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallItemOuteridUpdateResponse.OuteridUpdateResult">
            <summary>
            商家编码更新结果
            </summary>
        </member>
        <member name="T:Top.Api.Response.SubuserInfoUpdateResponse">
            <summary>
            SubuserInfoUpdateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SubuserInfoUpdateResponse.IsSuccess">
            <summary>
            操作是否成功 true:操作成功; false:操作失败
            </summary>
        </member>
        <member name="T:Top.Api.Response.TicketItemsGetResponse">
            <summary>
            TicketItemsGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TicketItemsGetResponse.TicketItems">
            <summary>
            商品信息
            </summary>
        </member>
        <member name="T:Top.Api.Response.JushitaJdpTaskUpdateResponse">
            <summary>
            JushitaJdpTaskUpdateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.JushitaJdpTaskUpdateResponse.IsSuccess">
            <summary>
            更新任务是否成功
            </summary>
        </member>
        <member name="T:Top.Api.Response.MarketingPromotionKfcResponse">
            <summary>
            MarketingPromotionKfcResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.MarketingPromotionKfcResponse.IsSuccess">
            <summary>
            是否成功
            </summary>
        </member>
        <member name="T:Top.Api.Response.TmallBrandcatMetadataGetResponse">
            <summary>
            TmallBrandcatMetadataGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallBrandcatMetadataGetResponse.BrandCatMetaData">
            <summary>
            类目、品牌下的达尔文元数据
            </summary>
        </member>
        <member name="T:Top.Api.Response.SellercenterRoleAddResponse">
            <summary>
            SellercenterRoleAddResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SellercenterRoleAddResponse.Role">
            <summary>
            子账号角色
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaNonsearchAllplacesGetResponse">
            <summary>
            SimbaNonsearchAllplacesGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaNonsearchAllplacesGetResponse.PlaceList">
            <summary>
            定向推广投放位置列表
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaNonsearchAdgroupplacesAddResponse">
            <summary>
            SimbaNonsearchAdgroupplacesAddResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaNonsearchAdgroupplacesAddResponse.AdgroupPlaceList">
            <summary>
            推广组定向推广位置列表
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaNonsearchDemographicsUpdateResponse">
            <summary>
            SimbaNonsearchDemographicsUpdateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaNonsearchDemographicsUpdateResponse.DemographicSettingList">
            <summary>
            人群维度设置列表
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaAdgroupsChangedGetResponse">
            <summary>
            SimbaAdgroupsChangedGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaAdgroupsChangedGetResponse.Adgroups">
            <summary>
            推广组分页对象
            </summary>
        </member>
        <member name="T:Top.Api.Response.PictureGetResponse">
            <summary>
            PictureGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.PictureGetResponse.Pictures">
            <summary>
            图片信息列表
            </summary>
        </member>
        <member name="P:Top.Api.Response.PictureGetResponse.TotalResults">
            <summary>
            总的结果数
            </summary>
        </member>
        <member name="T:Top.Api.Response.TopatsResultGetResponse">
            <summary>
            TopatsResultGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TopatsResultGetResponse.Task">
            <summary>
            任务结果信息
            </summary>
        </member>
        <member name="T:Top.Api.Response.WangwangEserviceNewevalsGetResponse">
            <summary>
            WangwangEserviceNewevalsGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.WangwangEserviceNewevalsGetResponse.ResultCode">
            <summary>
            0表示成功
            </summary>
        </member>
        <member name="P:Top.Api.Response.WangwangEserviceNewevalsGetResponse.ResultCount">
            <summary>
            总条数
            </summary>
        </member>
        <member name="P:Top.Api.Response.WangwangEserviceNewevalsGetResponse.StaffEvalDetails">
            <summary>
            评价具体数据
            </summary>
        </member>
        <member name="T:Top.Api.Response.ItemSkuPriceUpdateResponse">
            <summary>
            ItemSkuPriceUpdateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ItemSkuPriceUpdateResponse.Sku">
            <summary>
            商品SKU信息（只包含num_iid和modified）
            </summary>
        </member>
        <member name="T:Top.Api.Response.TmallItemSizemappingTemplateDeleteResponse">
            <summary>
            TmallItemSizemappingTemplateDeleteResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallItemSizemappingTemplateDeleteResponse.TemplateId">
            <summary>
            尺码表模板ID
            </summary>
        </member>
        <member name="T:Top.Api.Response.TraderateListAddResponse">
            <summary>
            TraderateListAddResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TraderateListAddResponse.TradeRate">
            <summary>
            返回的评论的信息，仅返回tid和created字段
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaRptAdgroupbaseGetResponse">
            <summary>
            SimbaRptAdgroupbaseGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaRptAdgroupbaseGetResponse.RptAdgroupBaseList">
            <summary>
            广告组基础数据对象
            </summary>
        </member>
        <member name="T:Top.Api.Response.TradeMemoAddResponse">
            <summary>
            TradeMemoAddResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TradeMemoAddResponse.Trade">
            <summary>
            对一笔交易添加备注后返回其对应的Trade，Trade中可用的返回字段有tid和created
            </summary>
        </member>
        <member name="T:Top.Api.Response.TradeGetResponse">
            <summary>
            TradeGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TradeGetResponse.Trade">
            <summary>
            搜索到的交易信息列表，返回的Trade和Order中包含的具体信息为入参fields请求的字段信息
            </summary>
        </member>
        <member name="T:Top.Api.Response.ItemSkuUpdateResponse">
            <summary>
            ItemSkuUpdateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ItemSkuUpdateResponse.Sku">
            <summary>
            商品Sku
            </summary>
        </member>
        <member name="T:Top.Api.Response.AftersaleGetResponse">
            <summary>
            AftersaleGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.AftersaleGetResponse.AfterSales">
            <summary>
            售后服务返回对象
            </summary>
        </member>
        <member name="T:Top.Api.Response.ProductsGetResponse">
            <summary>
            ProductsGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ProductsGetResponse.Products">
            <summary>
            返回具体信息为入参fields请求的字段信息
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaAdgroupUpdateRequest">
            <summary>
            TOP API: taobao.simba.adgroup.update
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupUpdateRequest.AdgroupId">
            <summary>
            推广组Id
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupUpdateRequest.DefaultPrice">
            <summary>
            默认出价，单位是分，不能小于5
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupUpdateRequest.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupUpdateRequest.NonsearchMaxPrice">
            <summary>
            非搜索出价，单位是分，不能小于5，如果use_nonseatch_default_price为使用默认出价，则此nonsearch_max_price字段传入的数据不起作用，商品将使用默认非搜索出价
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupUpdateRequest.OnlineStatus">
            <summary>
            用户设置的上下线状态 offline-下线(暂停竞价)； online-上线；默认为online
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupUpdateRequest.UseNonsearchDefaultPrice">
            <summary>
            非搜索是否使用默认出价，false-不用；true-使用；默认为true;
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaAdgroupCatmatchGetRequest">
            <summary>
            TOP API: taobao.simba.adgroup.catmatch.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupCatmatchGetRequest.AdgroupId">
            <summary>
            推广组Id
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupCatmatchGetRequest.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaCreativesGetRequest">
            <summary>
            TOP API: taobao.simba.creatives.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaCreativesGetRequest.AdgroupId">
            <summary>
            推广组Id
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaCreativesGetRequest.CreativeIds">
            <summary>
            创意Id数组，最多200个
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaCreativesGetRequest.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="T:Top.Api.Request.CategoryrecommendItemsGetRequest">
            <summary>
            TOP API: taobao.categoryrecommend.items.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.CategoryrecommendItemsGetRequest.CategoryId">
            <summary>
            传入叶子类目ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.CategoryrecommendItemsGetRequest.Count">
            <summary>
            请求个数，建议获取20个
            </summary>
        </member>
        <member name="P:Top.Api.Request.CategoryrecommendItemsGetRequest.Ext">
            <summary>
            额外参数
            </summary>
        </member>
        <member name="P:Top.Api.Request.CategoryrecommendItemsGetRequest.RecommendType">
            <summary>
            请求类型，1：类目下热门商品推荐。其他值当非法值处理
            </summary>
        </member>
        <member name="T:Top.Api.Request.TopatsJushitaJdpDatadeleteRequest">
            <summary>
            TOP API: taobao.topats.jushita.jdp.datadelete
            </summary>
        </member>
        <member name="P:Top.Api.Request.TopatsJushitaJdpDatadeleteRequest.EndDate">
            <summary>
            删除数据时间段的结束修改时间，格式为：yyyy-MM-dd HH:mm:ss，结束时间必须为前天的23:59:59秒以前，根据是业务的modified时间
            </summary>
        </member>
        <member name="P:Top.Api.Request.TopatsJushitaJdpDatadeleteRequest.StartDate">
            <summary>
            删除数据时间段的起始修改时间，格式为：yyyy-MM-dd HH:mm:ss,根据是业务的modified时间
            </summary>
        </member>
        <member name="P:Top.Api.Request.TopatsJushitaJdpDatadeleteRequest.SyncTypes">
            <summary>
            推送的数据类型，可选值为：tb_trade(淘宝交易)，tb_item(淘宝商品)，tb_refund(淘宝退款)，fx_trade(分销订单)，同时删除多种类型以分号分隔，如："tb_trade;tb_item;tb_refund;fx_trade"
            </summary>
        </member>
        <member name="P:Top.Api.Request.TopatsJushitaJdpDatadeleteRequest.UserNick">
            <summary>
            用户昵称，不填表示删除所有用户的数据。
            </summary>
        </member>
        <member name="T:Top.Api.Request.LogisticsAddressModifyRequest">
            <summary>
            TOP API: taobao.logistics.address.modify
            </summary>
        </member>
        <member name="P:Top.Api.Request.LogisticsAddressModifyRequest.Addr">
            <summary>
            详细街道地址，不需要重复填写省/市/区
            </summary>
        </member>
        <!-- 对于成员“P:Top.Api.Request.LogisticsAddressModifyRequest.CancelDef”忽略有格式错误的 XML 注释 -->
        <member name="P:Top.Api.Request.LogisticsAddressModifyRequest.City">
            <summary>
            所在市
            </summary>
        </member>
        <member name="P:Top.Api.Request.LogisticsAddressModifyRequest.ContactId">
            <summary>
            地址库ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.LogisticsAddressModifyRequest.ContactName">
            <summary>
            联系人姓名  <font color='red'>长度不可超过20个字节</font>
            </summary>
        </member>
        <!-- 对于成员“P:Top.Api.Request.LogisticsAddressModifyRequest.Country”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“P:Top.Api.Request.LogisticsAddressModifyRequest.GetDef”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“P:Top.Api.Request.LogisticsAddressModifyRequest.Memo”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“P:Top.Api.Request.LogisticsAddressModifyRequest.MobilePhone”忽略有格式错误的 XML 注释 -->
        <member name="P:Top.Api.Request.LogisticsAddressModifyRequest.Phone">
            <summary>
            电话号码,手机与电话必需有一个
            </summary>
        </member>
        <member name="P:Top.Api.Request.LogisticsAddressModifyRequest.Province">
            <summary>
            所在省
            </summary>
        </member>
        <!-- 对于成员“P:Top.Api.Request.LogisticsAddressModifyRequest.SellerCompany”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“P:Top.Api.Request.LogisticsAddressModifyRequest.SendDef”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“P:Top.Api.Request.LogisticsAddressModifyRequest.ZipCode”忽略有格式错误的 XML 注释 -->
        <member name="T:Top.Api.Request.LogisticsAddressSearchRequest">
            <summary>
            TOP API: taobao.logistics.address.search
            </summary>
        </member>
        <!-- 对于成员“P:Top.Api.Request.LogisticsAddressSearchRequest.Rdef”忽略有格式错误的 XML 注释 -->
        <member name="T:Top.Api.Request.TraderateExplainAddRequest">
            <summary>
            TOP API: taobao.traderate.explain.add
            </summary>
        </member>
        <member name="P:Top.Api.Request.TraderateExplainAddRequest.Oid">
            <summary>
            子订单ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.TraderateExplainAddRequest.Reply">
            <summary>
            评价解释内容,最大长度: 500个汉字
            </summary>
        </member>
        <member name="T:Top.Api.Request.PicturePicturesGetRequest">
            <summary>
            TOP API: taobao.picture.pictures.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.PicturePicturesGetRequest.ClientType">
            <summary>
            图片使用，如果是pc宝贝detail使用，设置为client:computer，查询出来的图片是符合pc的宝贝detail显示的如果是手机宝贝detail使用，设置为client:phone，查询出来的图片是符合手机的宝贝detail显示的,默认值是全部
            </summary>
        </member>
        <member name="P:Top.Api.Request.PicturePicturesGetRequest.CurrentPage">
            <summary>
            页码.传入值为1代表第一页,传入值为2代表第二页,依此类推,默认值为1
            </summary>
        </member>
        <member name="P:Top.Api.Request.PicturePicturesGetRequest.Deleted">
            <summary>
            是否删除,deleted代表没有删除
            </summary>
        </member>
        <member name="P:Top.Api.Request.PicturePicturesGetRequest.EndDate">
            <summary>
            结束时间
            </summary>
        </member>
        <member name="P:Top.Api.Request.PicturePicturesGetRequest.IsHttps">
            <summary>
            是否获取https的链接
            </summary>
        </member>
        <member name="P:Top.Api.Request.PicturePicturesGetRequest.OrderBy">
            <summary>
            图片查询结果排序,time:desc按上传时间从晚到早(默认), time:asc按上传时间从早到晚,sizes:desc按图片从大到小，sizes:asc按图片从小到大,默认time:desc
            </summary>
        </member>
        <member name="P:Top.Api.Request.PicturePicturesGetRequest.PageSize">
            <summary>
            每页条数.每页返回最多返回100条,默认值40
            </summary>
        </member>
        <member name="P:Top.Api.Request.PicturePicturesGetRequest.PictureCategoryId">
            <summary>
            图片分类
            </summary>
        </member>
        <member name="P:Top.Api.Request.PicturePicturesGetRequest.PictureId">
            <summary>
            图片ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.PicturePicturesGetRequest.StartDate">
            <summary>
            查询上传结束时间点,格式:yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="P:Top.Api.Request.PicturePicturesGetRequest.StartModifiedDate">
            <summary>
            图片被修改的时间点，格式:yyyy-MM-dd HH:mm:ss。查询此修改时间点之后到目前的图片。
            </summary>
        </member>
        <member name="P:Top.Api.Request.PicturePicturesGetRequest.Title">
            <summary>
            图片标题,最大长度50字符,中英文都算一字符
            </summary>
        </member>
        <member name="P:Top.Api.Request.PicturePicturesGetRequest.Urls">
            <summary>
            图片url查询接口
            </summary>
        </member>
        <member name="T:Top.Api.Request.MarketingPromotionKfcRequest">
            <summary>
            TOP API: taobao.marketing.promotion.kfc
            </summary>
        </member>
        <member name="P:Top.Api.Request.MarketingPromotionKfcRequest.PromotionDesc">
            <summary>
            活动描述
            </summary>
        </member>
        <member name="P:Top.Api.Request.MarketingPromotionKfcRequest.PromotionTitle">
            <summary>
            活动名称
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaAdgroupidsChangedGetRequest">
            <summary>
            TOP API: taobao.simba.adgroupids.changed.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupidsChangedGetRequest.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupidsChangedGetRequest.PageNo">
            <summary>
            返回的第几页数据，默认为1
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupidsChangedGetRequest.PageSize">
            <summary>
            返回的每页数据量大小,默认200最大1000
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupidsChangedGetRequest.StartTime">
            <summary>
            得到此时间点之后的数据，不能大于一个月
            </summary>
        </member>
        <member name="T:Top.Api.Request.TmallBrandcatMetadataGetRequest">
            <summary>
            TOP API: tmall.brandcat.metadata.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallBrandcatMetadataGetRequest.BrandId">
            <summary>
            品牌id
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallBrandcatMetadataGetRequest.CatId">
            <summary>
            叶子类目id
            </summary>
        </member>
        <member name="T:Top.Api.Request.ItemCspuMoveRequest">
            <summary>
            TOP API: taobao.item.cspu.move
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemCspuMoveRequest.ItemId">
            <summary>
            商品id，必填
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemCspuMoveRequest.SkuCspuMapping">
            <summary>
            如果商品存在sku信息，必须输入sku和cspu的映射关系，可以支持多个skuID对应一个cspuID。“-1”代替删除sku。反之不能填写
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemCspuMoveRequest.SkuMealpropertyMapping">
            <summary>
            商品有SKU信息并且类目配置了营销属性（如套餐），则必须填写sku和套餐的映射关系。并且sku套餐信息和sku_cspu_mapping传入的sku_id信息保持一致。反之，不需要填写，
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemCspuMoveRequest.SpuId">
            <summary>
            商品需要挂接的目产品ID，如果不填默认不修改产品ID,即商品本身对应的产品ID
            </summary>
        </member>
        <member name="T:Top.Api.Request.ItemJointPropimgRequest">
            <summary>
            TOP API: taobao.item.joint.propimg
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemJointPropimgRequest.Id">
            <summary>
            属性图片ID。如果是新增不需要填写
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemJointPropimgRequest.NumIid">
            <summary>
            商品数字ID，必选
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemJointPropimgRequest.PicPath">
            <summary>
            图片地址(传入图片相对地址即可,即不需包含 http://img02.taobao.net/bao/uploaded )
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemJointPropimgRequest.Position">
            <summary>
            图片序号
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemJointPropimgRequest.Properties">
            <summary>
            属性列表。调用taobao.itemprops.get获取，属性必须是颜色属性，格式:pid:vid。
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaNonsearchAdgroupplacesAddRequest">
            <summary>
            TOP API: taobao.simba.nonsearch.adgroupplaces.add
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaNonsearchAdgroupplacesAddRequest.AdgroupPlacesJson">
            <summary>
            宝贝id投放位置id json数组字符串，数组个数最多200个。其中json数组中的key必须和对应实体AdGroupPlace中的属性字段保持一致，否则对应的实体对象属性获取不到相应的值
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaNonsearchAdgroupplacesAddRequest.CampaignId">
            <summary>
            12345
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaNonsearchAdgroupplacesAddRequest.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="T:Top.Api.Request.TradesSoldIncrementGetRequest">
            <summary>
            TOP API: taobao.trades.sold.increment.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.TradesSoldIncrementGetRequest.BuyerNick">
            <summary>
            买家昵称
            </summary>
        </member>
        <member name="P:Top.Api.Request.TradesSoldIncrementGetRequest.EndModified">
            <summary>
            查询修改结束时间，必须大于修改开始时间(修改时间跨度不能大于一天)，格式:yyyy-MM-dd HH:mm:ss。<span style="color:red;font-weight: bold;">建议使用30分钟以内的时间跨度，能大大提高响应速度和成功率</span>。
            </summary>
        </member>
        <member name="P:Top.Api.Request.TradesSoldIncrementGetRequest.ExtType">
            <summary>
            可选值有ershou(二手市场的订单）,service（商城服务子订单）mark（双十一大促活动异常订单）作为扩展类型筛选只能做单个ext_type查询，不能全部查询所有的ext_type类型
            </summary>
        </member>
        <member name="P:Top.Api.Request.TradesSoldIncrementGetRequest.Fields">
            <summary>
            需要返回的字段列表，多个字段用半角逗号分隔，可选值为返回示例中能看到的所有字段。rx_audit_status=0为处方药未审核状态
            </summary>
        </member>
        <member name="P:Top.Api.Request.TradesSoldIncrementGetRequest.PageNo">
            <summary>
            页码。取值范围:大于零的整数;默认值:1。<span style="color:red;font-weight: bold;">注：必须采用倒序的分页方式（从最后一页往回取）才能避免漏单问题。</span>
            </summary>
        </member>
        <member name="P:Top.Api.Request.TradesSoldIncrementGetRequest.PageSize">
            <summary>
            每页条数。取值范围：1~100，默认值：40。<span style="color:red;font-weight: bold;">建议使用40~50，可以提高成功率，减少超时数量</span>。
            </summary>
        </member>
        <!-- 对于成员“P:Top.Api.Request.TradesSoldIncrementGetRequest.RateStatus”忽略有格式错误的 XML 注释 -->
        <member name="P:Top.Api.Request.TradesSoldIncrementGetRequest.StartModified">
            <summary>
            查询修改开始时间(修改时间跨度不能大于一天)。格式:yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="P:Top.Api.Request.TradesSoldIncrementGetRequest.Status">
            <summary>
            交易状态（<a href="http://open.taobao.com/doc/detail.htm?id=102856" target="_blank">查看可选值</a>），默认查询所有交易状态的数据，除了默认值外每次只能查询一种状态。
            </summary>
        </member>
        <member name="P:Top.Api.Request.TradesSoldIncrementGetRequest.Tag">
            <summary>
            卖家对交易的自定义分组标签，目前可选值为：time_card（点卡软件代充），fee_card（话费软件代充）
            </summary>
        </member>
        <member name="P:Top.Api.Request.TradesSoldIncrementGetRequest.Type">
            <summary>
            交易类型列表（<a href="http://open.taobao.com/doc/detail.htm?id=102855" target="_blank">查看可选值</a>），一次查询多种类型可用半角逗号分隔，默认同时查询guarantee_trade,auto_delivery,ec,cod,step这5种类型的数据。
            </summary>
        </member>
        <member name="P:Top.Api.Request.TradesSoldIncrementGetRequest.UseHasNext">
            <summary>
            是否启用has_next的分页方式，如果指定true,则返回的结果中不包含总记录数，但是会新增一个是否存在下一页的的字段，<span style="color:red;font-weight: bold;">通过此种方式获取增量交易，效率在原有的基础上有80%的提升</span>。
            </summary>
        </member>
        <member name="T:Top.Api.Request.PictureUploadRequest">
            <summary>
            TOP API: taobao.picture.upload
            </summary>
        </member>
        <member name="P:Top.Api.Request.PictureUploadRequest.ClientType">
            <summary>
            图片上传的来源，有电脑版本宝贝发布，手机版本宝贝发布client:computer电脑版本宝贝使用，client:phone手机版本宝贝使用。注意：当client:phone时，图片限制为宽度在480-620之间，长度不能超过960，否则会报错。
            </summary>
        </member>
        <member name="P:Top.Api.Request.PictureUploadRequest.ImageInputTitle">
            <summary>
            包括后缀名的图片标题,不能为空，如Bule.jpg,有些卖家希望图片上传后取图片文件的默认名
            </summary>
        </member>
        <member name="P:Top.Api.Request.PictureUploadRequest.Img">
            <summary>
            图片二进制文件流,不能为空,允许png、jpg、gif图片格式,3M以内。
            </summary>
        </member>
        <member name="P:Top.Api.Request.PictureUploadRequest.IsHttps">
            <summary>
            是否获取https连接
            </summary>
        </member>
        <member name="P:Top.Api.Request.PictureUploadRequest.PictureCategoryId">
            <summary>
            图片分类ID，设置具体某个分类ID或设置0上传到默认分类，只能传入一个分类
            </summary>
        </member>
        <member name="P:Top.Api.Request.PictureUploadRequest.PictureId">
            <summary>
            如果此参数大于0，而且在后台能查到对应的图片，则此次上传为原图替换
            </summary>
        </member>
        <member name="P:Top.Api.Request.PictureUploadRequest.Title">
            <summary>
            图片标题,如果为空,传的图片标题就取去掉后缀名的image_input_title,超过50字符长度会截取50字符,重名会在标题末尾加"(1)";标题末尾已经有"(数字)"了，则数字加1
            </summary>
        </member>
        <member name="T:Top.Api.Request.WangwangEserviceLoginlogsGetRequest">
            <summary>
            TOP API: taobao.wangwang.eservice.loginlogs.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.WangwangEserviceLoginlogsGetRequest.EndDate">
            <summary>
            查询登录日志的结束时间，必须按示例的格式，否则会返回错误
            </summary>
        </member>
        <member name="P:Top.Api.Request.WangwangEserviceLoginlogsGetRequest.ServiceStaffId">
            <summary>
            需要查询登录日志的账号列表
            </summary>
        </member>
        <member name="P:Top.Api.Request.WangwangEserviceLoginlogsGetRequest.StartDate">
            <summary>
            查询登录日志的开始日期，必须按示例的格式，否则会返回错误
            </summary>
        </member>
        <member name="T:Top.Api.Request.WangwangEserviceEvaluationGetRequest">
            <summary>
            TOP API: taobao.wangwang.eservice.evaluation.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.WangwangEserviceEvaluationGetRequest.EndDate">
            <summary>
            查询结束日期
            </summary>
        </member>
        <member name="P:Top.Api.Request.WangwangEserviceEvaluationGetRequest.ServiceStaffId">
            <summary>
            客服人员id：cntaobao+淘宝nick，例如cntaobaotest
            </summary>
        </member>
        <member name="P:Top.Api.Request.WangwangEserviceEvaluationGetRequest.StartDate">
            <summary>
            查询开始日期
            </summary>
        </member>
        <member name="T:Top.Api.Request.TmallProductSpecGetRequest">
            <summary>
            TOP API: tmall.product.spec.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallProductSpecGetRequest.SpecId">
            <summary>
            要获取信息的产品规格信息。
            </summary>
        </member>
        <member name="T:Top.Api.Request.PictureUpdateRequest">
            <summary>
            TOP API: taobao.picture.update
            </summary>
        </member>
        <member name="P:Top.Api.Request.PictureUpdateRequest.NewName">
            <summary>
            新的图片名，最大长度50字符，不能为空
            </summary>
        </member>
        <member name="P:Top.Api.Request.PictureUpdateRequest.PictureId">
            <summary>
            要更改名字的图片的id
            </summary>
        </member>
        <member name="T:Top.Api.Request.TmallItemSizemappingTemplatesListRequest">
            <summary>
            TOP API: tmall.item.sizemapping.templates.list
            </summary>
        </member>
        <member name="T:Top.Api.Request.ItemSkusGetRequest">
            <summary>
            TOP API: taobao.item.skus.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemSkusGetRequest.Fields">
            <summary>
            需返回的字段列表。可选值：Sku结构体中的所有字段；字段之间用“,”分隔。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemSkusGetRequest.NumIids">
            <summary>
            sku所属商品数字id，必选。num_iid个数不能超过40个
            </summary>
        </member>
        <member name="T:Top.Api.Request.ItemPropimgDeleteRequest">
            <summary>
            TOP API: taobao.item.propimg.delete
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemPropimgDeleteRequest.Id">
            <summary>
            商品属性图片ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemPropimgDeleteRequest.NumIid">
            <summary>
            商品数字ID，必选
            </summary>
        </member>
        <member name="T:Top.Api.Domain.DemographicSetting">
            <summary>
            DemographicSetting Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DemographicSetting.CampaignId">
            <summary>
            推广计划ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DemographicSetting.CreateTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DemographicSetting.DemographicId">
            <summary>
            投放人群ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DemographicSetting.IncrementalPrice">
            <summary>
            加价
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DemographicSetting.ModifiedTime">
            <summary>
            修改时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DemographicSetting.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="T:Top.Api.Domain.GroupMember">
            <summary>
            GroupMember Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.GroupMember.GroupId">
            <summary>
            组编号
            </summary>
        </member>
        <member name="P:Top.Api.Domain.GroupMember.GroupName">
            <summary>
            组名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.GroupMember.MemberList">
            <summary>
            组成员列表，逗号分隔
            </summary>
        </member>
        <member name="T:Top.Api.Domain.TicketItem">
            <summary>
            TicketItem Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TicketItem.AuctionPoint">
            <summary>
            商品返点比例（只对B卖家开放，单位为%）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TicketItem.AuctionStatus">
            <summary>
            商品状态（onsale：上架，instock：仓库）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TicketItem.CatId">
            <summary>
            类目标识
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TicketItem.CheckToolMerchant">
            <summary>
            核销机具提供商
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TicketItem.City">
            <summary>
            商品所在地-城市
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TicketItem.Description">
            <summary>
            商品描述
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TicketItem.ErrMsg">
            <summary>
            商品对应的错误信息。针对get接口使用。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TicketItem.Etc">
            <summary>
            商品电子凭证信息-在门票商品为电子凭证时必选
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TicketItem.HaveInvoice">
            <summary>
            商品是否有发票（有发票为true，没有发票为false）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TicketItem.Image1">
            <summary>
            商品主图
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TicketItem.Image2">
            <summary>
            商品第一张多图
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TicketItem.Image3">
            <summary>
            商品第二张多图
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TicketItem.Image4">
            <summary>
            商品第三张多图
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TicketItem.Image5">
            <summary>
            商品第四张多图
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TicketItem.ItemId">
            <summary>
            商品的标识
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TicketItem.ListTime">
            <summary>
            商品的上架时间（精确到分，格式为：yyyy-MM-dd HH:mm）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TicketItem.PostageId">
            <summary>
            商品的物流运费模板-在产品规格使用到物流时必选
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TicketItem.ProductId">
            <summary>
            产品（具有产品规格的）标识
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TicketItem.PromotedStatus">
            <summary>
            商品是否橱窗推荐（橱窗推荐；true，不推荐：false）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TicketItem.Prov">
            <summary>
            商品所在地-省份
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TicketItem.SellerCsPhone">
            <summary>
            卖家客服电话
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TicketItem.ShopCats">
            <summary>
            宝贝所属的店铺分类列表-店铺分类标识请使用店铺相关接口获取获取，多个店铺分类标识之间通过逗号进行分隔，最多包含10个分类标识
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TicketItem.Skus">
            <summary>
            参见taobao.ticket.item.add文档描述
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TicketItem.SubStockAtBuy">
            <summary>
            商品是否为拍下减库存（拍下减库存为true，付款减库存为false）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TicketItem.Title">
            <summary>
            商品标题
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TicketItem.VideoId">
            <summary>
            商品视频-视频标识由多媒体中相关接口获取
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TicketItem.VipPromoted">
            <summary>
            商品是否参与店铺会员打折
            </summary>
        </member>
        <member name="T:Top.Api.Domain.LimitDiscountDetail">
            <summary>
            LimitDiscountDetail Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.LimitDiscountDetail.EndTime">
            <summary>
            限时打折结束时间。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.LimitDiscountDetail.ItemDiscount">
            <summary>
            该商品限时折扣
            </summary>
        </member>
        <member name="P:Top.Api.Domain.LimitDiscountDetail.ItemId">
            <summary>
            商品的id(数字类型)
            </summary>
        </member>
        <member name="P:Top.Api.Domain.LimitDiscountDetail.LimitDiscountName">
            <summary>
            限时打折名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.LimitDiscountDetail.LimitNum">
            <summary>
            每人限购数量，1、2、5、10000(不限)。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.LimitDiscountDetail.StartTime">
            <summary>
            限时打折开始时间。
            </summary>
        </member>
        <member name="T:Top.Api.Domain.Place">
            <summary>
            Place Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Place.CreateTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Place.LastUpdateTime">
            <summary>
            最后修改时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Place.Name">
            <summary>
            位置名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Place.PlaceId">
            <summary>
            位置标识
            </summary>
        </member>
        <member name="T:Top.Api.Domain.PromotionDisplayTop">
            <summary>
            PromotionDisplayTop Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PromotionDisplayTop.PromotionInItem">
            <summary>
            单品级优惠信息
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PromotionDisplayTop.PromotionInShop">
            <summary>
            店铺级优惠信息
            </summary>
        </member>
        <member name="T:Top.Api.Domain.Activity">
            <summary>
            Activity Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Activity.ActivityId">
            <summary>
            活动id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Activity.ActivityUrl">
            <summary>
            领用优惠券的链接
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Activity.AppliedCount">
            <summary>
            已经领取的优惠券的数量
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Activity.CouponId">
            <summary>
            活动对应的优惠券ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Activity.CreateUser">
            <summary>
            self代表自己创建，other他人创建
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Activity.PersonLimitCount">
            <summary>
            每个买家限领取优惠券的数量，1～5张
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Activity.Status">
            <summary>
            enabled代表有效，invalid代表失效。other代表空值
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Activity.TotalCount">
            <summary>
            卖家设置优惠券领取的总领用量
            </summary>
        </member>
        <member name="T:Top.Api.Domain.TopFee">
            <summary>
            TopFee Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TopFee.AddFee">
            <summary>
            增费：输入0.00-999.99（最多包含两位小数） 不能为空不输入运费时必须输入0
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TopFee.AddStandard">
            <summary>
            增费标准：当valuation(记价方式)为0时输入1-9999范围内的整数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TopFee.Destination">
            <summary>
            邮费子项涉及的地区,多个地区用逗号连接数量串;可以用taobao.areas.get接口获取.或者参考:http://www.stats.gov.cn/tjbz/xzqhdm/t20080215_402462675.htm 例 (110000,310000,320000,330000).就代表邮费子项涉 及(北京,上海,江苏,浙江)四个地区.填写时要注意对照地区代码值,如果填入错误地区代码,将会出现错误信息.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TopFee.ServiceType">
            <summary>
            可选值：post:平邮; cod:货到付款; ems:EMS; express:快递公司
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TopFee.StartFee">
            <summary>
            首费：输入0.01-999.99（最多包含两位小数） 不能为空也不能为0
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TopFee.StartStandard">
            <summary>
            首费标准：当valuation(记价方式)为0时输入1-9999范围内的整数
            </summary>
        </member>
        <member name="T:Aliyun.Api.IAliyunClient">
            <summary>
            TOP客户端。
            </summary>
        </member>
        <member name="M:Aliyun.Api.IAliyunClient.Execute``1(Aliyun.Api.IAliyunRequest{``0})">
            <summary>
            执行TOP公开API请求。
            </summary>
            <typeparam name="T">领域对象</typeparam>
            <param name="request">具体的TOP API请求</param>
            <returns>领域对象</returns>
        </member>
        <member name="M:Aliyun.Api.IAliyunClient.Execute``1(Aliyun.Api.IAliyunRequest{``0},System.String)">
            <summary>
            执行TOP隐私API请求。
            </summary>
            <typeparam name="T">领域对象</typeparam>
            <param name="request">具体的TOP API请求</param>
            <param name="session">用户会话码</param>
            <returns>领域对象</returns>
        </member>
        <member name="M:Aliyun.Api.IAliyunClient.Execute``1(Aliyun.Api.IAliyunRequest{``0},System.String,System.DateTime)">
            <summary>
            执行TOP隐私API请求。
            </summary>
            <typeparam name="T">领域对象</typeparam>
            <param name="request">具体的TOP API请求</param>
            <param name="session">用户会话码</param>
            <param name="timestamp">请求时间戳</param>
            <returns>领域对象</returns>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerCrowdFindResponse">
            <summary>
            ZuanshiBannerCrowdFindResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCrowdFindResponse.Result">
            <summary>
            返回结果对象
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerCrowdFindResponse.MatrixPriceDTODomain">
            <summary>
            MatrixPriceDTODomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCrowdFindResponse.MatrixPriceDTODomain.AdzoneId">
            <summary>
            资源位ID
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCrowdFindResponse.MatrixPriceDTODomain.Price">
            <summary>
            出价，单位：分
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerCrowdFindResponse.SubCrowdDTODomain">
            <summary>
            SubCrowdDTODomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCrowdFindResponse.SubCrowdDTODomain.SubCrowdName">
            <summary>
            定向子人群取值
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCrowdFindResponse.SubCrowdDTODomain.SubCrowdValue">
            <summary>
            定向子人群取值，根据不同定向类型表示不同含义
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerCrowdFindResponse.CrowdDTODomain">
            <summary>
            CrowdDTODomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCrowdFindResponse.CrowdDTODomain.AdgroupId">
            <summary>
            单元ID
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCrowdFindResponse.CrowdDTODomain.CampaignId">
            <summary>
            计划ID
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCrowdFindResponse.CrowdDTODomain.CrowdName">
            <summary>
            定向人群名称
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCrowdFindResponse.CrowdDTODomain.CrowdType">
            <summary>
            crowdType
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCrowdFindResponse.CrowdDTODomain.CrowdValue">
            <summary>
            定向人群取值，根据不同定向类型表示不同含义
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCrowdFindResponse.CrowdDTODomain.GmtCreate">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCrowdFindResponse.CrowdDTODomain.GmtModified">
            <summary>
            修改时间
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCrowdFindResponse.CrowdDTODomain.Id">
            <summary>
            定向人群id
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCrowdFindResponse.CrowdDTODomain.MatrixPrices">
            <summary>
            交叉出价对象
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCrowdFindResponse.CrowdDTODomain.SubCrowds">
            <summary>
            定向子人群对象
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerCrowdFindResponse.ResultDTODomain">
            <summary>
            ResultDTODomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCrowdFindResponse.ResultDTODomain.Crowds">
            <summary>
            定向人群列表
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCrowdFindResponse.ResultDTODomain.Message">
            <summary>
            message
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCrowdFindResponse.ResultDTODomain.Success">
            <summary>
            调用是否成功,true-成功，false-失败
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCrowdFindResponse.ResultDTODomain.TotalCount">
            <summary>
            返回数量
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAdvertiserAccountRptsDayGetResponse">
            <summary>
            ZuanshiAdvertiserAccountRptsDayGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAccountRptsDayGetResponse.AccountOfflineRptDaysList">
            <summary>
            结果
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAdvertiserAccountRptsDayGetResponse.DataDomain">
            <summary>
            DataDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAccountRptsDayGetResponse.DataDomain.AdPv">
            <summary>
            展现量
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAccountRptsDayGetResponse.DataDomain.AlipayInShopNum">
            <summary>
            成交量
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAccountRptsDayGetResponse.DataDomain.AlipayInshopAmt">
            <summary>
            成交额
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAccountRptsDayGetResponse.DataDomain.AvgAccessPageNum">
            <summary>
            平均访问页面数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAccountRptsDayGetResponse.DataDomain.AvgAccessTime">
            <summary>
            平均访问时长
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAccountRptsDayGetResponse.DataDomain.CartNum">
            <summary>
            加购物车数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAccountRptsDayGetResponse.DataDomain.Charge">
            <summary>
            花费
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAccountRptsDayGetResponse.DataDomain.Click">
            <summary>
            点击量
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAccountRptsDayGetResponse.DataDomain.Ctr">
            <summary>
            ctr
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAccountRptsDayGetResponse.DataDomain.Cvr">
            <summary>
            cvr
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAccountRptsDayGetResponse.DataDomain.DeepInshopUv">
            <summary>
            深度进店uv
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAccountRptsDayGetResponse.DataDomain.DirShopColNum">
            <summary>
            店铺收藏数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAccountRptsDayGetResponse.DataDomain.Ecpc">
            <summary>
            ecpc
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAccountRptsDayGetResponse.DataDomain.Ecpm">
            <summary>
            ecpm
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAccountRptsDayGetResponse.DataDomain.GmvInshopAmt">
            <summary>
            gmv成交额
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAccountRptsDayGetResponse.DataDomain.GmvInshopNum">
            <summary>
            gmv成交量
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAccountRptsDayGetResponse.DataDomain.InshopItemColNum">
            <summary>
            宝贝收藏数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAccountRptsDayGetResponse.DataDomain.LogDate">
            <summary>
            日期
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAccountRptsDayGetResponse.DataDomain.Roi">
            <summary>
            投入产出比
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAccountRptsDayGetResponse.DataDomain.Uv">
            <summary>
            uv
            </summary>
        </member>
        <member name="T:Top.Api.Response.TmcQueueGetResponse">
            <summary>
            TmcQueueGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmcQueueGetResponse.Datas">
            <summary>
            队列详细信息
            </summary>
        </member>
        <member name="T:Top.Api.Response.TmcQueueGetResponse.TmcQueueInfoDomain">
            <summary>
            TmcQueueInfoDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmcQueueGetResponse.TmcQueueInfoDomain.BrokerName">
            <summary>
            消息队列Broker名称
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmcQueueGetResponse.TmcQueueInfoDomain.GetTotal">
            <summary>
            当前队列当天读取量
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmcQueueGetResponse.TmcQueueInfoDomain.Name">
            <summary>
            TMC组名
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmcQueueGetResponse.TmcQueueInfoDomain.PutToal">
            <summary>
            当前队列当天写入量
            </summary>
        </member>
        <member name="T:Top.Api.Response.OpenimTribeGetmembersResponse">
            <summary>
            OpenimTribeGetmembersResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.OpenimTribeGetmembersResponse.TribeUserList">
            <summary>
            OPENIM群成员列表
            </summary>
        </member>
        <member name="T:Top.Api.Response.OpenimTribeGetalltribesResponse">
            <summary>
            OpenimTribeGetalltribesResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.OpenimTribeGetalltribesResponse.TribeInfoList">
            <summary>
            群列表信息
            </summary>
        </member>
        <member name="T:Top.Api.Response.JushitaJmsGroupGetResponse">
            <summary>
            JushitaJmsGroupGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.JushitaJmsGroupGetResponse.Groups">
            <summary>
            分组信息
            </summary>
        </member>
        <member name="P:Top.Api.Response.JushitaJmsGroupGetResponse.TotalResults">
            <summary>
            返回的总数
            </summary>
        </member>
        <member name="T:Top.Api.Response.FenxiaoProductcatDeleteResponse">
            <summary>
            FenxiaoProductcatDeleteResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoProductcatDeleteResponse.IsSuccess">
            <summary>
            操作是否成功
            </summary>
        </member>
        <member name="T:Top.Api.Response.FenxiaoDistributorItemsGetResponse">
            <summary>
            FenxiaoDistributorItemsGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoDistributorItemsGetResponse.Records">
            <summary>
            下载记录对象
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoDistributorItemsGetResponse.TotalResults">
            <summary>
            查询结果记录数
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiBannerDmpFindRequest">
            <summary>
            TOP API: taobao.zuanshi.banner.dmp.find
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiBannerCreativeBindRequest">
            <summary>
            TOP API: taobao.zuanshi.banner.creative.bind
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCreativeBindRequest.AdgroupId">
            <summary>
            单元ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCreativeBindRequest.CampaignId">
            <summary>
            计划ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCreativeBindRequest.CreativeIdList">
            <summary>
            创意ID列表
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiBannerAdgroupAdzoneBindRequest">
            <summary>
            TOP API: taobao.zuanshi.banner.adgroup.adzone.bind
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerAdgroupAdzoneBindRequest.AdgroupId">
            <summary>
            推广单元id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerAdgroupAdzoneBindRequest.AdzoneBidDtoList">
            <summary>
            广告位列表
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerAdgroupAdzoneBindRequest.CampaignId">
            <summary>
            推广计划id
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiBannerAdgroupAdzoneBindRequest.MatrixPriceDTODomain">
            <summary>
            MatrixPriceDTODomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerAdgroupAdzoneBindRequest.MatrixPriceDTODomain.CrowdId">
            <summary>
            定向id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerAdgroupAdzoneBindRequest.MatrixPriceDTODomain.CrowdType">
            <summary>
            定向类型
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerAdgroupAdzoneBindRequest.MatrixPriceDTODomain.Price">
            <summary>
            出价(单位分)
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiBannerAdgroupAdzoneBindRequest.AdzoneBidDTODomain">
            <summary>
            AdzoneBidDTODomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerAdgroupAdzoneBindRequest.AdzoneBidDTODomain.AdzoneId">
            <summary>
            广告位id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerAdgroupAdzoneBindRequest.AdzoneBidDTODomain.MatrixPriceList">
            <summary>
            出价列表
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiAdvertiserTargetRptsTotalGetRequest">
            <summary>
            TOP API: taobao.zuanshi.advertiser.target.rpts.total.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserTargetRptsTotalGetRequest.AdgroupId">
            <summary>
            单元id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserTargetRptsTotalGetRequest.CampaignId">
            <summary>
            计划id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserTargetRptsTotalGetRequest.CampaignModel">
            <summary>
            计划类型。1：全店推广；4单品推广
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserTargetRptsTotalGetRequest.Effect">
            <summary>
            效果周期，取值范围：3,7,15。分别表示效果转化周期-3天/7天/15天。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserTargetRptsTotalGetRequest.EffectType">
            <summary>
            效果类型。“impression”：展现效果；“click”：点击效果
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserTargetRptsTotalGetRequest.EndTime">
            <summary>
            结束日期
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserTargetRptsTotalGetRequest.Offset">
            <summary>
            分页偏移量
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserTargetRptsTotalGetRequest.PageSize">
            <summary>
            每页条数，必传；每页最多200
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserTargetRptsTotalGetRequest.StartTime">
            <summary>
            开始日期
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserTargetRptsTotalGetRequest.TargetId">
            <summary>
            定向id
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiAdvertiserAdgroupRptsTotalGetRequest">
            <summary>
            TOP API: taobao.zuanshi.advertiser.adgroup.rpts.total.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAdgroupRptsTotalGetRequest.AdgroupId">
            <summary>
            推广单元id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAdgroupRptsTotalGetRequest.CampaignId">
            <summary>
            计划id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAdgroupRptsTotalGetRequest.CampaignModel">
            <summary>
            计划类型。1：全店推广；4单品推广
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAdgroupRptsTotalGetRequest.Effect">
            <summary>
            效果周期，取值范围：3,7,15。分别表示效果转化周期-3天/7天/15天。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAdgroupRptsTotalGetRequest.EffectType">
            <summary>
            效果类型。“impression”：展现效果；“click”：点击效果
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAdgroupRptsTotalGetRequest.EndTime">
            <summary>
            结束日期
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAdgroupRptsTotalGetRequest.Offset">
            <summary>
            分页偏移量
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAdgroupRptsTotalGetRequest.PageSize">
            <summary>
            每页条数，必传；每页最多200
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAdgroupRptsTotalGetRequest.StartTime">
            <summary>
            开始日期
            </summary>
        </member>
        <member name="T:Top.Api.Request.TmcUserGetRequest">
            <summary>
            TOP API: taobao.tmc.user.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmcUserGetRequest.Fields">
            <summary>
            需返回的字段列表，多个字段以半角逗号分隔。可选值：TmcUser结构体中的所有字段，一定要返回topic。
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmcUserGetRequest.Nick">
            <summary>
            用户昵称
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmcUserGetRequest.UserPlatform">
            <summary>
            用户所属的平台类型，tbUIC:淘宝用户; icbu: icbu用户
            </summary>
        </member>
        <member name="T:Top.Api.Request.TmcAuthGetRequest">
            <summary>
            TOP API: taobao.tmc.auth.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmcAuthGetRequest.Group">
            <summary>
            tmc组名
            </summary>
        </member>
        <member name="T:Top.Api.Request.TbkShopRecommendGetRequest">
            <summary>
            TOP API: taobao.tbk.shop.recommend.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkShopRecommendGetRequest.Count">
            <summary>
            返回数量，默认20，最大值40
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkShopRecommendGetRequest.Fields">
            <summary>
            需返回的字段列表
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkShopRecommendGetRequest.Platform">
            <summary>
            链接形式：1：PC，2：无线，默认：１
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkShopRecommendGetRequest.UserId">
            <summary>
            卖家Id
            </summary>
        </member>
        <member name="T:Top.Api.Request.TbkItemRecommendGetRequest">
            <summary>
            TOP API: taobao.tbk.item.recommend.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkItemRecommendGetRequest.Count">
            <summary>
            返回数量，默认20，最大值40
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkItemRecommendGetRequest.Fields">
            <summary>
            需返回的字段列表
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkItemRecommendGetRequest.NumIid">
            <summary>
            商品Id
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkItemRecommendGetRequest.Platform">
            <summary>
            链接形式：1：PC，2：无线，默认：１
            </summary>
        </member>
        <member name="T:Top.Api.Request.OpenimRelationsGetRequest">
            <summary>
            TOP API: taobao.openim.relations.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimRelationsGetRequest.BegDate">
            <summary>
            查询起始日期。格式yyyyMMdd。不得早于一个月
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimRelationsGetRequest.EndDate">
            <summary>
            查询结束日期。格式yyyyMMdd。不得早于一个月
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimRelationsGetRequest.User">
            <summary>
            用户信息
            </summary>
        </member>
        <member name="T:Top.Api.Request.OpenimCustmsgPushRequest">
            <summary>
            TOP API: taobao.openim.custmsg.push
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimCustmsgPushRequest.Custmsg">
            <summary>
            自定义消息内容
            </summary>
        </member>
        <member name="T:Top.Api.Request.OpenimCustmsgPushRequest.CustMsgDomain">
            <summary>
            CustMsgDomain Data Structure.
            </summary>
        </member>
        <!-- 对于成员“P:Top.Api.Request.OpenimCustmsgPushRequest.CustMsgDomain.ApnsParam”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“P:Top.Api.Request.OpenimCustmsgPushRequest.CustMsgDomain.Aps”忽略有格式错误的 XML 注释 -->
        <member name="P:Top.Api.Request.OpenimCustmsgPushRequest.CustMsgDomain.Data">
            <summary>
            发送的自定义数据，sdk默认无法解析消息，该数据需要客户端自己解析
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimCustmsgPushRequest.CustMsgDomain.FromNick">
            <summary>
            可以指定发送方的显示昵称，默认为空，自动使用发送方用户id作为nick
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimCustmsgPushRequest.CustMsgDomain.FromTaobao">
            <summary>
            如果为1，则表示发送方是一个淘宝账号，该账号必须是本appkey绑定过的客服账号，并且只能给本appkey的用户发消息。通过该参数可以从服务端发起一个客服到用户的会话。
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimCustmsgPushRequest.CustMsgDomain.FromUser">
            <summary>
            发送方userid
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimCustmsgPushRequest.CustMsgDomain.Invisible">
            <summary>
            表示消息是否在最近会话列表里面展示。如果为1，则消息不在列表展示，可以认为服务端透明的给客户端下法了一个数据，ios的提示任然通过aps字段控制
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimCustmsgPushRequest.CustMsgDomain.Summary">
            <summary>
            客户端最近消息里面显示的消息摘要
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimCustmsgPushRequest.CustMsgDomain.ToAppkey">
            <summary>
            接收方appkey，不填默认是发送方appkey，如需跨app发送，需要走审批流程，请联系技术答疑
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimCustmsgPushRequest.CustMsgDomain.ToUsers">
            <summary>
            接受者userid列表，单次发送用户数小于100
            </summary>
        </member>
        <member name="T:Top.Api.Request.ItemUpdateSchemaGetRequest">
            <summary>
            TOP API: taobao.item.update.schema.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateSchemaGetRequest.CategoryId">
            <summary>
            商品类目id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemUpdateSchemaGetRequest.ItemId">
            <summary>
            商品id
            </summary>
        </member>
        <member name="T:Top.Api.Request.InventoryWarehouseGetRequest">
            <summary>
            TOP API: taobao.inventory.warehouse.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.InventoryWarehouseGetRequest.StoreCode">
            <summary>
            仓库编码
            </summary>
        </member>
        <member name="T:Top.Api.Request.FenxiaoRefundQueryRequest">
            <summary>
            TOP API: taobao.fenxiao.refund.query
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoRefundQueryRequest.EndDate">
            <summary>
            代销采购退款最迟修改时间。与start_date的最大时间间隔不能超过30天
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoRefundQueryRequest.PageNo">
            <summary>
            页码（大于0的整数。无值或小于1的值按默认值1计）
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoRefundQueryRequest.PageSize">
            <summary>
            每页条数（大于0但小于等于50的整数。无值或大于50或小于1的值按默认值50计）
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoRefundQueryRequest.QuerySellerRefund">
            <summary>
            是否查询下游买家的退款信息
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoRefundQueryRequest.StartDate">
            <summary>
            代销采购退款单最早修改时间
            </summary>
        </member>
        <member name="T:Top.Api.Request.FenxiaoProductSkuUpdateRequest">
            <summary>
            TOP API: taobao.fenxiao.product.sku.update
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductSkuUpdateRequest.AgentCostPrice">
            <summary>
            代销采购价
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductSkuUpdateRequest.DealerCostPrice">
            <summary>
            经销采购价
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductSkuUpdateRequest.ProductId">
            <summary>
            产品ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductSkuUpdateRequest.Properties">
            <summary>
            sku属性
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductSkuUpdateRequest.Quantity">
            <summary>
            产品SKU库存
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductSkuUpdateRequest.SkuNumber">
            <summary>
            商家编码
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductSkuUpdateRequest.StandardPrice">
            <summary>
            采购基准价
            </summary>
        </member>
        <member name="T:Top.Api.Request.FenxiaoOrderRemarkUpdateRequest">
            <summary>
            TOP API: taobao.fenxiao.order.remark.update
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoOrderRemarkUpdateRequest.PurchaseOrderId">
            <summary>
            采购单编号
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoOrderRemarkUpdateRequest.SupplierMemo">
            <summary>
            备注内容(供应商操作)
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoOrderRemarkUpdateRequest.SupplierMemoFlag">
            <summary>
            旗子的标记，1-5之间的数字。非1-5之间，都采用1作为默认。  1:红色  2:黄色  3:绿色  4:蓝色  5:粉红色
            </summary>
        </member>
        <member name="T:Top.Api.Request.FenxiaoDealerRequisitionorderCreateRequest">
            <summary>
            TOP API: taobao.fenxiao.dealer.requisitionorder.create
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoDealerRequisitionorderCreateRequest.Address">
            <summary>
            收货人所在街道地址
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoDealerRequisitionorderCreateRequest.BuyerName">
            <summary>
            买家姓名（自提方式填写提货人姓名）
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoDealerRequisitionorderCreateRequest.City">
            <summary>
            收货人所在市
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoDealerRequisitionorderCreateRequest.District">
            <summary>
            收货人所在区
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoDealerRequisitionorderCreateRequest.IdCardNumber">
            <summary>
            身份证号（自提方式必填，填写提货人身份证号码，提货时用于确认提货人身份）
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoDealerRequisitionorderCreateRequest.LogisticsType">
            <summary>
            配送方式。SELF_PICKUP：自提；LOGISTICS：仓库发货
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoDealerRequisitionorderCreateRequest.Mobile">
            <summary>
            买家的手机号码（1、此字段与phone字段至少填写一个。2、自提方式下此字段必填，保存提货人联系电话）
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoDealerRequisitionorderCreateRequest.OrderDetail">
            <summary>
            采购清单，存放多个采购明细，每个采购明细内部以‘:’隔开，多个采购明细之间以‘,’隔开. 例(分销产品id:skuid:购买数量:申请单价,分销产品id:skuid:购买数量:申请单价)，申请单价的单位为分。不存在sku请留空skuid，如（分销产品id::购买数量:申请单价）
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoDealerRequisitionorderCreateRequest.Phone">
            <summary>
            买家联系电话（此字段和mobile字段至少填写一个）
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoDealerRequisitionorderCreateRequest.PostCode">
            <summary>
            收货人所在地区邮政编码
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoDealerRequisitionorderCreateRequest.Province">
            <summary>
            收货人所在省份
            </summary>
        </member>
        <member name="T:Top.Api.Request.AlipayXiaodaiUserPermitRequest">
            <summary>
            TOP API: alipay.xiaodai.user.permit
            </summary>
        </member>
        <member name="P:Top.Api.Request.AlipayXiaodaiUserPermitRequest.UserId">
            <summary>
            用户数字ID
            </summary>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Core.IScanFilter">
            <summary>
            Scanning filters support filtering of names.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Core.IScanFilter.IsMatch(System.String)">
            <summary>
            Test a name to see if it 'matches' the filter.
            </summary>
            <param name="name">The name to test.</param>
            <returns>Returns true if the name matches the filter, false if it does not match.</returns>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Zip.ZipEntryFactory">
            <summary>
            Basic implementation of <see cref="T:ICSharpCode.SharpZipLib.Zip.IEntryFactory"></see>
            </summary>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Zip.IEntryFactory">
            <summary>
            Defines factory methods for creating new <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipEntry"></see> values.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.IEntryFactory.MakeFileEntry(System.String)">
            <summary>
            Create a <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipEntry"/> for a file given its name
            </summary>
            <param name="fileName">The name of the file to create an entry for.</param>
            <returns>Returns a <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipEntry">file entry</see> based on the <paramref name="fileName"/> passed.</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.IEntryFactory.MakeFileEntry(System.String,System.Boolean)">
            <summary>
            Create a <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipEntry"/> for a file given its name
            </summary>
            <param name="fileName">The name of the file to create an entry for.</param>
            <param name="useFileSystem">If true get details from the file system if the file exists.</param>
            <returns>Returns a <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipEntry">file entry</see> based on the <paramref name="fileName"/> passed.</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.IEntryFactory.MakeDirectoryEntry(System.String)">
            <summary>
            Create a <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipEntry"/> for a directory given its name
            </summary>
            <param name="directoryName">The name of the directory to create an entry for.</param>
            <returns>Returns a <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipEntry">directory entry</see> based on the <paramref name="directoryName"/> passed.</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.IEntryFactory.MakeDirectoryEntry(System.String,System.Boolean)">
            <summary>
            Create a <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipEntry"/> for a directory given its name
            </summary>
            <param name="directoryName">The name of the directory to create an entry for.</param>
            <param name="useFileSystem">If true get details from the file system for this directory if it exists.</param>
            <returns>Returns a <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipEntry">directory entry</see> based on the <paramref name="directoryName"/> passed.</returns>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.IEntryFactory.NameTransform">
            <summary>
            Get/set the <see cref="T:ICSharpCode.SharpZipLib.Core.INameTransform"></see> applicable.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipEntryFactory.#ctor">
            <summary>
            Initialise a new instance of the <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipEntryFactory"/> class.
            </summary>
            <remarks>A default <see cref="T:ICSharpCode.SharpZipLib.Core.INameTransform"/>, and the LastWriteTime for files is used.</remarks>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipEntryFactory.#ctor(ICSharpCode.SharpZipLib.Zip.ZipEntryFactory.TimeSetting)">
            <summary>
            Initialise a new instance of <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipEntryFactory"/> using the specified <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipEntryFactory.TimeSetting"/>
            </summary>
            <param name="timeSetting">The <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipEntryFactory.TimeSetting">time setting</see> to use when creating <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipEntry">Zip entries</see>.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipEntryFactory.#ctor(System.DateTime)">
            <summary>
            Initialise a new instance of <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipEntryFactory"/> using the specified <see cref="T:System.DateTime"/>
            </summary>
            <param name="time">The time to set all <see cref="P:ICSharpCode.SharpZipLib.Zip.ZipEntry.DateTime"/> values to.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipEntryFactory.MakeFileEntry(System.String)">
            <summary>
            Make a new <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipEntry"/> for a file.
            </summary>
            <param name="fileName">The name of the file to create a new entry for.</param>
            <returns>Returns a new <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipEntry"/> based on the <paramref name="fileName"/>.</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipEntryFactory.MakeFileEntry(System.String,System.Boolean)">
            <summary>
            Make a new <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipEntry"/> from a name.
            </summary>
            <param name="fileName">The name of the file to create a new entry for.</param>
            <param name="useFileSystem">If true entry detail is retrieved from the file system if the file exists.</param>
            <returns>Returns a new <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipEntry"/> based on the <paramref name="fileName"/>.</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipEntryFactory.MakeDirectoryEntry(System.String)">
            <summary>
            Make a new <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipEntry"></see> for a directory.
            </summary>
            <param name="directoryName">The raw untransformed name for the new directory</param>
            <returns>Returns a new <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipEntry"></see> representing a directory.</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipEntryFactory.MakeDirectoryEntry(System.String,System.Boolean)">
            <summary>
            Make a new <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipEntry"></see> for a directory.
            </summary>
            <param name="directoryName">The raw untransformed name for the new directory</param>
            <param name="useFileSystem">If true entry detail is retrieved from the file system if the file exists.</param>
            <returns>Returns a new <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipEntry"></see> representing a directory.</returns>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipEntryFactory.NameTransform">
            <summary>
            Get / set the <see cref="T:ICSharpCode.SharpZipLib.Core.INameTransform"/> to be used when creating new <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipEntry"/> values.
            </summary>
            <remarks>
            Setting this property to null will cause a default <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipNameTransform">name transform</see> to be used.
            </remarks>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipEntryFactory.Setting">
            <summary>
            Get / set the <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipEntryFactory.TimeSetting"/> in use.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipEntryFactory.FixedDateTime">
            <summary>
            Get / set the <see cref="T:System.DateTime"/> value to use when <see cref="P:ICSharpCode.SharpZipLib.Zip.ZipEntryFactory.Setting"/> is set to <see cref="F:ICSharpCode.SharpZipLib.Zip.ZipEntryFactory.TimeSetting.Fixed"/>
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipEntryFactory.GetAttributes">
            <summary>
            A bitmask defining the attributes to be retrieved from the actual file.
            </summary>
            <remarks>The default is to get all possible attributes from the actual file.</remarks>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipEntryFactory.SetAttributes">
            <summary>
            A bitmask defining which attributes are to be set on.
            </summary>
            <remarks>By default no attributes are set on.</remarks>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipEntryFactory.IsUnicodeText">
            <summary>
            Get set a value indicating wether unidoce text should be set on.
            </summary>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Zip.ZipEntryFactory.TimeSetting">
            <summary>
            Defines the possible values to be used for the <see cref="P:ICSharpCode.SharpZipLib.Zip.ZipEntry.DateTime"/>.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.ZipEntryFactory.TimeSetting.LastWriteTime">
            <summary>
            Use the recorded LastWriteTime value for the file.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.ZipEntryFactory.TimeSetting.LastWriteTimeUtc">
            <summary>
            Use the recorded LastWriteTimeUtc value for the file
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.ZipEntryFactory.TimeSetting.CreateTime">
            <summary>
            Use the recorded CreateTime value for the file.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.ZipEntryFactory.TimeSetting.CreateTimeUtc">
            <summary>
            Use the recorded CreateTimeUtc value for the file.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.ZipEntryFactory.TimeSetting.LastAccessTime">
            <summary>
            Use the recorded LastAccessTime value for the file.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.ZipEntryFactory.TimeSetting.LastAccessTimeUtc">
            <summary>
            Use the recorded LastAccessTimeUtc value for the file.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.ZipEntryFactory.TimeSetting.Fixed">
            <summary>
            Use a fixed value.
            </summary>
            <remarks>The actual <see cref="T:System.DateTime"/> value used can be
            specified via the <see cref="M:ICSharpCode.SharpZipLib.Zip.ZipEntryFactory.#ctor(System.DateTime)"/> constructor or 
            using the <see cref="M:ICSharpCode.SharpZipLib.Zip.ZipEntryFactory.#ctor(ICSharpCode.SharpZipLib.Zip.ZipEntryFactory.TimeSetting)"/> with the setting set
            to <see cref="F:ICSharpCode.SharpZipLib.Zip.ZipEntryFactory.TimeSetting.Fixed"/> which will use the <see cref="T:System.DateTime"/> when this class was constructed.
            The <see cref="P:ICSharpCode.SharpZipLib.Zip.ZipEntryFactory.FixedDateTime"/> property can also be used to set this value.</remarks>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Zip.KeysRequiredEventArgs">
            <summary>
            Arguments used with KeysRequiredEvent
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.KeysRequiredEventArgs.#ctor(System.String)">
            <summary>
            Initialise a new instance of <see cref="T:ICSharpCode.SharpZipLib.Zip.KeysRequiredEventArgs"></see>
            </summary>
            <param name="name">The name of the file for which keys are required.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.KeysRequiredEventArgs.#ctor(System.String,System.Byte[])">
            <summary>
            Initialise a new instance of <see cref="T:ICSharpCode.SharpZipLib.Zip.KeysRequiredEventArgs"></see>
            </summary>
            <param name="name">The name of the file for which keys are required.</param>
            <param name="keyValue">The current key value.</param>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.KeysRequiredEventArgs.FileName">
            <summary>
            Gets the name of the file for which keys are required.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.KeysRequiredEventArgs.Key">
            <summary>
            Gets or sets the key value
            </summary>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Zip.TestStrategy">
            <summary>
            The strategy to apply to testing.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.TestStrategy.FindFirstError">
            <summary>
            Find the first error only.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.TestStrategy.FindAllErrors">
            <summary>
            Find all possible errors.
            </summary>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Zip.TestOperation">
            <summary>
            The operation in progress reported by a <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipTestResultHandler"/> during testing.
            </summary>
            <seealso cref="M:ICSharpCode.SharpZipLib.Zip.ZipFile.TestArchive(System.Boolean)">TestArchive</seealso>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.TestOperation.Initialising">
            <summary>
            Setting up testing.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.TestOperation.EntryHeader">
            <summary>
            Testing an individual entries header
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.TestOperation.EntryData">
            <summary>
            Testing an individual entries data
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.TestOperation.EntryComplete">
            <summary>
            Testing an individual entry has completed.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.TestOperation.MiscellaneousTests">
            <summary>
            Running miscellaneous tests
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.TestOperation.Complete">
            <summary>
            Testing is complete
            </summary>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Zip.TestStatus">
            <summary>
            Status returned returned by <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipTestResultHandler"/> during testing.
            </summary>
            <seealso cref="M:ICSharpCode.SharpZipLib.Zip.ZipFile.TestArchive(System.Boolean)">TestArchive</seealso>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.TestStatus.#ctor(ICSharpCode.SharpZipLib.Zip.ZipFile)">
            <summary>
            Initialise a new instance of <see cref="T:ICSharpCode.SharpZipLib.Zip.TestStatus"/>
            </summary>
            <param name="file">The <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipFile"/> this status applies to.</param>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.TestStatus.Operation">
            <summary>
            Get the current <see cref="T:ICSharpCode.SharpZipLib.Zip.TestOperation"/> in progress.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.TestStatus.File">
            <summary>
            Get the <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipFile"/> this status is applicable to.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.TestStatus.Entry">
            <summary>
            Get the current/last entry tested.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.TestStatus.ErrorCount">
            <summary>
            Get the number of errors detected so far.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.TestStatus.BytesTested">
            <summary>
            Get the number of bytes tested so far for the current entry.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.TestStatus.EntryValid">
            <summary>
            Get a value indicating wether the last entry test was valid.
            </summary>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Zip.ZipTestResultHandler">
            <summary>
            Delegate invoked during <see cref="M:ICSharpCode.SharpZipLib.Zip.ZipFile.TestArchive(System.Boolean,ICSharpCode.SharpZipLib.Zip.TestStrategy,ICSharpCode.SharpZipLib.Zip.ZipTestResultHandler)">testing</see> if supplied indicating current progress and status.
            </summary>
            <remarks>If the message is non-null an error has occured.  If the message is null
            the operation as found in <see cref="T:ICSharpCode.SharpZipLib.Zip.TestStatus">status</see> has started.</remarks>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Zip.FileUpdateMode">
            <summary>
            The possible ways of <see cref="M:ICSharpCode.SharpZipLib.Zip.ZipFile.CommitUpdate">applying updates</see> to an archive.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.FileUpdateMode.Safe">
            <summary>
            Perform all updates on temporary files ensuring that the original file is saved.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.FileUpdateMode.Direct">
            <summary>
            Update the archive directly, which is faster but less safe.
            </summary>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Zip.ZipFile">
            <summary>
            This class represents a Zip archive.  You can ask for the contained
            entries, or get an input stream for a file entry.  The entry is
            automatically decompressed.
            
            You can also update the archive adding or deleting entries.
            
            This class is thread safe for input:  You can open input streams for arbitrary
            entries in different threads.
            <br/>
            <br/>Author of the original java version : Jochen Hoenicke
            </summary>
            <example>
            <code>
            using System;
            using System.Text;
            using System.Collections;
            using System.IO;
            
            using ICSharpCode.SharpZipLib.Zip;
            
            class MainClass
            {
            	static public void Main(string[] args)
            	{
            		using (ZipFile zFile = new ZipFile(args[0])) {
            			Console.WriteLine("Listing of : " + zFile.Name);
            			Console.WriteLine("");
            			Console.WriteLine("Raw Size    Size      Date     Time     Name");
            			Console.WriteLine("--------  --------  --------  ------  ---------");
            			foreach (ZipEntry e in zFile) {
            				if ( e.IsFile ) {
            					DateTime d = e.DateTime;
            					Console.WriteLine("{0, -10}{1, -10}{2}  {3}   {4}", e.Size, e.CompressedSize,
            						d.ToString("dd-MM-yy"), d.ToString("HH:mm"),
            						e.Name);
            				}
            			}
            		}
            	}
            }
            </code>
            </example>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.ZipFile.KeysRequired">
            <summary>
            Event handler for handling encryption keys.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipFile.OnKeysRequired(System.String)">
            <summary>
            Handles getting of encryption keys when required.
            </summary>
            <param name="fileName">The file for which encryption keys are required.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipFile.#ctor(System.String)">
            <summary>
            Opens a Zip file with the given name for reading.
            </summary>
            <param name="name">The name of the file to open.</param>
            <exception cref="T:System.ArgumentNullException">The argument supplied is null.</exception>
            <exception cref="T:System.IO.IOException">
            An i/o error occurs
            </exception>
            <exception cref="T:ICSharpCode.SharpZipLib.Zip.ZipException">
            The file doesn't contain a valid zip archive.
            </exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipFile.#ctor(System.IO.FileStream)">
            <summary>
            Opens a Zip file reading the given <see cref="T:System.IO.FileStream"/>.
            </summary>
            <param name="file">The <see cref="T:System.IO.FileStream"/> to read archive data from.</param>
            <exception cref="T:System.ArgumentNullException">The supplied argument is null.</exception>
            <exception cref="T:System.IO.IOException">
            An i/o error occurs.
            </exception>
            <exception cref="T:ICSharpCode.SharpZipLib.Zip.ZipException">
            The file doesn't contain a valid zip archive.
            </exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipFile.#ctor(System.IO.Stream)">
            <summary>
            Opens a Zip file reading the given <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> to read archive data from.</param>
            <exception cref="T:System.IO.IOException">
            An i/o error occurs
            </exception>
            <exception cref="T:ICSharpCode.SharpZipLib.Zip.ZipException">
            The stream doesn't contain a valid zip archive.<br/>
            </exception>
            <exception cref="T:System.ArgumentException">
            The <see cref="T:System.IO.Stream">stream</see> doesnt support seeking.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <see cref="T:System.IO.Stream">stream</see> argument is null.
            </exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipFile.#ctor">
            <summary>
            Initialises a default <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipFile"/> instance with no entries and no file storage.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipFile.Finalize">
            <summary>
            Finalize this instance.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipFile.Close">
            <summary>
            Closes the ZipFile.  If the stream is <see cref="P:ICSharpCode.SharpZipLib.Zip.ZipFile.IsStreamOwner">owned</see> then this also closes the underlying input stream.
            Once closed, no further instance methods should be called.
            </summary>
            <exception cref="T:System.IO.IOException">
            An i/o error occurs.
            </exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipFile.Create(System.String)">
            <summary>
            Create a new <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipFile"/> whose data will be stored in a file.
            </summary>
            <param name="fileName">The name of the archive to create.</param>
            <returns>Returns the newly created <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipFile"/></returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="fileName"></paramref> is null</exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipFile.Create(System.IO.Stream)">
            <summary>
            Create a new <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipFile"/> whose data will be stored on a stream.
            </summary>
            <param name="outStream">The stream providing data storage.</param>
            <returns>Returns the newly created <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipFile"/></returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="outStream"> is null</paramref></exception>
            <exception cref="T:System.ArgumentException"><paramref name="outStream"> doesnt support writing.</paramref></exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipFile.GetEnumerator">
            <summary>
            Gets an enumerator for the Zip entries in this Zip file.
            </summary>
            <returns>Returns an <see cref="T:System.Collections.IEnumerator"/> for this archive.</returns>
            <exception cref="T:System.ObjectDisposedException">
            The Zip file has been closed.
            </exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipFile.FindEntry(System.String,System.Boolean)">
            <summary>
            Return the index of the entry with a matching name
            </summary>
            <param name="name">Entry name to find</param>
            <param name="ignoreCase">If true the comparison is case insensitive</param>
            <returns>The index position of the matching entry or -1 if not found</returns>
            <exception cref="T:System.ObjectDisposedException">
            The Zip file has been closed.
            </exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipFile.GetEntry(System.String)">
            <summary>
            Searches for a zip entry in this archive with the given name.
            String comparisons are case insensitive
            </summary>
            <param name="name">
            The name to find. May contain directory components separated by slashes ('/').
            </param>
            <returns>
            A clone of the zip entry, or null if no entry with that name exists.
            </returns>
            <exception cref="T:System.ObjectDisposedException">
            The Zip file has been closed.
            </exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipFile.GetInputStream(ICSharpCode.SharpZipLib.Zip.ZipEntry)">
            <summary>
            Gets an input stream for reading the given zip entry data in an uncompressed form.
            Normally the <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipEntry"/> should be an entry returned by GetEntry().
            </summary>
            <param name="entry">The <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipEntry"/> to obtain a data <see cref="T:System.IO.Stream"/> for</param>
            <returns>An input <see cref="T:System.IO.Stream"/> containing data for this <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipEntry"/></returns>
            <exception cref="T:System.ObjectDisposedException">
            The ZipFile has already been closed
            </exception>
            <exception cref="T:ICSharpCode.SharpZipLib.Zip.ZipException">
            The compression method for the entry is unknown
            </exception>
            <exception cref="T:System.IndexOutOfRangeException">
            The entry is not found in the ZipFile
            </exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipFile.GetInputStream(System.Int64)">
            <summary>
            Creates an input stream reading a zip entry
            </summary>
            <param name="entryIndex">The index of the entry to obtain an input stream for.</param>
            <returns>
            An input <see cref="T:System.IO.Stream"/> containing data for this <paramref name="entryIndex"/>
            </returns>
            <exception cref="T:System.ObjectDisposedException">
            The ZipFile has already been closed
            </exception>
            <exception cref="T:ICSharpCode.SharpZipLib.Zip.ZipException">
            The compression method for the entry is unknown
            </exception>
            <exception cref="T:System.IndexOutOfRangeException">
            The entry is not found in the ZipFile
            </exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipFile.TestArchive(System.Boolean)">
            <summary>
            Test an archive for integrity/validity
            </summary>
            <param name="testData">Perform low level data Crc check</param>
            <returns>true if all tests pass, false otherwise</returns>
            <remarks>Testing will terminate on the first error found.</remarks>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipFile.TestArchive(System.Boolean,ICSharpCode.SharpZipLib.Zip.TestStrategy,ICSharpCode.SharpZipLib.Zip.ZipTestResultHandler)">
            <summary>
            Test an archive for integrity/validity
            </summary>
            <param name="testData">Perform low level data Crc check</param>
            <param name="strategy">The <see cref="T:ICSharpCode.SharpZipLib.Zip.TestStrategy"></see> to apply.</param>
            <param name="resultHandler">The <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipTestResultHandler"></see> handler to call during testing.</param>
            <returns>true if all tests pass, false otherwise</returns>
            <exception cref="T:System.ObjectDisposedException">The object has already been closed.</exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipFile.TestLocalHeader(ICSharpCode.SharpZipLib.Zip.ZipEntry,ICSharpCode.SharpZipLib.Zip.ZipFile.HeaderTest)">
            <summary>
            Test a local header against that provided from the central directory
            </summary>
            <param name="entry">
            The entry to test against
            </param>
            <param name="tests">The type of <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipFile.HeaderTest">tests</see> to carry out.</param>
            <returns>The offset of the entries data in the file</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipFile.BeginUpdate(ICSharpCode.SharpZipLib.Zip.IArchiveStorage,ICSharpCode.SharpZipLib.Zip.IDynamicDataSource)">
            <summary>
            Begin updating this <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipFile"/> archive.
            </summary>
            <param name="archiveStorage">The <see cref="T:ICSharpCode.SharpZipLib.Zip.IArchiveStorage">archive storage</see> for use during the update.</param>
            <param name="dataSource">The <see cref="T:ICSharpCode.SharpZipLib.Zip.IDynamicDataSource">data source</see> to utilise during updating.</param>
            <exception cref="T:System.ObjectDisposedException">ZipFile has been closed.</exception>
            <exception cref="T:System.ArgumentNullException">One of the arguments provided is null</exception>
            <exception cref="T:System.ObjectDisposedException">ZipFile has been closed.</exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipFile.BeginUpdate(ICSharpCode.SharpZipLib.Zip.IArchiveStorage)">
            <summary>
            Begin updating to this <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipFile"/> archive.
            </summary>
            <param name="archiveStorage">The storage to use during the update.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipFile.BeginUpdate">
            <summary>
            Begin updating this <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipFile"/> archive.
            </summary>
            <seealso cref="M:ICSharpCode.SharpZipLib.Zip.ZipFile.BeginUpdate(ICSharpCode.SharpZipLib.Zip.IArchiveStorage)"/>
            <seealso cref="M:ICSharpCode.SharpZipLib.Zip.ZipFile.CommitUpdate"></seealso>
            <seealso cref="M:ICSharpCode.SharpZipLib.Zip.ZipFile.AbortUpdate"></seealso>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipFile.CommitUpdate">
            <summary>
            Commit current updates, updating this archive.
            </summary>
            <seealso cref="M:ICSharpCode.SharpZipLib.Zip.ZipFile.BeginUpdate"></seealso>
            <seealso cref="M:ICSharpCode.SharpZipLib.Zip.ZipFile.AbortUpdate"></seealso>
            <exception cref="T:System.ObjectDisposedException">ZipFile has been closed.</exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipFile.AbortUpdate">
            <summary>
            Abort updating leaving the archive unchanged.
            </summary>
            <seealso cref="M:ICSharpCode.SharpZipLib.Zip.ZipFile.BeginUpdate"></seealso>
            <seealso cref="M:ICSharpCode.SharpZipLib.Zip.ZipFile.CommitUpdate"></seealso>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipFile.SetComment(System.String)">
            <summary>
            Set the file comment to be recorded when the current update is <see cref="M:ICSharpCode.SharpZipLib.Zip.ZipFile.CommitUpdate">commited</see>.
            </summary>
            <param name="comment">The comment to record.</param>
            <exception cref="T:System.ObjectDisposedException">ZipFile has been closed.</exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipFile.Add(System.String,ICSharpCode.SharpZipLib.Zip.CompressionMethod,System.Boolean)">
            <summary>
            Add a new entry to the archive.
            </summary>
            <param name="fileName">The name of the file to add.</param>
            <param name="compressionMethod">The compression method to use.</param>
            <param name="useUnicodeText">Ensure Unicode text is used for name and comment for this entry.</param>
            <exception cref="T:System.ArgumentNullException">Argument supplied is null.</exception>
            <exception cref="T:System.ObjectDisposedException">ZipFile has been closed.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Compression method is not supported.</exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipFile.Add(System.String,ICSharpCode.SharpZipLib.Zip.CompressionMethod)">
            <summary>
            Add a new entry to the archive.
            </summary>
            <param name="fileName">The name of the file to add.</param>
            <param name="compressionMethod">The compression method to use.</param>
            <exception cref="T:System.ArgumentNullException">ZipFile has been closed.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The compression method is not supported.</exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipFile.Add(System.String)">
            <summary>
            Add a file to the archive.
            </summary>
            <param name="fileName">The name of the file to add.</param>
            <exception cref="T:System.ArgumentNullException">Argument supplied is null.</exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipFile.Add(System.String,System.String)">
            <summary>
            Add a file to the archive.
            </summary>
            <param name="fileName">The name of the file to add.</param>
            <param name="entryName">The name to use for the <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipEntry"/> on the Zip file created.</param>
            <exception cref="T:System.ArgumentNullException">Argument supplied is null.</exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipFile.Add(ICSharpCode.SharpZipLib.Zip.IStaticDataSource,System.String)">
            <summary>
            Add a file entry with data.
            </summary>
            <param name="dataSource">The source of the data for this entry.</param>
            <param name="entryName">The name to give to the entry.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipFile.Add(ICSharpCode.SharpZipLib.Zip.IStaticDataSource,System.String,ICSharpCode.SharpZipLib.Zip.CompressionMethod)">
            <summary>
            Add a file entry with data.
            </summary>
            <param name="dataSource">The source of the data for this entry.</param>
            <param name="entryName">The name to give to the entry.</param>
            <param name="compressionMethod">The compression method to use.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipFile.Add(ICSharpCode.SharpZipLib.Zip.IStaticDataSource,System.String,ICSharpCode.SharpZipLib.Zip.CompressionMethod,System.Boolean)">
            <summary>
            Add a file entry with data.
            </summary>
            <param name="dataSource">The source of the data for this entry.</param>
            <param name="entryName">The name to give to the entry.</param>
            <param name="compressionMethod">The compression method to use.</param>
            <param name="useUnicodeText">Ensure Unicode text is used for name and comments for this entry.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipFile.Add(ICSharpCode.SharpZipLib.Zip.ZipEntry)">
            <summary>
            Add a <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipEntry"/> that contains no data.
            </summary>
            <param name="entry">The entry to add.</param>
            <remarks>This can be used to add directories, volume labels, or empty file entries.</remarks>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipFile.AddDirectory(System.String)">
            <summary>
            Add a directory entry to the archive.
            </summary>
            <param name="directoryName">The directory to add.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipFile.Delete(System.String)">
            <summary>
            Delete an entry by name
            </summary>
            <param name="fileName">The filename to delete</param>
            <returns>True if the entry was found and deleted; false otherwise.</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipFile.Delete(ICSharpCode.SharpZipLib.Zip.ZipEntry)">
            <summary>
            Delete a <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipEntry"/> from the archive.
            </summary>
            <param name="entry">The entry to delete.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipFile.WriteLEUshort(System.UInt16)">
            <summary>
            Write an unsigned short in little endian byte order.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipFile.WriteLEInt(System.Int32)">
            <summary>
            Write an int in little endian byte order.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipFile.WriteLEUint(System.UInt32)">
            <summary>
            Write an unsigned int in little endian byte order.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipFile.WriteLeLong(System.Int64)">
            <summary>
            Write a long in little endian byte order.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipFile.GetBuffer">
            <summary>
            Get a raw memory buffer.
            </summary>
            <returns>Returns a raw memory buffer.</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipFile.GetDescriptorSize(ICSharpCode.SharpZipLib.Zip.ZipFile.ZipUpdate)">
            <summary>
            Get the size of the source descriptor for a <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipFile.ZipUpdate"/>.
            </summary>
            <param name="update">The update to get the size for.</param>
            <returns>The descriptor size, zero if there isnt one.</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipFile.GetOutputStream(ICSharpCode.SharpZipLib.Zip.ZipEntry)">
            <summary>
            Get an output stream for the specified <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipEntry"/>
            </summary>
            <param name="entry">The entry to get an output stream for.</param>
            <returns>The output stream obtained for the entry.</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipFile.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the this instance and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources;
            false to release only unmanaged resources.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipFile.ReadLEUshort">
            <summary>
            Read an unsigned short in little endian byte order.
            </summary>
            <returns>Returns the value read.</returns>
            <exception cref="T:System.IO.EndOfStreamException">
            The stream ends prematurely
            </exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipFile.ReadLEUint">
            <summary>
            Read a uint in little endian byte order.
            </summary>
            <returns>Returns the value read.</returns>
            <exception cref="T:System.IO.IOException">
            An i/o error occurs.
            </exception>
            <exception cref="T:System.IO.EndOfStreamException">
            The file ends prematurely
            </exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipFile.ReadEntries">
            <summary>
            Search for and read the central directory of a zip file filling the entries array.
            </summary>
            <exception cref="T:System.IO.IOException">
            An i/o error occurs.
            </exception>
            <exception cref="T:ICSharpCode.SharpZipLib.Zip.ZipException">
            The central directory is malformed or cannot be found
            </exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipFile.LocateEntry(ICSharpCode.SharpZipLib.Zip.ZipEntry)">
            <summary>
            Locate the data for a given entry.
            </summary>
            <returns>
            The start offset of the data.
            </returns>
            <exception cref="T:System.IO.EndOfStreamException">
            The stream ends prematurely
            </exception>
            <exception cref="T:ICSharpCode.SharpZipLib.Zip.ZipException">
            The local header signature is invalid, the entry and central header file name lengths are different
            or the local and entry compression methods dont match
            </exception>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipFile.Key">
            <summary>
            Get/set the encryption key value.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipFile.Password">
            <summary>
            Password to be used for encrypting/decrypting files.
            </summary>
            <remarks>Set to null if no password is required.</remarks>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipFile.HaveKeys">
            <summary>
            Get a value indicating wether encryption keys are currently available.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipFile.IsStreamOwner">
            <summary>
            Get/set a flag indicating if the underlying stream is owned by the ZipFile instance.
            If the flag is true then the stream will be closed when <see cref="M:ICSharpCode.SharpZipLib.Zip.ZipFile.Close">Close</see> is called.
            </summary>
            <remarks>
            The default value is true in all cases.
            </remarks>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipFile.IsEmbeddedArchive">
            <summary>
            Get a value indicating wether
            this archive is embedded in another file or not.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipFile.IsNewArchive">
            <summary>
            Get a value indicating that this archive is a new one.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipFile.ZipFileComment">
            <summary>
            Gets the comment for the zip file.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipFile.Name">
            <summary>
            Gets the name of this zip file.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipFile.Size">
            <summary>
            Gets the number of entries in this zip file.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            The Zip file has been closed.
            </exception>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipFile.Count">
            <summary>
            Get the number of entries contained in this <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipFile"/>.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipFile.EntryByIndex(System.Int32)">
            <summary>
            Indexer property for ZipEntries
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipFile.NameTransform">
            <summary>
            Get / set the <see cref="T:ICSharpCode.SharpZipLib.Core.INameTransform"/> to apply to names when updating.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipFile.EntryFactory">
            <summary>
            Get/set the <see cref="T:ICSharpCode.SharpZipLib.Zip.IEntryFactory"/> used to generate <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipEntry"/> values
            during updates.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipFile.BufferSize">
            <summary>
            Get /set the buffer size to be used when updating this zip file.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipFile.IsUpdating">
            <summary>
            Get a value indicating an update has <see cref="M:ICSharpCode.SharpZipLib.Zip.ZipFile.BeginUpdate">been started</see>.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipFile.UseZip64">
            <summary>
            Get / set a value indicating how Zip64 Extension usage is determined when adding entries.
            </summary>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Zip.ZipFile.KeysRequiredEventHandler">
            <summary>
            Delegate for handling keys/password setting during compresion/decompression.
            </summary>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Zip.ZipFile.UpdateCommand">
            <summary>
            The kind of update to apply.
            </summary>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Zip.ZipFile.UpdateComparer">
            <summary>
            Class used to sort updates.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipFile.UpdateComparer.Compare(System.Object,System.Object)">
            <summary>
            Compares two objects and returns a value indicating whether one is 
            less than, equal to or greater than the other.
            </summary>
            <param name="x">First object to compare</param>
            <param name="y">Second object to compare.</param>
            <returns>Compare result.</returns>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Zip.ZipFile.ZipUpdate">
            <summary>
            Represents a pending update to a Zip file.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipFile.ZipUpdate.#ctor(ICSharpCode.SharpZipLib.Zip.ZipEntry)">
            <summary>
            Copy an existing entry.
            </summary>
            <param name="entry">The existing entry to copy.</param>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipFile.ZipUpdate.Entry">
            <summary>
            Get the <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipEntry"/> for this update.
            </summary>
            <remarks>This is the source or original entry.</remarks>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipFile.ZipUpdate.OutEntry">
            <summary>
            Get the <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipEntry"/> that will be written to the updated/new file.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipFile.ZipUpdate.Command">
            <summary>
            Get the command for this update.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipFile.ZipUpdate.Filename">
            <summary>
            Get the filename if any for this update.  Null if none exists.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipFile.ZipUpdate.SizePatchOffset">
            <summary>
            Get/set the location of the size patch for this update.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipFile.ZipUpdate.CrcPatchOffset">
            <summary>
            Get /set the location of the crc patch for this update.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipFile.ZipUpdate.OffsetBasedSize">
            <summary>
            Get/set the size calculated by offset.
            Specifically, the difference between this and next entry's starting offset.
            </summary>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Zip.ZipFile.ZipString">
            <summary>
            Represents a string from a <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipFile"/> which is stored as an array of bytes.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipFile.ZipString.#ctor(System.String)">
            <summary>
            Initialise a <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipFile.ZipString"/> with a string.
            </summary>
            <param name="comment">The textual string form.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipFile.ZipString.#ctor(System.Byte[])">
            <summary>
            Initialise a <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipFile.ZipString"/> using a string in its binary 'raw' form.
            </summary>
            <param name="rawString"></param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipFile.ZipString.Reset">
            <summary>
            Reset the comment to its initial state.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipFile.ZipString.op_Implicit(ICSharpCode.SharpZipLib.Zip.ZipFile.ZipString)~System.String">
            <summary>
            Implicit conversion of comment to a string.
            </summary>
            <param name="zipString">The <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipFile.ZipString"/> to convert to a string.</param>
            <returns>The textual equivalent for the input value.</returns>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipFile.ZipString.IsSourceString">
            <summary>
            Get a value indicating the original source of data for this instance.
            True if the source was a string; false if the source was binary data.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipFile.ZipString.RawLength">
            <summary>
            Get the length of the comment when represented as raw bytes.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipFile.ZipString.RawComment">
            <summary>
            Get the comment in its 'raw' form as plain bytes.
            </summary>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Zip.ZipFile.ZipEntryEnumerator">
            <summary>
            An <see cref="T:System.Collections.IEnumerator">enumerator</see> for <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipEntry">Zip entries</see>
            </summary>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Zip.ZipFile.UncompressedStream">
            <summary>
            An <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipFile.UncompressedStream"/> is a stream that you can write uncompressed data
            to and flush, but cannot read, seek or do anything else to.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipFile.UncompressedStream.Close">
            <summary>
            Close this stream instance.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipFile.UncompressedStream.Flush">
            <summary>
            Write any buffered data to underlying storage.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipFile.UncompressedStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.
            </summary>
            <param name="buffer">An array of bytes. When this method returns, the buffer contains the specified byte array with the values between offset and (offset + count - 1) replaced by the bytes read from the current source.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin storing the data read from the current stream.</param>
            <param name="count">The maximum number of bytes to be read from the current stream.</param>
            <returns>
            The total number of bytes read into the buffer. This can be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.
            </returns>
            <exception cref="T:System.ArgumentException">The sum of offset and count is larger than the buffer length. </exception>
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
            <exception cref="T:System.NotSupportedException">The stream does not support reading. </exception>
            <exception cref="T:System.ArgumentNullException">buffer is null. </exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">offset or count is negative. </exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipFile.UncompressedStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets the position within the current stream.
            </summary>
            <param name="offset">A byte offset relative to the origin parameter.</param>
            <param name="origin">A value of type <see cref="T:System.IO.SeekOrigin"></see> indicating the reference point used to obtain the new position.</param>
            <returns>
            The new position within the current stream.
            </returns>
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
            <exception cref="T:System.NotSupportedException">The stream does not support seeking, such as if the stream is constructed from a pipe or console output. </exception>
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipFile.UncompressedStream.SetLength(System.Int64)">
            <summary>
            Sets the length of the current stream.
            </summary>
            <param name="value">The desired length of the current stream in bytes.</param>
            <exception cref="T:System.NotSupportedException">The stream does not support both writing and seeking, such as if the stream is constructed from a pipe or console output. </exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipFile.UncompressedStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.
            </summary>
            <param name="buffer">An array of bytes. This method copies count bytes from buffer to the current stream.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin copying bytes to the current stream.</param>
            <param name="count">The number of bytes to be written to the current stream.</param>
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
            <exception cref="T:System.NotSupportedException">The stream does not support writing. </exception>
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
            <exception cref="T:System.ArgumentNullException">buffer is null. </exception>
            <exception cref="T:System.ArgumentException">The sum of offset and count is greater than the buffer length. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">offset or count is negative. </exception>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipFile.UncompressedStream.CanRead">
            <summary>
            Gets a value indicating whether the current stream supports reading.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipFile.UncompressedStream.CanWrite">
            <summary>
            Gets a value indicating whether the current stream supports writing.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipFile.UncompressedStream.CanSeek">
            <summary>
            Gets a value indicating whether the current stream supports seeking.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipFile.UncompressedStream.Length">
            <summary>
            Get the length in bytes of the stream.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipFile.UncompressedStream.Position">
            <summary>
            Gets or sets the position within the current stream.
            </summary>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Zip.ZipFile.PartialInputStream">
            <summary>
            A <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipFile.PartialInputStream"/> is an <see cref="T:ICSharpCode.SharpZipLib.Zip.Compression.Streams.InflaterInputStream"/>
            whose data is only a part or subsection of a file.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipFile.PartialInputStream.#ctor(ICSharpCode.SharpZipLib.Zip.ZipFile,System.Int64,System.Int64)">
            <summary>
            Initialise a new instance of the <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipFile.PartialInputStream"/> class.
            </summary>
            <param name="zipFile">The <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipFile"/> containing the underlying stream to use for IO.</param>
            <param name="start">The start of the partial data.</param>
            <param name="length">The length of the partial data.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipFile.PartialInputStream.ReadByte">
            <summary>
            Read a byte from this stream.
            </summary>
            <returns>Returns the byte read or -1 on end of stream.</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipFile.PartialInputStream.Close">
            <summary>
            Close this <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipFile.PartialInputStream">partial input stream</see>.
            </summary>
            <remarks>
            The underlying stream is not closed.  Close the parent ZipFile class to do that.
            </remarks>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipFile.PartialInputStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.
            </summary>
            <param name="buffer">An array of bytes. When this method returns, the buffer contains the specified byte array with the values between offset and (offset + count - 1) replaced by the bytes read from the current source.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin storing the data read from the current stream.</param>
            <param name="count">The maximum number of bytes to be read from the current stream.</param>
            <returns>
            The total number of bytes read into the buffer. This can be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.
            </returns>
            <exception cref="T:System.ArgumentException">The sum of offset and count is larger than the buffer length. </exception>
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
            <exception cref="T:System.NotSupportedException">The stream does not support reading. </exception>
            <exception cref="T:System.ArgumentNullException">buffer is null. </exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">offset or count is negative. </exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipFile.PartialInputStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.
            </summary>
            <param name="buffer">An array of bytes. This method copies count bytes from buffer to the current stream.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin copying bytes to the current stream.</param>
            <param name="count">The number of bytes to be written to the current stream.</param>
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
            <exception cref="T:System.NotSupportedException">The stream does not support writing. </exception>
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
            <exception cref="T:System.ArgumentNullException">buffer is null. </exception>
            <exception cref="T:System.ArgumentException">The sum of offset and count is greater than the buffer length. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">offset or count is negative. </exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipFile.PartialInputStream.SetLength(System.Int64)">
            <summary>
            When overridden in a derived class, sets the length of the current stream.
            </summary>
            <param name="value">The desired length of the current stream in bytes.</param>
            <exception cref="T:System.NotSupportedException">The stream does not support both writing and seeking, such as if the stream is constructed from a pipe or console output. </exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipFile.PartialInputStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            When overridden in a derived class, sets the position within the current stream.
            </summary>
            <param name="offset">A byte offset relative to the origin parameter.</param>
            <param name="origin">A value of type <see cref="T:System.IO.SeekOrigin"></see> indicating the reference point used to obtain the new position.</param>
            <returns>
            The new position within the current stream.
            </returns>
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
            <exception cref="T:System.NotSupportedException">The stream does not support seeking, such as if the stream is constructed from a pipe or console output. </exception>
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipFile.PartialInputStream.Flush">
            <summary>
            Clears all buffers for this stream and causes any buffered data to be written to the underlying device.
            </summary>
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipFile.PartialInputStream.Position">
            <summary>
            Gets or sets the position within the current stream.
            </summary>
            <value></value>
            <returns>The current position within the stream.</returns>
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
            <exception cref="T:System.NotSupportedException">The stream does not support seeking. </exception>
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipFile.PartialInputStream.Length">
            <summary>
            Gets the length in bytes of the stream.
            </summary>
            <value></value>
            <returns>A long value representing the length of the stream in bytes.</returns>
            <exception cref="T:System.NotSupportedException">A class derived from Stream does not support seeking. </exception>
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipFile.PartialInputStream.CanWrite">
            <summary>
            Gets a value indicating whether the current stream supports writing.
            </summary>
            <value>false</value>
            <returns>true if the stream supports writing; otherwise, false.</returns>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipFile.PartialInputStream.CanSeek">
            <summary>
            Gets a value indicating whether the current stream supports seeking.
            </summary>
            <value>true</value>
            <returns>true if the stream supports seeking; otherwise, false.</returns>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipFile.PartialInputStream.CanRead">
            <summary>
            Gets a value indicating whether the current stream supports reading.
            </summary>
            <value>true.</value>
            <returns>true if the stream supports reading; otherwise, false.</returns>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipFile.PartialInputStream.CanTimeout">
            <summary>
            Gets a value that determines whether the current stream can time out.
            </summary>
            <value></value>
            <returns>A value that determines whether the current stream can time out.</returns>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Zip.IStaticDataSource">
            <summary>
            Provides a static way to obtain a source of data for an entry.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.IStaticDataSource.GetSource">
            <summary>
            Get a source of data by creating a new stream.
            </summary>
            <returns>Returns a <see cref="T:System.IO.Stream"/> to use for compression input.</returns>
            <remarks>Ideally a new stream is created and opened to achieve this, to avoid locking problems.</remarks>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Zip.IDynamicDataSource">
            <summary>
            Represents a source of data that can dynamically provide
            multiple <see cref="T:System.IO.Stream">data sources</see> based on the parameters passed.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.IDynamicDataSource.GetSource(ICSharpCode.SharpZipLib.Zip.ZipEntry,System.String)">
            <summary>
            Get a data source.
            </summary>
            <param name="entry">The <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipEntry"/> to get a source for.</param>
            <param name="name">The name for data if known.</param>
            <returns>Returns a <see cref="T:System.IO.Stream"/> to use for compression input.</returns>
            <remarks>Ideally a new stream is created and opened to achieve this, to avoid locking problems.</remarks>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Zip.StaticDiskDataSource">
            <summary>
            Default implementation of a <see cref="T:ICSharpCode.SharpZipLib.Zip.IStaticDataSource"/> for use with files stored on disk.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.StaticDiskDataSource.#ctor(System.String)">
            <summary>
            Initialise a new instnace of <see cref="T:ICSharpCode.SharpZipLib.Zip.StaticDiskDataSource"/>
            </summary>
            <param name="fileName">The name of the file to obtain data from.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.StaticDiskDataSource.GetSource">
            <summary>
            Get a <see cref="T:System.IO.Stream"/> providing data.
            </summary>
            <returns>Returns a <see cref="T:System.IO.Stream"/> provising data.</returns>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Zip.DynamicDiskDataSource">
            <summary>
            Default implementation of <see cref="T:ICSharpCode.SharpZipLib.Zip.IDynamicDataSource"/> for files stored on disk.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.DynamicDiskDataSource.#ctor">
            <summary>
            Initialise a default instance of <see cref="T:ICSharpCode.SharpZipLib.Zip.DynamicDiskDataSource"/>.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.DynamicDiskDataSource.GetSource(ICSharpCode.SharpZipLib.Zip.ZipEntry,System.String)">
            <summary>
            Get a <see cref="T:System.IO.Stream"/> providing data for an entry.
            </summary>
            <param name="entry">The entry to provide data for.</param>
            <param name="name">The file name for data if known.</param>
            <returns>Returns a stream providing data; or null if not available</returns>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Zip.IArchiveStorage">
            <summary>
            Defines facilities for data storage when updating Zip Archives.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.IArchiveStorage.GetTemporaryOutput">
            <summary>
            Get an empty <see cref="T:System.IO.Stream"/> that can be used for temporary output.
            </summary>
            <returns>Returns a temporary output <see cref="T:System.IO.Stream"/></returns>
            <seealso cref="M:ICSharpCode.SharpZipLib.Zip.IArchiveStorage.ConvertTemporaryToFinal"></seealso>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.IArchiveStorage.ConvertTemporaryToFinal">
            <summary>
            Convert a temporary output stream to a final stream.
            </summary>
            <returns>The resulting final <see cref="T:System.IO.Stream"/></returns>
            <seealso cref="M:ICSharpCode.SharpZipLib.Zip.IArchiveStorage.GetTemporaryOutput"/>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.IArchiveStorage.MakeTemporaryCopy(System.IO.Stream)">
            <summary>
            Make a temporary copy of the original stream.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> to copy.</param>
            <returns>Returns a temporary output <see cref="T:System.IO.Stream"/> that is a copy of the input.</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.IArchiveStorage.OpenForDirectUpdate(System.IO.Stream)">
            <summary>
            Return a stream suitable for performing direct updates on the original source.
            </summary>
            <param name="stream">The current stream.</param>
            <returns>Returns a stream suitable for direct updating.</returns>
            <remarks>This may be the current stream passed.</remarks>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.IArchiveStorage.Dispose">
            <summary>
            Dispose of this instance.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.IArchiveStorage.UpdateMode">
            <summary>
            Get the <see cref="T:ICSharpCode.SharpZipLib.Zip.FileUpdateMode"/> to apply during updates.
            </summary>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Zip.BaseArchiveStorage">
            <summary>
            An abstract <see cref="T:ICSharpCode.SharpZipLib.Zip.IArchiveStorage"/> suitable for extension by inheritance.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.BaseArchiveStorage.#ctor(ICSharpCode.SharpZipLib.Zip.FileUpdateMode)">
            <summary>
            Initializes a new instance of the <see cref="T:ICSharpCode.SharpZipLib.Zip.BaseArchiveStorage"/> class.
            </summary>
            <param name="updateMode">The update mode.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.BaseArchiveStorage.GetTemporaryOutput">
            <summary>
            Gets a temporary output <see cref="T:System.IO.Stream"/>
            </summary>
            <returns>Returns the temporary output stream.</returns>
            <seealso cref="M:ICSharpCode.SharpZipLib.Zip.BaseArchiveStorage.ConvertTemporaryToFinal"></seealso>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.BaseArchiveStorage.ConvertTemporaryToFinal">
            <summary>
            Converts the temporary <see cref="T:System.IO.Stream"/> to its final form.
            </summary>
            <returns>Returns a <see cref="T:System.IO.Stream"/> that can be used to read
            the final storage for the archive.</returns>
            <seealso cref="M:ICSharpCode.SharpZipLib.Zip.BaseArchiveStorage.GetTemporaryOutput"/>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.BaseArchiveStorage.MakeTemporaryCopy(System.IO.Stream)">
            <summary>
            Make a temporary copy of a <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> to make a copy of.</param>
            <returns>Returns a temporary output <see cref="T:System.IO.Stream"/> that is a copy of the input.</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.BaseArchiveStorage.OpenForDirectUpdate(System.IO.Stream)">
            <summary>
            Return a stream suitable for performing direct updates on the original source.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> to open for direct update.</param>
            <returns>Returns a stream suitable for direct updating.</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.BaseArchiveStorage.Dispose">
            <summary>
            Disposes this instance.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.BaseArchiveStorage.UpdateMode">
            <summary>
            Gets the update mode applicable.
            </summary>
            <value>The update mode.</value>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Zip.DiskArchiveStorage">
            <summary>
            An <see cref="T:ICSharpCode.SharpZipLib.Zip.IArchiveStorage"/> implementation suitable for hard disks.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.DiskArchiveStorage.#ctor(ICSharpCode.SharpZipLib.Zip.ZipFile,ICSharpCode.SharpZipLib.Zip.FileUpdateMode)">
            <summary>
            Initializes a new instance of the <see cref="T:ICSharpCode.SharpZipLib.Zip.DiskArchiveStorage"/> class.
            </summary>
            <param name="file">The file.</param>
            <param name="updateMode">The update mode.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.DiskArchiveStorage.#ctor(ICSharpCode.SharpZipLib.Zip.ZipFile)">
            <summary>
            Initializes a new instance of the <see cref="T:ICSharpCode.SharpZipLib.Zip.DiskArchiveStorage"/> class.
            </summary>
            <param name="file">The file.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.DiskArchiveStorage.GetTemporaryOutput">
            <summary>
            Gets a temporary output <see cref="T:System.IO.Stream"/> for performing updates on.
            </summary>
            <returns>Returns the temporary output stream.</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.DiskArchiveStorage.ConvertTemporaryToFinal">
            <summary>
            Converts a temporary <see cref="T:System.IO.Stream"/> to its final form.
            </summary>
            <returns>Returns a <see cref="T:System.IO.Stream"/> that can be used to read
            the final storage for the archive.</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.DiskArchiveStorage.MakeTemporaryCopy(System.IO.Stream)">
            <summary>
            Make a temporary copy of a stream.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> to copy.</param>
            <returns>Returns a temporary output <see cref="T:System.IO.Stream"/> that is a copy of the input.</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.DiskArchiveStorage.OpenForDirectUpdate(System.IO.Stream)">
            <summary>
            Return a stream suitable for performing direct updates on the original source.
            </summary>
            <param name="stream">The current stream.</param>
            <returns>Returns a stream suitable for direct updating.</returns>
            <remarks>If the <paramref name="current"/> stream is not null this is used as is.</remarks>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.DiskArchiveStorage.Dispose">
            <summary>
            Disposes this instance.
            </summary>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Zip.MemoryArchiveStorage">
            <summary>
            An <see cref="T:ICSharpCode.SharpZipLib.Zip.IArchiveStorage"/> implementation suitable for in memory streams.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.MemoryArchiveStorage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ICSharpCode.SharpZipLib.Zip.MemoryArchiveStorage"/> class.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.MemoryArchiveStorage.#ctor(ICSharpCode.SharpZipLib.Zip.FileUpdateMode)">
            <summary>
            Initializes a new instance of the <see cref="T:ICSharpCode.SharpZipLib.Zip.MemoryArchiveStorage"/> class.
            </summary>
            <param name="updateMode">The <see cref="T:ICSharpCode.SharpZipLib.Zip.FileUpdateMode"/> to use</param>
            <remarks>This constructor is for testing as memory streams dont really require safe mode.</remarks>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.MemoryArchiveStorage.GetTemporaryOutput">
            <summary>
            Gets the temporary output <see cref="T:System.IO.Stream"/>
            </summary>
            <returns>Returns the temporary output stream.</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.MemoryArchiveStorage.ConvertTemporaryToFinal">
            <summary>
            Converts the temporary <see cref="T:System.IO.Stream"/> to its final form.
            </summary>
            <returns>Returns a <see cref="T:System.IO.Stream"/> that can be used to read
            the final storage for the archive.</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.MemoryArchiveStorage.MakeTemporaryCopy(System.IO.Stream)">
            <summary>
            Make a temporary copy of the original stream.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> to copy.</param>
            <returns>Returns a temporary output <see cref="T:System.IO.Stream"/> that is a copy of the input.</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.MemoryArchiveStorage.OpenForDirectUpdate(System.IO.Stream)">
            <summary>
            Return a stream suitable for performing direct updates on the original source.
            </summary>
            <param name="stream">The original source stream</param>
            <returns>Returns a stream suitable for direct updating.</returns>
            <remarks>If the <paramref name="stream"/> passed is not null this is used;
            otherwise a new <see cref="T:System.IO.MemoryStream"/> is returned.</remarks>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.MemoryArchiveStorage.Dispose">
            <summary>
            Disposes this instance.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.MemoryArchiveStorage.FinalStream">
            <summary>
            Get the stream returned by <see cref="M:ICSharpCode.SharpZipLib.Zip.MemoryArchiveStorage.ConvertTemporaryToFinal"/> if this was in fact called.
            </summary>
        </member>
        <member name="T:Top.Api.Domain.RoamingMessageItem">
            <summary>
            RoamingMessageItem Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RoamingMessageItem.Type">
            <summary>
            节点类型
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RoamingMessageItem.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="T:Top.Api.Domain.FenxiaoSku">
            <summary>
            FenxiaoSku Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoSku.CostPrice">
            <summary>
            代销采购价，单位：元
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoSku.DealerCostPrice">
            <summary>
            经销采购价
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoSku.Id">
            <summary>
            SkuID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoSku.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoSku.OuterId">
            <summary>
            商家编码
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoSku.Properties">
            <summary>
            sku的销售属性组合字符串。格式:pid:vid;pid:vid,如:1627207:3232483;1630696:3284570,表示:机身颜色:军绿色;手机套餐:一电一充。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoSku.Quantity">
            <summary>
            库存
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoSku.QuotaQuantity">
            <summary>
            配额可用库存
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoSku.ReservedQuantity">
            <summary>
            预扣库存
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoSku.ScitemId">
            <summary>
            关联的后端商品id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoSku.StandardPrice">
            <summary>
            市场价
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaAdgroupAddResponse">
            <summary>
            SimbaAdgroupAddResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaAdgroupAddResponse.Adgroup">
            <summary>
            新增加的推广组
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaCreativesGetResponse">
            <summary>
            SimbaCreativesGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaCreativesGetResponse.Creatives">
            <summary>
            创意对象列表
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaRptTargetingtagbaseGetResponse">
            <summary>
            SimbaRptTargetingtagbaseGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaRptTargetingtagbaseGetResponse.Results">
            <summary>
            result
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaKeywordsPricevonSetResponse">
            <summary>
            SimbaKeywordsPricevonSetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaKeywordsPricevonSetResponse.Keywords">
            <summary>
            成功设置关键词价格的关键词列表
            </summary>
        </member>
        <member name="T:Top.Api.Response.TraderateExplainAddResponse">
            <summary>
            TraderateExplainAddResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TraderateExplainAddResponse.IsSuccess">
            <summary>
            商城卖家给评价解释是否成功。
            </summary>
        </member>
        <member name="T:Top.Api.Response.TicketItemUpdateResponse">
            <summary>
            TicketItemUpdateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TicketItemUpdateResponse.TicketItemProcessResult">
            <summary>
            门票商品操作结果，具体请参见TicketItemProcessResult数据结构
            </summary>
        </member>
        <member name="T:Top.Api.Response.UserSellerGetResponse">
            <summary>
            UserSellerGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.UserSellerGetResponse.User">
            <summary>
            用户信息
            </summary>
        </member>
        <member name="T:Top.Api.Response.AppipGetResponse">
            <summary>
            AppipGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.AppipGetResponse.Ip">
            <summary>
            ISV发起请求服务器IP
            </summary>
        </member>
        <member name="T:Top.Api.Response.TmallBrandcatSuiteconfGetResponse">
            <summary>
            TmallBrandcatSuiteconfGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallBrandcatSuiteconfGetResponse.SuiteConfList">
            <summary>
            套装的配置信息
            </summary>
        </member>
        <member name="T:Top.Api.Response.ItemsCustomGetResponse">
            <summary>
            ItemsCustomGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ItemsCustomGetResponse.Items">
            <summary>
            商品列表，具体返回字段以fields决定
            </summary>
        </member>
        <member name="T:Top.Api.Response.TradesSoldIncrementGetResponse">
            <summary>
            TradesSoldIncrementGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TradesSoldIncrementGetResponse.HasNext">
            <summary>
            是否存在下一页
            </summary>
        </member>
        <member name="P:Top.Api.Response.TradesSoldIncrementGetResponse.TotalResults">
            <summary>
            搜索到的交易信息总数
            </summary>
        </member>
        <member name="P:Top.Api.Response.TradesSoldIncrementGetResponse.Trades">
            <summary>
            搜索到的交易信息列表，返回的Trade和Order中包含的具体信息为入参fields请求的字段信息
            </summary>
        </member>
        <member name="T:Top.Api.Response.WangwangEserviceNoreplynumGetResponse">
            <summary>
            WangwangEserviceNoreplynumGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.WangwangEserviceNoreplynumGetResponse.NonReplyStatOnDays">
            <summary>
            未回复统计列表
            </summary>
        </member>
        <member name="T:Top.Api.Response.WangwangEserviceReceivenumGetResponse">
            <summary>
            WangwangEserviceReceivenumGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.WangwangEserviceReceivenumGetResponse.ReplyStatListOnDays">
            <summary>
            客服回复列表，按天统计，排列
            </summary>
        </member>
        <member name="T:Top.Api.Request.TopAuthTokenRefreshRequest">
            <summary>
            TOP API: taobao.top.auth.token.refresh
            </summary>
        </member>
        <member name="P:Top.Api.Request.TopAuthTokenRefreshRequest.RefreshToken">
            <summary>
            grantType==refresh_token 时需要
            </summary>
        </member>
        <member name="T:Top.Api.Request.ItemSchemaIncrementUpdateRequest">
            <summary>
            TOP API: taobao.item.schema.increment.update
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemSchemaIncrementUpdateRequest.CategoryId">
            <summary>
            商品类目id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemSchemaIncrementUpdateRequest.ItemId">
            <summary>
            商品id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemSchemaIncrementUpdateRequest.Parameters">
            <summary>
            修改字段
            </summary>
        </member>
        <member name="T:Top.Api.Request.TmallItemIncrementUpdateSchemaGetRequest">
            <summary>
            TOP API: tmall.item.increment.update.schema.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemIncrementUpdateSchemaGetRequest.ItemId">
            <summary>
            需要编辑的商品ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemIncrementUpdateSchemaGetRequest.XmlData">
            <summary>
            如果入参xml_data指定了更新的字段，则只返回指定字段的规则（ISV如果功能性很强，如明确更新Title，请拼装好此字段以提升API整体性能）
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaInsightRelatedwordsGetRequest">
            <summary>
            TOP API: taobao.simba.insight.relatedwords.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaInsightRelatedwordsGetRequest.BidwordList">
            <summary>
            要查询的词列表
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaInsightRelatedwordsGetRequest.Number">
            <summary>
            表示返回数据的条数
            </summary>
        </member>
        <member name="T:Top.Api.Request.SubuserEmployeeUpdateRequest">
            <summary>
            TOP API: taobao.subuser.employee.update
            </summary>
        </member>
        <member name="P:Top.Api.Request.SubuserEmployeeUpdateRequest.DepartmentId">
            <summary>
            当前员工所属部门ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.SubuserEmployeeUpdateRequest.DutyId">
            <summary>
            当前员工担任职务ID(若需要将该字段的值置为空，请传入-1）
            </summary>
        </member>
        <member name="P:Top.Api.Request.SubuserEmployeeUpdateRequest.EmployeeName">
            <summary>
            员工姓名
            </summary>
        </member>
        <member name="P:Top.Api.Request.SubuserEmployeeUpdateRequest.EmployeeNickname">
            <summary>
            员工花名(若需要将该字段的值置为空，请传入“-1”）
            </summary>
        </member>
        <member name="P:Top.Api.Request.SubuserEmployeeUpdateRequest.EmployeeNum">
            <summary>
            员工工号(卖家自定义)(若需要将该字段的值置为空，请传入“-1”）
            </summary>
        </member>
        <member name="P:Top.Api.Request.SubuserEmployeeUpdateRequest.EmployeeTurnover">
            <summary>
            登记员工离职  true:登记员工离职
            </summary>
        </member>
        <member name="P:Top.Api.Request.SubuserEmployeeUpdateRequest.EntryDate">
            <summary>
            员工入职时间(若需要将该字段的值置为空，请传入1900-01-01 00:00:00）
            </summary>
        </member>
        <member name="P:Top.Api.Request.SubuserEmployeeUpdateRequest.IdCardNum">
            <summary>
            员工身份证号码(若需要将该字段的值置为空，请传入“-1”）
            </summary>
        </member>
        <member name="P:Top.Api.Request.SubuserEmployeeUpdateRequest.LeaderId">
            <summary>
            直接上级的员工ID(若需要将该字段的值置为空，请传入-1）
            </summary>
        </member>
        <member name="P:Top.Api.Request.SubuserEmployeeUpdateRequest.OfficePhone">
            <summary>
            办公电话(若需要将该字段的值置为空，请传入“-1”）
            </summary>
        </member>
        <member name="P:Top.Api.Request.SubuserEmployeeUpdateRequest.PersonalEmail">
            <summary>
            员工私人邮箱(若需要将该字段的值置为空，请传入“-1”）
            </summary>
        </member>
        <member name="P:Top.Api.Request.SubuserEmployeeUpdateRequest.PersonalMobile">
            <summary>
            员工手机号码(若需要将该字段的值置为空，请传入“-1”）
            </summary>
        </member>
        <member name="P:Top.Api.Request.SubuserEmployeeUpdateRequest.Sex">
            <summary>
            员工性别  1：男;  2:女
            </summary>
        </member>
        <member name="P:Top.Api.Request.SubuserEmployeeUpdateRequest.SubId">
            <summary>
            子账号ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.SubuserEmployeeUpdateRequest.WorkLocation">
            <summary>
            杭州大厦(若需要将该字段的值置为空，请传入“-1”）
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaRptDemographiceffectGetRequest">
            <summary>
            TOP API: taobao.simba.rpt.demographiceffect.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptDemographiceffectGetRequest.CampaignId">
            <summary>
            推广计划id
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptDemographiceffectGetRequest.EndTime">
            <summary>
            结束时间,格式为：yyyy-mm-dd
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptDemographiceffectGetRequest.Nick">
            <summary>
            昵称
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptDemographiceffectGetRequest.PageNo">
            <summary>
            页码
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptDemographiceffectGetRequest.PageSize">
            <summary>
            每页大小
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptDemographiceffectGetRequest.StartTime">
            <summary>
            开始时间,格式为：yyyy-mm-dd
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptDemographiceffectGetRequest.SubwayToken">
            <summary>
            权限校验参数
            </summary>
        </member>
        <member name="T:Top.Api.Request.PictureCategoryAddRequest">
            <summary>
            TOP API: taobao.picture.category.add
            </summary>
        </member>
        <member name="P:Top.Api.Request.PictureCategoryAddRequest.ParentId">
            <summary>
            图片分类的父分类,一级分类的parent_id为0,二级分类的则为其父分类的picture_category_id
            </summary>
        </member>
        <member name="P:Top.Api.Request.PictureCategoryAddRequest.PictureCategoryName">
            <summary>
            图片分类名称，最大长度20字符，中文字符算2个字符，不能为空
            </summary>
        </member>
        <member name="T:Top.Api.Request.LogisticsCompaniesGetRequest">
            <summary>
            TOP API: taobao.logistics.companies.get
            </summary>
        </member>
        <!-- 对于成员“P:Top.Api.Request.LogisticsCompaniesGetRequest.Fields”忽略有格式错误的 XML 注释 -->
        <member name="P:Top.Api.Request.LogisticsCompaniesGetRequest.IsRecommended">
            <summary>
            是否查询推荐物流公司.可选值:true,false.如果不提供此参数,将会返回所有支持电话联系的物流公司.
            </summary>
        </member>
        <member name="P:Top.Api.Request.LogisticsCompaniesGetRequest.OrderMode">
            <summary>
            推荐物流公司的下单方式.可选值:offline(电话联系/自己联系),online(在线下单),all(即电话联系又在线下单). 此参数仅仅用于is_recommended 为ture时。就是说对于推荐物流公司才可用.如果不选择此参数将会返回推荐物流中支持电话联系的物流公司.
            </summary>
        </member>
        <member name="T:Top.Api.Request.LogisticsOrdersDetailGetRequest">
            <summary>
            TOP API: taobao.logistics.orders.detail.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.LogisticsOrdersDetailGetRequest.BuyerNick">
            <summary>
            买家昵称
            </summary>
        </member>
        <member name="P:Top.Api.Request.LogisticsOrdersDetailGetRequest.EndCreated">
            <summary>
            创建时间结束.格式:yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="P:Top.Api.Request.LogisticsOrdersDetailGetRequest.Fields">
            <summary>
            需返回的字段列表.可选值:Shipping 物流数据结构中所有字段.fileds中可以指定返回以上任意一个或者多个字段,以","分隔.
            </summary>
        </member>
        <member name="P:Top.Api.Request.LogisticsOrdersDetailGetRequest.FreightPayer">
            <summary>
            谁承担运费.可选值:buyer(买家),seller(卖家).如:buyer
            </summary>
        </member>
        <!-- 对于成员“P:Top.Api.Request.LogisticsOrdersDetailGetRequest.PageNo”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“P:Top.Api.Request.LogisticsOrdersDetailGetRequest.PageSize”忽略有格式错误的 XML 注释 -->
        <member name="P:Top.Api.Request.LogisticsOrdersDetailGetRequest.ReceiverName">
            <summary>
            收货人姓名
            </summary>
        </member>
        <member name="P:Top.Api.Request.LogisticsOrdersDetailGetRequest.SellerConfirm">
            <summary>
            卖家是否发货.可选值:yes(是),no(否).如:yes.
            </summary>
        </member>
        <member name="P:Top.Api.Request.LogisticsOrdersDetailGetRequest.StartCreated">
            <summary>
            创建时间开始.格式:yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="P:Top.Api.Request.LogisticsOrdersDetailGetRequest.Status">
            <summary>
            物流状态.可查看数据结构 Shipping 中的status字段.
            </summary>
        </member>
        <member name="P:Top.Api.Request.LogisticsOrdersDetailGetRequest.Tid">
            <summary>
            交易ID.如果加入tid参数的话,不用传其他的参数,但是仅会返回一条物流订单信息.
            </summary>
        </member>
        <member name="P:Top.Api.Request.LogisticsOrdersDetailGetRequest.Type">
            <summary>
            物流方式.可选值:post(平邮),express(快递),ems(EMS).如:post
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaCreativeidsDeletedGetRequest">
            <summary>
            TOP API: taobao.simba.creativeids.deleted.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaCreativeidsDeletedGetRequest.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaCreativeidsDeletedGetRequest.PageNo">
            <summary>
            返回的第几页数据，默认为1
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaCreativeidsDeletedGetRequest.PageSize">
            <summary>
            返回的每页数据量大小,默认200最大1000
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaCreativeidsDeletedGetRequest.StartTime">
            <summary>
            得到这个时间点之后的数据，不能大于一个月
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaNonsearchDemographicsGetRequest">
            <summary>
            TOP API: taobao.simba.nonsearch.demographics.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaNonsearchDemographicsGetRequest.CampaignId">
            <summary>
            推广计划ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaNonsearchDemographicsGetRequest.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaAdgroupsChangedGetRequest">
            <summary>
            TOP API: taobao.simba.adgroups.changed.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupsChangedGetRequest.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupsChangedGetRequest.PageNo">
            <summary>
            返回的第几页数据，默认为1
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupsChangedGetRequest.PageSize">
            <summary>
            返回的每页数据量大小,默认200最大1000
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupsChangedGetRequest.StartTime">
            <summary>
            得到此时间点之后的数据，不能大于一个月
            </summary>
        </member>
        <member name="T:Top.Api.Request.TmallProductSchemaUpdateRequest">
            <summary>
            TOP API: tmall.product.schema.update
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallProductSchemaUpdateRequest.ProductId">
            <summary>
            产品编号
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallProductSchemaUpdateRequest.XmlData">
            <summary>
            根据tmall.product.update.schema.get生成的产品更新规则入参数据
            </summary>
        </member>
        <member name="T:Top.Api.Request.TradePostageUpdateRequest">
            <summary>
            TOP API: taobao.trade.postage.update
            </summary>
        </member>
        <member name="P:Top.Api.Request.TradePostageUpdateRequest.PostFee">
            <summary>
            邮费价格(邮费单位是元）
            </summary>
        </member>
        <member name="P:Top.Api.Request.TradePostageUpdateRequest.Tid">
            <summary>
            主订单编号
            </summary>
        </member>
        <member name="T:Top.Api.Request.TmallBrandcatSalesproGetRequest">
            <summary>
            TOP API: tmall.brandcat.salespro.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallBrandcatSalesproGetRequest.BrandId">
            <summary>
            被管控的品牌Id
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallBrandcatSalesproGetRequest.CatId">
            <summary>
            被管控的类目Id
            </summary>
        </member>
        <member name="T:Top.Api.Request.TradeCloseRequest">
            <summary>
            TOP API: taobao.trade.close
            </summary>
        </member>
        <member name="P:Top.Api.Request.TradeCloseRequest.CloseReason">
            <summary>
            交易关闭原因。可以选择的理由有：1.未及时付款2、买家不想买了3、买家信息填写错误，重新拍4、恶意买家/同行捣乱5、缺货6、买家拍错了7、同城见面交易
            </summary>
        </member>
        <member name="P:Top.Api.Request.TradeCloseRequest.Tid">
            <summary>
            主订单或子订单编号。
            </summary>
        </member>
        <member name="T:Top.Api.Request.RefundGetRequest">
            <summary>
            TOP API: taobao.refund.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.RefundGetRequest.Fields">
            <summary>
            需要返回的字段。目前支持有：refund_id, alipay_no, tid, oid, buyer_nick, seller_nick, total_fee, status, created, refund_fee, good_status, has_good_return, payment, reason, desc, num_iid, title, price, num, good_return_time, company_name, sid, address, shipping_type, refund_remind_timeout, refund_phase, refund_version, operation_contraint, attribute, outer_id, sku
            </summary>
        </member>
        <member name="P:Top.Api.Request.RefundGetRequest.RefundId">
            <summary>
            退款单号
            </summary>
        </member>
        <member name="T:Top.Api.Request.TradeGetRequest">
            <summary>
            TOP API: taobao.trade.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.TradeGetRequest.Fields">
            <summary>
            需要返回的字段列表，多个字段用半角逗号分隔，可选值为返回示例中能看到的所有字段。
            </summary>
        </member>
        <member name="P:Top.Api.Request.TradeGetRequest.Tid">
            <summary>
            交易编号
            </summary>
        </member>
        <member name="T:Top.Api.Request.RefundRefuseRequest">
            <summary>
            TOP API: taobao.refund.refuse
            </summary>
        </member>
        <member name="P:Top.Api.Request.RefundRefuseRequest.Oid">
            <summary>
            退款记录对应的交易子订单号
            </summary>
        </member>
        <member name="P:Top.Api.Request.RefundRefuseRequest.RefundId">
            <summary>
            退款单号
            </summary>
        </member>
        <member name="P:Top.Api.Request.RefundRefuseRequest.RefundPhase">
            <summary>
            可选值为：售中：onsale，售后：aftersale，天猫退款为必填项。
            </summary>
        </member>
        <member name="P:Top.Api.Request.RefundRefuseRequest.RefundVersion">
            <summary>
            退款版本号，天猫退款为必填项。
            </summary>
        </member>
        <member name="P:Top.Api.Request.RefundRefuseRequest.RefuseMessage">
            <summary>
            拒绝退款时的说明信息，长度2-200
            </summary>
        </member>
        <member name="P:Top.Api.Request.RefundRefuseRequest.RefuseProof">
            <summary>
            拒绝退款时的退款凭证，一般是卖家拒绝退款时使用的发货凭证，最大长度130000字节，支持的图片格式：GIF, JPG, PNG。天猫退款为必填项。
            </summary>
        </member>
        <member name="P:Top.Api.Request.RefundRefuseRequest.RefuseReasonId">
            <summary>
            拒绝原因编号，会提供用户拒绝原因列表供选择
            </summary>
        </member>
        <member name="P:Top.Api.Request.RefundRefuseRequest.Tid">
            <summary>
            退款记录对应的交易订单号
            </summary>
        </member>
        <member name="T:Top.Api.Domain.Meal">
            <summary>
            Meal Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Meal.ItemList">
            <summary>
            搭配套餐商品列表。item_id为商品的id;item_show_name为商品显示名。因最多允许5个商品进行搭配，所以查询最多有5个，以json格式传出。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Meal.MealId">
            <summary>
            套餐id。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Meal.MealMemo">
            <summary>
            搭配套餐描述！
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Meal.MealName">
            <summary>
            搭配套餐名称。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Meal.MealPrice">
            <summary>
            套餐一口价(单位是：分)
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Meal.PostageId">
            <summary>
            普通运费模板id。若这个字段为空或0时，运费是卖家负责;若这个字段不为空，说明运费模板存在，运费是买家负责。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Meal.Status">
            <summary>
            套餐状态。有效：VALID;失效：INVALID(有效套餐为可使用的套餐,无效套餐为套餐中有商品下架或库存为0时)。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Meal.TypePostage">
            <summary>
            运费模板类型。卖家标识'SELL';买家标识'BUY'。若为'SELL'则字段postage_id为空。若为'BUY'，则postage_id为运费模板id，必有值。
            </summary>
        </member>
        <member name="T:Top.Api.Domain.ProductSpec">
            <summary>
            ProductSpec Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ProductSpec.Barcode">
            <summary>
            产品规格条形码，支持EAN-13格式。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ProductSpec.BrandId">
            <summary>
            产品品牌id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ProductSpec.CertifiedPics">
            <summary>
            认证图片列表
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ProductSpec.CertifiedTxts">
            <summary>
            认证文本列表
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ProductSpec.ChangeProp">
            <summary>
            基础色数据
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ProductSpec.CustomePropsName">
            <summary>
            用户输入的属性值存放位置，例如可输入的销售属性，当用户获取pid vid后，应该先从spec_props_alias中获取，然后通过类目属性获取，获取不到，可以通过这个字段获取。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ProductSpec.LabelPrice">
            <summary>
            产品规格吊牌价，以分为单位的整数，非负,无默认值，上限999999999
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ProductSpec.MarketTime">
            <summary>
            上市时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ProductSpec.Number">
            <summary>
            规格的数量，仅当通过组合产品获取时有值
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ProductSpec.PicUrl">
            <summary>
            产品的主图片地址。绝对地址，格式：http://host/image_path。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ProductSpec.ProductCode">
            <summary>
            产品货号
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ProductSpec.ProductId">
            <summary>
            产品ID。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ProductSpec.SpecId">
            <summary>
            产品规格ID。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ProductSpec.SpecProps">
            <summary>
            产品规格的销售属性组合。格式为：pid:vid;pid:vid。其中：pid是销售属性id，vid是销售属性值id。如果该类目品牌下面没有销售属性，可以不用填写。销售属性通过tmall.brandcat.salespro.get接口获取。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ProductSpec.SpecPropsAlias">
            <summary>
            销售属性值别名。格式为：pid1:vid1:别名1;pid2:vid2:别名2。其中：pid是销售属性id，vid是销售属性值id。别名长度不可以超过30个字符。目前只有颜色销售属性支持别名。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ProductSpec.Status">
            <summary>
            1:表示可以使用的数据，也就是审核通过的。  3：表示等待小二审核的产品规格，这个数据暂时还不能使用，要等待审核通过后，才能使用。
            </summary>
        </member>
        <member name="T:Top.Api.Domain.Order">
            <summary>
            Order Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.AdjustFee">
            <summary>
            手工调整金额.格式为:1.01;单位:元;精确到小数点后两位.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.AssemblyItem">
            <summary>
            assemblyItem
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.AssemblyPrice">
            <summary>
            价格
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.AssemblyRela">
            <summary>
            主商品订单id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.BindOid">
            <summary>
            捆绑的子订单号，表示该子订单要和捆绑的子订单一起发货，用于卖家子订单捆绑发货
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.BindOids">
            <summary>
            bind_oid字段的升级，支持返回绑定的多个子订单，多个子订单以半角逗号分隔
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.BuyerNick">
            <summary>
            买家昵称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.BuyerRate">
            <summary>
            买家是否已评价。可选值：true(已评价)，false(未评价)
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.Cid">
            <summary>
            交易商品对应的类目ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.ComboId">
            <summary>
            天猫搭配宝
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.ConsignTime">
            <summary>
            子订单发货时间，当卖家对订单进行了多次发货，子订单的发货时间和主订单的发货时间可能不一样了，那么就需要以子订单的时间为准。（没有进行多次发货的订单，主订单的发货时间和子订单的发货时间都一样）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.Customization">
            <summary>
            定制信息
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.DiscountFee">
            <summary>
            子订单级订单优惠金额。精确到2位小数;单位:元。如:200.07，表示:200元7分
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.DivideOrderFee">
            <summary>
            分摊之后的实付金额
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.EndTime">
            <summary>
            子订单的交易结束时间说明：子订单有单独的结束时间，与主订单的结束时间可能有所不同，在有退款发起的时候或者是主订单分阶段付款的时候，子订单的结束时间会早于主订单的结束时间，所以开放这个字段便于订单结束状态的判断
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.EstimateConTime">
            <summary>
            子订单预计发货时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.EtPlateNumber">
            <summary>
            车牌号码
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.EtSerTime">
            <summary>
            天猫汽车服务预约时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.EtShopName">
            <summary>
            电子凭证预约门店地址
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.EtVerifiedShopName">
            <summary>
            电子凭证核销门店地址
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.FStatus">
            <summary>
            订单履行状态，如喵鲜生极速达：分单完成
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.FTerm">
            <summary>
            单履行内容，如喵鲜生极速达：storeId,phone
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.FType">
            <summary>
            订单履行类型，如喵鲜生极速达（jsd）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.Iid">
            <summary>
            商品的字符串编号(注意：iid近期即将废弃，请用num_iid参数)
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.InvType">
            <summary>
            库存类型：6为在途
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.InvoiceNo">
            <summary>
            子订单所在包裹的运单号
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.IsDaixiao">
            <summary>
            表示订单交易是否含有对应的代销采购单。如果该订单中存在一个对应的代销采购单，那么该值为true；反之，该值为false。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.IsOversold">
            <summary>
            是否超卖
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.IsServiceOrder">
            <summary>
            是否是服务订单，是返回true，否返回false。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.IsShShip">
            <summary>
            是否发货
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.IsWww">
            <summary>
            子订单是否是www订单
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.ItemMealId">
            <summary>
            套餐ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.ItemMealName">
            <summary>
            套餐的值。如：M8原装电池:便携支架:M8专用座充:莫凡保护袋
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.ItemMemo">
            <summary>
            商品备注
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.LogisticsCompany">
            <summary>
            子订单发货的快递公司名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.MdFee">
            <summary>
            免单金额
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.MdQualification">
            <summary>
            免单资格属性
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.Modified">
            <summary>
            订单修改时间，目前只有taobao.trade.ordersku.update会返回此字段。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.Num">
            <summary>
            购买数量。取值范围:大于零的整数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.NumIid">
            <summary>
            商品数字ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.O2oEtOrderId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.Oid">
            <summary>
            子订单编号
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.OrderAttr">
            <summary>
            top动态字段
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.OrderFrom">
            <summary>
            子订单来源,如jhs(聚划算)、taobao(淘宝)、wap(无线)
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.OuterIid">
            <summary>
            商家外部编码(可与商家外部系统对接)。外部商家自己定义的商品Item的id，可以通过taobao.items.custom.get获取商品的Item的信息
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.OuterSkuId">
            <summary>
            外部网店自己定义的Sku编号
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.PartMjzDiscount">
            <summary>
            优惠分摊
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.Payment">
            <summary>
            子订单实付金额。精确到2位小数，单位:元。如:200.07，表示:200元7分。对于多子订单的交易，计算公式如下：payment = price * num + adjust_fee - discount_fee ；单子订单交易，payment与主订单的payment一致，对于退款成功的子订单，由于主订单的优惠分摊金额，会造成该字段可能不为0.00元。建议使用退款前的实付金额减去退款单中的实际退款金额计算。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.PicPath">
            <summary>
            商品图片的绝对路径
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.Price">
            <summary>
            商品价格。精确到2位小数;单位:元。如:200.07，表示:200元7分
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.RefundId">
            <summary>
            最近退款ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.RefundStatus">
            <summary>
            退款状态。退款状态。可选值 WAIT_SELLER_AGREE(买家已经申请退款，等待卖家同意) WAIT_BUYER_RETURN_GOODS(卖家已经同意退款，等待买家退货) WAIT_SELLER_CONFIRM_GOODS(买家已经退货，等待卖家确认收货) SELLER_REFUSE_BUYER(卖家拒绝退款) CLOSED(退款关闭) SUCCESS(退款成功)
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.SellerNick">
            <summary>
            卖家昵称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.SellerRate">
            <summary>
            卖家是否已评价。可选值：true(已评价)，false(未评价)
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.SellerType">
            <summary>
            卖家类型，可选值为：B（商城商家），C（普通卖家）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.Shipper">
            <summary>
            仓储信息
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.ShippingType">
            <summary>
            子订单的运送方式（卖家对订单进行多次发货之后，一个主订单下的子订单的运送方式可能不同，用order.shipping_type来区分子订单的运送方式）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.SkuId">
            <summary>
            商品的最小库存单位Sku的id.可以通过taobao.item.sku.get获取详细的Sku信息
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.SkuPropertiesName">
            <summary>
            SKU的值。如：机身颜色:黑色;手机套餐:官方标配
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.Snapshot">
            <summary>
            订单快照详细信息
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.SnapshotUrl">
            <summary>
            订单快照URL
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.Status">
            <summary>
            订单状态（请关注此状态，如果为TRADE_CLOSED_BY_TAOBAO状态，则不要对此订单进行发货，切记啊！）。可选值: <ul><li>TRADE_NO_CREATE_PAY(没有创建支付宝交易) </li><li>WAIT_BUYER_PAY(等待买家付款) </li><li>WAIT_SELLER_SEND_GOODS(等待卖家发货,即:买家已付款) </li><li>WAIT_BUYER_CONFIRM_GOODS(等待买家确认收货,即:卖家已发货) </li><li>TRADE_BUYER_SIGNED(买家已签收,货到付款专用) </li><li>TRADE_FINISHED(交易成功) </li><li>TRADE_CLOSED(付款以后用户退款成功，交易自动关闭) </li><li>TRADE_CLOSED_BY_TAOBAO(付款以前，卖家或买家主动关闭交易)</li><li>PAY_PENDING(国际信用卡支付付款确认中)</li></ul>
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.StoreCode">
            <summary>
            发货的仓库编码
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.SubOrderTaxFee">
            <summary>
            天猫国际官网直供子订单关税税费
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.SubOrderTaxRate">
            <summary>
            天猫国际官网直供子订单关税税率
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.TicketExpdateKey">
            <summary>
            门票有效期的key
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.TicketOuterId">
            <summary>
            对应门票有效期的外部id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.TimeoutActionTime">
            <summary>
            订单超时到期时间。格式:yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.Title">
            <summary>
            商品标题
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.TmserSpuCode">
            <summary>
            支持家装类物流的类型
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.TotalFee">
            <summary>
            应付金额（商品价格 * 商品数量 + 手工调整金额 - 子订单级订单优惠金额）。精确到2位小数;单位:元。如:200.07，表示:200元7分
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.Type">
            <summary>
            交易类型
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.Xxx">
            <summary>
            xxx
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Order.ZhengjiStatus">
            <summary>
            征集预售订单征集状态：1（征集中），2（征集成功），3（征集失败）
            </summary>
        </member>
        <member name="T:Top.Api.Domain.InsightWordDataDTO">
            <summary>
            InsightWordDataDTO Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordDataDTO.Bidword">
            <summary>
            关键词
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordDataDTO.Click">
            <summary>
            点击量
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordDataDTO.Competition">
            <summary>
            竞争度
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordDataDTO.Cost">
            <summary>
            花费，单位（分）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordDataDTO.Coverage">
            <summary>
            点击转化率
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordDataDTO.Cpc">
            <summary>
            平均点击花费
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordDataDTO.Ctr">
            <summary>
            点击率
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordDataDTO.Directtransaction">
            <summary>
            直接成交金额
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordDataDTO.Directtransactionshipping">
            <summary>
            直接成交笔数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordDataDTO.Favitemtotal">
            <summary>
            宝贝搜藏数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordDataDTO.Favshoptotal">
            <summary>
            店铺搜藏数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordDataDTO.Favtotal">
            <summary>
            总的收藏数，包括宝贝收藏和店铺收藏
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordDataDTO.Impression">
            <summary>
            展现量
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordDataDTO.Indirecttransaction">
            <summary>
            间接成交金额
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordDataDTO.Indirecttransactionshipping">
            <summary>
            间接成交笔数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordDataDTO.Roi">
            <summary>
            投入产出比
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordDataDTO.Transactionshippingtotal">
            <summary>
            总的成交笔数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordDataDTO.Transactiontotal">
            <summary>
            成交总金额
            </summary>
        </member>
        <member name="T:Top.Api.Domain.RefundMessage">
            <summary>
            RefundMessage Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RefundMessage.Content">
            <summary>
            留言内容。最大长度: 400个字节
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RefundMessage.Created">
            <summary>
            留言创建时间。格式:yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RefundMessage.Id">
            <summary>
            留言编号
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RefundMessage.MessageType">
            <summary>
            退款类型：NORMAL（普通留言），RETURN_GOODS_APPROVED（卖家留退货地址时留言）；如果为RETURN_GOODS_APPROVED，则退款留言中有卖家收货地址
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RefundMessage.OwnerId">
            <summary>
            留言者编号
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RefundMessage.OwnerNick">
            <summary>
            留言者昵称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RefundMessage.OwnerRole">
            <summary>
            留言者身份1代表买家，2代表卖家，3代表小二
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RefundMessage.PicUrls">
            <summary>
            凭证附件地址（图片）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RefundMessage.RefundId">
            <summary>
            退款编号。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RefundMessage.RefundPhase">
            <summary>
            退款阶段，可选值：onsale（售中）, aftersale（售后）
            </summary>
        </member>
        <member name="T:Top.Api.Domain.RdsConfig">
            <summary>
            RdsConfig Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RdsConfig.Appkey">
            <summary>
            appkey
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RdsConfig.DbTdpPs">
            <summary>
            数据库tdp密码
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RdsConfig.DbTdpUser">
            <summary>
            数据库tdp用户名
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RdsConfig.DbType">
            <summary>
            数据库类型，mysql/sqlserver
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RdsConfig.DbUser">
            <summary>
            数据库用户名
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RdsConfig.Host">
            <summary>
            主机地址
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RdsConfig.Id">
            <summary>
            数据推送rds表里的id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RdsConfig.Name">
            <summary>
            rds数据库实例名
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RdsConfig.Port">
            <summary>
            rds数据库端口
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RdsConfig.Status">
            <summary>
            数据库状态
            </summary>
        </member>
        <member name="T:Top.Api.Domain.ReplyStatById">
            <summary>
            ReplyStatById Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ReplyStatById.ReplyNum">
            <summary>
            客服回复数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ReplyStatById.UserId">
            <summary>
            客服ID
            </summary>
        </member>
        <member name="T:Top.Api.Domain.CertPicInfo">
            <summary>
            CertPicInfo Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.CertPicInfo.CertType">
            <summary>
            认证类型的数值id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.CertPicInfo.PicUrl">
            <summary>
            认证图片的url地址
            </summary>
        </member>
        <member name="T:Top.Api.Domain.ReplyStatOnDay">
            <summary>
            ReplyStatOnDay Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ReplyStatOnDay.ReplyDate">
            <summary>
            某天（的回复统计）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ReplyStatOnDay.ReplyStatByIds">
            <summary>
            客服回复统计
            </summary>
        </member>
        <member name="T:Top.Api.Domain.Feature">
            <summary>
            Feature Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Feature.AttrKey">
            <summary>
            属性键
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Feature.AttrValue">
            <summary>
            属性值
            </summary>
        </member>
        <member name="T:Top.Api.Domain.PromotionDetail">
            <summary>
            PromotionDetail Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PromotionDetail.DiscountFee">
            <summary>
            优惠金额（免运费、限时打折时为空）,单位：元
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PromotionDetail.GiftItemId">
            <summary>
            赠品的宝贝id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PromotionDetail.GiftItemName">
            <summary>
            满就送商品时，所送商品的名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PromotionDetail.GiftItemNum">
            <summary>
            满就送礼物的礼物数量
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PromotionDetail.Id">
            <summary>
            交易的主订单或子订单号
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PromotionDetail.PromotionDesc">
            <summary>
            优惠活动的描述
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PromotionDetail.PromotionId">
            <summary>
            优惠id，(由营销工具id、优惠活动id和优惠详情id组成，结构为：营销工具id-优惠活动id_优惠详情id，如mjs-123024_211143）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PromotionDetail.PromotionName">
            <summary>
            优惠信息的名称
            </summary>
        </member>
        <member name="T:Top.Api.AutoRetryTopClient">
            <summary>
            调用出错自动重试客户端。
            </summary>
        </member>
        <member name="F:Top.Api.AutoRetryTopClient.maxRetryCount">
            <summary>
            单次请求的最大重试次数，默认值为3次。
            </summary>
        </member>
        <member name="F:Top.Api.AutoRetryTopClient.retryWaitTime">
            <summary>
            重试之前休眠时间，默认值为100毫秒。
            </summary>
        </member>
        <member name="F:Top.Api.AutoRetryTopClient.throwIfOverMaxRetry">
            <summary>
            超过最大重试次数时是否抛出异常。
            </summary>
        </member>
        <member name="F:Top.Api.AutoRetryTopClient.retryErrorCodes">
            <summary>
            自定义重试错误码列表。
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerCrowdDeleteResponse">
            <summary>
            ZuanshiBannerCrowdDeleteResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCrowdDeleteResponse.Result">
            <summary>
            返回结果对象
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerCrowdDeleteResponse.ResultDTODomain">
            <summary>
            ResultDTODomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCrowdDeleteResponse.ResultDTODomain.Message">
            <summary>
            message
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCrowdDeleteResponse.ResultDTODomain.Success">
            <summary>
            调用是否成功,true-成功，false-失败
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerAdgroupAdzoneFindpageResponse">
            <summary>
            ZuanshiBannerAdgroupAdzoneFindpageResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdgroupAdzoneFindpageResponse.Result">
            <summary>
            返回结果
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerAdgroupAdzoneFindpageResponse.MatrixPriceDTODomain">
            <summary>
            MatrixPriceDTODomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdgroupAdzoneFindpageResponse.MatrixPriceDTODomain.CrowdId">
            <summary>
            定向id
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdgroupAdzoneFindpageResponse.MatrixPriceDTODomain.CrowdType">
            <summary>
            定向类型
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdgroupAdzoneFindpageResponse.MatrixPriceDTODomain.Price">
            <summary>
            出价
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerAdgroupAdzoneFindpageResponse.AdzoneBidDTODomain">
            <summary>
            AdzoneBidDTODomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdgroupAdzoneFindpageResponse.AdzoneBidDTODomain.AdzoneId">
            <summary>
            广告位id
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdgroupAdzoneFindpageResponse.AdzoneBidDTODomain.AdzoneLevel">
            <summary>
            广告位等级
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdgroupAdzoneFindpageResponse.AdzoneBidDTODomain.AdzoneName">
            <summary>
            广告位名称
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdgroupAdzoneFindpageResponse.AdzoneBidDTODomain.AdzoneSizeList">
            <summary>
            广告位尺寸列表
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdgroupAdzoneFindpageResponse.AdzoneBidDTODomain.AllowAdFormatList">
            <summary>
            允许的创意类型列表
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdgroupAdzoneFindpageResponse.AdzoneBidDTODomain.AllowAdvType">
            <summary>
            允许的广告主类型
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdgroupAdzoneFindpageResponse.AdzoneBidDTODomain.MatrixPriceList">
            <summary>
            出价列表
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdgroupAdzoneFindpageResponse.AdzoneBidDTODomain.MediaType">
            <summary>
            媒体类型
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerAdgroupAdzoneFindpageResponse.ResultDTODomain">
            <summary>
            ResultDTODomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdgroupAdzoneFindpageResponse.ResultDTODomain.Adzones">
            <summary>
            结果列表
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdgroupAdzoneFindpageResponse.ResultDTODomain.Message">
            <summary>
            返回消息
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdgroupAdzoneFindpageResponse.ResultDTODomain.Success">
            <summary>
            是否成功
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdgroupAdzoneFindpageResponse.ResultDTODomain.TotalCount">
            <summary>
            总记录数
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAdvertiserTargetRptsDayGetResponse">
            <summary>
            ZuanshiAdvertiserTargetRptsDayGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRptsDayGetResponse.TargetOfflineRptDaysList">
            <summary>
            结果
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAdvertiserTargetRptsDayGetResponse.DataDomain">
            <summary>
            DataDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRptsDayGetResponse.DataDomain.AdPv">
            <summary>
            展现量
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRptsDayGetResponse.DataDomain.AdgroupId">
            <summary>
            单元id
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRptsDayGetResponse.DataDomain.AdgroupName">
            <summary>
            单元名称
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRptsDayGetResponse.DataDomain.AlipayInShopNum">
            <summary>
            成交量
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRptsDayGetResponse.DataDomain.AlipayInshopAmt">
            <summary>
            成交额
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRptsDayGetResponse.DataDomain.AvgAccessPageNum">
            <summary>
            平均访问页面数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRptsDayGetResponse.DataDomain.AvgAccessTime">
            <summary>
            平均访问时长
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRptsDayGetResponse.DataDomain.CampaignId">
            <summary>
            计划id
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRptsDayGetResponse.DataDomain.CampaignName">
            <summary>
            计划名称
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRptsDayGetResponse.DataDomain.CartNum">
            <summary>
            加购物车数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRptsDayGetResponse.DataDomain.Charge">
            <summary>
            花费
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRptsDayGetResponse.DataDomain.Click">
            <summary>
            点击量
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRptsDayGetResponse.DataDomain.Ctr">
            <summary>
            ctr
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRptsDayGetResponse.DataDomain.Cvr">
            <summary>
            cvr
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRptsDayGetResponse.DataDomain.DeepInshopUv">
            <summary>
            深度访问uv
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRptsDayGetResponse.DataDomain.DirShopColNum">
            <summary>
            店铺收藏数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRptsDayGetResponse.DataDomain.Ecpc">
            <summary>
            ecpc
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRptsDayGetResponse.DataDomain.Ecpm">
            <summary>
            ecpm
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRptsDayGetResponse.DataDomain.GmvInshopAmt">
            <summary>
            gmv成交额
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRptsDayGetResponse.DataDomain.GmvInshopNum">
            <summary>
            gmv成交量
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRptsDayGetResponse.DataDomain.InshopItemColNum">
            <summary>
            宝贝收藏数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRptsDayGetResponse.DataDomain.LogDate">
            <summary>
            日期
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRptsDayGetResponse.DataDomain.Roi">
            <summary>
            roi
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRptsDayGetResponse.DataDomain.TargetId">
            <summary>
            定向id
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRptsDayGetResponse.DataDomain.TargetName">
            <summary>
            定向名称
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRptsDayGetResponse.DataDomain.Uv">
            <summary>
            uv
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAdvertiserKeywordRptsDownloadResponse">
            <summary>
            ZuanshiAdvertiserKeywordRptsDownloadResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserKeywordRptsDownloadResponse.TaskId">
            <summary>
            生成的任务id标识，用于轮询任务状态
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAdvertiserCategoryRptsGetResponse">
            <summary>
            ZuanshiAdvertiserCategoryRptsGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCategoryRptsGetResponse.AdvertiserCategoryRptList">
            <summary>
            分类目行业平均报表信息列表
            </summary>
        </member>
        <member name="T:Top.Api.Response.TbkUatmFavoritesItemGetResponse">
            <summary>
            TbkUatmFavoritesItemGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkUatmFavoritesItemGetResponse.Results">
            <summary>
            招商宝贝信息
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkUatmFavoritesItemGetResponse.TotalResults">
            <summary>
            选品库中的商品总条数
            </summary>
        </member>
        <member name="T:Top.Api.Response.TbkItemRecommendGetResponse">
            <summary>
            TbkItemRecommendGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkItemRecommendGetResponse.Results">
            <summary>
            淘宝客商品
            </summary>
        </member>
        <member name="T:Top.Api.Response.ScitemMapQueryResponse">
            <summary>
            ScitemMapQueryResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ScitemMapQueryResponse.ScItemMaps">
            <summary>
            后端商品映射列表
            </summary>
        </member>
        <member name="T:Top.Api.Response.RegionWarehouseQueryResponse">
            <summary>
            RegionWarehouseQueryResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.RegionWarehouseQueryResponse.Result">
            <summary>
            result
            </summary>
        </member>
        <member name="T:Top.Api.Response.RegionWarehouseQueryResponse.BaseResultDomain">
            <summary>
            BaseResultDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.RegionWarehouseQueryResponse.BaseResultDomain.Data">
            <summary>
            返回覆盖地址信息
            </summary>
        </member>
        <member name="P:Top.Api.Response.RegionWarehouseQueryResponse.BaseResultDomain.ErrorCode">
            <summary>
            errorCode
            </summary>
        </member>
        <member name="P:Top.Api.Response.RegionWarehouseQueryResponse.BaseResultDomain.ErrorMsg">
            <summary>
            errorMsg
            </summary>
        </member>
        <member name="P:Top.Api.Response.RegionWarehouseQueryResponse.BaseResultDomain.Success">
            <summary>
            success
            </summary>
        </member>
        <member name="T:Top.Api.Response.OpenimUsersAddResponse">
            <summary>
            OpenimUsersAddResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.OpenimUsersAddResponse.FailMsg">
            <summary>
            添加帐号失败的具体信息
            </summary>
        </member>
        <member name="P:Top.Api.Response.OpenimUsersAddResponse.UidFail">
            <summary>
            添加失败的用户id
            </summary>
        </member>
        <member name="P:Top.Api.Response.OpenimUsersAddResponse.UidSucc">
            <summary>
            成功用户列表
            </summary>
        </member>
        <member name="T:Top.Api.Response.OpenimTribeCreateResponse">
            <summary>
            OpenimTribeCreateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.OpenimTribeCreateResponse.TribeInfo">
            <summary>
            创建群的信息
            </summary>
        </member>
        <member name="T:Top.Api.Response.OpenimCustmsgPushResponse">
            <summary>
            OpenimCustmsgPushResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.OpenimCustmsgPushResponse.Msgid">
            <summary>
            消息id，用于定位问题
            </summary>
        </member>
        <member name="T:Top.Api.Response.OpenimAppChatlogsGetResponse">
            <summary>
            OpenimAppChatlogsGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.OpenimAppChatlogsGetResponse.Result">
            <summary>
            查询结果
            </summary>
        </member>
        <member name="T:Top.Api.Response.FenxiaoRefundUpdateResponse">
            <summary>
            FenxiaoRefundUpdateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoRefundUpdateResponse.IsSuccess">
            <summary>
            退款是否修改成功
            </summary>
        </member>
        <member name="T:Top.Api.Response.FenxiaoProductSkuAddResponse">
            <summary>
            FenxiaoProductSkuAddResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoProductSkuAddResponse.Created">
            <summary>
            操作时间
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoProductSkuAddResponse.Result">
            <summary>
            操作结果
            </summary>
        </member>
        <member name="T:Top.Api.Response.FenxiaoCooperationTerminateResponse">
            <summary>
            FenxiaoCooperationTerminateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoCooperationTerminateResponse.IsSuccess">
            <summary>
            操作是否成功
            </summary>
        </member>
        <member name="T:Top.Api.Response.FenxiaoCooperationProductcatAddResponse">
            <summary>
            FenxiaoCooperationProductcatAddResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoCooperationProductcatAddResponse.IsSuccess">
            <summary>
            操作是否成功
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiBannerAdgroupAdzoneFindpageRequest">
            <summary>
            TOP API: taobao.zuanshi.banner.adgroup.adzone.findpage
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerAdgroupAdzoneFindpageRequest.AdgroupId">
            <summary>
            推广单元id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerAdgroupAdzoneFindpageRequest.AdzoneIdList">
            <summary>
            广告位id列表
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerAdgroupAdzoneFindpageRequest.AdzoneName">
            <summary>
            广告位名称
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerAdgroupAdzoneFindpageRequest.AdzoneSize">
            <summary>
            广告位尺寸
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerAdgroupAdzoneFindpageRequest.CampaignId">
            <summary>
            计划id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerAdgroupAdzoneFindpageRequest.PageNum">
            <summary>
            页码
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerAdgroupAdzoneFindpageRequest.PageSize">
            <summary>
            分页每页大小
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiAdvertiserRptsDownloadDayGetRequest">
            <summary>
            TOP API: taobao.zuanshi.advertiser.rpts.download.day.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserRptsDownloadDayGetRequest.CampaignModel">
            <summary>
            计划类型。1：全店推广；4单品推广
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserRptsDownloadDayGetRequest.EffectType">
            <summary>
            效果类型。“impression”：展现效果；“click”：点击效果
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserRptsDownloadDayGetRequest.EndTime">
            <summary>
            结束日期
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserRptsDownloadDayGetRequest.Hierarchy">
            <summary>
            下载那种广告实体的数据取值范围 campaign,adgroup,creative,target,adzone,targetAdzone。一次一个，不能多个。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserRptsDownloadDayGetRequest.StartTime">
            <summary>
            开始日期
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiAdvertiserCreativeRptsTotalGetRequest">
            <summary>
            TOP API: taobao.zuanshi.advertiser.creative.rpts.total.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserCreativeRptsTotalGetRequest.AdgroupId">
            <summary>
            单元id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserCreativeRptsTotalGetRequest.CampaignId">
            <summary>
            计划id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserCreativeRptsTotalGetRequest.CampaignModel">
            <summary>
            计划类型。1：全店推广；4单品推广
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserCreativeRptsTotalGetRequest.CreativeId">
            <summary>
            创意id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserCreativeRptsTotalGetRequest.Effect">
            <summary>
            效果周期，取值范围：3,7,15。分别表示效果转化周期-3天/7天/15天。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserCreativeRptsTotalGetRequest.EffectType">
            <summary>
            效果类型。“impression”：展现效果；“click”：点击效果
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserCreativeRptsTotalGetRequest.EndTime">
            <summary>
            结束日期
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserCreativeRptsTotalGetRequest.Offset">
            <summary>
            分页偏移量
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserCreativeRptsTotalGetRequest.PageSize">
            <summary>
            每页条数，必传；每页最多200
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserCreativeRptsTotalGetRequest.StartTime">
            <summary>
            开始日期
            </summary>
        </member>
        <member name="T:Top.Api.Request.TbkItemInfoGetRequest">
            <summary>
            TOP API: taobao.tbk.item.info.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkItemInfoGetRequest.Fields">
            <summary>
            需返回的字段列表
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkItemInfoGetRequest.NumIids">
            <summary>
            商品ID串，用,分割，从taobao.tbk.item.get接口获取num_iid字段，最大40个
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkItemInfoGetRequest.Platform">
            <summary>
            链接形式：1：PC，2：无线，默认：１
            </summary>
        </member>
        <member name="T:Top.Api.Request.TbkItemCouponGetRequest">
            <summary>
            TOP API: taobao.tbk.item.coupon.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkItemCouponGetRequest.Cat">
            <summary>
            后台类目ID，用,分割，最大10个，该ID可以通过taobao.itemcats.get接口获取到
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkItemCouponGetRequest.PageNo">
            <summary>
            第几页，默认：1（当后台类目和查询词均不指定的时候，最多出10000个结果，即page_no*page_size不能超过10000；当指定类目或关键词的时候，则最多出100个结果）
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkItemCouponGetRequest.PageSize">
            <summary>
            页大小，默认20，1~100
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkItemCouponGetRequest.Pid">
            <summary>
            三方pid，满足mm_xxx_xxx_xxx格式
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkItemCouponGetRequest.Platform">
            <summary>
            1：PC，2：无线，默认：1
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkItemCouponGetRequest.Q">
            <summary>
            查询词
            </summary>
        </member>
        <member name="T:Top.Api.Request.RegionPriceQueryRequest">
            <summary>
            TOP API: taobao.region.price.query
            </summary>
        </member>
        <member name="P:Top.Api.Request.RegionPriceQueryRequest.ItemId">
            <summary>
            商品id
            </summary>
        </member>
        <member name="P:Top.Api.Request.RegionPriceQueryRequest.RegionalPriceDtos">
            <summary>
            不传则返回所有设置的区域价格
            </summary>
        </member>
        <member name="P:Top.Api.Request.RegionPriceQueryRequest.SkuId">
            <summary>
            无sku可传0
            </summary>
        </member>
        <member name="T:Top.Api.Request.RegionPriceQueryRequest.RegionalPriceDtoDomain">
            <summary>
            RegionalPriceDtoDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Request.RegionPriceQueryRequest.RegionalPriceDtoDomain.City">
            <summary>
            市
            </summary>
        </member>
        <member name="P:Top.Api.Request.RegionPriceQueryRequest.RegionalPriceDtoDomain.District">
            <summary>
            区县，特殊可选
            </summary>
        </member>
        <member name="P:Top.Api.Request.RegionPriceQueryRequest.RegionalPriceDtoDomain.Province">
            <summary>
            省
            </summary>
        </member>
        <member name="P:Top.Api.Request.RegionPriceQueryRequest.RegionalPriceDtoDomain.Street">
            <summary>
            街道，特殊可选
            </summary>
        </member>
        <member name="T:Top.Api.Request.OpenimUserserviceGetRequest">
            <summary>
            TOP API: taobao.openim.userservice.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimUserserviceGetRequest.Date">
            <summary>
            某一天
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimUserserviceGetRequest.PageNo">
            <summary>
            当前页
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimUserserviceGetRequest.PageSize">
            <summary>
            页面记录数
            </summary>
        </member>
        <member name="T:Top.Api.Request.OpenimTribeSetmanagerRequest">
            <summary>
            TOP API: taobao.openim.tribe.setmanager
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimTribeSetmanagerRequest.Member">
            <summary>
            用户信息
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimTribeSetmanagerRequest.Tid">
            <summary>
            群id
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimTribeSetmanagerRequest.User">
            <summary>
            用户信息
            </summary>
        </member>
        <member name="T:Top.Api.Request.OpenimIoscertProductionSetRequest">
            <summary>
            TOP API: taobao.openim.ioscert.production.set
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimIoscertProductionSetRequest.Cert">
            <summary>
            证书文件内容,base64编码
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimIoscertProductionSetRequest.Password">
            <summary>
            证书密码
            </summary>
        </member>
        <member name="T:Top.Api.Request.LocationRelationEditRequest">
            <summary>
            TOP API: taobao.location.relation.edit
            </summary>
        </member>
        <member name="P:Top.Api.Request.LocationRelationEditRequest.LocationRelationList">
            <summary>
            关系对象列表
            </summary>
        </member>
        <member name="T:Top.Api.Request.LocationRelationEditRequest.LocationRelationDtoDomain">
            <summary>
            LocationRelationDtoDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Request.LocationRelationEditRequest.LocationRelationDtoDomain.SourceInvStoreType">
            <summary>
            实体类型 2：仓库 6：门店
            </summary>
        </member>
        <member name="P:Top.Api.Request.LocationRelationEditRequest.LocationRelationDtoDomain.SourceStoreCode">
            <summary>
            实体code
            </summary>
        </member>
        <member name="P:Top.Api.Request.LocationRelationEditRequest.LocationRelationDtoDomain.Status">
            <summary>
            状态  0 正常  -1 删除
            </summary>
        </member>
        <member name="P:Top.Api.Request.LocationRelationEditRequest.LocationRelationDtoDomain.TargetInvStoreType">
            <summary>
            实体类型 2：仓库 6：门店
            </summary>
        </member>
        <member name="P:Top.Api.Request.LocationRelationEditRequest.LocationRelationDtoDomain.TargetStoreCode">
            <summary>
            实体code
            </summary>
        </member>
        <member name="T:Top.Api.Request.FenxiaoTrademonitorGetRequest">
            <summary>
            TOP API: taobao.fenxiao.trademonitor.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoTrademonitorGetRequest.DistributorNick">
            <summary>
            经销商的淘宝账号
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoTrademonitorGetRequest.EndCreated">
            <summary>
            结束时间 格式 yyyy-MM-dd HH:mm:ss.支持到秒的查询。若不传时分秒，默认为0时0分0秒。
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoTrademonitorGetRequest.Fields">
            <summary>
            多个字段用","分隔。 fields 如果为空：返回所有采购单对象(purchase_orders)字段。 如果不为空：返回指定采购单对象(purchase_orders)字段。例如：trade_monitors.item_title表示只返回item_title
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoTrademonitorGetRequest.PageNo">
            <summary>
            页码。（大于0的整数。小于1按1计）
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoTrademonitorGetRequest.PageSize">
            <summary>
            每页条数。（每页条数不超过50条，超过50或小于0均按50计）
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoTrademonitorGetRequest.ProductId">
            <summary>
            产品id
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoTrademonitorGetRequest.StartCreated">
            <summary>
            起始时间 格式 yyyy-MM-dd HH:mm:ss.支持到秒的查询。若不传时分秒，默认为0时0分0秒。
            </summary>
        </member>
        <member name="T:Taobao.Top.Link.Channel.ServerChannel">
            <summary>the channel that server bound
            </summary>
        </member>
        <member name="M:Taobao.Top.Link.Channel.ServerChannel.Start">
            <summary>start server
            </summary>
        </member>
        <member name="M:Taobao.Top.Link.Channel.ServerChannel.Stop">
            <summary>stop server
            </summary>
        </member>
        <member name="P:Taobao.Top.Link.Channel.ServerChannel.Port">
            <summary>get server address
            </summary>
        </member>
        <member name="P:Taobao.Top.Link.Channel.ServerChannel.MaxIdleTimeSeconds">
            <summary>get or set connection max idle time that do not send or receive
            </summary>
        </member>
        <member name="P:Taobao.Top.Link.Channel.ServerChannel.OnMessage">
            <summary>while message received on this channel
            </summary>
        </member>
        <member name="P:Taobao.Top.Link.Channel.ServerChannel.OnError">
            <summary>while error occur on this channel
            </summary>
        </member>
        <member name="T:Taobao.Top.Link.Channel.TCP.TcpServerChannelSender">
            <summary>the channel that can send message to client via raw tcp
            </summary>
        </member>
        <member name="T:Taobao.Top.Link.Channel.IServerChannelSender">
            <summary>the channel that can send message to client
            </summary>
        </member>
        <member name="M:Taobao.Top.Link.Channel.IServerChannelSender.GetContext(System.Object)">
            <summary>get channel context by given object key, channel conext can be used to store something that belong itself
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Taobao.Top.Link.Channel.IServerChannelSender.SetContext(System.Object,System.Object)">
            <summary>set channel context by given object key, channel conext can be used to store something that belong itself
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="P:Taobao.Top.Link.Channel.IServerChannelSender.IsOpen">
            <summary>weather channel is open
            </summary>
        </member>
        <member name="T:Taobao.Top.Link.Endpoints.SimpleIdentity">
            <summary>simple id with Name
            </summary>
        </member>
        <member name="T:Taobao.Top.Link.Endpoints.Identity">
            <summary>endpoint's id
            </summary>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Encryption.PkzipClassic">
            <summary>
            PkzipClassic embodies the classic or original encryption facilities used in Pkzip archives.
            While it has been superceded by more recent and more powerful algorithms, its still in use and 
            is viable for preventing casual snooping
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Encryption.PkzipClassic.GenerateKeys(System.Byte[])">
            <summary>
            Generates new encryption keys based on given seed
            </summary>
            <param name="seed">The seed value to initialise keys with.</param>
            <returns>A new key value.</returns>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Encryption.PkzipClassicCryptoBase">
            <summary>
            PkzipClassicCryptoBase provides the low level facilities for encryption
            and decryption using the PkzipClassic algorithm.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Encryption.PkzipClassicCryptoBase.TransformByte">
            <summary>
            Transform a single byte 
            </summary>
            <returns>
            The transformed value
            </returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Encryption.PkzipClassicCryptoBase.SetKeys(System.Byte[])">
            <summary>
            Set the key schedule for encryption/decryption.
            </summary>
            <param name="keyData">The data use to set the keys from.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Encryption.PkzipClassicCryptoBase.UpdateKeys(System.Byte)">
            <summary>
            Update encryption keys 
            </summary>		
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Encryption.PkzipClassicCryptoBase.Reset">
            <summary>
            Reset the internal state.
            </summary>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Encryption.PkzipClassicEncryptCryptoTransform">
            <summary>
            PkzipClassic CryptoTransform for encryption.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Encryption.PkzipClassicEncryptCryptoTransform.#ctor(System.Byte[])">
            <summary>
            Initialise a new instance of <see cref="T:ICSharpCode.SharpZipLib.Encryption.PkzipClassicEncryptCryptoTransform"></see>
            </summary>
            <param name="keyBlock">The key block to use.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Encryption.PkzipClassicEncryptCryptoTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Transforms the specified region of the specified byte array.
            </summary>
            <param name="inputBuffer">The input for which to compute the transform.</param>
            <param name="inputOffset">The offset into the byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the byte array to use as data.</param>
            <returns>The computed transform.</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Encryption.PkzipClassicEncryptCryptoTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Transforms the specified region of the input byte array and copies 
            the resulting transform to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input for which to compute the transform.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write the transform.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>The number of bytes written.</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Encryption.PkzipClassicEncryptCryptoTransform.Dispose">
            <summary>
            Cleanup internal state.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Encryption.PkzipClassicEncryptCryptoTransform.CanReuseTransform">
            <summary>
            Gets a value indicating whether the current transform can be reused.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Encryption.PkzipClassicEncryptCryptoTransform.InputBlockSize">
            <summary>
            Gets the size of the input data blocks in bytes.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Encryption.PkzipClassicEncryptCryptoTransform.OutputBlockSize">
            <summary>
            Gets the size of the output data blocks in bytes.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Encryption.PkzipClassicEncryptCryptoTransform.CanTransformMultipleBlocks">
            <summary>
            Gets a value indicating whether multiple blocks can be transformed.
            </summary>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Encryption.PkzipClassicDecryptCryptoTransform">
            <summary>
            PkzipClassic CryptoTransform for decryption.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Encryption.PkzipClassicDecryptCryptoTransform.#ctor(System.Byte[])">
            <summary>
            Initialise a new instance of <see cref="T:ICSharpCode.SharpZipLib.Encryption.PkzipClassicDecryptCryptoTransform"></see>.
            </summary>
            <param name="keyBlock">The key block to decrypt with.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Encryption.PkzipClassicDecryptCryptoTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Transforms the specified region of the specified byte array.
            </summary>
            <param name="inputBuffer">The input for which to compute the transform.</param>
            <param name="inputOffset">The offset into the byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the byte array to use as data.</param>
            <returns>The computed transform.</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Encryption.PkzipClassicDecryptCryptoTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Transforms the specified region of the input byte array and copies 
            the resulting transform to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input for which to compute the transform.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write the transform.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>The number of bytes written.</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Encryption.PkzipClassicDecryptCryptoTransform.Dispose">
            <summary>
            Cleanup internal state.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Encryption.PkzipClassicDecryptCryptoTransform.CanReuseTransform">
            <summary>
            Gets a value indicating whether the current transform can be reused.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Encryption.PkzipClassicDecryptCryptoTransform.InputBlockSize">
            <summary>
            Gets the size of the input data blocks in bytes.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Encryption.PkzipClassicDecryptCryptoTransform.OutputBlockSize">
            <summary>
            Gets the size of the output data blocks in bytes.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Encryption.PkzipClassicDecryptCryptoTransform.CanTransformMultipleBlocks">
            <summary>
            Gets a value indicating whether multiple blocks can be transformed.
            </summary>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Encryption.PkzipClassicManaged">
            <summary>
            Defines a wrapper object to access the Pkzip algorithm. 
            This class cannot be inherited.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Encryption.PkzipClassicManaged.GenerateIV">
            <summary>
            Generate an initial vector.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Encryption.PkzipClassicManaged.GenerateKey">
            <summary>
            Generate a new random key.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Encryption.PkzipClassicManaged.CreateEncryptor(System.Byte[],System.Byte[])">
            <summary>
            Create an encryptor.
            </summary>
            <param name="rgbKey">The key to use for this encryptor.</param>
            <param name="rgbIV">Initialisation vector for the new encryptor.</param>
            <returns>Returns a new PkzipClassic encryptor</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Encryption.PkzipClassicManaged.CreateDecryptor(System.Byte[],System.Byte[])">
            <summary>
            Create a decryptor.
            </summary>
            <param name="rgbKey">Keys to use for this new decryptor.</param>
            <param name="rgbIV">Initialisation vector for the new decryptor.</param>
            <returns>Returns a new decryptor.</returns>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Encryption.PkzipClassicManaged.BlockSize">
            <summary>
            Get / set the applicable block size in bits.
            </summary>
            <remarks>The only valid block size is 8.</remarks>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Encryption.PkzipClassicManaged.LegalKeySizes">
            <summary>
            Get an array of legal <see cref="T:System.Security.Cryptography.KeySizes">key sizes.</see>
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Encryption.PkzipClassicManaged.LegalBlockSizes">
            <summary>
            Get an array of legal <see cref="T:System.Security.Cryptography.KeySizes">block sizes</see>.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Encryption.PkzipClassicManaged.Key">
            <summary>
            Get / set the key value applicable.
            </summary>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Zip.Compression.PendingBuffer">
            <summary>
            This class is general purpose class for writing data to a buffer.
            
            It allows you to write bits as well as bytes
            Based on DeflaterPending.java
            
            author of the original java version : Jochen Hoenicke
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.PendingBuffer.buffer_">
            <summary>
            Internal work buffer
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.PendingBuffer.#ctor">
            <summary>
            construct instance using default buffer size of 4096
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.PendingBuffer.#ctor(System.Int32)">
            <summary>
            construct instance using specified buffer size
            </summary>
            <param name="bufferSize">
            size to use for internal buffer
            </param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.PendingBuffer.Reset">
            <summary>
            Clear internal state/buffers
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.PendingBuffer.WriteByte(System.Int32)">
            <summary>
            Write a byte to buffer
            </summary>
            <param name="value">
            The value to write
            </param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.PendingBuffer.WriteShort(System.Int32)">
            <summary>
            Write a short value to buffer LSB first
            </summary>
            <param name="value">
            The value to write.
            </param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.PendingBuffer.WriteInt(System.Int32)">
            <summary>
            write an integer LSB first
            </summary>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.PendingBuffer.WriteBlock(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Write a block of data to buffer
            </summary>
            <param name="block">data to write</param>
            <param name="offset">offset of first byte to write</param>
            <param name="length">number of bytes to write</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.PendingBuffer.AlignToByte">
            <summary>
            Align internal buffer on a byte boundary
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.PendingBuffer.WriteBits(System.Int32,System.Int32)">
            <summary>
            Write bits to internal buffer
            </summary>
            <param name="b">source of bits</param>
            <param name="count">number of bits to write</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.PendingBuffer.WriteShortMSB(System.Int32)">
            <summary>
            Write a short value to internal buffer most significant byte first
            </summary>
            <param name="s">value to write</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.PendingBuffer.Flush(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Flushes the pending buffer into the given output array.  If the
            output array is to small, only a partial flush is done.
            </summary>
            <param name="output">The output array.</param>
            <param name="offset">The offset into output array.</param>
            <param name="length">The maximum number of bytes to store.</param>
            <returns>The number of bytes flushed.</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.PendingBuffer.ToByteArray">
            <summary>
            Convert internal buffer to byte array.
            Buffer is empty on completion
            </summary>
            <returns>
            The internal buffer contents converted to a byte array.
            </returns>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.Compression.PendingBuffer.BitCount">
            <summary>
            The number of bits written to the buffer
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.Compression.PendingBuffer.IsFlushed">
            <summary>
            Indicates if buffer has been flushed
            </summary>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Zip.Compression.Deflater">
             <summary>
             This is the Deflater class.  The deflater class compresses input
             with the deflate algorithm described in RFC 1951.  It has several
             compression levels and three different strategies described below.
            
             This class is <i>not</i> thread safe.  This is inherent in the API, due
             to the split of deflate and setInput.
             
             author of the original java version : Jochen Hoenicke
             </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.Deflater.BEST_COMPRESSION">
            <summary>
            The best and slowest compression level.  This tries to find very
            long and distant string repetitions.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.Deflater.BEST_SPEED">
            <summary>
            The worst but fastest compression level.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.Deflater.DEFAULT_COMPRESSION">
            <summary>
            The default compression level.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.Deflater.NO_COMPRESSION">
            <summary>
            This level won't compress at all but output uncompressed blocks.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.Deflater.DEFLATED">
            <summary>
            The compression method.  This is the only method supported so far.
            There is no need to use this constant at all.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Deflater.#ctor">
            <summary>
            Creates a new deflater with default compression level.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Deflater.#ctor(System.Int32)">
            <summary>
            Creates a new deflater with given compression level.
            </summary>
            <param name="level">
            the compression level, a value between NO_COMPRESSION
            and BEST_COMPRESSION, or DEFAULT_COMPRESSION.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">if lvl is out of range.</exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Deflater.#ctor(System.Int32,System.Boolean)">
            <summary>
            Creates a new deflater with given compression level.
            </summary>
            <param name="level">
            the compression level, a value between NO_COMPRESSION
            and BEST_COMPRESSION.
            </param>
            <param name="noZlibHeaderOrFooter">
            true, if we should suppress the Zlib/RFC1950 header at the
            beginning and the adler checksum at the end of the output.  This is
            useful for the GZIP/PKZIP formats.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">if lvl is out of range.</exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Deflater.Reset">
            <summary>
            Resets the deflater.  The deflater acts afterwards as if it was
            just created with the same compression level and strategy as it
            had before.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Deflater.Flush">
            <summary>
            Flushes the current input block.  Further calls to deflate() will
            produce enough output to inflate everything in the current input
            block.  This is not part of Sun's JDK so I have made it package
            private.  It is used by DeflaterOutputStream to implement
            flush().
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Deflater.Finish">
            <summary>
            Finishes the deflater with the current input block.  It is an error
            to give more input after this method was called.  This method must
            be called to force all bytes to be flushed.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Deflater.SetInput(System.Byte[])">
            <summary>
            Sets the data which should be compressed next.  This should be only
            called when needsInput indicates that more input is needed.
            If you call setInput when needsInput() returns false, the
            previous input that is still pending will be thrown away.
            The given byte array should not be changed, before needsInput() returns
            true again.
            This call is equivalent to <code>setInput(input, 0, input.length)</code>.
            </summary>
            <param name="input">
            the buffer containing the input data.
            </param>
            <exception cref="T:System.InvalidOperationException">
            if the buffer was finished() or ended().
            </exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Deflater.SetInput(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sets the data which should be compressed next.  This should be
            only called when needsInput indicates that more input is needed.
            The given byte array should not be changed, before needsInput() returns
            true again.
            </summary>
            <param name="input">
            the buffer containing the input data.
            </param>
            <param name="offset">
            the start of the data.
            </param>
            <param name="count">
            the number of data bytes of input.
            </param>
            <exception cref="T:System.InvalidOperationException">
            if the buffer was Finish()ed or if previous input is still pending.
            </exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Deflater.SetLevel(System.Int32)">
            <summary>
            Sets the compression level.  There is no guarantee of the exact
            position of the change, but if you call this when needsInput is
            true the change of compression level will occur somewhere near
            before the end of the so far given input.
            </summary>
            <param name="level">
            the new compression level.
            </param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Deflater.GetLevel">
            <summary>
            Get current compression level
            </summary>
            <returns>Returns the current compression level</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Deflater.SetStrategy(ICSharpCode.SharpZipLib.Zip.Compression.DeflateStrategy)">
            <summary>
            Sets the compression strategy. Strategy is one of
            DEFAULT_STRATEGY, HUFFMAN_ONLY and FILTERED.  For the exact
            position where the strategy is changed, the same as for
            SetLevel() applies.
            </summary>
            <param name="strategy">
            The new compression strategy.
            </param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Deflater.Deflate(System.Byte[])">
            <summary>
            Deflates the current input block with to the given array.
            </summary>
            <param name="output">
            The buffer where compressed data is stored
            </param>
            <returns>
            The number of compressed bytes added to the output, or 0 if either
            IsNeedingInput() or IsFinished returns true or length is zero.
            </returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Deflater.Deflate(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Deflates the current input block to the given array.
            </summary>
            <param name="output">
            Buffer to store the compressed data.
            </param>
            <param name="offset">
            Offset into the output array.
            </param>
            <param name="length">
            The maximum number of bytes that may be stored.
            </param>
            <returns>
            The number of compressed bytes added to the output, or 0 if either
            needsInput() or finished() returns true or length is zero.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            If Finish() was previously called.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If offset or length don't match the array length.
            </exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Deflater.SetDictionary(System.Byte[])">
            <summary>
            Sets the dictionary which should be used in the deflate process.
            This call is equivalent to <code>setDictionary(dict, 0, dict.Length)</code>.
            </summary>
            <param name="dictionary">
            the dictionary.
            </param>
            <exception cref="T:System.InvalidOperationException">
            if SetInput () or Deflate () were already called or another dictionary was already set.
            </exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Deflater.SetDictionary(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sets the dictionary which should be used in the deflate process.
            The dictionary is a byte array containing strings that are
            likely to occur in the data which should be compressed.  The
            dictionary is not stored in the compressed output, only a
            checksum.  To decompress the output you need to supply the same
            dictionary again.
            </summary>
            <param name="dictionary">
            The dictionary data
            </param>
            <param name="index">
            The index where dictionary information commences.
            </param>
            <param name="count">
            The number of bytes in the dictionary.
            </param>
            <exception cref="T:System.InvalidOperationException">
            If SetInput () or Deflate() were already called or another dictionary was already set.
            </exception>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.Deflater.level">
            <summary>
            Compression level.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.Deflater.noZlibHeaderOrFooter">
            <summary>
            If true no Zlib/RFC1950 headers or footers are generated
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.Deflater.state">
            <summary>
            The current state.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.Deflater.totalOut">
            <summary>
            The total bytes of output written.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.Deflater.pending">
            <summary>
            The pending output.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.Deflater.engine">
            <summary>
            The deflater engine.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.Compression.Deflater.Adler">
            <summary>
            Gets the current adler checksum of the data that was processed so far.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.Compression.Deflater.TotalIn">
            <summary>
            Gets the number of input bytes processed so far.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.Compression.Deflater.TotalOut">
            <summary>
            Gets the number of output bytes so far.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.Compression.Deflater.IsFinished">
            <summary>
            Returns true if the stream was finished and no more output bytes
            are available.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.Compression.Deflater.IsNeedingInput">
            <summary>
            Returns true, if the input buffer is empty.
            You should then call setInput(). 
            NOTE: This method can also return true when the stream
            was finished.
            </summary>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Zip.ZipInputStream">
             <summary>
             This is an InflaterInputStream that reads the files baseInputStream an zip archive
             one after another.  It has a special method to get the zip entry of
             the next file.  The zip entry contains information about the file name
             size, compressed size, Crc, etc.
             It includes support for Stored and Deflated entries.
             <br/>
             <br/>Author of the original java version : Jochen Hoenicke
             </summary>
             
             <example> This sample shows how to read a zip file
             <code lang="C#">
             using System;
             using System.Text;
             using System.IO;
             
             using ICSharpCode.SharpZipLib.Zip;
             
             class MainClass
             {
             	public static void Main(string[] args)
             	{
             		using ( ZipInputStream s = new ZipInputStream(File.OpenRead(args[0]))) {
            
             			ZipEntry theEntry;
             			const int size = 2048;
             			byte[] data = new byte[2048];
             			
             			while ((theEntry = s.GetNextEntry()) != null) {
                             if ( entry.IsFile ) {
             				    Console.Write("Show contents (y/n) ?");
             				    if (Console.ReadLine() == "y") {
             				    	while (true) {
             				    		size = s.Read(data, 0, data.Length);
             				    		if (size > 0) {
             				    			Console.Write(new ASCIIEncoding().GetString(data, 0, size));
             				    		} else {
             				    			break;
             				    		}
             				    	}
             				    }
             				}
             			}
             		}
             	}
             }
             </code>
             </example>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.ZipInputStream.internalReader">
            <summary>
            The current reader this instance.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipInputStream.#ctor(System.IO.Stream)">
            <summary>
            Creates a new Zip input stream, for reading a zip archive.
            </summary>
            <param name="baseInputStream">The underlying <see cref="T:System.IO.Stream"/> providing data.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipInputStream.#ctor(System.IO.Stream,System.Int32)">
            <summary>
            Creates a new Zip input stream, for reading a zip archive.
            </summary>
            <param name="baseInputStream">The underlying <see cref="T:System.IO.Stream"/> providing data.</param>
            <param name="bufferSize">Size of the buffer.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipInputStream.GetNextEntry">
            <summary>
            Advances to the next entry in the archive
            </summary>
            <returns>
            The next <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipEntry">entry</see> in the archive or null if there are no more entries.
            </returns>
            <remarks>
            If the previous entry is still open <see cref="M:ICSharpCode.SharpZipLib.Zip.ZipInputStream.CloseEntry">CloseEntry</see> is called.
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            Input stream is closed
            </exception>
            <exception cref="T:ICSharpCode.SharpZipLib.Zip.ZipException">
            Password is not set, password is invalid, compression method is invalid,
            version required to extract is not supported
            </exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipInputStream.ReadDataDescriptor">
            <summary>
            Read data descriptor at the end of compressed data. 
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipInputStream.CompleteCloseEntry(System.Boolean)">
            <summary>
            Complete cleanup as the final part of closing.
            </summary>
            <param name="testCrc">True if the crc value should be tested</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipInputStream.CloseEntry">
            <summary>
            Closes the current zip entry and moves to the next one.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            The stream is closed
            </exception>
            <exception cref="T:ICSharpCode.SharpZipLib.Zip.ZipException">
            The Zip stream ends early
            </exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipInputStream.ReadByte">
            <summary>
            Reads a byte from the current zip entry.
            </summary>
            <returns>
            The byte or -1 if end of stream is reached.
            </returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipInputStream.ReadingNotAvailable(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Handle attempts to read by throwing an <see cref="T:System.InvalidOperationException"/>.
            </summary>
            <param name="destination">The destination array to store data in.</param>
            <param name="offset">The offset at which data read should be stored.</param>
            <param name="count">The maximum number of bytes to read.</param>
            <returns>Returns the number of bytes actually read.</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipInputStream.ReadingNotSupported(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Handle attempts to read from this entry by throwing an exception
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipInputStream.InitialRead(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Perform the initial read on an entry which may include 
            reading encryption headers and setting up inflation.
            </summary>
            <param name="destination">The destination to fill with data read.</param>
            <param name="offset">The offset to start reading at.</param>
            <param name="count">The maximum number of bytes to read.</param>
            <returns>The actual number of bytes read.</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipInputStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Read a block of bytes from the stream.
            </summary>
            <param name="buffer">The destination for the bytes.</param>
            <param name="offset">The index to start storing data.</param>
            <param name="count">The number of bytes to attempt to read.</param>
            <returns>Returns the number of bytes read.</returns>
            <remarks>Zero bytes read means end of stream.</remarks>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipInputStream.BodyRead(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a block of bytes from the current zip entry.
            </summary>
            <returns>
            The number of bytes read (this may be less than the length requested, even before the end of stream), or 0 on end of stream.
            </returns>
            <exception name="IOException">
            An i/o error occured.
            </exception>
            <exception cref="T:ICSharpCode.SharpZipLib.Zip.ZipException">
            The deflated stream is corrupted.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The stream is not open.
            </exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipInputStream.Close">
            <summary>
            Closes the zip input stream
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipInputStream.Password">
            <summary>
            Optional password used for encryption when non-null
            </summary>
            <value>A password for all encrypted <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipEntry">entries </see> in this <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipInputStream"/></value>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipInputStream.CanDecompressEntry">
            <summary>
            Gets a value indicating if there is a current entry and it can be decompressed
            </summary>
            <remarks>
            The entry can only be decompressed if the library supports the zip features required to extract it.
            See the <see cref="P:ICSharpCode.SharpZipLib.Zip.ZipEntry.Version">ZipEntry Version</see> property for more details.
            </remarks>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipInputStream.Available">
            <summary>
            Returns 1 if there is an entry available
            Otherwise returns 0.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipInputStream.Length">
            <summary>
            Returns the current size that can be read from the current entry if available
            </summary>
            <exception cref="T:ICSharpCode.SharpZipLib.Zip.ZipException">Thrown if the entry size is not known.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if no entry is currently available.</exception>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Zip.ZipInputStream.ReadDataHandler">
            <summary>
            Delegate for reading bytes from a stream. 
            </summary>
        </member>
        <member name="T:Top.Api.Domain.TmcProduceResult">
            <summary>
            TmcProduceResult Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TmcProduceResult.ErrorCode">
            <summary>
            错误码
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TmcProduceResult.ErrorMessage">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TmcProduceResult.IsSuccess">
            <summary>
            是否成功
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaCampaignsGetResponse">
            <summary>
            SimbaCampaignsGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaCampaignsGetResponse.Campaigns">
            <summary>
            推广计划列表
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaCampaignAreaoptionsGetResponse">
            <summary>
            SimbaCampaignAreaoptionsGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaCampaignAreaoptionsGetResponse.AreaOptions">
            <summary>
            推广计划所有可设置的投放地域
            </summary>
        </member>
        <member name="T:Top.Api.Response.SubuserDepartmentsGetResponse">
            <summary>
            SubuserDepartmentsGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SubuserDepartmentsGetResponse.Departments">
            <summary>
            部门信息
            </summary>
        </member>
        <member name="T:Top.Api.Response.SubuserDutyUpdateResponse">
            <summary>
            SubuserDutyUpdateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SubuserDutyUpdateResponse.IsSuccess">
            <summary>
            操作是否成功 true:操作成功; false:操作失败
            </summary>
        </member>
        <member name="T:Top.Api.Response.TmallProductSpecsTicketGetResponse">
            <summary>
            TmallProductSpecsTicketGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallProductSpecsTicketGetResponse.Tickets">
            <summary>
            产品规格审核单信息
            </summary>
        </member>
        <member name="T:Top.Api.Response.ItemSkuDeleteResponse">
            <summary>
            ItemSkuDeleteResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ItemSkuDeleteResponse.Sku">
            <summary>
            Sku结构
            </summary>
        </member>
        <member name="T:Top.Api.Response.TopSdkFeedbackUploadResponse">
            <summary>
            TopSdkFeedbackUploadResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TopSdkFeedbackUploadResponse.UploadInterval">
            <summary>
            控制回传间隔（单位：秒）
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaRtrptCustGetResponse">
            <summary>
            SimbaRtrptCustGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaRtrptCustGetResponse.Results">
            <summary>
            11
            </summary>
        </member>
        <member name="T:Top.Api.Response.SellercenterSubusersGetResponse">
            <summary>
            SellercenterSubusersGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SellercenterSubusersGetResponse.Subusers">
            <summary>
            子账号基本信息列表。具体信息为id、子账号用户名、主账号id、主账号昵称、当前状态值、是否分流
            </summary>
        </member>
        <member name="T:Top.Api.Response.LogisticsCompaniesGetResponse">
            <summary>
            LogisticsCompaniesGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.LogisticsCompaniesGetResponse.LogisticsCompanies">
            <summary>
            物流公司信息。返回的LogisticCompany包含的具体信息为入参fields请求的字段信息。
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaRptDemographicbaseGetResponse">
            <summary>
            SimbaRptDemographicbaseGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaRptDemographicbaseGetResponse.RptDemographicBase">
            <summary>
            非搜索推广计划基础数据对象
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaCatmatchidsDeletedGetResponse">
            <summary>
            SimbaCatmatchidsDeletedGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaCatmatchidsDeletedGetResponse.DeletedCatmatchIds">
            <summary>
            类目出价ID列表
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaNonsearchAdgroupplacesGetResponse">
            <summary>
            SimbaNonsearchAdgroupplacesGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaNonsearchAdgroupplacesGetResponse.AdgroupPlaceList">
            <summary>
            推广组定向推广位置关系列表
            </summary>
        </member>
        <member name="T:Top.Api.Response.TradePostageUpdateResponse">
            <summary>
            TradePostageUpdateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TradePostageUpdateResponse.Trade">
            <summary>
            返回trade类型，其中包含修改时间modified，修改邮费post_fee，修改后的总费用total_fee和买家实付款payment
            </summary>
        </member>
        <member name="T:Top.Api.Response.WangwangEserviceEvaluationGetResponse">
            <summary>
            WangwangEserviceEvaluationGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.WangwangEserviceEvaluationGetResponse.StaffEvalStatOnDays">
            <summary>
            客服平均统计列表
            </summary>
        </member>
        <member name="T:Top.Api.Response.TmallBrandcatControlGetResponse">
            <summary>
            TmallBrandcatControlGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallBrandcatControlGetResponse.BrandCatControlInfo">
            <summary>
            被管控的类目和品牌信息。如何判断一个产品是否被管控，是去品牌的信息和类目信息做一个交集。
            </summary>
        </member>
        <member name="T:Top.Api.Response.TradeCloseResponse">
            <summary>
            TradeCloseResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TradeCloseResponse.Trade">
            <summary>
            关闭交易时返回的Trade信息，可用字段有tid和modified
            </summary>
        </member>
        <member name="T:Top.Api.Response.ShopcatsListGetResponse">
            <summary>
            ShopcatsListGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ShopcatsListGetResponse.ShopCats">
            <summary>
            店铺类目列表信息
            </summary>
        </member>
        <member name="T:Top.Api.Response.TradeAmountGetResponse">
            <summary>
            TradeAmountGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TradeAmountGetResponse.TradeAmount">
            <summary>
            主订单的财务信息详情
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaRptAdgroupcreativebaseGetResponse">
            <summary>
            SimbaRptAdgroupcreativebaseGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaRptAdgroupcreativebaseGetResponse.RptAdgroupcreativeBaseList">
            <summary>
            推广组下的创意基础数据列表
            </summary>
        </member>
        <member name="T:Top.Api.Response.ItemUpdateDelistingResponse">
            <summary>
            ItemUpdateDelistingResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ItemUpdateDelistingResponse.Item">
            <summary>
            返回商品更新信息：返回的结果是:num_iid和modified
            </summary>
        </member>
        <member name="T:Top.Api.Response.ItemPropimgUploadResponse">
            <summary>
            ItemPropimgUploadResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ItemPropimgUploadResponse.PropImg">
            <summary>
            PropImg属性图片结构
            </summary>
        </member>
        <member name="T:Top.Api.Request.UmpPromotionGetRequest">
            <summary>
            TOP API: taobao.ump.promotion.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.UmpPromotionGetRequest.ChannelKey">
            <summary>
            渠道来源，第三方站点
            </summary>
        </member>
        <member name="P:Top.Api.Request.UmpPromotionGetRequest.ItemId">
            <summary>
            商品id
            </summary>
        </member>
        <member name="T:Top.Api.Request.TmallItemDapeiTemplateUpdateRequest">
            <summary>
            TOP API: tmall.item.dapei.template.update
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemDapeiTemplateUpdateRequest.Desc">
            <summary>
            搭配推荐描述
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemDapeiTemplateUpdateRequest.Id">
            <summary>
            模板ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemDapeiTemplateUpdateRequest.Items">
            <summary>
            2-4个商品
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemDapeiTemplateUpdateRequest.Title">
            <summary>
            搭配名称
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemDapeiTemplateUpdateRequest.Url">
            <summary>
            模特图片
            </summary>
        </member>
        <member name="T:Top.Api.Request.TmallItemDapeiTemplateUpdateRequest.DapeiItemDomain">
            <summary>
            DapeiItemDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemDapeiTemplateUpdateRequest.DapeiItemDomain.Img">
            <summary>
            指定的商品图片
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemDapeiTemplateUpdateRequest.DapeiItemDomain.ItemId">
            <summary>
            商品ID
            </summary>
        </member>
        <member name="T:Top.Api.Request.TmallItemDapeiTemplateAddRequest">
            <summary>
            TOP API: tmall.item.dapei.template.add
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemDapeiTemplateAddRequest.Desc">
            <summary>
            搭配推荐描述
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemDapeiTemplateAddRequest.Items">
            <summary>
            2-4个商品
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemDapeiTemplateAddRequest.Title">
            <summary>
            搭配名称
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemDapeiTemplateAddRequest.Url">
            <summary>
            模特图片
            </summary>
        </member>
        <member name="T:Top.Api.Request.TmallItemDapeiTemplateAddRequest.DapeiItemDomain">
            <summary>
            DapeiItemDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemDapeiTemplateAddRequest.DapeiItemDomain.Img">
            <summary>
            指定的商品图片
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemDapeiTemplateAddRequest.DapeiItemDomain.ItemId">
            <summary>
            商品ID
            </summary>
        </member>
        <member name="T:Top.Api.Request.ShoprecommendShopsGetRequest">
            <summary>
            TOP API: taobao.shoprecommend.shops.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.ShoprecommendShopsGetRequest.Count">
            <summary>
            请求个数，建议获取16个
            </summary>
        </member>
        <member name="P:Top.Api.Request.ShoprecommendShopsGetRequest.Ext">
            <summary>
            额外参数
            </summary>
        </member>
        <member name="P:Top.Api.Request.ShoprecommendShopsGetRequest.RecommendType">
            <summary>
            请求类型，1：关联店铺推荐。其他值当非法值处理
            </summary>
        </member>
        <member name="P:Top.Api.Request.ShoprecommendShopsGetRequest.SellerId">
            <summary>
            传入卖家ID
            </summary>
        </member>
        <member name="T:Top.Api.Request.TmallItemAddSchemaGetRequest">
            <summary>
            TOP API: tmall.item.add.schema.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemAddSchemaGetRequest.CategoryId">
            <summary>
            商品发布的目标类目，必须是叶子类目
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemAddSchemaGetRequest.IsvInit">
            <summary>
            正常接口调用时，请忽略这个参数或者填FALSE。这个参数提供给ISV对接Schema时，如果想先获取了解所有字段和规则，可以将此字段设置为true，product_id也就不需要提供了，设置为0即可
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemAddSchemaGetRequest.ProductId">
            <summary>
            商品发布的目标product_id
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemAddSchemaGetRequest.Type">
            <summary>
            发布商品类型，一口价填“b”，拍卖填"a"
            </summary>
        </member>
        <member name="T:Top.Api.Request.TmallProductSchemaAddRequest">
            <summary>
            TOP API: tmall.product.schema.add
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallProductSchemaAddRequest.BrandId">
            <summary>
            品牌ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallProductSchemaAddRequest.CategoryId">
            <summary>
            商品发布的目标类目，必须是叶子类目
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallProductSchemaAddRequest.XmlData">
            <summary>
            根据tmall.product.add.schema.get生成的产品发布规则入参数据
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaAdgroupChangedcatmatchsGetRequest">
            <summary>
            TOP API: taobao.simba.adgroup.changedcatmatchs.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupChangedcatmatchsGetRequest.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupChangedcatmatchsGetRequest.PageNo">
            <summary>
            返回的第几页数据，默认为1
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupChangedcatmatchsGetRequest.PageSize">
            <summary>
            返回的每页数据量大小,默认200最大1000
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupChangedcatmatchsGetRequest.StartTime">
            <summary>
            得到此时间点之后的数据，不能大于一个月
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaAdgroupCampcatmatchsGetRequest">
            <summary>
            TOP API: taobao.simba.adgroup.campcatmatchs.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupCampcatmatchsGetRequest.CampaignId">
            <summary>
            推广计划Id
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupCampcatmatchsGetRequest.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupCampcatmatchsGetRequest.PageNo">
            <summary>
            页码，从1开始
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupCampcatmatchsGetRequest.PageSize">
            <summary>
            页尺寸，最大200
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaAdgroupAdgroupcatmatchsGetRequest">
            <summary>
            TOP API: taobao.simba.adgroup.adgroupcatmatchs.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupAdgroupcatmatchsGetRequest.AdgroupIds">
            <summary>
            推广组Id列表
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupAdgroupcatmatchsGetRequest.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaRptTargetingtageffectGetRequest">
            <summary>
            TOP API: taobao.simba.rpt.targetingtageffect.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptTargetingtageffectGetRequest.AdgroupId">
            <summary>
            推广组id
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptTargetingtageffectGetRequest.CampaignId">
            <summary>
            计划id
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptTargetingtageffectGetRequest.EndTime">
            <summary>
            终止时间
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptTargetingtageffectGetRequest.Nick">
            <summary>
            被操作者昵称
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptTargetingtageffectGetRequest.PageNumber">
            <summary>
            页码
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptTargetingtageffectGetRequest.PageSize">
            <summary>
            页面大小
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptTargetingtageffectGetRequest.StartTime">
            <summary>
            起始时间
            </summary>
        </member>
        <member name="T:Top.Api.Request.TicketItemUpdateRequest">
            <summary>
            TOP API: taobao.ticket.item.update
            </summary>
        </member>
        <member name="P:Top.Api.Request.TicketItemUpdateRequest.AuctionPoint">
            <summary>
            门票商品返点比例（只对B卖家开放，单位为%）
            </summary>
        </member>
        <member name="P:Top.Api.Request.TicketItemUpdateRequest.AuctionStatus">
            <summary>
            门票商品状态（onsale：上架，instock：仓库）
            </summary>
        </member>
        <member name="P:Top.Api.Request.TicketItemUpdateRequest.CheckToolMerchant">
            <summary>
            核销机具提供商  注意：老接口发布的商品，第一次使用该接口修改时需要设置该值
            </summary>
        </member>
        <member name="P:Top.Api.Request.TicketItemUpdateRequest.City">
            <summary>
            门票商品所在地-城市
            </summary>
        </member>
        <member name="P:Top.Api.Request.TicketItemUpdateRequest.Description">
            <summary>
            门票宝贝描述
            </summary>
        </member>
        <member name="P:Top.Api.Request.TicketItemUpdateRequest.EtcAssociationStatus">
            <summary>
            门票商品电子凭证是否关联本地商户-在门票商品为电子凭证时必选
            </summary>
        </member>
        <member name="P:Top.Api.Request.TicketItemUpdateRequest.EtcAutoRefund">
            <summary>
            门票商品电子凭证的自动退款比例-在门票商品为电子凭证时必选
            </summary>
        </member>
        <member name="P:Top.Api.Request.TicketItemUpdateRequest.EtcMerchantId">
            <summary>
            门票商品电子凭证的码商-在门票商品为电子凭证时必选
            </summary>
        </member>
        <member name="P:Top.Api.Request.TicketItemUpdateRequest.EtcMerchantNick">
            <summary>
            门票商品电子凭证的码商名-在门票商品为电子凭证时必选
            </summary>
        </member>
        <member name="P:Top.Api.Request.TicketItemUpdateRequest.EtcNetworkId">
            <summary>
            门票商品电子凭证网店ID-在门票商品为电子凭证时必选
            </summary>
        </member>
        <member name="P:Top.Api.Request.TicketItemUpdateRequest.EtcOverduePay">
            <summary>
            门票商品电子凭证的过期退款比例-在门票商品为电子凭证时必选
            </summary>
        </member>
        <member name="P:Top.Api.Request.TicketItemUpdateRequest.EtcVerificationPay">
            <summary>
            门票商品电子凭证是否核销打款-在门票商品为电子凭证时必选
            </summary>
        </member>
        <member name="P:Top.Api.Request.TicketItemUpdateRequest.HaveInvoice">
            <summary>
            门票商品是否有发票（有发票：true，没有发票：false）.  对于B卖家来说只能选择有发票。
            </summary>
        </member>
        <member name="P:Top.Api.Request.TicketItemUpdateRequest.Image1">
            <summary>
            商品主图-该值来自图片空间接口返回的图片链接（不包含域名和前缀）
            </summary>
        </member>
        <member name="P:Top.Api.Request.TicketItemUpdateRequest.Image2">
            <summary>
            第一张多图-该值来自图片空间接口返回的图片链接（不包含域名和前缀）
            </summary>
        </member>
        <member name="P:Top.Api.Request.TicketItemUpdateRequest.Image3">
            <summary>
            第二张多图-该值来自图片空间接口返回的图片链接（不包含域名和前缀）
            </summary>
        </member>
        <member name="P:Top.Api.Request.TicketItemUpdateRequest.Image4">
            <summary>
            第三张多图-该值来自图片空间接口返回的图片链接（不包含域名和前缀）
            </summary>
        </member>
        <member name="P:Top.Api.Request.TicketItemUpdateRequest.Image5">
            <summary>
            第四张多图-该值来自图片空间接口返回的图片链接（不包含域名和前缀）
            </summary>
        </member>
        <member name="P:Top.Api.Request.TicketItemUpdateRequest.ItemId">
            <summary>
            需要更新的门票商品标识（只支持门票二期商品）
            </summary>
        </member>
        <member name="P:Top.Api.Request.TicketItemUpdateRequest.ListTime">
            <summary>
            门票商品的上架时间（精确到分，格式为：yyyy-MM-dd HH:mm）
            </summary>
        </member>
        <member name="P:Top.Api.Request.TicketItemUpdateRequest.PostageId">
            <summary>
            门票商品的物流运费模板-在产品规格使用到物流时必选
            </summary>
        </member>
        <!-- 对于成员“P:Top.Api.Request.TicketItemUpdateRequest.ProductId”忽略有格式错误的 XML 注释 -->
        <member name="P:Top.Api.Request.TicketItemUpdateRequest.PromotedStatus">
            <summary>
            门票商品是否橱窗推荐（橱窗推荐；true，不推荐则可不用设置该值）
            </summary>
        </member>
        <member name="P:Top.Api.Request.TicketItemUpdateRequest.Prov">
            <summary>
            门票商品所在地-省份
            </summary>
        </member>
        <member name="P:Top.Api.Request.TicketItemUpdateRequest.RemoveFields">
            <summary>
            需要删除的字段列表
            </summary>
        </member>
        <member name="P:Top.Api.Request.TicketItemUpdateRequest.SellerCsPhone">
            <summary>
            卖家客服电话  注意：老接口发布的商品，第一次使用该接口修改时需要设置该值
            </summary>
        </member>
        <member name="P:Top.Api.Request.TicketItemUpdateRequest.ShopCats">
            <summary>
            门票宝贝所属的店铺分类列表-店铺分类标识请使用店铺相关接口获取获取，多个店铺分类标识之间通过逗号进行分隔，最多包含10个分类标识
            </summary>
        </member>
        <!-- 对于成员“P:Top.Api.Request.TicketItemUpdateRequest.Skus”忽略有格式错误的 XML 注释 -->
        <member name="P:Top.Api.Request.TicketItemUpdateRequest.SubStockAtBuy">
            <summary>
            门票商品库存技术方式（拍下减库存：true，付款减库存：false）
            </summary>
        </member>
        <member name="P:Top.Api.Request.TicketItemUpdateRequest.Title">
            <summary>
            门票商品标题
            </summary>
        </member>
        <member name="P:Top.Api.Request.TicketItemUpdateRequest.VideoId">
            <summary>
            门票商品视频-视频标识由多媒体中相关接口获取
            </summary>
        </member>
        <member name="P:Top.Api.Request.TicketItemUpdateRequest.VipPromoted">
            <summary>
            门票商品是否参与店铺会员打折
            </summary>
        </member>
        <member name="T:Top.Api.Request.JushitaJdpTasksGetRequest">
            <summary>
            TOP API: taobao.jushita.jdp.tasks.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.JushitaJdpTasksGetRequest.FetchNum">
            <summary>
            最大可返回的任务数量
            </summary>
        </member>
        <member name="P:Top.Api.Request.JushitaJdpTasksGetRequest.TargetAppkey">
            <summary>
            普通isv不能传入此参数
            </summary>
        </member>
        <member name="P:Top.Api.Request.JushitaJdpTasksGetRequest.TaskItemNum">
            <summary>
            任务分组数量，表示把所有任务平均分成x组，在线订购应用此参数必传；非在线订购应用此参数忽略。
            </summary>
        </member>
        <!-- 对于成员“P:Top.Api.Request.JushitaJdpTasksGetRequest.TaskItems”忽略有格式错误的 XML 注释 -->
        <member name="P:Top.Api.Request.JushitaJdpTasksGetRequest.Type">
            <summary>
            任务类型
            </summary>
        </member>
        <member name="P:Top.Api.Request.JushitaJdpTasksGetRequest.UserIds">
            <summary>
            需要查询哪些用户的任务，非在线订购应用此参数必传；在线订购应用此参数忽略。
            </summary>
        </member>
        <member name="T:Top.Api.Request.TmallBrandcatPropinputGetRequest">
            <summary>
            TOP API: tmall.brandcat.propinput.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallBrandcatPropinputGetRequest.BrandId">
            <summary>
            品牌ID，如果类目没有品牌，指定null
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallBrandcatPropinputGetRequest.Cid">
            <summary>
            类目ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallBrandcatPropinputGetRequest.Pid">
            <summary>
            属性ID，如果属性有子属性，请指定最后一级子属性ID，tmall.brandcat.propinput.get返回的即为的该属性ID对应的输入特征，对于有子属性模板的情况指定顶级属性ID即可
            </summary>
        </member>
        <member name="T:Top.Api.Request.ItemRecommendDeleteRequest">
            <summary>
            TOP API: taobao.item.recommend.delete
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemRecommendDeleteRequest.NumIid">
            <summary>
            商品数字ID，该参数必须
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaNonsearchAdgroupplacesGetRequest">
            <summary>
            TOP API: taobao.simba.nonsearch.adgroupplaces.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaNonsearchAdgroupplacesGetRequest.AdgroupIds">
            <summary>
            推广组ID数组
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaNonsearchAdgroupplacesGetRequest.CampaignId">
            <summary>
            推广计划ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaNonsearchAdgroupplacesGetRequest.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="T:Top.Api.Request.DeliveryTemplateAddRequest">
            <summary>
            TOP API: taobao.delivery.template.add
            </summary>
        </member>
        <!-- 对于成员“P:Top.Api.Request.DeliveryTemplateAddRequest.Assumer”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“P:Top.Api.Request.DeliveryTemplateAddRequest.ConsignAreaId”忽略有格式错误的 XML 注释 -->
        <member name="P:Top.Api.Request.DeliveryTemplateAddRequest.Name">
            <summary>
            运费模板的名称，长度不能超过50个字节
            </summary>
        </member>
        <!-- 对于成员“P:Top.Api.Request.DeliveryTemplateAddRequest.TemplateAddFees”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“P:Top.Api.Request.DeliveryTemplateAddRequest.TemplateAddStandards”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“P:Top.Api.Request.DeliveryTemplateAddRequest.TemplateDests”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“P:Top.Api.Request.DeliveryTemplateAddRequest.TemplateStartFees”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“P:Top.Api.Request.DeliveryTemplateAddRequest.TemplateStartStandards”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“P:Top.Api.Request.DeliveryTemplateAddRequest.TemplateTypes”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“P:Top.Api.Request.DeliveryTemplateAddRequest.Valuation”忽略有格式错误的 XML 注释 -->
        <member name="T:Top.Api.Request.TmallItemSizemappingTemplateDeleteRequest">
            <summary>
            TOP API: tmall.item.sizemapping.template.delete
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemSizemappingTemplateDeleteRequest.TemplateId">
            <summary>
            尺码表模板ID
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaRptAdgroupkeywordbaseGetRequest">
            <summary>
            TOP API: taobao.simba.rpt.adgroupkeywordbase.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptAdgroupkeywordbaseGetRequest.AdgroupId">
            <summary>
            推广组ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptAdgroupkeywordbaseGetRequest.CampaignId">
            <summary>
            推广计划ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptAdgroupkeywordbaseGetRequest.EndTime">
            <summary>
            结束时间，格式yyyy-mm-dd，开始时间结束时间间隔不能超过30天
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptAdgroupkeywordbaseGetRequest.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptAdgroupkeywordbaseGetRequest.PageNo">
            <summary>
            页码
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptAdgroupkeywordbaseGetRequest.PageSize">
            <summary>
            每页大小
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptAdgroupkeywordbaseGetRequest.SearchType">
            <summary>
            报表类型（搜索：SEARCH,类目出价：CAT, 定向投放：NOSEARCH）可多选例如：SEARCH,CAT
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptAdgroupkeywordbaseGetRequest.Source">
            <summary>
            数据来源（PC站内：1，PC站外：2，无线站内：4，无线站外 : 5，汇总：SUMMARY）SUMMARY必须单选，其他值可多选例如1,2
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptAdgroupkeywordbaseGetRequest.StartTime">
            <summary>
            开始时间，格式yyyy-mm-dd
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptAdgroupkeywordbaseGetRequest.SubwayToken">
            <summary>
            权限校验参数
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaRptCampaignbaseGetRequest">
            <summary>
            TOP API: taobao.simba.rpt.campaignbase.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptCampaignbaseGetRequest.CampaignId">
            <summary>
            推广计划id
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptCampaignbaseGetRequest.EndTime">
            <summary>
            结束时间，格式yyyy-mm-dd
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptCampaignbaseGetRequest.Nick">
            <summary>
            昵称
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptCampaignbaseGetRequest.PageNo">
            <summary>
            页码
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptCampaignbaseGetRequest.PageSize">
            <summary>
            每页大小
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptCampaignbaseGetRequest.SearchType">
            <summary>
            报表类型（搜索：SEARCH,类目出价：CAT, 定向投放：NOSEARCH 全部：ALL）可以一次取多个例如：SEARCH,CAT
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptCampaignbaseGetRequest.Source">
            <summary>
            数据来源（站内：1，站外：2）可多选以逗号分隔，默认值为：1,2
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptCampaignbaseGetRequest.StartTime">
            <summary>
            开始时间，格式yyyy-mm-dd
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptCampaignbaseGetRequest.SubwayToken">
            <summary>
            权限校验参数
            </summary>
        </member>
        <member name="T:Top.Api.Request.ItemAnchorGetRequest">
            <summary>
            TOP API: taobao.item.anchor.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAnchorGetRequest.CatId">
            <summary>
            对应类目编号
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAnchorGetRequest.Type">
            <summary>
            宝贝模板类型是人工打标还是自动打标：人工打标为1，自动打标为0.人工和自动打标为-1.
            </summary>
        </member>
        <member name="T:Top.Api.Domain.StaffEvalStatById">
            <summary>
            StaffEvalStatById Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.StaffEvalStatById.Evaluations">
            <summary>
            客服评价
            </summary>
        </member>
        <member name="P:Top.Api.Domain.StaffEvalStatById.ServiceStaffId">
            <summary>
            客服人员ID
            </summary>
        </member>
        <member name="T:Top.Api.Domain.Coupon">
            <summary>
            Coupon Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Coupon.Condition">
            <summary>
            订单满多少分才能用这个优惠券，501就是满501分能使用。注意：返回的是“分”，不是“元”
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Coupon.CouponId">
            <summary>
            优惠券ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Coupon.CreatTime">
            <summary>
            优惠券创建时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Coupon.CreateChannel">
            <summary>
            优惠券的创建渠道，自己创建/他人创建
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Coupon.Denominations">
            <summary>
            优惠券的面值，返回的是“分”，不是“元”，500代表500分相当于5元
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Coupon.EndTime">
            <summary>
            优惠券的截止日期
            </summary>
        </member>
        <member name="T:Top.Api.Domain.Refund">
            <summary>
            Refund Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Refund.Address">
            <summary>
            卖家收货地址
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Refund.AdvanceStatus">
            <summary>
            退款先行垫付默认的未申请状态 0;退款先行垫付申请中  1;退款先行垫付，垫付完成 2;退款先行垫付，卖家拒绝收货 3;退款先行垫付，垫付关闭 4;退款先行垫付，垫付分账成功 5;
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Refund.AlipayNo">
            <summary>
            支付宝交易号
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Refund.Attribute">
            <summary>
            退款扩展属性
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Refund.BuyerNick">
            <summary>
            买家昵称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Refund.CompanyName">
            <summary>
            物流公司名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Refund.Created">
            <summary>
            退款申请时间。格式:yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Refund.CsStatus">
            <summary>
            不需客服介入1;需要客服介入2;客服已经介入3;客服初审完成 4;客服主管复审失败5;客服处理完成6;
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Refund.Desc">
            <summary>
            退款说明
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Refund.GoodReturnTime">
            <summary>
            退货时间。格式:yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Refund.GoodStatus">
            <summary>
            货物状态。可选值BUYER_NOT_RECEIVED (买家未收到货) BUYER_RECEIVED (买家已收到货) BUYER_RETURNED_GOODS (买家已退货)
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Refund.HasGoodReturn">
            <summary>
            买家是否需要退货。可选值:true(是),false(否)
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Refund.Iid">
            <summary>
            申请退款的商品字符串编号(注意：iid近期即将废弃，请用num_iid参数)
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Refund.Modified">
            <summary>
            更新时间。格式:yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Refund.Num">
            <summary>
            商品购买数量
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Refund.NumIid">
            <summary>
            申请退款的商品数字编号
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Refund.Oid">
            <summary>
            子订单号。如果是单笔交易oid会等于tid
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Refund.OperationContraint">
            <summary>
            退款约束，可选值：cannot_refuse（不允许操作），refund_onweb（需要到网页版操作）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Refund.OrderStatus">
            <summary>
            退款对应的订单交易状态。可选值TRADE_NO_CREATE_PAY(没有创建支付宝交易) WAIT_BUYER_PAY(等待买家付款) WAIT_SELLER_SEND_GOODS(等待卖家发货,即:买家已付款) WAIT_BUYER_CONFIRM_GOODS(等待买家确认收货,即:卖家已发货) TRADE_BUYER_SIGNED(买家已签收,货到付款专用) TRADE_FINISHED(交易成功) TRADE_CLOSED(交易关闭) TRADE_CLOSED_BY_TAOBAO(交易被淘宝关闭) ALL_WAIT_PAY(包含：WAIT_BUYER_PAY、TRADE_NO_CREATE_PAY) ALL_CLOSED(包含：TRADE_CLOSED、TRADE_CLOSED_BY_TAOBAO) 取自"http://open.taobao.com/dev/index.php/%E4%BA%A4%E6%98%93%E7%8A%B6%E6%80%81"
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Refund.OuterId">
            <summary>
            商品外部商家编码
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Refund.Payment">
            <summary>
            支付给卖家的金额(交易总金额-退还给买家的金额)。精确到2位小数;单位:元。如:200.07，表示:200元7分
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Refund.Price">
            <summary>
            商品价格。精确到2位小数;单位:元。如:200.07，表示:200元7分
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Refund.Reason">
            <summary>
            退款原因
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Refund.RefundFee">
            <summary>
            退还金额(退还给买家的金额)。精确到2位小数;单位:元。如:200.07，表示:200元7分
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Refund.RefundId">
            <summary>
            退款单号
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Refund.RefundPhase">
            <summary>
            退款阶段，可选值：onsale/aftersale
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Refund.RefundRemindTimeout">
            <summary>
            退款超时结构RefundRemindTimeout
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Refund.RefundVersion">
            <summary>
            退款版本号（时间戳）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Refund.SellerNick">
            <summary>
            卖家昵称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Refund.ShippingType">
            <summary>
            物流方式.可选值:free(卖家包邮),post(平邮),express(快递),ems(EMS).
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Refund.Sid">
            <summary>
            退货运单号
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Refund.Sku">
            <summary>
            商品SKU信息
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Refund.SkuInfo">
            <summary>
            商品SKU信息
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Refund.SplitSellerFee">
            <summary>
            分账给卖家的钱
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Refund.SplitTaobaoFee">
            <summary>
            分账给淘宝的钱
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Refund.Status">
            <summary>
            退款状态。可选值WAIT_SELLER_AGREE(买家已经申请退款，等待卖家同意) WAIT_BUYER_RETURN_GOODS(卖家已经同意退款，等待买家退货) WAIT_SELLER_CONFIRM_GOODS(买家已经退货，等待卖家确认收货) SELLER_REFUSE_BUYER(卖家拒绝退款) CLOSED(退款关闭) SUCCESS(退款成功)
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Refund.Tid">
            <summary>
            淘宝交易单号
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Refund.Title">
            <summary>
            商品标题
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Refund.TotalFee">
            <summary>
            交易总金额。精确到2位小数;单位:元。如:200.07，表示:200元7分
            </summary>
        </member>
        <member name="T:Top.Api.Domain.Duty">
            <summary>
            Duty Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Duty.DutyId">
            <summary>
            职务ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Duty.DutyLevel">
            <summary>
            职务级别
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Duty.DutyName">
            <summary>
            职务名称
            </summary>
        </member>
        <member name="T:Top.Api.Domain.TopResultCode">
            <summary>
            TopResultCode Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TopResultCode.Code">
            <summary>
            code
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TopResultCode.Msg">
            <summary>
            描述
            </summary>
        </member>
        <member name="T:Top.Api.Domain.SkusDeliveryTime">
            <summary>
            SkusDeliveryTime Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SkusDeliveryTime.SkuDeliveryTime">
            <summary>
            sku时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SkusDeliveryTime.SkuId">
            <summary>
            商品skuId
            </summary>
        </member>
        <member name="T:Top.Api.Domain.PropertyInputDO">
            <summary>
            PropertyInputDO Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PropertyInputDO.IsAllowInput">
            <summary>
            property_id对应的属性是否可输入
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PropertyInputDO.IsRootAllowInput">
            <summary>
            如果property_id对应的属性是子属性，is_root_allow_input标识该子属性的顶级父属性是否可输入。否则is_root_allow_input和is_allow_input  值是一样的。目前只有品牌会出现父属性不可输入，子属性可输入的情况
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PropertyInputDO.IsSubProperty">
            <summary>
            property_id对应的属性是不是子属性
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PropertyInputDO.PropertyId">
            <summary>
            属性ID
            </summary>
        </member>
        <member name="T:Top.Api.Domain.LimitDiscount">
            <summary>
            LimitDiscount Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.LimitDiscount.EndTime">
            <summary>
            限时打折结束时间。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.LimitDiscount.ItemNum">
            <summary>
            该限时打折宝贝数量。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.LimitDiscount.LimitDiscountId">
            <summary>
            限时打折ID。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.LimitDiscount.LimitDiscountName">
            <summary>
            限时打折名称。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.LimitDiscount.StartTime">
            <summary>
            限时打折开始时间。
            </summary>
        </member>
        <member name="T:Top.Api.Domain.ItemTemplate">
            <summary>
            ItemTemplate Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ItemTemplate.ShopType">
            <summary>
            用于区分宝贝模板属于内店和外店
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ItemTemplate.TemplateId">
            <summary>
            宝贝模板的id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ItemTemplate.TemplateName">
            <summary>
            宝贝详情模板的名称
            </summary>
        </member>
        <member name="T:Top.Api.Domain.CreativeRecord">
            <summary>
            CreativeRecord Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.CreativeRecord.AuditDesc">
            <summary>
            审核拒绝原因描述
            </summary>
        </member>
        <member name="P:Top.Api.Domain.CreativeRecord.AuditStatus">
            <summary>
            审核状态： audit_wait-待审核；audit_pass-审核通过(上线)；audit_reject-审核拒绝；默认为audit_pass。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.CreativeRecord.CreateTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.CreativeRecord.CreativeId">
            <summary>
            关键词id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.CreativeRecord.ImgUrl">
            <summary>
            创意图片地址，必须是推广组对应商品的图片之一
            </summary>
        </member>
        <member name="P:Top.Api.Domain.CreativeRecord.ModifiedTime">
            <summary>
            系统记录最后修改时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.CreativeRecord.ModifyTime">
            <summary>
            创意被修改的时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.CreativeRecord.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.CreativeRecord.OldImgUrl">
            <summary>
            修改前创意图片地址
            </summary>
        </member>
        <member name="P:Top.Api.Domain.CreativeRecord.OldTitle">
            <summary>
            修改前创意标题
            </summary>
        </member>
        <member name="P:Top.Api.Domain.CreativeRecord.Title">
            <summary>
            创意标题，最多20个汉字
            </summary>
        </member>
        <member name="T:Top.Api.Domain.RefundRemindTimeout">
            <summary>
            RefundRemindTimeout Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RefundRemindTimeout.ExistTimeout">
            <summary>
            是否存在超时。可选值:true(是),false(否)
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RefundRemindTimeout.RemindType">
            <summary>
            提醒的类型（退款详情中提示信息的类型）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RefundRemindTimeout.Timeout">
            <summary>
            超时时间。格式:yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="T:Top.Api.Domain.ArticleSub">
            <summary>
            ArticleSub Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ArticleSub.ArticleCode">
            <summary>
            应用收费代码，从合作伙伴后台（my.open.taobao.com）-收费管理-收费项目列表 能够获得该应用的收费代码
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ArticleSub.ArticleName">
            <summary>
            应用名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ArticleSub.Autosub">
            <summary>
            是否自动续费
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ArticleSub.Deadline">
            <summary>
            订购关系到期时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ArticleSub.ExpireNotice">
            <summary>
            是否到期提醒
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ArticleSub.ItemCode">
            <summary>
            收费项目代码，从合作伙伴后台（my.open.taobao.com）-收费管理-收费项目列表 能够获得收费项目代码
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ArticleSub.ItemName">
            <summary>
            收费项目名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ArticleSub.Nick">
            <summary>
            淘宝会员名
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ArticleSub.Status">
            <summary>
            状态，1=有效 2=过期
            </summary>
        </member>
        <member name="T:Top.Api.TopException">
            <summary>
            TOP客户端异常。
            </summary>
        </member>
        <member name="T:Qimen.Api.IQimenClient">
            <summary>
            奇门客户端。
            </summary>
        </member>
        <member name="M:Qimen.Api.IQimenClient.Execute``1(Qimen.Api.QimenRequest{``0})">
            <summary>
            执行奇门公开API请求。
            </summary>
            <typeparam name="T">领域对象</typeparam>
            <param name="request">具体的奇门API请求</param>
            <returns>领域对象</returns>
        </member>
        <member name="M:Qimen.Api.IQimenClient.Execute``1(Qimen.Api.QimenRequest{``0},System.String)">
            <summary>
            执行奇门隐私API请求。
            </summary>
            <typeparam name="T">领域对象</typeparam>
            <param name="request">具体的奇门API请求</param>
            <param name="session">用户会话码</param>
            <returns>领域对象</returns>
        </member>
        <member name="T:Top.Api.Util.FileItem">
            <summary>
            文件元数据。
            可以使用以下几种构造方法：
            本地路径：new FileItem("C:/temp.jpg");
            本地文件：new FileItem(new FileInfo("C:/temp.jpg"));
            字节数组：new FileItem("abc.jpg", bytes);
            输入流：new FileItem("abc.jpg", stream);
            </summary>
        </member>
        <member name="M:Top.Api.Util.FileItem.#ctor(System.IO.FileInfo)">
            <summary>
            基于本地文件的构造器。
            </summary>
            <param name="fileInfo">本地文件</param>
        </member>
        <member name="M:Top.Api.Util.FileItem.#ctor(System.String)">
            <summary>
            基于本地文件全路径的构造器。
            </summary>
            <param name="filePath">本地文件全路径</param>
        </member>
        <member name="M:Top.Api.Util.FileItem.#ctor(System.String,System.Byte[])">
            <summary>
            基于文件名和字节数组的构造器。
            </summary>
            <param name="fileName">文件名称（服务端持久化字节数组到磁盘时的文件名）</param>
            <param name="content">文件字节数组</param>
        </member>
        <member name="M:Top.Api.Util.FileItem.#ctor(System.String,System.Byte[],System.String)">
            <summary>
            基于文件名、字节数组和媒体类型的构造器。
            </summary>
            <param name="fileName">文件名（服务端持久化字节数组到磁盘时的文件名）</param>
            <param name="content">文件字字节数组</param>
            <param name="mimeType">媒体类型</param>
        </member>
        <member name="M:Top.Api.Util.FileItem.#ctor(System.String,System.IO.Stream)">
            <summary>
            基于文件名和输入流的构造器。
            </summary>
            <param name="fileName">文件名称（服务端持久化输入流到磁盘时的文件名）</param>
            <param name="content">文件输入流</param>
        </member>
        <member name="M:Top.Api.Util.FileItem.#ctor(System.String,System.IO.Stream,System.String)">
            <summary>
            基于文件名、输入流和媒体类型的构造器。
            </summary>
            <param name="fileName">文件名（服务端持久化输入流到磁盘时的文件名）</param>
            <param name="content">文件输入流</param>
            <param name="mimeType">媒体类型</param>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerCreativeFindBindResponse">
            <summary>
            ZuanshiBannerCreativeFindBindResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindBindResponse.Result">
            <summary>
            返回数据
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerCreativeFindBindResponse.ReasonDomain">
            <summary>
            ReasonDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindBindResponse.ReasonDomain.AuditReasonId">
            <summary>
            原因id
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindBindResponse.ReasonDomain.AuditReasonName">
            <summary>
            原因名称
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindBindResponse.ReasonDomain.FlawUrls">
            <summary>
            原因对应的链接
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindBindResponse.ReasonDomain.RedirectUrl">
            <summary>
            截图
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerCreativeFindBindResponse.BlockReasonDomain">
            <summary>
            BlockReasonDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindBindResponse.BlockReasonDomain.BlockId">
            <summary>
            位置id
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindBindResponse.BlockReasonDomain.BlockName">
            <summary>
            位置名称
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindBindResponse.BlockReasonDomain.BlockUrl">
            <summary>
            位置对应的链接
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindBindResponse.BlockReasonDomain.Reasons">
            <summary>
            reasonDTOs
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerCreativeFindBindResponse.CreativeSizeDomain">
            <summary>
            CreativeSizeDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindBindResponse.CreativeSizeDomain.Height">
            <summary>
            高
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindBindResponse.CreativeSizeDomain.Width">
            <summary>
            宽
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerCreativeFindBindResponse.SubCreativeDomain">
            <summary>
            SubCreativeDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindBindResponse.SubCreativeDomain.CreativeId">
            <summary>
            创意ID
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindBindResponse.SubCreativeDomain.CreativeSize">
            <summary>
            创意尺寸
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindBindResponse.SubCreativeDomain.ImgPath">
            <summary>
            图片地址
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindBindResponse.SubCreativeDomain.StandardCreativeId">
            <summary>
            标尺创意ID
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerCreativeFindBindResponse.MaterialDomain">
            <summary>
            MaterialDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindBindResponse.MaterialDomain.Content">
            <summary>
            素材内容
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindBindResponse.MaterialDomain.Format">
            <summary>
            素材类型
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindBindResponse.MaterialDomain.MaterialSize">
            <summary>
            素材尺寸
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerCreativeFindBindResponse.CreativeDomain">
            <summary>
            CreativeDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindBindResponse.CreativeDomain.AuditStatus">
            <summary>
            待审核：-4,-1,0，审核通过：1，审核拒绝：-2,-5,-9
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindBindResponse.CreativeDomain.AuditTime">
            <summary>
            审核时间
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindBindResponse.CreativeDomain.BlockReasons">
            <summary>
            审核拒绝原因
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindBindResponse.CreativeDomain.CatId">
            <summary>
            类目id
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindBindResponse.CreativeDomain.CatName">
            <summary>
            类目名称
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindBindResponse.CreativeDomain.ClickUrl">
            <summary>
            点击链接
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindBindResponse.CreativeDomain.CreateTime">
            <summary>
            gmtCreate
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindBindResponse.CreativeDomain.CreativeLevel">
            <summary>
            创意等级
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindBindResponse.CreativeDomain.CreativeSize">
            <summary>
            创意尺寸
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindBindResponse.CreativeDomain.ExpireTime">
            <summary>
            expireTime
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindBindResponse.CreativeDomain.Format">
            <summary>
            创意格式
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindBindResponse.CreativeDomain.Id">
            <summary>
            创意ID
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindBindResponse.CreativeDomain.ImagePath">
            <summary>
            图片地址
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindBindResponse.CreativeDomain.Materials">
            <summary>
            创意对应的素材
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindBindResponse.CreativeDomain.ModifiedTime">
            <summary>
            gmtModified
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindBindResponse.CreativeDomain.MultiMaterial">
            <summary>
            是否支持多个素材 1：支持 0：不支持
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindBindResponse.CreativeDomain.Name">
            <summary>
            创意名称
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindBindResponse.CreativeDomain.PackageType">
            <summary>
            0：非标尺创意，1：标尺创意，2：创意包
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindBindResponse.CreativeDomain.SubCreatives">
            <summary>
            标尺创意裂变后的创意
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindBindResponse.CreativeDomain.TxtValue">
            <summary>
            文字链创意内容
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerCreativeFindBindResponse.ResultDomain">
            <summary>
            ResultDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindBindResponse.ResultDomain.Creatives">
            <summary>
            数据结果
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindBindResponse.ResultDomain.Message">
            <summary>
            错误时候，返回错误信息
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindBindResponse.ResultDomain.Success">
            <summary>
            true：调用成功，false：调用失败
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindBindResponse.ResultDomain.TotalCount">
            <summary>
            创意总数
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAdvertiserCreativeRptsDayGetResponse">
            <summary>
            ZuanshiAdvertiserCreativeRptsDayGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRptsDayGetResponse.CreativeOfflineRptDaysList">
            <summary>
            结果
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAdvertiserCreativeRptsDayGetResponse.DataDomain">
            <summary>
            DataDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRptsDayGetResponse.DataDomain.AdPv">
            <summary>
            展现数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRptsDayGetResponse.DataDomain.AdgroupId">
            <summary>
            推广单元id
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRptsDayGetResponse.DataDomain.AdgroupName">
            <summary>
            推广单元名称
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRptsDayGetResponse.DataDomain.AlipayInShopNum">
            <summary>
            成交量
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRptsDayGetResponse.DataDomain.AlipayInshopAmt">
            <summary>
            成交额
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRptsDayGetResponse.DataDomain.AvgAccessPageNum">
            <summary>
            平均访问页面数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRptsDayGetResponse.DataDomain.AvgAccessTime">
            <summary>
            平均访问时长
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRptsDayGetResponse.DataDomain.CampaignId">
            <summary>
            计划id
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRptsDayGetResponse.DataDomain.CampaignName">
            <summary>
            计划名称
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRptsDayGetResponse.DataDomain.CartNum">
            <summary>
            加购物车数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRptsDayGetResponse.DataDomain.Charge">
            <summary>
            花费
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRptsDayGetResponse.DataDomain.Click">
            <summary>
            点击数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRptsDayGetResponse.DataDomain.CreativeId">
            <summary>
            创意id
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRptsDayGetResponse.DataDomain.CreativeName">
            <summary>
            创意名称
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRptsDayGetResponse.DataDomain.Ctr">
            <summary>
            ctr
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRptsDayGetResponse.DataDomain.Cvr">
            <summary>
            cvr
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRptsDayGetResponse.DataDomain.DeepInshopUv">
            <summary>
            深度进店uv
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRptsDayGetResponse.DataDomain.DirShopColNum">
            <summary>
            店铺收藏量
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRptsDayGetResponse.DataDomain.Ecpc">
            <summary>
            ecpc
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRptsDayGetResponse.DataDomain.Ecpm">
            <summary>
            ecpm
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRptsDayGetResponse.DataDomain.GmvInshopAmt">
            <summary>
            gmv成交额
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRptsDayGetResponse.DataDomain.GmvInshopNum">
            <summary>
            gmv成交量
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRptsDayGetResponse.DataDomain.InshopItemColNum">
            <summary>
            宝贝收藏量
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRptsDayGetResponse.DataDomain.LogDate">
            <summary>
            日期
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRptsDayGetResponse.DataDomain.Roi">
            <summary>
            roi
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRptsDayGetResponse.DataDomain.Uv">
            <summary>
            uv
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAdvertiserAdzoneRptsDayGetResponse">
            <summary>
            ZuanshiAdvertiserAdzoneRptsDayGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRptsDayGetResponse.AdzoneOfflineRptDaysList">
            <summary>
            结果
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAdvertiserAdzoneRptsDayGetResponse.DataDomain">
            <summary>
            DataDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRptsDayGetResponse.DataDomain.AdPv">
            <summary>
            展现量
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRptsDayGetResponse.DataDomain.AdgroupId">
            <summary>
            单元id
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRptsDayGetResponse.DataDomain.AdgroupName">
            <summary>
            单元名称
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRptsDayGetResponse.DataDomain.AdzoneId">
            <summary>
            资源位id
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRptsDayGetResponse.DataDomain.AdzoneName">
            <summary>
            资源位名称
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRptsDayGetResponse.DataDomain.AlipayInShopNum">
            <summary>
            成交数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRptsDayGetResponse.DataDomain.AlipayInshopAmt">
            <summary>
            成交额
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRptsDayGetResponse.DataDomain.AvgAccessPageNum">
            <summary>
            平均访问页面数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRptsDayGetResponse.DataDomain.AvgAccessTime">
            <summary>
            平均访问时长
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRptsDayGetResponse.DataDomain.CampaignId">
            <summary>
            计划id
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRptsDayGetResponse.DataDomain.CampaignName">
            <summary>
            计划名称
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRptsDayGetResponse.DataDomain.CartNum">
            <summary>
            加购物车数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRptsDayGetResponse.DataDomain.Charge">
            <summary>
            花费
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRptsDayGetResponse.DataDomain.Click">
            <summary>
            点击量
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRptsDayGetResponse.DataDomain.Ctr">
            <summary>
            ctr
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRptsDayGetResponse.DataDomain.Cvr">
            <summary>
            cvr
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRptsDayGetResponse.DataDomain.DeepInshopUv">
            <summary>
            深度进店uv
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRptsDayGetResponse.DataDomain.DirShopColNum">
            <summary>
            店铺收藏数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRptsDayGetResponse.DataDomain.Ecpc">
            <summary>
            ecpc
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRptsDayGetResponse.DataDomain.Ecpm">
            <summary>
            ecpm
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRptsDayGetResponse.DataDomain.GmvInshopAmt">
            <summary>
            gmv成交额
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRptsDayGetResponse.DataDomain.GmvInshopNum">
            <summary>
            gmv成交数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRptsDayGetResponse.DataDomain.InshopItemColNum">
            <summary>
            宝贝收藏数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRptsDayGetResponse.DataDomain.LogDate">
            <summary>
            日期
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRptsDayGetResponse.DataDomain.Roi">
            <summary>
            roi
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRptsDayGetResponse.DataDomain.Uv">
            <summary>
            uv
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAdvertiserAdboardRptsDownloadResponse">
            <summary>
            ZuanshiAdvertiserAdboardRptsDownloadResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdboardRptsDownloadResponse.TaskId">
            <summary>
            生成的任务id标识，用于轮询任务状态
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAdvertiserAccountRtrptsGetResponse">
            <summary>
            ZuanshiAdvertiserAccountRtrptsGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAccountRtrptsGetResponse.AdvertiserRealtimeRptList">
            <summary>
            返回值
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAdvertiserAccountRtrptsGetResponse.DataDomain">
            <summary>
            DataDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAccountRtrptsGetResponse.DataDomain.AdPv">
            <summary>
            展现量
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAccountRtrptsGetResponse.DataDomain.Charge">
            <summary>
            消耗，单位元
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAccountRtrptsGetResponse.DataDomain.Click">
            <summary>
            点击量
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAccountRtrptsGetResponse.DataDomain.Ctr">
            <summary>
            点击率，click/ad_pv，小数点后保留四位，没有乘100%
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAccountRtrptsGetResponse.DataDomain.Ecpc">
            <summary>
            点击单价
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAccountRtrptsGetResponse.DataDomain.Ecpm">
            <summary>
            千次展现成本
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAccountRtrptsGetResponse.DataDomain.HourId">
            <summary>
            小时数，取值范围0-23。
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAccountRtrptsGetResponse.DataDomain.LogDate">
            <summary>
            日期
            </summary>
        </member>
        <member name="T:Top.Api.Response.TmcAuthGetResponse">
            <summary>
            TmcAuthGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmcAuthGetResponse.Result">
            <summary>
            result
            </summary>
        </member>
        <member name="T:Top.Api.Response.OpenimTribeSetmembernickResponse">
            <summary>
            OpenimTribeSetmembernickResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.OpenimTribeSetmembernickResponse.TribeCode">
            <summary>
            是否成功
            </summary>
        </member>
        <member name="T:Top.Api.Response.OpenimSnfilterwordSetfilterResponse">
            <summary>
            OpenimSnfilterwordSetfilterResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.OpenimSnfilterwordSetfilterResponse.Errid">
            <summary>
            成功
            </summary>
        </member>
        <member name="P:Top.Api.Response.OpenimSnfilterwordSetfilterResponse.Errmsg">
            <summary>
            错误原因
            </summary>
        </member>
        <member name="T:Top.Api.Response.FenxiaoProductGradepriceGetResponse">
            <summary>
            FenxiaoProductGradepriceGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoProductGradepriceGetResponse.GradeDiscounts">
            <summary>
            等级折扣列表
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoProductGradepriceGetResponse.IsSuccess">
            <summary>
            操作是否成功
            </summary>
        </member>
        <member name="T:Top.Api.Response.FenxiaoProductAddResponse">
            <summary>
            FenxiaoProductAddResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoProductAddResponse.Created">
            <summary>
            产品创建时间 时间格式：yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoProductAddResponse.Pid">
            <summary>
            产品ID
            </summary>
        </member>
        <member name="T:Top.Api.Response.FenxiaoDistributorsGetResponse">
            <summary>
            FenxiaoDistributorsGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoDistributorsGetResponse.Distributors">
            <summary>
            分销商详细信息
            </summary>
        </member>
        <member name="T:Top.Api.Response.DmpCrowdsFindResponse">
            <summary>
            DmpCrowdsFindResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.DmpCrowdsFindResponse.Result">
            <summary>
            返回结果对象
            </summary>
        </member>
        <member name="T:Top.Api.Response.DmpCrowdsFindResponse.SelectTagOptionDTODomain">
            <summary>
            SelectTagOptionDTODomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.DmpCrowdsFindResponse.SelectTagOptionDTODomain.Names">
            <summary>
            标签选项名称（已废弃，请使用标签查询接口获取选项名称）
            </summary>
        </member>
        <member name="P:Top.Api.Response.DmpCrowdsFindResponse.SelectTagOptionDTODomain.OptionGroupId">
            <summary>
            标签选项分组ID
            </summary>
        </member>
        <member name="P:Top.Api.Response.DmpCrowdsFindResponse.SelectTagOptionDTODomain.TagId">
            <summary>
            标签ID
            </summary>
        </member>
        <member name="P:Top.Api.Response.DmpCrowdsFindResponse.SelectTagOptionDTODomain.TagName">
            <summary>
            标签名称
            </summary>
        </member>
        <member name="P:Top.Api.Response.DmpCrowdsFindResponse.SelectTagOptionDTODomain.Values">
            <summary>
            选项取值
            </summary>
        </member>
        <member name="T:Top.Api.Response.DmpCrowdsFindResponse.SelectTagOptionSetDTODomain">
            <summary>
            SelectTagOptionSetDTODomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.DmpCrowdsFindResponse.SelectTagOptionSetDTODomain.Selects">
            <summary>
            标签组合
            </summary>
        </member>
        <member name="T:Top.Api.Response.DmpCrowdsFindResponse.CrowdDTODomain">
            <summary>
            CrowdDTODomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.DmpCrowdsFindResponse.CrowdDTODomain.Coverage">
            <summary>
            覆盖人数
            </summary>
        </member>
        <member name="P:Top.Api.Response.DmpCrowdsFindResponse.CrowdDTODomain.Createtime">
            <summary>
            更新时间
            </summary>
        </member>
        <member name="P:Top.Api.Response.DmpCrowdsFindResponse.CrowdDTODomain.CrowdId">
            <summary>
            人群ID
            </summary>
        </member>
        <member name="P:Top.Api.Response.DmpCrowdsFindResponse.CrowdDTODomain.CrowdName">
            <summary>
            人群名称
            </summary>
        </member>
        <member name="P:Top.Api.Response.DmpCrowdsFindResponse.CrowdDTODomain.EnableTime">
            <summary>
            人群生效时间
            </summary>
        </member>
        <member name="P:Top.Api.Response.DmpCrowdsFindResponse.CrowdDTODomain.FullStatus">
            <summary>
            2-过期失效, 11-同步中, 12-已同步
            </summary>
        </member>
        <member name="P:Top.Api.Response.DmpCrowdsFindResponse.CrowdDTODomain.SelectTagOptionSetDTO">
            <summary>
            标签组合
            </summary>
        </member>
        <member name="P:Top.Api.Response.DmpCrowdsFindResponse.CrowdDTODomain.Updatetime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Top.Api.Response.DmpCrowdsFindResponse.CrowdDTODomain.ValidDate">
            <summary>
            人群过期时间
            </summary>
        </member>
        <member name="T:Top.Api.Response.DmpCrowdsFindResponse.ResultDTODomain">
            <summary>
            ResultDTODomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.DmpCrowdsFindResponse.ResultDTODomain.Msg">
            <summary>
            调用消息
            </summary>
        </member>
        <member name="P:Top.Api.Response.DmpCrowdsFindResponse.ResultDTODomain.Results">
            <summary>
            1
            </summary>
        </member>
        <member name="P:Top.Api.Response.DmpCrowdsFindResponse.ResultDTODomain.Success">
            <summary>
            调用是否成功
            </summary>
        </member>
        <member name="T:Top.Api.Response.AplatformWeakgetResponse">
            <summary>
            AplatformWeakgetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.AplatformWeakgetResponse.Result">
            <summary>
            result
            </summary>
        </member>
        <member name="T:Top.Api.Response.AplatformWeakgetResponse.ResultDomain">
            <summary>
            ResultDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.AplatformWeakgetResponse.ResultDomain.BizExtMap">
            <summary>
            bizExtMap
            </summary>
        </member>
        <member name="P:Top.Api.Response.AplatformWeakgetResponse.ResultDomain.Headers">
            <summary>
            headers
            </summary>
        </member>
        <member name="P:Top.Api.Response.AplatformWeakgetResponse.ResultDomain.HttpStatusCode">
            <summary>
            httpStatusCode
            </summary>
        </member>
        <member name="P:Top.Api.Response.AplatformWeakgetResponse.ResultDomain.Model">
            <summary>
            model
            </summary>
        </member>
        <member name="P:Top.Api.Response.AplatformWeakgetResponse.ResultDomain.MsgCode">
            <summary>
            msgCode
            </summary>
        </member>
        <member name="P:Top.Api.Response.AplatformWeakgetResponse.ResultDomain.MsgInfo">
            <summary>
            msgInfo
            </summary>
        </member>
        <member name="P:Top.Api.Response.AplatformWeakgetResponse.ResultDomain.Success">
            <summary>
            success
            </summary>
        </member>
        <member name="T:Top.Api.Response.AlipayXiaodaiUserPermitResponse">
            <summary>
            AlipayXiaodaiUserPermitResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.AlipayXiaodaiUserPermitResponse.IsSuccess">
            <summary>
            是否成功
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiBannerCrowdDeleteRequest">
            <summary>
            TOP API: taobao.zuanshi.banner.crowd.delete
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCrowdDeleteRequest.AdgroupId">
            <summary>
            单元ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCrowdDeleteRequest.CampaignId">
            <summary>
            计划ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCrowdDeleteRequest.Crowds">
            <summary>
            定向信息
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiBannerCrowdDeleteRequest.CrowdDTODomain">
            <summary>
            CrowdDTODomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCrowdDeleteRequest.CrowdDTODomain.CrowdId">
            <summary>
            定向ID，根据find接口查询而来
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiBannerCreativeFindBindRequest">
            <summary>
            TOP API: taobao.zuanshi.banner.creative.find.bind
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCreativeFindBindRequest.AdgroupId">
            <summary>
            单元ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCreativeFindBindRequest.AuditStatusList">
            <summary>
            待审核：-4,-1,0，审核通过：1，审核拒绝：-2,-5,-9
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCreativeFindBindRequest.CampaignId">
            <summary>
            计划ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCreativeFindBindRequest.CreativeLevel">
            <summary>
            创意等级,1：一级，2：二级，3：三级，4：四级，10：十级，99：未分级
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCreativeFindBindRequest.FormatList">
            <summary>
            图片：2，flash：3，视频：4，文字链：5，Flash不遮盖：9，模板：10，
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCreativeFindBindRequest.Name">
            <summary>
            创意名称
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCreativeFindBindRequest.PageNum">
            <summary>
            当前页码
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCreativeFindBindRequest.PageSize">
            <summary>
            分页大小
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCreativeFindBindRequest.SizeList">
            <summary>
            创意尺寸
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiBannerCampaignDeleteRequest">
            <summary>
            TOP API: taobao.zuanshi.banner.campaign.delete
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCampaignDeleteRequest.CampaignIdList">
            <summary>
            计划ID
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiBannerAdzoneFindpageRequest">
            <summary>
            TOP API: taobao.zuanshi.banner.adzone.findpage
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerAdzoneFindpageRequest.AdzoneIdList">
            <summary>
            广告位id列表
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerAdzoneFindpageRequest.AdzoneName">
            <summary>
            广告位名称
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerAdzoneFindpageRequest.AdzoneSizeList">
            <summary>
            广告位尺寸列表
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerAdzoneFindpageRequest.AdzoneType">
            <summary>
            广告位类型，1表示广告位，2表示广告位包
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerAdzoneFindpageRequest.AllowAdFormatList">
            <summary>
            允许的创意类型
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerAdzoneFindpageRequest.MediaTypeList">
            <summary>
            媒体类型列表
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerAdzoneFindpageRequest.PageNum">
            <summary>
            页码
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerAdzoneFindpageRequest.PageSize">
            <summary>
            分页每页条数，最大限制50条
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerAdzoneFindpageRequest.SettleTypeList">
            <summary>
            结算类型，1表示CPM 2表示CPC
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiAdvertiserCampaignRtrptsTotalGetRequest">
            <summary>
            TOP API: taobao.zuanshi.advertiser.campaign.rtrpts.total.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserCampaignRtrptsTotalGetRequest.CampaignId">
            <summary>
            计划id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserCampaignRtrptsTotalGetRequest.CampaignModel">
            <summary>
            计划类型。1：全店推广，4：单品推广。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserCampaignRtrptsTotalGetRequest.LogDate">
            <summary>
            日期
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserCampaignRtrptsTotalGetRequest.Offset">
            <summary>
            偏移量
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserCampaignRtrptsTotalGetRequest.PageSize">
            <summary>
            每页记录数
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiAdvertiserAccountRptsTotalGetRequest">
            <summary>
            TOP API: taobao.zuanshi.advertiser.account.rpts.total.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAccountRptsTotalGetRequest.CampaignModel">
            <summary>
            计划类型。1：全店推广；4单品推广。不传返回账户整体数据
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAccountRptsTotalGetRequest.Effect">
            <summary>
            效果周期，取值范围：3,7,15。分别表示效果转化周期-3天/7天/15天。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAccountRptsTotalGetRequest.EffectType">
            <summary>
            效果类型。“impression”：展现效果；“click”：点击效果
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAccountRptsTotalGetRequest.EndTime">
            <summary>
            结束日期
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAccountRptsTotalGetRequest.StartTime">
            <summary>
            开始日期
            </summary>
        </member>
        <member name="T:Top.Api.Request.TmcGroupsGetRequest">
            <summary>
            TOP API: taobao.tmc.groups.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmcGroupsGetRequest.GroupNames">
            <summary>
            要查询分组的名称，多个分组用半角逗号分隔，不传代表查询所有分组信息，但不会返回组下面的用户信息。如果应用没有设置分组则返回空。组名不能以default开头，default开头是系统默认的组。
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmcGroupsGetRequest.PageNo">
            <summary>
            页码
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmcGroupsGetRequest.PageSize">
            <summary>
            每页返回多少个分组
            </summary>
        </member>
        <member name="T:Top.Api.Request.OpenimTribeSendmsgRequest">
            <summary>
            TOP API: taobao.openim.tribe.sendmsg
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimTribeSendmsgRequest.Msg">
            <summary>
            发送群消息
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimTribeSendmsgRequest.TribeId">
            <summary>
            群id
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimTribeSendmsgRequest.User">
            <summary>
            群消息发送者，只有该群的成员才可以发送群消息
            </summary>
        </member>
        <member name="T:Top.Api.Request.OpenimTribeSendmsgRequest.UserDomain">
            <summary>
            UserDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimTribeSendmsgRequest.UserDomain.Appkey">
            <summary>
            用户所属appkey
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimTribeSendmsgRequest.UserDomain.TaobaoAccount">
            <summary>
            是否是淘宝账号
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimTribeSendmsgRequest.UserDomain.Uid">
            <summary>
            用户id
            </summary>
        </member>
        <member name="T:Top.Api.Request.OpenimTribeSendmsgRequest.TribeMsgDomain">
            <summary>
            TribeMsgDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimTribeSendmsgRequest.TribeMsgDomain.AtFlag">
            <summary>
            是否是at消息， 0表示不是at消息，1表示at指定的用户，2表示at群里所有人
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimTribeSendmsgRequest.TribeMsgDomain.Atmembers">
            <summary>
            当at_flag=1时，必须指定at的用户
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimTribeSendmsgRequest.TribeMsgDomain.CustomPush">
            <summary>
            自定义push提醒参数，格式为json字符串，该参数为空时，采用系统默认的push；设置该参数时，json字符串必选包含至少包含指定的三个key，"d", "sound", "title"
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimTribeSendmsgRequest.TribeMsgDomain.MediaAttrs">
            <summary>
            格式为json字符串， 当消息类型为图片或语音时该参数为必选项，用于描述图片，语音的属性； 该参数json格式必须符合msg_type的要求；当消息类型为图片时，格式必须符合如下样例 ： {“height”：10, "width":10, "type":"jpg"}，当前支持3三种图片类型，gif, jpg,jpeg； 当消息类型为语音时，必须符合如下样例：{“playtime”:10,”type”:”amr”}，语音的type只支持arm
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimTribeSendmsgRequest.TribeMsgDomain.MsgContent">
            <summary>
            文本消息最大长度是4K，图片最大为500K。消息内容格式根据type确定。当type为文本时，内容为文本字符串；当类型为图片或语音时，内容为图片和语音的二进制base64编码生成的字符串；当类型为自定义消息时，内容必须为就送字符串格式，该字符串必须包含header字符，即{"header":{"summary":},...}
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimTribeSendmsgRequest.TribeMsgDomain.MsgType">
            <summary>
            消息类型，目前支持四中类型的消息； msg_type=0 表示普通文本消息； msg_type=2 表示语音消息； msg_type = 16表示图片消息； msg_type=17表示用户自定义消息
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimTribeSendmsgRequest.TribeMsgDomain.Push">
            <summary>
            该消息是否需要push
            </summary>
        </member>
        <member name="T:Top.Api.Request.OpenimTribeQuitRequest">
            <summary>
            TOP API: taobao.openim.tribe.quit
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimTribeQuitRequest.TribeId">
            <summary>
            群id
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimTribeQuitRequest.User">
            <summary>
            用户信息
            </summary>
        </member>
        <member name="T:Top.Api.Request.OpenimTribeInviteRequest">
            <summary>
            TOP API: taobao.openim.tribe.invite
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimTribeInviteRequest.Members">
            <summary>
            用户信息
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimTribeInviteRequest.TribeId">
            <summary>
            群id
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimTribeInviteRequest.User">
            <summary>
            用户信息
            </summary>
        </member>
        <member name="T:Top.Api.Request.OpenimChatlogsGetRequest">
            <summary>
            TOP API: taobao.openim.chatlogs.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimChatlogsGetRequest.Begin">
            <summary>
            查询开始时间（UTC时间）
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimChatlogsGetRequest.Count">
            <summary>
            查询条数
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimChatlogsGetRequest.End">
            <summary>
            查询结束时间（UTC时间）
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimChatlogsGetRequest.NextKey">
            <summary>
            迭代key
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimChatlogsGetRequest.User1">
            <summary>
            用户1信息
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimChatlogsGetRequest.User2">
            <summary>
            用户2信息
            </summary>
        </member>
        <member name="T:Top.Api.Request.InventoryWarehouseManageRequest">
            <summary>
            TOP API: taobao.inventory.warehouse.manage
            </summary>
        </member>
        <member name="P:Top.Api.Request.InventoryWarehouseManageRequest.WareHouseDto">
            <summary>
            仓库信息
            </summary>
        </member>
        <member name="T:Top.Api.Request.InventoryWarehouseManageRequest.WareHouseDtoDomain">
            <summary>
            WareHouseDtoDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Request.InventoryWarehouseManageRequest.WareHouseDtoDomain.Address">
            <summary>
            详细地址描述
            </summary>
        </member>
        <member name="P:Top.Api.Request.InventoryWarehouseManageRequest.WareHouseDtoDomain.AddressAreaName">
            <summary>
            仓库地址信息,格式 :省~市~区县
            </summary>
        </member>
        <member name="P:Top.Api.Request.InventoryWarehouseManageRequest.WareHouseDtoDomain.AliasName">
            <summary>
            别名
            </summary>
        </member>
        <member name="P:Top.Api.Request.InventoryWarehouseManageRequest.WareHouseDtoDomain.Contact">
            <summary>
            联系人
            </summary>
        </member>
        <member name="P:Top.Api.Request.InventoryWarehouseManageRequest.WareHouseDtoDomain.OperateType">
            <summary>
            操作类型，新增:ADD;修改:UPDATE
            </summary>
        </member>
        <member name="P:Top.Api.Request.InventoryWarehouseManageRequest.WareHouseDtoDomain.Phone">
            <summary>
            电话号码
            </summary>
        </member>
        <member name="P:Top.Api.Request.InventoryWarehouseManageRequest.WareHouseDtoDomain.PostCode">
            <summary>
            邮编
            </summary>
        </member>
        <member name="P:Top.Api.Request.InventoryWarehouseManageRequest.WareHouseDtoDomain.StoreCode">
            <summary>
            仓库编码，仅允许使用字母、数字、下划线，并且在6-30个字符内
            </summary>
        </member>
        <member name="P:Top.Api.Request.InventoryWarehouseManageRequest.WareHouseDtoDomain.StoreName">
            <summary>
            仓库名称
            </summary>
        </member>
        <member name="T:Top.Api.Request.FenxiaoProductsGetRequest">
            <summary>
            TOP API: taobao.fenxiao.products.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductsGetRequest.EndModified">
            <summary>
            结束修改时间
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductsGetRequest.Fields">
            <summary>
            指定查询额外的信息，可选值：skus（sku数据）、images（多图），多个可选值用逗号分割。
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductsGetRequest.IsAuthz">
            <summary>
            查询产品列表时，查询入参“是否需要授权”  yes:需要授权   no:不需要授权
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductsGetRequest.ItemIds">
            <summary>
            可根据导入的商品ID列表查询，优先级次于产品ID、sku_numbers，高于其他分页查询条件。最大限制20，用逗号分割，例如：“1001,1002,1003,1004,1005”
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductsGetRequest.OuterId">
            <summary>
            商家编码
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductsGetRequest.PageNo">
            <summary>
            页码（大于0的整数，默认1）
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductsGetRequest.PageSize">
            <summary>
            每页记录数（默认20，最大50）
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductsGetRequest.Pids">
            <summary>
            产品ID列表（最大限制30），用逗号分割，例如：“1001,1002,1003,1004,1005”
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductsGetRequest.ProductcatId">
            <summary>
            产品线ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductsGetRequest.SkuNumber">
            <summary>
            sku商家编码
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductsGetRequest.StartModified">
            <summary>
            开始修改时间
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductsGetRequest.Status">
            <summary>
            产品状态，可选值：up（上架）、down（下架），不传默认查询所有
            </summary>
        </member>
        <member name="T:Top.Api.Request.FenxiaoProductImageUploadRequest">
            <summary>
            TOP API: taobao.fenxiao.product.image.upload
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductImageUploadRequest.Image">
            <summary>
            产品图片
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductImageUploadRequest.PicPath">
            <summary>
            产品主图图片空间相对路径或绝对路径
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductImageUploadRequest.Position">
            <summary>
            图片位置，0-14之间。0：操作sku属性图片，1：主图，2-5：细节图，6-14：额外主图
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductImageUploadRequest.ProductId">
            <summary>
            产品ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductImageUploadRequest.Properties">
            <summary>
            properties表示sku图片的属性。key:value形式，key是pid，value是vid。如果position是0的话，则properties需要是必传项
            </summary>
        </member>
        <member name="T:Top.Api.Request.FenxiaoCooperationTerminateRequest">
            <summary>
            TOP API: taobao.fenxiao.cooperation.terminate
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoCooperationTerminateRequest.CooperateId">
            <summary>
            合作编号
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoCooperationTerminateRequest.EndRemainDays">
            <summary>
            终止天数，可选1,2,3,5,7,15，在多少天数内终止
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoCooperationTerminateRequest.EndRemark">
            <summary>
            终止说明（5-2000字）
            </summary>
        </member>
        <member name="T:RemotingProtocolParser.TCP.TcpProtocolHandle">
            <summary>.Net Remoting Protocol (via TCP) Parser
            </summary>
        </member>
        <member name="M:RemotingProtocolParser.TCP.TcpProtocolHandle.ReadPreamble">
            <summary>remoting protocol premable, expected value is ".NET".
            </summary>
            <returns></returns>
        </member>
        <member name="M:RemotingProtocolParser.TCP.TcpProtocolHandle.ReadMajorVersion">
            <summary>remoting protocol majorVersion, expected value is "1".
            </summary>
            <returns></returns>
        </member>
        <member name="M:RemotingProtocolParser.TCP.TcpProtocolHandle.ReadMinorVersion">
            <summary>remoting protocol minorVersion, expected value is "0".
            </summary>
            <returns></returns>
        </member>
        <member name="M:RemotingProtocolParser.TCP.TcpProtocolHandle.ReadOperation">
            <summary>remoting operation code, eg Request/OneWayRequest/Reply
            </summary>
            <returns></returns>
        </member>
        <member name="M:RemotingProtocolParser.TCP.TcpProtocolHandle.WriteOperation(System.UInt16)">
            <summary>write remoting operation code
            </summary>
            <param name="value">Request/OneWayRequest/Reply</param>
        </member>
        <member name="M:RemotingProtocolParser.TCP.TcpProtocolHandle.ReadContentDelimiter">
            <summary>Chunked or Fixed ContentLength. Only http channel support currently.
            </summary>
            <returns></returns>
        </member>
        <member name="M:RemotingProtocolParser.TCP.TcpProtocolHandle.WriteContentDelimiter(System.UInt16)">
            <summary>ContentLength=0, Chunked=1
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:RemotingProtocolParser.TCP.TcpProtocolHandle.ReadContentLength">
            <summary>get message content length
            </summary>
            <returns></returns>
        </member>
        <member name="M:RemotingProtocolParser.TCP.TcpProtocolHandle.WriteTransportHeaders(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>write transport header. PS: "RequestUri" must be transport while request call
            </summary>
            <param name="headers"></param>
        </member>
        <member name="T:Taobao.Top.Link.Endpoints.EndpointContext">
            <summary>context for receiving message
            </summary>
        </member>
        <member name="M:Taobao.Top.Link.Endpoints.EndpointContext.Reply(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>reply message
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Taobao.Top.Link.Endpoints.EndpointContext.Error(System.Int32,System.String)">
            <summary>tell error occur
            </summary>
            <param name="statusCode"></param>
            <param name="statusPhase"></param>
        </member>
        <member name="P:Taobao.Top.Link.Endpoints.EndpointContext.Message">
            <summary>get received message
            </summary>
        </member>
        <member name="P:Taobao.Top.Link.Endpoints.EndpointContext.MessageFrom">
            <summary>get where the message sent from
            </summary>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Core.StreamUtils">
            <summary>
            Provides simple <see cref="T:System.IO.Stream"/>" utilities.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Core.StreamUtils.ReadFully(System.IO.Stream,System.Byte[])">
            <summary>
            Read from a <see cref="T:System.IO.Stream"/> ensuring all the required data is read.
            </summary>
            <param name="stream">The stream to read.</param>
            <param name="buffer">The buffer to fill.</param>
            <seealso cref="M:ICSharpCode.SharpZipLib.Core.StreamUtils.ReadFully(System.IO.Stream,System.Byte[],System.Int32,System.Int32)"/>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Core.StreamUtils.ReadFully(System.IO.Stream,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Read from a <see cref="T:System.IO.Stream"/>" ensuring all the required data is read.
            </summary>
            <param name="stream">The stream to read data from.</param>
            <param name="buffer">The buffer to store data in.</param>
            <param name="offset">The offset at which to begin storing data.</param>
            <param name="count">The number of bytes of data to store.</param>
            <exception cref="T:System.ArgumentNullException">Required parameter is null</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="offset"/> and or <paramref name="count"/> are invalid.</exception>
            <exception cref="T:System.IO.EndOfStreamException">End of stream is encountered before all the data has been read.</exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Core.StreamUtils.Copy(System.IO.Stream,System.IO.Stream,System.Byte[])">
            <summary>
            Copy the contents of one <see cref="T:System.IO.Stream"/> to another.
            </summary>
            <param name="source">The stream to source data from.</param>
            <param name="destination">The stream to write data to.</param>
            <param name="buffer">The buffer to use during copying.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Core.StreamUtils.Copy(System.IO.Stream,System.IO.Stream,System.Byte[],ICSharpCode.SharpZipLib.Core.ProgressHandler,System.TimeSpan,System.Object,System.String)">
            <summary>
            Copy the contents of one <see cref="T:System.IO.Stream"/> to another.
            </summary>
            <param name="source">The stream to source data from.</param>
            <param name="destination">The stream to write data to.</param>
            <param name="buffer">The buffer to use during copying.</param>
            <param name="progressHandler">The <see cref="T:ICSharpCode.SharpZipLib.Core.ProgressHandler">progress handler delegate</see> to use.</param>
            <param name="updateInterval">The minimum <see cref="T:System.TimeSpan"/> between progress updates.</param>
            <param name="sender">The source for this event.</param>
            <param name="name">The name to use with the event.</param>
            <remarks>This form is specialised for use within #Zip to support events during archive operations.</remarks>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Core.StreamUtils.Copy(System.IO.Stream,System.IO.Stream,System.Byte[],ICSharpCode.SharpZipLib.Core.ProgressHandler,System.TimeSpan,System.Object,System.String,System.Int64)">
            <summary>
            Copy the contents of one <see cref="T:System.IO.Stream"/> to another.
            </summary>
            <param name="source">The stream to source data from.</param>
            <param name="destination">The stream to write data to.</param>
            <param name="buffer">The buffer to use during copying.</param>
            <param name="progressHandler">The <see cref="T:ICSharpCode.SharpZipLib.Core.ProgressHandler">progress handler delegate</see> to use.</param>
            <param name="updateInterval">The minimum <see cref="T:System.TimeSpan"/> between progress updates.</param>
            <param name="sender">The source for this event.</param>
            <param name="name">The name to use with the event.</param>
            <param name="fixedTarget">A predetermined fixed target value to use with progress updates.
            If the value is negative the target is calculated by looking at the stream.</param>
            <remarks>This form is specialised for use within #Zip to support events during archive operations.</remarks>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Core.StreamUtils.#ctor">
            <summary>
            Initialise an instance of <see cref="T:ICSharpCode.SharpZipLib.Core.StreamUtils"></see>
            </summary>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Zip.Compression.Inflater">
             <summary>
             Inflater is used to decompress data that has been compressed according
             to the "deflate" standard described in rfc1951.
             
             By default Zlib (rfc1950) headers and footers are expected in the input.
             You can use constructor <code> public Inflater(bool noHeader)</code> passing true
             if there is no Zlib header information
            
             The usage is as following.  First you have to set some input with
             <code>SetInput()</code>, then Inflate() it.  If inflate doesn't
             inflate any bytes there may be three reasons:
             <ul>
             <li>IsNeedingInput() returns true because the input buffer is empty.
             You have to provide more input with <code>SetInput()</code>.
             NOTE: IsNeedingInput() also returns true when, the stream is finished.
             </li>
             <li>IsNeedingDictionary() returns true, you have to provide a preset
                dictionary with <code>SetDictionary()</code>.</li>
             <li>IsFinished returns true, the inflater has finished.</li>
             </ul>
             Once the first output byte is produced, a dictionary will not be
             needed at a later stage.
            
             author of the original java version : John Leuner, Jochen Hoenicke
             </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.Inflater.DECODE_HEADER">
            <summary>
            These are the possible states for an inflater
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.Inflater.CPLENS">
            <summary>
            Copy lengths for literal codes 257..285
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.Inflater.CPLEXT">
            <summary>
            Extra bits for literal codes 257..285
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.Inflater.CPDIST">
            <summary>
            Copy offsets for distance codes 0..29
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.Inflater.CPDEXT">
            <summary>
            Extra bits for distance codes
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.Inflater.mode">
            <summary>
            This variable contains the current state.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.Inflater.readAdler">
            <summary>
            The adler checksum of the dictionary or of the decompressed
            stream, as it is written in the header resp. footer of the
            compressed stream. 
            Only valid if mode is DECODE_DICT or DECODE_CHKSUM.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.Inflater.neededBits">
            <summary>
            The number of bits needed to complete the current state.  This
            is valid, if mode is DECODE_DICT, DECODE_CHKSUM,
            DECODE_HUFFMAN_LENBITS or DECODE_HUFFMAN_DISTBITS.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.Inflater.isLastBlock">
            <summary>
            True, if the last block flag was set in the last block of the
            inflated stream.  This means that the stream ends after the
            current block.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.Inflater.totalOut">
            <summary>
            The total number of inflated bytes.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.Inflater.totalIn">
            <summary>
            The total number of bytes set with setInput().  This is not the
            value returned by the TotalIn property, since this also includes the
            unprocessed input.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.Compression.Inflater.noHeader">
            <summary>
            This variable stores the noHeader flag that was given to the constructor.
            True means, that the inflated stream doesn't contain a Zlib header or 
            footer.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Inflater.#ctor">
            <summary>
            Creates a new inflater or RFC1951 decompressor
            RFC1950/Zlib headers and footers will be expected in the input data
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Inflater.#ctor(System.Boolean)">
            <summary>
            Creates a new inflater.
            </summary>
            <param name="noHeader">
            True if no RFC1950/Zlib header and footer fields are expected in the input data
            
            This is used for GZIPed/Zipped input.
            
            For compatibility with
            Sun JDK you should provide one byte of input more than needed in
            this case.
            </param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Inflater.Reset">
            <summary>
            Resets the inflater so that a new stream can be decompressed.  All
            pending input and output will be discarded.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Inflater.DecodeHeader">
            <summary>
            Decodes a zlib/RFC1950 header.
            </summary>
            <returns>
            False if more input is needed.
            </returns>
            <exception cref="T:ICSharpCode.SharpZipLib.SharpZipBaseException">
            The header is invalid.
            </exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Inflater.DecodeDict">
            <summary>
            Decodes the dictionary checksum after the deflate header.
            </summary>
            <returns>
            False if more input is needed.
            </returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Inflater.DecodeHuffman">
            <summary>
            Decodes the huffman encoded symbols in the input stream.
            </summary>
            <returns>
            false if more input is needed, true if output window is
            full or the current block ends.
            </returns>
            <exception cref="T:ICSharpCode.SharpZipLib.SharpZipBaseException">
            if deflated stream is invalid.
            </exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Inflater.DecodeChksum">
            <summary>
            Decodes the adler checksum after the deflate stream.
            </summary>
            <returns>
            false if more input is needed.
            </returns>
            <exception cref="T:ICSharpCode.SharpZipLib.SharpZipBaseException">
            If checksum doesn't match.
            </exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Inflater.Decode">
            <summary>
            Decodes the deflated stream.
            </summary>
            <returns>
            false if more input is needed, or if finished.
            </returns>
            <exception cref="T:ICSharpCode.SharpZipLib.SharpZipBaseException">
            if deflated stream is invalid.
            </exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Inflater.SetDictionary(System.Byte[])">
            <summary>
            Sets the preset dictionary.  This should only be called, if
            needsDictionary() returns true and it should set the same
            dictionary, that was used for deflating.  The getAdler()
            function returns the checksum of the dictionary needed.
            </summary>
            <param name="buffer">
            The dictionary.
            </param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Inflater.SetDictionary(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sets the preset dictionary.  This should only be called, if
            needsDictionary() returns true and it should set the same
            dictionary, that was used for deflating.  The getAdler()
            function returns the checksum of the dictionary needed.
            </summary>
            <param name="buffer">
            The dictionary.
            </param>
            <param name="index">
            The index into buffer where the dictionary starts.
            </param>
            <param name="count">
            The number of bytes in the dictionary.
            </param>
            <exception cref="T:System.InvalidOperationException">
            No dictionary is needed.
            </exception>
            <exception cref="T:ICSharpCode.SharpZipLib.SharpZipBaseException">
            The adler checksum for the buffer is invalid
            </exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Inflater.SetInput(System.Byte[])">
            <summary>
            Sets the input.  This should only be called, if needsInput()
            returns true.
            </summary>
            <param name="buffer">
            the input.
            </param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Inflater.SetInput(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sets the input.  This should only be called, if needsInput()
            returns true.
            </summary>
            <param name="buffer">
            The source of input data
            </param>
            <param name="index">
            The index into buffer where the input starts.
            </param>
            <param name="count">
            The number of bytes of input to use.
            </param>
            <exception cref="T:System.InvalidOperationException">
            No input is needed.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The index and/or count are wrong.
            </exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Inflater.Inflate(System.Byte[])">
            <summary>
            Inflates the compressed stream to the output buffer.  If this
            returns 0, you should check, whether IsNeedingDictionary(),
            IsNeedingInput() or IsFinished() returns true, to determine why no
            further output is produced.
            </summary>
            <param name="buffer">
            the output buffer.
            </param>
            <returns>
            The number of bytes written to the buffer, 0 if no further
            output can be produced.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            if buffer has length 0.
            </exception>
            <exception cref="T:System.FormatException">
            if deflated stream is invalid.
            </exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Inflater.Inflate(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Inflates the compressed stream to the output buffer.  If this
            returns 0, you should check, whether needsDictionary(),
            needsInput() or finished() returns true, to determine why no
            further output is produced.
            </summary>
            <param name="buffer">
            the output buffer.
            </param>
            <param name="offset">
            the offset in buffer where storing starts.
            </param>
            <param name="count">
            the maximum number of bytes to output.
            </param>
            <returns>
            the number of bytes written to the buffer, 0 if no further output can be produced.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            if count is less than 0.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            if the index and / or count are wrong.
            </exception>
            <exception cref="T:System.FormatException">
            if deflated stream is invalid.
            </exception>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.Compression.Inflater.IsNeedingInput">
            <summary>
            Returns true, if the input buffer is empty.
            You should then call setInput(). 
            NOTE: This method also returns true when the stream is finished.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.Compression.Inflater.IsNeedingDictionary">
            <summary>
            Returns true, if a preset dictionary is needed to inflate the input.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.Compression.Inflater.IsFinished">
            <summary>
            Returns true, if the inflater has finished.  This means, that no
            input is needed and no output can be produced.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.Compression.Inflater.Adler">
            <summary>
            Gets the adler checksum.  This is either the checksum of all
            uncompressed bytes returned by inflate(), or if needsDictionary()
            returns true (and thus no output was yet produced) this is the
            adler checksum of the expected dictionary.
            </summary>
            <returns>
            the adler checksum.
            </returns>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.Compression.Inflater.TotalOut">
            <summary>
            Gets the total number of output bytes returned by Inflate().
            </summary>
            <returns>
            the total number of output bytes.
            </returns>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.Compression.Inflater.TotalIn">
            <summary>
            Gets the total number of processed compressed input bytes.
            </summary>
            <returns>
            The total number of bytes of processed input bytes.
            </returns>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.Compression.Inflater.RemainingInput">
            <summary>
            Gets the number of unprocessed input bytes.  Useful, if the end of the
            stream is reached and you want to further process the bytes after
            the deflate stream.
            </summary>
            <returns>
            The number of bytes of the input which have not been processed.
            </returns>
        </member>
        <member name="T:Top.Api.Domain.TbkEvent">
            <summary>
            TbkEvent Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TbkEvent.EndTime">
            <summary>
            定向招商活动结束开始时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TbkEvent.EventId">
            <summary>
            淘宝联盟定向招商活动id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TbkEvent.EventTitle">
            <summary>
            淘宝联盟定向招商活动名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TbkEvent.StartTime">
            <summary>
            定向招商活动结束开始时间
            </summary>
        </member>
        <member name="T:Top.Api.Domain.SubPurchaseOrder">
            <summary>
            SubPurchaseOrder Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubPurchaseOrder.AuctionId">
            <summary>
            前台分销商品的宝贝ID，不存在时为0。2015年4月15日之前创建的采购单该字段都是0。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubPurchaseOrder.AuctionPrice">
            <summary>
            分销商店铺中宝贝一口价
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubPurchaseOrder.AuctionSkuId">
            <summary>
            前台商品SKU ID，不存在时为0。2015年3月15日之前创建的采购单该字段都是0。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubPurchaseOrder.BillFee">
            <summary>
            发票应开金额。根据买家实际付款去除邮费后，按各个子单(商品)金额比例进行分摊后的金额，仅供开发票时做票面金额参考。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubPurchaseOrder.BuyerPayment">
            <summary>
            买家订单上对应的子单零售金额，除以num（数量）后等于最终宝贝的零售价格（精确到2位小数;单位:元。如:200.07，表示:200元7分）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubPurchaseOrder.Created">
            <summary>
            创建时间。格式 yyyy-MM-dd HH:mm:ss 。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubPurchaseOrder.DiscountFee">
            <summary>
            优惠活动的折扣金额
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubPurchaseOrder.DistributorPayment">
            <summary>
            分销商实付金额=total_fee（分销商应付金额）+改价-优惠。（精确到2位小数;单位:元。如:200.07，表示:200元7分）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubPurchaseOrder.Features">
            <summary>
            Feature对象列表目前已有的属性：attr_key为 www，attr_value为1 表示是www子订单；attr_key为 wwwStoreCode，attr_value是www子订单发货的仓库编码；attr_key为 isWt，attr_value为1 表示是网厅子订单；attr_key为wtInfo,attr_value为网厅相关合约信息；attr_key为shipper,attr_value为cn表示菜鸟发货；attr_key为 storeCode，attr_value为仓库信息
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubPurchaseOrder.FenxiaoId">
            <summary>
            分销平台的子采购单主键
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubPurchaseOrder.Id">
            <summary>
            子采购单id，淘宝交易主键，采购单未付款时为0.（只有支付宝 付款才有这个id，其余付款形式该字段为0）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubPurchaseOrder.ItemId">
            <summary>
            分销平台上的产品id，同FenxiaoProduct 的pid
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubPurchaseOrder.ItemOuterId">
            <summary>
            分销平台上商品商家编码。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubPurchaseOrder.Num">
            <summary>
            产品的采购数量。取值范围:大于零的整数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubPurchaseOrder.OldSkuProperties">
            <summary>
            老的SKU属性值。如: 颜色:红色:别名;尺码:L:别名
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubPurchaseOrder.Order200Status">
            <summary>
            代销采购单对应下游200订单状态。可选值：WAIT_SELLER_SEND_GOODS(已付款，待发货)WAIT_BUYER_CONFIRM_GOODS(已付款，已发货)TRADE_CLOSED(已退款成功)TRADE_REFUNDING(退款中)TRADE_FINISHED(交易成功)TRADE_CLOSED_BY_TAOBAO(交易关闭)
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubPurchaseOrder.Price">
            <summary>
            产品的采购价格。（精确到2位小数;单位:元。如:200.07，表示:200元7分）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubPurchaseOrder.PromotionType">
            <summary>
            优惠活动类型0=无优惠1=限时折
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubPurchaseOrder.RefundFee">
            <summary>
            退款金额
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubPurchaseOrder.ScItemId">
            <summary>
            后端商品id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubPurchaseOrder.SkuId">
            <summary>
            分销产品的SKU id。当存在时才会有值，建议使用sku_outer_id，sku_properties这两个值
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubPurchaseOrder.SkuOuterId">
            <summary>
            SKU商家编码。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubPurchaseOrder.SkuProperties">
            <summary>
            SKU属性值。如: 颜色:红色:别名;尺码:L:别名
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubPurchaseOrder.SnapshotUrl">
            <summary>
            快照地址。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubPurchaseOrder.Status">
            <summary>
            交易状态。可选值：<br/>WAIT_BUYER_PAY(等待付款)<br/>WAIT_CONFIRM(付款信息待确认)<br/>WAIT_CONFIRM_WAIT_SEND_GOODS(付款信息待确认，待发货)<br/>WAIT_CONFIRM_SEND_GOODS(付款信息待确认，已发货)<br/>WAIT_CONFIRM_GOODS_CONFIRM(付款信息待确认，已收货)<br/>WAIT_SELLER_SEND_GOODS(已付款，待发货)<br/>WAIT_BUYER_CONFIRM_GOODS(已付款，已发货)<br/>WAIT_BUYER_CONFIRM_GOODS_ACOUNTED(已付款（已分账），已发货。只对代销分账支持)<br/>CONFIRM_WAIT_SEND_GOODS(付款信息已确认，待发货)<br/>CONFIRM_SEND_GOODS(付款信息已确认，已发货)<br/>TRADE_REFUNDED(已退款)<br/>TRADE_REFUNDING(退款中)<br/>TRADE_FINISHED(交易成功)<br/>TRADE_CLOSED(交易关闭)<br/>PAY_ACOUNTED_GOODS_CONFIRM （已分账发货成功）<br/>PAY_WAIT_ACOUNT_GOODS_CONFIRM（已付款，确认收货）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubPurchaseOrder.SubTcOrderId">
            <summary>
            子订单ID(经销不显示)
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubPurchaseOrder.TcAdjustFee">
            <summary>
            商品的卖出金额调整，金额增加时为正数，金额减少时为负数，单位是分，不带小数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubPurchaseOrder.TcDiscountFee">
            <summary>
            优惠金额，始终为正数，单位是分，不带小数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubPurchaseOrder.TcOrderId">
            <summary>
            TC子订单ID（经销不显示）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubPurchaseOrder.TcPreferentialType">
            <summary>
            商品优惠类型：聚划算、秒杀或其他
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubPurchaseOrder.Title">
            <summary>
            采购的产品标题。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubPurchaseOrder.TotalFee">
            <summary>
            分销商应付金额=num(采购数量)*price(采购价)。（精确到2位小数;单位:元。如:200.07，表示:200元7分）
            </summary>
        </member>
        <member name="T:Top.Api.Domain.RoamingMessageResult">
            <summary>
            RoamingMessageResult Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RoamingMessageResult.Messages">
            <summary>
            消息列表
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RoamingMessageResult.NextKey">
            <summary>
            下次迭代key
            </summary>
        </member>
        <member name="T:Top.Api.Response.TopatsJushitaJdpDatadeleteResponse">
            <summary>
            TopatsJushitaJdpDatadeleteResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TopatsJushitaJdpDatadeleteResponse.Result">
            <summary>
            result
            </summary>
        </member>
        <member name="T:Top.Api.Response.TopatsJushitaJdpDatadeleteResponse.ResultDoDomain">
            <summary>
            ResultDoDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TopatsJushitaJdpDatadeleteResponse.ResultDoDomain.ErrCode">
            <summary>
            errCode
            </summary>
        </member>
        <member name="P:Top.Api.Response.TopatsJushitaJdpDatadeleteResponse.ResultDoDomain.ErrTrace">
            <summary>
            errTrace
            </summary>
        </member>
        <member name="P:Top.Api.Response.TopatsJushitaJdpDatadeleteResponse.ResultDoDomain.Result">
            <summary>
            result
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaAdgroupCampcatmatchsGetResponse">
            <summary>
            SimbaAdgroupCampcatmatchsGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaAdgroupCampcatmatchsGetResponse.Adgroupcatmatchs">
            <summary>
            一页推广组类目出价列表
            </summary>
        </member>
        <member name="T:Top.Api.Response.ItemQuantityUpdateResponse">
            <summary>
            ItemQuantityUpdateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ItemQuantityUpdateResponse.Item">
            <summary>
            iid、numIid、num和modified，skus中每个sku的skuId、quantity和modified
            </summary>
        </member>
        <member name="T:Top.Api.Response.ItemSchemaIncrementUpdateResponse">
            <summary>
            ItemSchemaIncrementUpdateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ItemSchemaIncrementUpdateResponse.ItemId">
            <summary>
            商品id
            </summary>
        </member>
        <member name="T:Top.Api.Response.SubuserDutyAddResponse">
            <summary>
            SubuserDutyAddResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SubuserDutyAddResponse.IsSuccess">
            <summary>
            操作是否成功 true:操作成功; false:操作失败
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaAdgroupOnlineitemsvonGetResponse">
            <summary>
            SimbaAdgroupOnlineitemsvonGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaAdgroupOnlineitemsvonGetResponse.PageItem">
            <summary>
            带分页的淘宝商品
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaKeywordsvonAddResponse">
            <summary>
            SimbaKeywordsvonAddResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaKeywordsvonAddResponse.Keywords">
            <summary>
            关键词列表
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaKeywordsbyadgroupidGetResponse">
            <summary>
            SimbaKeywordsbyadgroupidGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaKeywordsbyadgroupidGetResponse.Keywords">
            <summary>
            取得的关键词列表
            </summary>
        </member>
        <member name="T:Top.Api.Response.LogisticsDummySendResponse">
            <summary>
            LogisticsDummySendResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.LogisticsDummySendResponse.Shipping">
            <summary>
            返回发货是否成功is_success
            </summary>
        </member>
        <member name="T:Top.Api.Response.TradeShippingaddressUpdateResponse">
            <summary>
            TradeShippingaddressUpdateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TradeShippingaddressUpdateResponse.Trade">
            <summary>
            交易结构
            </summary>
        </member>
        <member name="T:Top.Api.Response.TradeSnapshotGetResponse">
            <summary>
            TradeSnapshotGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TradeSnapshotGetResponse.Trade">
            <summary>
            只包含Trade中的tid和snapshot、子订单Order中的oid和snapshot
            </summary>
        </member>
        <member name="T:Top.Api.Response.LogisticsOrdersDetailGetResponse">
            <summary>
            LogisticsOrdersDetailGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.LogisticsOrdersDetailGetResponse.Shippings">
            <summary>
            获取的物流订单详情列表.返回的Shipping包含的具体信息为入参fields请求的字段信息.
            </summary>
        </member>
        <member name="P:Top.Api.Response.LogisticsOrdersDetailGetResponse.TotalResults">
            <summary>
            搜索到的物流订单列表总数
            </summary>
        </member>
        <member name="T:Top.Api.Response.SellercenterRolemembersGetResponse">
            <summary>
            SellercenterRolemembersGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SellercenterRolemembersGetResponse.Subusers">
            <summary>
            子账号基本信息列表。具体信息为id、子账号用户名、主账号id、主账号昵称、当前状态值、是否分流
            </summary>
        </member>
        <member name="T:Top.Api.Response.ItemCspuMoveResponse">
            <summary>
            ItemCspuMoveResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ItemCspuMoveResponse.Item">
            <summary>
            商品结构里的num_iid，modified
            </summary>
        </member>
        <member name="T:Top.Api.Response.TmallProductSchemaUpdateResponse">
            <summary>
            TmallProductSchemaUpdateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallProductSchemaUpdateResponse.UpdateProductResult">
            <summary>
            产品数据，格式和入参xml_data一致，仅包含产品ID和更新时间
            </summary>
        </member>
        <member name="T:Top.Api.Response.WangwangEserviceLoginlogsGetResponse">
            <summary>
            WangwangEserviceLoginlogsGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.WangwangEserviceLoginlogsGetResponse.Count">
            <summary>
            在指定时间段登录日志的条数
            </summary>
        </member>
        <member name="P:Top.Api.Response.WangwangEserviceLoginlogsGetResponse.Loginlogs">
            <summary>
            登录日志具体信息
            </summary>
        </member>
        <member name="P:Top.Api.Response.WangwangEserviceLoginlogsGetResponse.UserId">
            <summary>
            被查询的用户id
            </summary>
        </member>
        <member name="T:Top.Api.Response.TmallProductBooksAddResponse">
            <summary>
            TmallProductBooksAddResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallProductBooksAddResponse.ProductBooks">
            <summary>
            请求相应结构
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaRptAdgroupcreativeeffectGetResponse">
            <summary>
            SimbaRptAdgroupcreativeeffectGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaRptAdgroupcreativeeffectGetResponse.RptAdgroupcreativeEffectList">
            <summary>
            推广组下的创意效果数据列表
            </summary>
        </member>
        <member name="T:Top.Api.Response.ItemAnchorGetResponse">
            <summary>
            ItemAnchorGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ItemAnchorGetResponse.AnchorModules">
            <summary>
            宝贝描述规范化可使用打标模块的锚点信息
            </summary>
        </member>
        <member name="P:Top.Api.Response.ItemAnchorGetResponse.TotalResults">
            <summary>
            返回的宝贝描述模板结果数目
            </summary>
        </member>
        <member name="T:Top.Api.Response.ItemAddResponse">
            <summary>
            ItemAddResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ItemAddResponse.Item">
            <summary>
            商品结构,仅有numIid和created返回
            </summary>
        </member>
        <member name="T:Top.Api.Request.TmallItemDapeiTemplateGetRequest">
            <summary>
            TOP API: tmall.item.dapei.template.get
            </summary>
        </member>
        <member name="T:Top.Api.Request.SubuserDutyDeleteRequest">
            <summary>
            TOP API: taobao.subuser.duty.delete
            </summary>
        </member>
        <member name="P:Top.Api.Request.SubuserDutyDeleteRequest.DutyId">
            <summary>
            职务ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.SubuserDutyDeleteRequest.UserNick">
            <summary>
            主账号用户名
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaKeywordsvonAddRequest">
            <summary>
            TOP API: taobao.simba.keywordsvon.add
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaKeywordsvonAddRequest.AdgroupId">
            <summary>
            推广组id
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaKeywordsvonAddRequest.KeywordPrices">
            <summary>
            关键词，出价和匹配方式json字符串，word:词，不能有一些特殊字符。maxPrice：价格，是整数，以“分”为单位，不能小于5，不能大于日限额,当使用默认出价时必须将这个值设置为0。; isDefaultPrice：是否使用默认出价，只能是0，1(0代表不使用，1代表使用)。matchscope只能是1,2,4（1代表精确匹配，2代表子串匹配，4代表广泛匹配）。
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaKeywordsvonAddRequest.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="T:Top.Api.Request.SubuserInfoUpdateRequest">
            <summary>
            TOP API: taobao.subuser.info.update
            </summary>
        </member>
        <member name="P:Top.Api.Request.SubuserInfoUpdateRequest.IsDisableSubaccount">
            <summary>
            是否停用子账号 true:表示停用该子账号false:表示开启该子账号
            </summary>
        </member>
        <member name="P:Top.Api.Request.SubuserInfoUpdateRequest.IsDispatch">
            <summary>
            子账号是否参与分流 true:参与分流 false:不参与分流
            </summary>
        </member>
        <member name="P:Top.Api.Request.SubuserInfoUpdateRequest.SubId">
            <summary>
            子账号ID
            </summary>
        </member>
        <member name="T:Top.Api.Request.TradeOrderskuUpdateRequest">
            <summary>
            TOP API: taobao.trade.ordersku.update
            </summary>
        </member>
        <member name="P:Top.Api.Request.TradeOrderskuUpdateRequest.Oid">
            <summary>
            子订单编号（对于单笔订单的交易可以传交易编号）。
            </summary>
        </member>
        <member name="P:Top.Api.Request.TradeOrderskuUpdateRequest.SkuId">
            <summary>
            销售属性编号，可以通过taobao.item.skus.get获取订单对应的商品的所有销售属性。
            </summary>
        </member>
        <member name="P:Top.Api.Request.TradeOrderskuUpdateRequest.SkuProps">
            <summary>
            销售属性组合串，格式：p1:v1;p2:v2，如：1627207:28329;20509:28314。可以通过taobao.item.skus.get获取订单对应的商品的所有销售属性。
            </summary>
        </member>
        <member name="T:Top.Api.Request.TmallItemQuantityUpdateRequest">
            <summary>
            TOP API: tmall.item.quantity.update
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemQuantityUpdateRequest.ItemId">
            <summary>
            商品id
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemQuantityUpdateRequest.ItemQuantity">
            <summary>
            商品库存数；增量编辑方式支持正数、负数
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemQuantityUpdateRequest.Options">
            <summary>
            商品库存更新时候的可选参数
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemQuantityUpdateRequest.SkuQuantities">
            <summary>
            更新SKU库存时候的SKU库存对象；如果没有SKU或者不更新SKU库存，可以不填;查找SKU目前支持ID，属性串和商家编码三种模式，建议选用一种最合适的，切勿滥用，一次调用中如果混合使用，更新结果不可预期！
            </summary>
        </member>
        <member name="T:Top.Api.Request.TmallItemQuantityUpdateRequest.UpdateSkuQuantityDomain">
            <summary>
            UpdateSkuQuantityDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemQuantityUpdateRequest.UpdateSkuQuantityDomain.OuterId">
            <summary>
            SkuID，用于指定被修改库存的SKU
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemQuantityUpdateRequest.UpdateSkuQuantityDomain.Properties">
            <summary>
            Sku属性串。格式:pid:vid;pid:vid,如: 1627207:3232483;1630696:3284570,表示机身颜色:军绿色;手机套餐:一电一充，用于指定被修改库存的SKU
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemQuantityUpdateRequest.UpdateSkuQuantityDomain.Quantity">
            <summary>
            Sku的商家外部id，用于指定被修改库存的SKU
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemQuantityUpdateRequest.UpdateSkuQuantityDomain.SkuId">
            <summary>
            属于这个sku的商品的库存；增量编辑方式支持正数、负数
            </summary>
        </member>
        <member name="T:Top.Api.Request.TmallItemQuantityUpdateRequest.UpdateItemQuantityOptionDomain">
            <summary>
            UpdateItemQuantityOptionDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemQuantityUpdateRequest.UpdateItemQuantityOptionDomain.OuterBizKey">
            <summary>
            增量幂等外部编码
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemQuantityUpdateRequest.UpdateItemQuantityOptionDomain.Type">
            <summary>
            库存更新方式: 1是全量更新 2是增量更新；默认是1。
            </summary>
        </member>
        <member name="T:Top.Api.Request.TradeSnapshotGetRequest">
            <summary>
            TOP API: taobao.trade.snapshot.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.TradeSnapshotGetRequest.Fields">
            <summary>
            需要返回的字段列表。现只支持："snapshot"字段
            </summary>
        </member>
        <member name="P:Top.Api.Request.TradeSnapshotGetRequest.Tid">
            <summary>
            交易编号
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaKeywordsChangedGetRequest">
            <summary>
            TOP API: taobao.simba.keywords.changed.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaKeywordsChangedGetRequest.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaKeywordsChangedGetRequest.PageNo">
            <summary>
            返回的第几页数据，默认为1
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaKeywordsChangedGetRequest.PageSize">
            <summary>
            返回的每页数据量大小,默认200最大1000
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaKeywordsChangedGetRequest.StartTime">
            <summary>
            得到此时间点之后的数据，不能大于一个月
            </summary>
        </member>
        <member name="T:Top.Api.Request.PictureGetRequest">
            <summary>
            TOP API: taobao.picture.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.PictureGetRequest.ClientType">
            <summary>
            图片使用，如果是pc宝贝detail使用，设置为client:computer，查询出来的图片是符合pc的宝贝detail显示的如果是手机宝贝detail使用，设置为client:phone，查询出来的图片是符合手机的宝贝detail显示的,默认值是全部
            </summary>
        </member>
        <member name="P:Top.Api.Request.PictureGetRequest.Deleted">
            <summary>
            是否删除,unfroze代表没有删除
            </summary>
        </member>
        <member name="P:Top.Api.Request.PictureGetRequest.EndDate">
            <summary>
            查询上传结束时间点,格式:yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="P:Top.Api.Request.PictureGetRequest.IsHttps">
            <summary>
            是否获取https的链接
            </summary>
        </member>
        <member name="P:Top.Api.Request.PictureGetRequest.ModifiedTime">
            <summary>
            图片被修改的时间点，格式:yyyy-MM-dd HH:mm:ss。查询此修改时间点之后到目前的图片。
            </summary>
        </member>
        <member name="P:Top.Api.Request.PictureGetRequest.OrderBy">
            <summary>
            图片查询结果排序,time:desc按上传时间从晚到早(默认), time:asc按上传时间从早到晚,sizes:desc按图片从大到小，sizes:asc按图片从小到大,默认time:desc
            </summary>
        </member>
        <member name="P:Top.Api.Request.PictureGetRequest.PageNo">
            <summary>
            页码.传入值为1代表第一页,传入值为2代表第二页,依此类推,默认值为1
            </summary>
        </member>
        <member name="P:Top.Api.Request.PictureGetRequest.PageSize">
            <summary>
            每页条数.每页返回最多返回100条,默认值40
            </summary>
        </member>
        <member name="P:Top.Api.Request.PictureGetRequest.PictureCategoryId">
            <summary>
            图片分类ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.PictureGetRequest.PictureId">
            <summary>
            图片ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.PictureGetRequest.StartDate">
            <summary>
            查询上传开始时间点,格式:yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="P:Top.Api.Request.PictureGetRequest.Title">
            <summary>
            图片标题,最大长度50字符,中英文都算一字符
            </summary>
        </member>
        <member name="P:Top.Api.Request.PictureGetRequest.Urls">
            <summary>
            图片url查询接口
            </summary>
        </member>
        <member name="T:Top.Api.Request.PictureCategoryGetRequest">
            <summary>
            TOP API: taobao.picture.category.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.PictureCategoryGetRequest.ModifiedTime">
            <summary>
            图片分类的修改时间点，格式:yyyy-MM-dd HH:mm:ss。查询此修改时间点之后到目前的图片分类。
            </summary>
        </member>
        <member name="P:Top.Api.Request.PictureCategoryGetRequest.ParentId">
            <summary>
            取二级分类时设置为对应父分类id  取一级分类时父分类id设为0  取全部分类的时候不设或设为-1
            </summary>
        </member>
        <member name="P:Top.Api.Request.PictureCategoryGetRequest.PictureCategoryId">
            <summary>
            图片分类ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.PictureCategoryGetRequest.PictureCategoryName">
            <summary>
            图片分类名，不支持模糊查询
            </summary>
        </member>
        <member name="P:Top.Api.Request.PictureCategoryGetRequest.Type">
            <summary>
            分类类型,fixed代表店铺装修分类类别，auction代表宝贝分类类别，user-define代表用户自定义分类类别
            </summary>
        </member>
        <member name="T:Top.Api.Request.TimeGetRequest">
            <summary>
            TOP API: taobao.time.get
            </summary>
        </member>
        <member name="T:Top.Api.Request.RefundMessagesGetRequest">
            <summary>
            TOP API: taobao.refund.messages.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.RefundMessagesGetRequest.Fields">
            <summary>
            需返回的字段列表。可选值：RefundMessage结构体中的所有字段，以半角逗号(,)分隔。
            </summary>
        </member>
        <member name="P:Top.Api.Request.RefundMessagesGetRequest.PageNo">
            <summary>
            页码
            </summary>
        </member>
        <member name="P:Top.Api.Request.RefundMessagesGetRequest.PageSize">
            <summary>
            每页条数
            </summary>
        </member>
        <member name="P:Top.Api.Request.RefundMessagesGetRequest.RefundId">
            <summary>
            退款单号
            </summary>
        </member>
        <member name="P:Top.Api.Request.RefundMessagesGetRequest.RefundPhase">
            <summary>
            退款阶段，可选值：onsale（售中），aftersale（售后），天猫退款为必传。
            </summary>
        </member>
        <member name="T:Top.Api.Request.ItemDeleteRequest">
            <summary>
            TOP API: taobao.item.delete
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemDeleteRequest.NumIid">
            <summary>
            商品数字ID，该参数必须
            </summary>
        </member>
        <member name="T:Top.Api.Request.PictureUserinfoGetRequest">
            <summary>
            TOP API: taobao.picture.userinfo.get
            </summary>
        </member>
        <member name="T:Top.Api.Request.DeliveryTemplatesGetRequest">
            <summary>
            TOP API: taobao.delivery.templates.get
            </summary>
        </member>
        <!-- 对于成员“P:Top.Api.Request.DeliveryTemplatesGetRequest.Fields”忽略有格式错误的 XML 注释 -->
        <member name="T:Top.Api.Request.KfcKeywordSearchRequest">
            <summary>
            TOP API: taobao.kfc.keyword.search
            </summary>
        </member>
        <member name="P:Top.Api.Request.KfcKeywordSearchRequest.Apply">
            <summary>
            应用点，分为一级应用点、二级应用点。其中一级应用点通常是指某一个系统或产品，比如淘宝的商品应用（taobao_auction）；二级应用点，是指一级应用点下的具体的分类，比如商品标题(title)、商品描述(content)。不同的二级应用可以设置不同关键词。    这里的apply参数是由一级应用点与二级应用点合起来的字符（一级应用点+"."+二级应用点），如taobao_auction.title。      通常apply参数是不需要传递的。如有特殊需求（比如特殊的过滤需求，需要自己维护一套自己词库），需传递此参数。
            </summary>
        </member>
        <member name="P:Top.Api.Request.KfcKeywordSearchRequest.Content">
            <summary>
            需要过滤的文本信息
            </summary>
        </member>
        <member name="P:Top.Api.Request.KfcKeywordSearchRequest.Nick">
            <summary>
            发布信息的淘宝会员名，可以不传
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaRptCusteffectGetRequest">
            <summary>
            TOP API: taobao.simba.rpt.custeffect.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptCusteffectGetRequest.EndTime">
            <summary>
            结束时间，格式yyyy-mm-dd
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptCusteffectGetRequest.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptCusteffectGetRequest.PageNo">
            <summary>
            页码
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptCusteffectGetRequest.PageSize">
            <summary>
            每页大小
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptCusteffectGetRequest.Source">
            <summary>
            数据来源（站内：1，站外：2 ，汇总：SUMMARY）SUMMARY必须单选，其他值可多选例如1,2
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptCusteffectGetRequest.StartTime">
            <summary>
            开始时间，格式yyyy-mm-dd
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptCusteffectGetRequest.SubwayToken">
            <summary>
            权限校验参数
            </summary>
        </member>
        <member name="T:Top.Api.Request.ProductPropimgUploadRequest">
            <summary>
            TOP API: taobao.product.propimg.upload
            </summary>
        </member>
        <member name="P:Top.Api.Request.ProductPropimgUploadRequest.Id">
            <summary>
            产品属性图片ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.ProductPropimgUploadRequest.Image">
            <summary>
            图片内容.图片最大为2M,只支持JPG,GIF.
            </summary>
        </member>
        <member name="P:Top.Api.Request.ProductPropimgUploadRequest.Position">
            <summary>
            图片序号
            </summary>
        </member>
        <member name="P:Top.Api.Request.ProductPropimgUploadRequest.ProductId">
            <summary>
            产品ID.Product的id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ProductPropimgUploadRequest.Props">
            <summary>
            属性串.目前仅支持颜色属性.调用taobao.itemprops.get获取类目属性,取得颜色属性pid,再用taobao.itempropvalues.get取得vid;格式:pid:vid,只能传入一个颜色pid:vid串;
            </summary>
        </member>
        <member name="T:Top.Api.Domain.DeliveryTime">
            <summary>
            DeliveryTime Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DeliveryTime.DeliveryTime_">
            <summary>
            商品级别设置的发货时间。设置了商品级别的发货时间，相对发货时间，则填写相对发货时间的天数（大于3）；绝对发货时间，则填写yyyy-mm-dd格式，如2013-11-11
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DeliveryTime.DeliveryTimeType">
            <summary>
            发货时间类型：绝对发货时间或者相对发货时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DeliveryTime.NeedDeliveryTime">
            <summary>
            设置是否使用发货时间，商品级别，sku级别
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DeliveryTime.OnsaleAutoRefundRatio">
            <summary>
            商品自动退款参数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DeliveryTime.SkusDeliveryTimeList">
            <summary>
            发货时间列表
            </summary>
        </member>
        <member name="T:Top.Api.Domain.Creative">
            <summary>
            Creative Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Creative.AdgroupId">
            <summary>
            推广组id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Creative.AuditDesc">
            <summary>
            审核拒绝原因描述
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Creative.AuditStatus">
            <summary>
            审核状态： audit_wait-待审核；audit_pass-审核通过(上线)；audit_reject-审核拒绝；默认为audit_pass。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Creative.CampaignId">
            <summary>
            推广计划Id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Creative.CreateTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Creative.CreativeId">
            <summary>
            创意id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Creative.ImgUrl">
            <summary>
            创意图片地址，必须是推广组对应商品的图片之一
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Creative.ModifiedTime">
            <summary>
            最后修改时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Creative.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Creative.Title">
            <summary>
            创意标题，最多20个汉字
            </summary>
        </member>
        <member name="T:Top.Api.Domain.TradeTagRelationDo">
            <summary>
            TradeTagRelationDo Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeTagRelationDo.GmtCreated">
            <summary>
            记录的创建时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeTagRelationDo.GmtModified">
            <summary>
            记录的最新修改时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeTagRelationDo.HistoryTradeTagRelations">
            <summary>
            该标签操作的历史记录
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeTagRelationDo.Id">
            <summary>
            订单标签记录id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeTagRelationDo.TagName">
            <summary>
            标签名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeTagRelationDo.TagType">
            <summary>
            标签类型       1：官方标签      2：自定义标签     3：主站只读标签
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeTagRelationDo.TagValue">
            <summary>
            标签值，json格式
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeTagRelationDo.Tid">
            <summary>
            订单id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeTagRelationDo.Visible">
            <summary>
            该标签在消费者端是否显示,0:不显示,1：显示
            </summary>
        </member>
        <member name="T:Top.Api.Domain.ArticleBizOrder">
            <summary>
            ArticleBizOrder Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ArticleBizOrder.ArticleCode">
            <summary>
            应用收费代码，从合作伙伴后台（my.open.taobao.com）-收费管理-收费项目列表 能够获得该应用的收费代码
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ArticleBizOrder.ArticleItemName">
            <summary>
            商品模型名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ArticleBizOrder.ArticleName">
            <summary>
            应用名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ArticleBizOrder.BizOrderId">
            <summary>
            订单号
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ArticleBizOrder.BizType">
            <summary>
            订单类型，1=新订 2=续订 3=升级 4=后台赠送 5=后台自动续订 6=订单审核后生成订购关系（暂时用不到）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ArticleBizOrder.Create">
            <summary>
            订单创建时间（订购时间）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ArticleBizOrder.Fee">
            <summary>
            原价（单位为分）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ArticleBizOrder.ItemCode">
            <summary>
            收费项目代码，从合作伙伴后台（my.open.taobao.com）-收费管理-收费项目列表 能够获得收费项目代码
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ArticleBizOrder.ItemName">
            <summary>
            收费项目名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ArticleBizOrder.Nick">
            <summary>
            淘宝会员名
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ArticleBizOrder.OrderCycle">
            <summary>
            订购周期  1表示年 ，2表示月，3表示天。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ArticleBizOrder.OrderCycleEnd">
            <summary>
            订购周期结束时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ArticleBizOrder.OrderCycleStart">
            <summary>
            订购周期开始时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ArticleBizOrder.OrderId">
            <summary>
            子订单号
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ArticleBizOrder.PromFee">
            <summary>
            优惠（单位为分）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ArticleBizOrder.RefundFee">
            <summary>
            退款（单位为分；升级时，系统会将升级前老版本按照剩余订购天数退还剩余金额）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ArticleBizOrder.TotalPayFee">
            <summary>
            实付（单位为分）
            </summary>
        </member>
        <member name="T:Top.Api.Domain.QrCodeStyle">
            <summary>
            QrCodeStyle Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.QrCodeStyle.BgColor">
            <summary>
            可选参数，二维背景色颜色值，接入业务点配置为准，未配置，默认为白
            </summary>
        </member>
        <member name="P:Top.Api.Domain.QrCodeStyle.Color">
            <summary>
            可选参数，二维码深色点颜色值，接入业务点配置为准，未配置，默认为黑
            </summary>
        </member>
        <member name="P:Top.Api.Domain.QrCodeStyle.Level">
            <summary>
            可选参数，二维码纠错级别 0=~7%,1=~15%,2=~25%,3=~30%
            </summary>
        </member>
        <member name="P:Top.Api.Domain.QrCodeStyle.Logo">
            <summary>
            可选参数，logo的淘宝tfs地址，默认无
            </summary>
        </member>
        <member name="P:Top.Api.Domain.QrCodeStyle.Margin">
            <summary>
            可选参数，二维码的边框，默认大小1个单位点，便于扫码
            </summary>
        </member>
        <member name="P:Top.Api.Domain.QrCodeStyle.Size">
            <summary>
            可选参数，二维码大小，值60～600，默认185pix
            </summary>
        </member>
        <member name="T:Top.Api.Domain.TicketItemProcessResult">
            <summary>
            TicketItemProcessResult Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TicketItemProcessResult.Broken">
            <summary>
            商品操作流程是否被迫终止。  如果broken==false则表示成功发布商品，则通过item_id字段获取新生成商品id；  如果broken==true则表示发布商品遇到问题，则通过broken_reasons字段获取到失败原因。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TicketItemProcessResult.BrokenReasons">
            <summary>
            操作商品遇到的错误原因
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TicketItemProcessResult.ItemId">
            <summary>
            成功操作的商品标识
            </summary>
        </member>
        <member name="T:Top.Api.Domain.ADGroupCatMatchForecast">
            <summary>
            ADGroupCatMatchForecast Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ADGroupCatMatchForecast.AdgroupId">
            <summary>
            推广组ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ADGroupCatMatchForecast.CatmatchId">
            <summary>
            类目出价ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ADGroupCatMatchForecast.Nick">
            <summary>
            昵称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ADGroupCatMatchForecast.PriceClick">
            <summary>
            点击预估；根据出价预估点击量 40:784,50:1007表示出价40分点击量为783；出价50分点击量为1007
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ADGroupCatMatchForecast.PriceCust">
            <summary>
            消耗预估；根据出价预估消耗。40:20,50:21表示出价40元分，消耗20分；出价50分消耗21分
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ADGroupCatMatchForecast.PriceRank">
            <summary>
            排名预估;根据出价预估排名。 40:101,41:101表示出价40分排名101位；出价41分排名101位
            </summary>
        </member>
        <member name="T:Top.Api.Domain.CampaignSchedule">
            <summary>
            CampaignSchedule Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.CampaignSchedule.CampaignId">
            <summary>
            推广计划ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.CampaignSchedule.CreateTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.CampaignSchedule.ModifiedTime">
            <summary>
            最后修改时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.CampaignSchedule.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.CampaignSchedule.Schedule">
            <summary>
            值为：“all”；或者用“;”分割的每天的设置字符串，该字符串为用“,”分割的时段折扣字符串，格式为：起始时间-结束时间:折扣，其中时间是24小时格式记录18:30，，折扣是1-150整数，表示折扣百分比；
            </summary>
        </member>
        <member name="T:Top.Api.Domain.InsightWordPriceDistributeDataDTO">
            <summary>
            InsightWordPriceDistributeDataDTO Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordPriceDistributeDataDTO.Bidword">
            <summary>
            关键词
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordPriceDistributeDataDTO.Click">
            <summary>
            点击量
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordPriceDistributeDataDTO.Competition">
            <summary>
            竞争度
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordPriceDistributeDataDTO.Cost">
            <summary>
            花费，单位（分）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordPriceDistributeDataDTO.Coverage">
            <summary>
            点击转化率
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordPriceDistributeDataDTO.Cpc">
            <summary>
            平均点击花费
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordPriceDistributeDataDTO.Ctr">
            <summary>
            点击率
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordPriceDistributeDataDTO.Directtransaction">
            <summary>
            直接成交金额
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordPriceDistributeDataDTO.Directtransactionshipping">
            <summary>
            直接成交笔数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordPriceDistributeDataDTO.Favitemtotal">
            <summary>
            宝贝搜藏数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordPriceDistributeDataDTO.Favshoptotal">
            <summary>
            店铺搜藏数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordPriceDistributeDataDTO.Favtotal">
            <summary>
            总的收藏数，包括宝贝收藏和店铺收藏
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordPriceDistributeDataDTO.Impression">
            <summary>
            展现量
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordPriceDistributeDataDTO.Indirecttransaction">
            <summary>
            间接成交金额
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordPriceDistributeDataDTO.Indirecttransactionshipping">
            <summary>
            间接成交笔数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordPriceDistributeDataDTO.Price">
            <summary>
            竞价区间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordPriceDistributeDataDTO.Roi">
            <summary>
            投入产出比
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordPriceDistributeDataDTO.Transactionshippingtotal">
            <summary>
            总的成交笔数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordPriceDistributeDataDTO.Transactiontotal">
            <summary>
            成交总金额
            </summary>
        </member>
        <member name="T:Top.Api.Domain.Item">
            <summary>
            Item Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.AfterSaleId">
            <summary>
            售后服务ID,该字段仅在taobao.item.get接口中返回
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.Appkey">
            <summary>
            应用AppKey
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.ApproveStatus">
            <summary>
            商品上传后的状态。onsale出售中，instock库中
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.AuctionPoint">
            <summary>
            商品的积分返点比例。如:5,表示:返点比例0.5%
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.AutoFill">
            <summary>
            代充商品类型。在代充商品的类目下，不传表示不标记商品类型（交易搜索中就不能通过标记搜到相关的交易了）。可选类型： no_mark(不做类型标记) time_card(点卡软件代充) fee_card(话费软件代充)
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.AutoRepost">
            <summary>
            自动重发,true/false
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.Barcode">
            <summary>
            商品级别的条形码
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.CallbackUrl">
            <summary>
            应用回调地址
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.ChangeProp">
            <summary>
            基础色数据
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.ChaoshiExtendsInfo">
            <summary>
            天猫超市扩展字段，天猫超市专用。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.Cid">
            <summary>
            商品所属的叶子类目 id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.CodPostageId">
            <summary>
            货到付款运费模板ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.CpvMemo">
            <summary>
            cpv_memo
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.Created">
            <summary>
            Item的发布时间，目前仅供taobao.item.add和taobao.item.get可用
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.CuntaoItemSpecific">
            <summary>
            村淘特有商品级数据结构
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.CustomMadeTypeId">
            <summary>
            定制工具Id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.DelistTime">
            <summary>
            下架时间（格式：yyyy-MM-dd HH:mm:ss）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.DeliveryTime">
            <summary>
            发货时间信息
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.Desc">
            <summary>
            商品描述, 字数要大于5个字符，小于25000个字符
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.DescModuleInfo">
            <summary>
            宝贝描述规范化模块锚点信息
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.DescModules">
            <summary>
            商品描述模块化，模块列表，由List转化成jsonArray存入，后端逻辑验证通过，拼装成模块内容+锚点导航后存入desc中。数据结构具体参见Item_Desc_Module
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.DetailUrl">
            <summary>
            商品url
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.EmsFee">
            <summary>
            ems费用,格式：5.00；单位：元；精确到：分
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.ExpressFee">
            <summary>
            快递费用,格式：5.00；单位：元；精确到：分
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.Features">
            <summary>
            宝贝特征值，只有在Top支持的特征值才能保存到宝贝上
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.FoodSecurity">
            <summary>
            食品安全信息，包括：生产许可证编号、产品标准号、厂名、厂址等
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.FreightPayer">
            <summary>
            运费承担方式,seller（卖家承担），buyer(买家承担）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.GlobalStockCountry">
            <summary>
            全球购商品采购地信息（地区/国家），代表全球购商品的产地信息。
            </summary>
        </member>
        <!-- 对于成员“P:Top.Api.Domain.Item.GlobalStockDeliveryPlace”忽略有格式错误的 XML 注释 -->
        <member name="P:Top.Api.Domain.Item.GlobalStockTaxFreePromise">
            <summary>
            全球购商品卖家包税承诺，当值为true时，代表卖家承诺包税。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.GlobalStockType">
            <summary>
            全球购商品采购地信息（库存类型），有两种库存类型：现货和代购;参数值为1时代表现货，值为2时代表代购
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.GmtModified">
            <summary>
            
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.HasDiscount">
            <summary>
            支持会员打折,true/false
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.HasInvoice">
            <summary>
            是否有发票,true/false
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.HasShowcase">
            <summary>
            橱窗推荐,true/false
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.HasWarranty">
            <summary>
            是否有保修,true/false
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.Iid">
            <summary>
            商品iid
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.Increment">
            <summary>
            加价幅度。如果为0，代表系统代理幅度。在竞拍中，为了超越上一个出价，会员需要在当前出价上增加金额，这个金额就是加价幅度。卖家在发布宝贝的时候可以自定义加价幅度，也可以让系统自动代理加价。系统自动代理加价的加价幅度随着当前出价金额的增加而增加，我们建议会员使用系统自动代理加价，并请买家在出价前看清楚加价幅度的具体金额。另外需要注意是，此功能只适用于拍卖的商品。以下是系统自动代理加价幅度表：当前价（加价幅度 ）1-40（ 1 ）、41-100（ 2 ）、101-200（5 ）、201-500 （10）、501-1001（15）、001-2000（25）、2001-5000（50）、5001-10000（100）10001以上         200
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.InnerShopAuctionTemplateId">
            <summary>
            用户内店宝贝装修模板id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.InputCustomCpv">
            <summary>
            针对当前商品的自定义属性值
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.InputPids">
            <summary>
            用户自行输入的类目属性ID串。结构：&quot;pid1,pid2,pid3&quot;，如：&quot;20000&quot;（表示品牌） 注：通常一个类目下用户可输入的关键属性不超过1个。
            </summary>
        </member>
        <!-- 对于成员“P:Top.Api.Domain.Item.InputStr”忽略有格式错误的 XML 注释 -->
        <member name="P:Top.Api.Domain.Item.Is3D">
            <summary>
            是否是3D淘宝的商品
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.IsAreaSale">
            <summary>
            true:商品是区域限售商品；false:商品不是区域限售商品。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.IsCspu">
            <summary>
            是否为达尔文挂接成功了的商品
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.IsEx">
            <summary>
            是否在外部网店显示
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.IsFenxiao">
            <summary>
            非分销商品：0，代销：1，经销：2
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.IsLightningConsignment">
            <summary>
            是否24小时闪电发货
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.IsOffline">
            <summary>
            是否是线下商品。1：线上商品（默认值）；2：线上或线下商品；3：线下商品。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.IsPrepay">
            <summary>
            商品是否为先行赔付taobao.items.search和taobao.items.vip.search专用
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.IsTaobao">
            <summary>
            是否在淘宝显示
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.IsTiming">
            <summary>
            是否定时上架商品
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.IsVirtual">
            <summary>
            虚拟商品的状态字段
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.IsXinpin">
            <summary>
            标示商品是否为新品。值含义：true-是，false-否。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.ItemImgs">
            <summary>
            商品图片列表(包括主图)。fields中只设置item_img可以返回ItemImg结构体中所有字段，如果设置为item_img.id、item_img.url、item_img.position等形式就只会返回相应的字段
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.ItemSize">
            <summary>
            表示商品的体积，用于按体积计费的运费模板。该值的单位为立方米（m3）。该值支持两种格式的设置：格式1：bulk:3,单位为立方米(m3),表示直接设置为商品的体积。格式2：weight:10;breadth:10;height:10，单位为米（m）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.ItemWeight">
            <summary>
            商品的重量，用于按重量计费的运费模板。注意：单位为kg
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.LargeScreenImageUrl">
            <summary>
            门店大屏图
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.ListTime">
            <summary>
            上架时间（格式：yyyy-MM-dd HH:mm:ss）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.LocalityLife">
            <summary>
            本地生活电子交易凭证业务，目前此字段只涉及到的信息为有效期:如果有效期为起止日期类型，此值为2012-08-06,2012-08-16如果有效期为【购买成功日 至】类型则格式为2012-08-16如果有效期为天数类型则格式为3
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.Location">
            <summary>
            商品所在地
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.LogisticsInfo">
            <summary>
            物流信息,收货人信息,姓名，电话，地址
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.Modified">
            <summary>
            商品修改时间（格式：yyyy-MM-dd HH:mm:ss）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.MpicVideo">
            <summary>
            宝贝主图视频的数据信息，包括：视频ID，视频缩略图URL，视频时长，视频状态等信息。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.MsPayment">
            <summary>
            家装分阶段价格数据结构
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.Newprepay">
            <summary>
            是否为新消保法中的7天无理由退货
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.Nick">
            <summary>
            卖家昵称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.Num">
            <summary>
            商品数量
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.NumIid">
            <summary>
            商品数字id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.O2oBindService">
            <summary>
            是否绑定o2o
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.OneStation">
            <summary>
            是否淘1站商品
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.OpenIid">
            <summary>
            open_iid
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.OuterId">
            <summary>
            商家外部编码(可与商家外部系统对接)。需要授权才能获取。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.OuterShopAuctionTemplateId">
            <summary>
            用户外店装修模板id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.PaimaiInfo">
            <summary>
            用于保存拍卖有关的信息
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.PeriodSoldQuantity">
            <summary>
            周期销售库存
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.PicUrl">
            <summary>
            商品主图片地址
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.PostFee">
            <summary>
            平邮费用,格式：5.00；单位：元；精确到：分
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.PostageId">
            <summary>
            宝贝所属的运费模板ID，如果没有返回则说明没有使用运费模板
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.Price">
            <summary>
            商品价格，格式：5.00；单位：元；精确到：分
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.ProductId">
            <summary>
            宝贝所属产品的id(可能为空). 该字段可以通过taobao.products.search 得到
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.PromotedService">
            <summary>
            消保类型，多个类型以,分割。可取以下值：2：假一赔三；4：7天无理由退换货；taobao.items.search和taobao.items.vip.search专用
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.PropImgs">
            <summary>
            商品属性图片列表。fields中只设置prop_img可以返回PropImg结构体中所有字段，如果设置为prop_img.id、prop_img.url、prop_img.properties、prop_img.position等形式就只会返回相应的字段
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.PropertyAlias">
            <summary>
            属性值别名,比如颜色的自定义名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.Props">
            <summary>
            商品属性 格式：pid:vid;pid:vid
            </summary>
        </member>
        <!-- 对于成员“P:Top.Api.Domain.Item.PropsName”忽略有格式错误的 XML 注释 -->
        <member name="P:Top.Api.Domain.Item.Qualification">
            <summary>
            商品资质的信息，用URLEncoder做过转换，使用时，需要URLDecoder转换回来，默认字符集为：UTF-8
            </summary>
        </member>
        <!-- 对于成员“P:Top.Api.Domain.Item.Score”忽略有格式错误的 XML 注释 -->
        <member name="P:Top.Api.Domain.Item.SecondKill">
            <summary>
            秒杀商品类型。打上秒杀标记的商品，用户只能下架并不能再上架，其他任何编辑或删除操作都不能进行。如果用户想取消秒杀标记，需要联系小二进行操作。如果秒杀结束需要自由编辑请联系活动负责人（小二）去掉秒杀标记。可选类型web_only(只能通过web网络秒杀)wap_only(只能通过wap网络秒杀)web_and_wap(既能通过web秒杀也能通过wap秒杀)
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.SecondResult">
            <summary>
            达尔文数据挂接，第二步保存结果
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.SellPoint">
            <summary>
            商品卖点信息，天猫商家使用字段，最长150个字符。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.SellPromise">
            <summary>
            是否承诺退换货服务!
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.SellerCids">
            <summary>
            商品所属的店铺内卖家自定义类目列表
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.ShopType">
            <summary>
            店铺类型，B：天猫店铺，C：淘宝店铺
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.Skus">
            <summary>
            <a href="http://open.taobao.com/dev/index.php/Sku">Sku</a>列表。fields中只设置sku可以返回Sku结构体中所有字段，如果设置为sku.sku_id、sku.properties、sku.quantity等形式就只会返回相应的字段
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.SoldQuantity">
            <summary>
            商品销量
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.SpuConfirm">
            <summary>
            手机类目spu 确认信息字段
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.StuffStatus">
            <summary>
            商品新旧程度(全新:new，闲置:unused，二手：second)
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.SubStock">
            <summary>
            商品是否支持拍下减库存:1支持;2取消支持(付款减库存);0(默认)不更改 集市卖家默认拍下减库存; 商城卖家默认付款减库存
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.SubTitle">
            <summary>
            商品的子标题，给商品增加卖点等描述
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.TemplateId">
            <summary>
            页面模板id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.Title">
            <summary>
            商品标题,不能超过60字节
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.Type">
            <summary>
            商品类型(fixed:一口价;auction:拍卖)注：取消团购
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.ValidThru">
            <summary>
            有效期,7或者14（默认是7天）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.VideoId">
            <summary>
            该字段废弃，请勿使用。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.Videos">
            <summary>
            商品视频列表(目前只支持单个视频关联)。fields中只设置video可以返回Video结构体中所有字段，如果设置为video.id、video.video_id、video.url等形式就只会返回相应的字段
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.Violation">
            <summary>
            商品是否违规，违规：true , 不违规：false
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.Volume">
            <summary>
            对应搜索商品列表页的最近成交量,只有调用商品搜索:taobao.items.get和taobao.items.search的时候才能返回
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.WapDesc">
            <summary>
            不带html标签的desc文本信息，该字段只在taobao.item.get接口中返回
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.WapDetailUrl">
            <summary>
            适合wap应用的商品详情url ，该字段只在taobao.item.get接口中返回
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.WirelessDesc">
            <summary>
            无线的宝贝描述
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.WithHoldQuantity">
            <summary>
            预扣库存，即付款减库存的商品现在有多少处于未付款状态的订单
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Item.WwStatus">
            <summary>
            商品所属的商家的旺旺在线状况，taobao.items.search和taobao.items.vip.search专用
            </summary>
        </member>
        <member name="T:Top.Api.Domain.Ticket">
            <summary>
            Ticket Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Ticket.AuditSellerId">
            <summary>
            如果产品规格，需要商家审核，为商家审核用户ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Ticket.CreateUserId">
            <summary>
            创建人ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Ticket.GmtCreate">
            <summary>
            产品规格申请时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Ticket.GmtModified">
            <summary>
            产品规格审核单最后修改时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Ticket.Memo">
            <summary>
            关于审核原因，更详细的说明
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Ticket.Reason">
            <summary>
            审核原因
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Ticket.SpecId">
            <summary>
            产品规格ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Ticket.Status">
            <summary>
            1, "商家确认"  2, "商家拒绝"  3, "小二确认"  4, "小二拒绝"  5, "待商家处理"  6, "商家审核超时"  7, "待小二审核"  9, "品牌商确认"  10, "免审通过"  14, "免审拒绝"
            </summary>
        </member>
        <member name="F:Qimen.Api.QimenRequest`1.queryParameters">
            <summary>
            自定义URL参数
            </summary>
        </member>
        <member name="M:Qimen.Api.QimenRequest`1.GetApiName">
            <summary>
            获取API名称
            </summary>
            <returns></returns>
        </member>
        <member name="P:Qimen.Api.QimenRequest`1.CustomerId">
            <summary>
            客户ID号
            </summary>
        </member>
        <member name="P:Qimen.Api.QimenRequest`1.Timestamp">
            <summary>
            请求时间戳
            </summary>
        </member>
        <member name="P:Qimen.Api.QimenRequest`1.Version">
            <summary>
            API版本号
            </summary>
        </member>
        <member name="P:Qimen.Api.QimenRequest`1.TestType">
            <summary>
            测试类型
            </summary>
        </member>
        <member name="P:Qimen.Api.QimenRequest`1.Body">
            <summary>
            请求body体
            </summary>
        </member>
        <member name="T:Top.Api.TopBatchRequest">
            <summary>
            批量API请求包装类。
            </summary>
        </member>
        <member name="P:Top.Api.TopBatchRequest.PublicMethod">
            <summary>
            公共方法
            </summary>
        </member>
        <member name="P:Top.Api.TopBatchRequest.PublicParams">
            <summary>
            公共参数
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerCatelabelFindResponse">
            <summary>
            ZuanshiBannerCatelabelFindResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCatelabelFindResponse.Result">
            <summary>
            返回结果对象
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerCatelabelFindResponse.CatLabelDTODomain">
            <summary>
            CatLabelDTODomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCatelabelFindResponse.CatLabelDTODomain.CateId">
            <summary>
            类目ID
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCatelabelFindResponse.CatLabelDTODomain.CateName">
            <summary>
            类目名称
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerCatelabelFindResponse.ResultDTODomain">
            <summary>
            ResultDTODomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCatelabelFindResponse.ResultDTODomain.Labels">
            <summary>
            群体定向标签列表
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCatelabelFindResponse.ResultDTODomain.Message">
            <summary>
            message
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCatelabelFindResponse.ResultDTODomain.Success">
            <summary>
            调用是否成功,true-成功，false-失败
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerAdgroupAdzoneUnbindResponse">
            <summary>
            ZuanshiBannerAdgroupAdzoneUnbindResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdgroupAdzoneUnbindResponse.Result">
            <summary>
            返回结果
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerAdgroupAdzoneUnbindResponse.ResultDTODomain">
            <summary>
            ResultDTODomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdgroupAdzoneUnbindResponse.ResultDTODomain.Message">
            <summary>
            返回消息
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdgroupAdzoneUnbindResponse.ResultDTODomain.Success">
            <summary>
            调用是否成功
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAdvertiserAdzoneRtrptsTotalGetResponse">
            <summary>
            ZuanshiAdvertiserAdzoneRtrptsTotalGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRtrptsTotalGetResponse.AdzoneRealtimeRptTotalList">
            <summary>
            查询结果
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAdvertiserAdzoneRtrptsTotalGetResponse.DataDomain">
            <summary>
            DataDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRtrptsTotalGetResponse.DataDomain.AdPv">
            <summary>
            展现量
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRtrptsTotalGetResponse.DataDomain.AdgroupId">
            <summary>
            推广单元id
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRtrptsTotalGetResponse.DataDomain.AdgroupName">
            <summary>
            单元名
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRtrptsTotalGetResponse.DataDomain.AdzoneId">
            <summary>
            资源位id
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRtrptsTotalGetResponse.DataDomain.AdzoneName">
            <summary>
            资源位名
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRtrptsTotalGetResponse.DataDomain.CampaignId">
            <summary>
            计划id
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRtrptsTotalGetResponse.DataDomain.CampaignName">
            <summary>
            计划名
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRtrptsTotalGetResponse.DataDomain.Charge">
            <summary>
            花费
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRtrptsTotalGetResponse.DataDomain.Click">
            <summary>
            点击量
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRtrptsTotalGetResponse.DataDomain.Ctr">
            <summary>
            ctr
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRtrptsTotalGetResponse.DataDomain.Ecpc">
            <summary>
            ecpc
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRtrptsTotalGetResponse.DataDomain.Ecpm">
            <summary>
            ecpm
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRtrptsTotalGetResponse.DataDomain.LogDate">
            <summary>
            日期
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAdvertiserAdzoneRptsTotalGetResponse">
            <summary>
            ZuanshiAdvertiserAdzoneRptsTotalGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRptsTotalGetResponse.AdzoneOfflineRptTotalList">
            <summary>
            返回结果
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAdvertiserAdzoneRptsTotalGetResponse.DataDomain">
            <summary>
            DataDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRptsTotalGetResponse.DataDomain.AdPv">
            <summary>
            展现
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRptsTotalGetResponse.DataDomain.AdgroupId">
            <summary>
            单元id
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRptsTotalGetResponse.DataDomain.AdgroupName">
            <summary>
            定向名称
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRptsTotalGetResponse.DataDomain.AdzoneId">
            <summary>
            资源位id
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRptsTotalGetResponse.DataDomain.AdzoneName">
            <summary>
            资源位名称
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRptsTotalGetResponse.DataDomain.AlipayInShopNum">
            <summary>
            成交数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRptsTotalGetResponse.DataDomain.AlipayInshopAmt">
            <summary>
            成交额
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRptsTotalGetResponse.DataDomain.AvgAccessPageNum">
            <summary>
            平均访问页面数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRptsTotalGetResponse.DataDomain.AvgAccessTime">
            <summary>
            平均访问时长
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRptsTotalGetResponse.DataDomain.CampaignId">
            <summary>
            计划id
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRptsTotalGetResponse.DataDomain.CampaignName">
            <summary>
            计划名称
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRptsTotalGetResponse.DataDomain.CartNum">
            <summary>
            加购物车数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRptsTotalGetResponse.DataDomain.Charge">
            <summary>
            花费
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRptsTotalGetResponse.DataDomain.Click">
            <summary>
            点击
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRptsTotalGetResponse.DataDomain.Ctr">
            <summary>
            ctr
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRptsTotalGetResponse.DataDomain.Cvr">
            <summary>
            cvr
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRptsTotalGetResponse.DataDomain.DeepInshopUv">
            <summary>
            深度进店uv
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRptsTotalGetResponse.DataDomain.DirShopColNum">
            <summary>
            店铺收藏数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRptsTotalGetResponse.DataDomain.Ecpc">
            <summary>
            ecpc
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRptsTotalGetResponse.DataDomain.Ecpm">
            <summary>
            ecpm
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRptsTotalGetResponse.DataDomain.GmvInshopAmt">
            <summary>
            gmv成交额
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRptsTotalGetResponse.DataDomain.GmvInshopNum">
            <summary>
            gmv成交数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRptsTotalGetResponse.DataDomain.InshopItemColNum">
            <summary>
            宝贝收藏数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRptsTotalGetResponse.DataDomain.Roi">
            <summary>
            投入产出比
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRptsTotalGetResponse.DataDomain.Uv">
            <summary>
            uv
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAdvertiserAccountRptsGetResponse">
            <summary>
            ZuanshiAdvertiserAccountRptsGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAccountRptsGetResponse.AdvertiserAccRptList">
            <summary>
            广告主账户整体报表信息列表
            </summary>
        </member>
        <member name="T:Top.Api.Response.TmcGroupDeleteResponse">
            <summary>
            TmcGroupDeleteResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmcGroupDeleteResponse.IsSuccess">
            <summary>
            是否成功
            </summary>
        </member>
        <member name="T:Top.Api.Response.TbkUatmEventGetResponse">
            <summary>
            TbkUatmEventGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkUatmEventGetResponse.Results">
            <summary>
            淘客定向招商活动基本信息
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkUatmEventGetResponse.TotalResults">
            <summary>
            当前进行中的招商活动总条数
            </summary>
        </member>
        <member name="T:Top.Api.Response.RegionPriceQueryResponse">
            <summary>
            RegionPriceQueryResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.RegionPriceQueryResponse.Result">
            <summary>
            result
            </summary>
        </member>
        <member name="T:Top.Api.Response.RegionPriceQueryResponse.BaseResultDomain">
            <summary>
            BaseResultDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.RegionPriceQueryResponse.BaseResultDomain.Data">
            <summary>
            data
            </summary>
        </member>
        <member name="P:Top.Api.Response.RegionPriceQueryResponse.BaseResultDomain.ErrorCode">
            <summary>
            errorCode
            </summary>
        </member>
        <member name="P:Top.Api.Response.RegionPriceQueryResponse.BaseResultDomain.ErrorMsg">
            <summary>
            errorMsg
            </summary>
        </member>
        <member name="P:Top.Api.Response.RegionPriceQueryResponse.BaseResultDomain.Success">
            <summary>
            success
            </summary>
        </member>
        <member name="T:Top.Api.Response.OpenimUsersGetResponse">
            <summary>
            OpenimUsersGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.OpenimUsersGetResponse.Userinfos">
            <summary>
            获取的用户信息列表
            </summary>
        </member>
        <member name="T:Top.Api.Response.OpenimChatlogsImportResponse">
            <summary>
            OpenimChatlogsImportResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.OpenimChatlogsImportResponse.Message">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="P:Top.Api.Response.OpenimChatlogsImportResponse.Ret">
            <summary>
            错误码
            </summary>
        </member>
        <member name="P:Top.Api.Response.OpenimChatlogsImportResponse.Succ">
            <summary>
            是否成功
            </summary>
        </member>
        <member name="T:Top.Api.Response.InventoryWarehouseQueryResponse">
            <summary>
            InventoryWarehouseQueryResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.InventoryWarehouseQueryResponse.Result">
            <summary>
            result
            </summary>
        </member>
        <member name="T:Top.Api.Response.InventoryWarehouseQueryResponse.PaginationResultDomain">
            <summary>
            PaginationResultDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.InventoryWarehouseQueryResponse.PaginationResultDomain.Data">
            <summary>
            仓库信息数组
            </summary>
        </member>
        <member name="P:Top.Api.Response.InventoryWarehouseQueryResponse.PaginationResultDomain.ErrorCode">
            <summary>
            错误码
            </summary>
        </member>
        <member name="P:Top.Api.Response.InventoryWarehouseQueryResponse.PaginationResultDomain.ErrorMsg">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="P:Top.Api.Response.InventoryWarehouseQueryResponse.PaginationResultDomain.PageNo">
            <summary>
            页码
            </summary>
        </member>
        <member name="P:Top.Api.Response.InventoryWarehouseQueryResponse.PaginationResultDomain.PageSize">
            <summary>
            页大小
            </summary>
        </member>
        <member name="P:Top.Api.Response.InventoryWarehouseQueryResponse.PaginationResultDomain.Success">
            <summary>
            是否成功
            </summary>
        </member>
        <member name="P:Top.Api.Response.InventoryWarehouseQueryResponse.PaginationResultDomain.TotalCount">
            <summary>
            总条数
            </summary>
        </member>
        <member name="T:Top.Api.Response.InventoryMerchantAdjustResponse">
            <summary>
            InventoryMerchantAdjustResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.InventoryMerchantAdjustResponse.Result">
            <summary>
            result
            </summary>
        </member>
        <member name="T:Top.Api.Response.InventoryMerchantAdjustResponse.InventoryCheckResultDtoDomain">
            <summary>
            InventoryCheckResultDtoDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.InventoryMerchantAdjustResponse.InventoryCheckResultDtoDomain.ErrorCode">
            <summary>
            错误码
            </summary>
        </member>
        <member name="P:Top.Api.Response.InventoryMerchantAdjustResponse.InventoryCheckResultDtoDomain.ErrorMsg">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="P:Top.Api.Response.InventoryMerchantAdjustResponse.InventoryCheckResultDtoDomain.SubOrderId">
            <summary>
            每个货品的调整子单据号，作为业务调整依据，处理时会幂等
            </summary>
        </member>
        <member name="P:Top.Api.Response.InventoryMerchantAdjustResponse.InventoryCheckResultDtoDomain.Success">
            <summary>
            每个子调整单据是否成功
            </summary>
        </member>
        <member name="T:Top.Api.Response.InventoryMerchantAdjustResponse.SingleResultDomain">
            <summary>
            SingleResultDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.InventoryMerchantAdjustResponse.SingleResultDomain.AdjustResults">
            <summary>
            data
            </summary>
        </member>
        <member name="P:Top.Api.Response.InventoryMerchantAdjustResponse.SingleResultDomain.ErrorCode">
            <summary>
            错误码
            </summary>
        </member>
        <member name="P:Top.Api.Response.InventoryMerchantAdjustResponse.SingleResultDomain.ErrorMessage">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="P:Top.Api.Response.InventoryMerchantAdjustResponse.SingleResultDomain.Success">
            <summary>
            如果是失败，可能是部分失败。如果是成功，则全部成功
            </summary>
        </member>
        <member name="T:Top.Api.Response.FenxiaoProductSkuUpdateResponse">
            <summary>
            FenxiaoProductSkuUpdateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoProductSkuUpdateResponse.Created">
            <summary>
            操作时间
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoProductSkuUpdateResponse.Result">
            <summary>
            操作结果
            </summary>
        </member>
        <member name="T:Top.Api.Response.DmpTagFindResponse">
            <summary>
            DmpTagFindResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.DmpTagFindResponse.Result">
            <summary>
            返回结果
            </summary>
        </member>
        <member name="T:Top.Api.Response.DmpTagFindResponse.TagOptionGroupDtoDomain">
            <summary>
            TagOptionGroupDtoDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.DmpTagFindResponse.TagOptionGroupDtoDomain.GroupName">
            <summary>
            标签选项分组名称
            </summary>
        </member>
        <member name="P:Top.Api.Response.DmpTagFindResponse.TagOptionGroupDtoDomain.Id">
            <summary>
            标签选项分组ID
            </summary>
        </member>
        <member name="P:Top.Api.Response.DmpTagFindResponse.TagOptionGroupDtoDomain.Type">
            <summary>
            标签类型
            </summary>
        </member>
        <member name="T:Top.Api.Response.DmpTagFindResponse.TagDTODomain">
            <summary>
            TagDTODomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.DmpTagFindResponse.TagDTODomain.Id">
            <summary>
            标签ID
            </summary>
        </member>
        <member name="P:Top.Api.Response.DmpTagFindResponse.TagDTODomain.TagDesc">
            <summary>
            标签描述
            </summary>
        </member>
        <member name="P:Top.Api.Response.DmpTagFindResponse.TagDTODomain.TagName">
            <summary>
            标签名称
            </summary>
        </member>
        <member name="P:Top.Api.Response.DmpTagFindResponse.TagDTODomain.TagOptionGroupDTOs">
            <summary>
            tagOptionGroupDTOs
            </summary>
        </member>
        <member name="P:Top.Api.Response.DmpTagFindResponse.TagDTODomain.TagShare">
            <summary>
            1-共享标签,0-私有标签
            </summary>
        </member>
        <member name="P:Top.Api.Response.DmpTagFindResponse.TagDTODomain.ValidDate">
            <summary>
            有效期
            </summary>
        </member>
        <member name="T:Top.Api.Response.DmpTagFindResponse.ResultDTODomain">
            <summary>
            ResultDTODomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.DmpTagFindResponse.ResultDTODomain.InnerMsg">
            <summary>
            调用消息
            </summary>
        </member>
        <member name="P:Top.Api.Response.DmpTagFindResponse.ResultDTODomain.Success">
            <summary>
            是否成功
            </summary>
        </member>
        <member name="P:Top.Api.Response.DmpTagFindResponse.ResultDTODomain.Tags">
            <summary>
            标签列表
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiBannerDmpCrowdApplyRequest">
            <summary>
            TOP API: taobao.zuanshi.banner.dmp.crowd.apply
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerDmpCrowdApplyRequest.CrowdId">
            <summary>
            DMP人群ID
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiBannerCreativeFindRequest">
            <summary>
            TOP API: taobao.zuanshi.banner.creative.find
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCreativeFindRequest.AdgroupId">
            <summary>
            单元ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCreativeFindRequest.AuditStatusList">
            <summary>
            待审核：-4,-1,0，审核通过：1，审核拒绝：-2,-5,-9
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCreativeFindRequest.CampaignId">
            <summary>
            计划ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCreativeFindRequest.CreativeLevel">
            <summary>
            创意等级,1：一级，2：二级，3：三级，4：四级，10：十级，99：未分级
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCreativeFindRequest.FormatList">
            <summary>
            图片：2，flash：3，视频：4，文字链：5，Flash不遮盖：9，模板：10，
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCreativeFindRequest.Name">
            <summary>
            创意名称
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCreativeFindRequest.OnlineStatus">
            <summary>
            在线状态：1：正常，-1：回收站
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCreativeFindRequest.PageNum">
            <summary>
            当前页码
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCreativeFindRequest.PageSize">
            <summary>
            分页大小
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCreativeFindRequest.SizeList">
            <summary>
            尺寸列表，200x300
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiBannerAdgroupGetRequest">
            <summary>
            TOP API: taobao.zuanshi.banner.adgroup.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerAdgroupGetRequest.Id">
            <summary>
            单元ID
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiBannerAdgroupCreateRequest">
            <summary>
            TOP API: taobao.zuanshi.banner.adgroup.create
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerAdgroupCreateRequest.AdzoneBidList">
            <summary>
            资源位列表
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerAdgroupCreateRequest.CampaignId">
            <summary>
            计划ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerAdgroupCreateRequest.Crowds">
            <summary>
            绑定定向
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerAdgroupCreateRequest.IntelligentBid">
            <summary>
            智能出价，0：不使用,1：优化进店，2：优化成交，cpc不能选择2优化成交
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerAdgroupCreateRequest.Name">
            <summary>
            单元名称
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiBannerAdgroupCreateRequest.SubCrowdDomain">
            <summary>
            SubCrowdDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerAdgroupCreateRequest.SubCrowdDomain.SubCrowdName">
            <summary>
            子人群名称
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerAdgroupCreateRequest.SubCrowdDomain.SubCrowdValue">
            <summary>
            子人群值
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiBannerAdgroupCreateRequest.MatrixPriceDomain">
            <summary>
            MatrixPriceDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerAdgroupCreateRequest.MatrixPriceDomain.AdzoneId">
            <summary>
            资源位ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerAdgroupCreateRequest.MatrixPriceDomain.Price">
            <summary>
            出价，单元分
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiBannerAdgroupCreateRequest.CrowdDomain">
            <summary>
            CrowdDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerAdgroupCreateRequest.CrowdDomain.CrowdName">
            <summary>
            定向名称
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerAdgroupCreateRequest.CrowdDomain.CrowdType">
            <summary>
            定向类型
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerAdgroupCreateRequest.CrowdDomain.CrowdValue">
            <summary>
            主人群值
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerAdgroupCreateRequest.CrowdDomain.MatrixPrice">
            <summary>
            交叉出价
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerAdgroupCreateRequest.CrowdDomain.SubCrowds">
            <summary>
            子人群
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiBannerAdgroupCreateRequest.AdzoneBidDomain">
            <summary>
            AdzoneBidDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerAdgroupCreateRequest.AdzoneBidDomain.AdzoneId">
            <summary>
            资源位ID
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiAdvertiserTargetAdzoneRptsTotalGetRequest">
            <summary>
            TOP API: taobao.zuanshi.advertiser.target.adzone.rpts.total.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserTargetAdzoneRptsTotalGetRequest.AdgroupId">
            <summary>
            单元id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserTargetAdzoneRptsTotalGetRequest.AdzoneId">
            <summary>
            资源位id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserTargetAdzoneRptsTotalGetRequest.CampaignId">
            <summary>
            计划id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserTargetAdzoneRptsTotalGetRequest.Effect">
            <summary>
            效果周期，取值范围：3,7,15。分别表示效果转化周期-3天/7天/15天。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserTargetAdzoneRptsTotalGetRequest.EffectType">
            <summary>
            效果类型。“impression”：展现效果；“click”：点击效果
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserTargetAdzoneRptsTotalGetRequest.EndTime">
            <summary>
            结束日期
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserTargetAdzoneRptsTotalGetRequest.Offset">
            <summary>
            分页偏移量
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserTargetAdzoneRptsTotalGetRequest.PageSize">
            <summary>
            每页条数，必传；每页最多200
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserTargetAdzoneRptsTotalGetRequest.StartTime">
            <summary>
            开始日期
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserTargetAdzoneRptsTotalGetRequest.TargetId">
            <summary>
            定向id
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiAdvertiserAccountRptsDayGetRequest">
            <summary>
            TOP API: taobao.zuanshi.advertiser.account.rpts.day.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAccountRptsDayGetRequest.CampaignModel">
            <summary>
            计划类型。1：全店推广；4单品推广。不传则返回全店、单品加和数据
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAccountRptsDayGetRequest.Effect">
            <summary>
            效果周期，取值范围：3,7,15。分别表示效果转化周期-3天/7天/15天。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAccountRptsDayGetRequest.EffectType">
            <summary>
            效果类型。“impression”：展现效果；“click”：点击效果
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAccountRptsDayGetRequest.EndTime">
            <summary>
            结束日期
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAccountRptsDayGetRequest.StartTime">
            <summary>
            开始日期
            </summary>
        </member>
        <member name="T:Top.Api.Request.TmcMessagesConfirmRequest">
            <summary>
            TOP API: taobao.tmc.messages.confirm
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmcMessagesConfirmRequest.FMessageIds">
            <summary>
            处理失败的消息ID列表--已废弃，无需传此字段
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmcMessagesConfirmRequest.GroupName">
            <summary>
            分组名称，不传代表默认分组
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmcMessagesConfirmRequest.SMessageIds">
            <summary>
            处理成功的消息ID列表 最大 200个ID
            </summary>
        </member>
        <member name="T:Top.Api.Request.TbkDataReportRequest">
            <summary>
            TOP API: taobao.tbk.data.report
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkDataReportRequest.Data">
            <summary>
            dataId必须是唯一的日志id
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkDataReportRequest.Type">
            <summary>
            推广日志填1
            </summary>
        </member>
        <member name="T:Top.Api.Request.OpenimTribeModifytribeinfoRequest">
            <summary>
            TOP API: taobao.openim.tribe.modifytribeinfo
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimTribeModifytribeinfoRequest.Notice">
            <summary>
            群公告
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimTribeModifytribeinfoRequest.TribeId">
            <summary>
            群id
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimTribeModifytribeinfoRequest.TribeName">
            <summary>
            群名称
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimTribeModifytribeinfoRequest.User">
            <summary>
            用户信息
            </summary>
        </member>
        <member name="T:Top.Api.Request.OpenimTribeGettribeinfoRequest">
            <summary>
            TOP API: taobao.openim.tribe.gettribeinfo
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimTribeGettribeinfoRequest.TribeId">
            <summary>
            群ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimTribeGettribeinfoRequest.User">
            <summary>
            用户信息
            </summary>
        </member>
        <member name="T:Top.Api.Request.ItemSchemaAddRequest">
            <summary>
            TOP API: taobao.item.schema.add
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemSchemaAddRequest.CategoryId">
            <summary>
            当前发布的叶子类目
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemSchemaAddRequest.XmlData">
            <summary>
            将需要发布的商品数据组装成的xml格式数据
            </summary>
        </member>
        <member name="T:Top.Api.Request.InventoryStoreQueryRequest">
            <summary>
            TOP API: taobao.inventory.store.query
            </summary>
        </member>
        <member name="P:Top.Api.Request.InventoryStoreQueryRequest.StoreCode">
            <summary>
            商家的仓库编码
            </summary>
        </member>
        <member name="T:Top.Api.Request.FenxiaoProductcatUpdateRequest">
            <summary>
            TOP API: taobao.fenxiao.productcat.update
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductcatUpdateRequest.AgentCostPercent">
            <summary>
            代销默认采购价比例，注意：100.00%，则输入为10000
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductcatUpdateRequest.DealerCostPercent">
            <summary>
            经销默认采购价比例，注意：100.00%，则输入为10000
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductcatUpdateRequest.Name">
            <summary>
            产品线名称
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductcatUpdateRequest.ProductLineId">
            <summary>
            产品线ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductcatUpdateRequest.RetailHighPercent">
            <summary>
            最高零售价比例，注意：100.00%，则输入为10000
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductcatUpdateRequest.RetailLowPercent">
            <summary>
            最低零售价比例，注意：100.00%，则输入为10000
            </summary>
        </member>
        <member name="T:Top.Api.Request.FenxiaoProductcatAddRequest">
            <summary>
            TOP API: taobao.fenxiao.productcat.add
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductcatAddRequest.AgentCostPercent">
            <summary>
            代销默认采购价比例，注意：100.00%，则输入为10000
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductcatAddRequest.DealerCostPercent">
            <summary>
            经销默认采购价比例，注意：100.00%，则输入为10000
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductcatAddRequest.Name">
            <summary>
            产品线名称
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductcatAddRequest.RetailHighPercent">
            <summary>
            最高零售价比例，注意：100.00%，则输入为10000
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductcatAddRequest.RetailLowPercent">
            <summary>
            最低零售价比例，注意：100.00%，则输入为10000
            </summary>
        </member>
        <member name="T:Top.Api.Request.FenxiaoCooperationUpdateRequest">
            <summary>
            TOP API: taobao.fenxiao.cooperation.update
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoCooperationUpdateRequest.DistributorId">
            <summary>
            分销商ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoCooperationUpdateRequest.GradeId">
            <summary>
            等级ID(0代表取消)
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoCooperationUpdateRequest.TradeType">
            <summary>
            分销方式(新增)： AGENT(代销)、DEALER(经销)(默认为代销)
            </summary>
        </member>
        <member name="T:Top.Api.Request.DmpCrowdRemoveRequest">
            <summary>
            TOP API: taobao.dmp.crowd.remove
            </summary>
        </member>
        <member name="P:Top.Api.Request.DmpCrowdRemoveRequest.CrowdId">
            <summary>
            人群ID,必须为自己的人群
            </summary>
        </member>
        <member name="T:RemotingProtocolParser.MessageHeader">
            <summary>remoting message header define
            </summary>
        </member>
        <member name="T:Taobao.Top.Link.Endpoints.EndpointProxy">
            <summary>logic endpoint local proxy object
            </summary>
        </member>
        <member name="M:Taobao.Top.Link.Endpoints.EndpointProxy.hasValidSender">
            <summary>check is there any sender can be used to send
            </summary>
            <returns></returns>
        </member>
        <member name="M:Taobao.Top.Link.Endpoints.EndpointProxy.SendAndWait(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>send message and wait reply
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:Taobao.Top.Link.Endpoints.EndpointProxy.SendAndWait(System.Collections.Generic.IDictionary{System.String,System.Object},System.Int32)">
            <summary>send message and wait reply
            </summary>
            <param name="message"></param>
            <param name="timeout">timeout in milliseconds</param>
            <returns></returns>
        </member>
        <member name="M:Taobao.Top.Link.Endpoints.EndpointProxy.SendAndWait(Taobao.Top.Link.Channel.IChannelSender,System.Collections.Generic.IDictionary{System.String,System.Object},System.Int32)">
            <summary>send message and wait reply
            </summary>
            <param name="sender">use to send, must belong this proxy</param>
            <param name="message"></param>
            <param name="timeout">timeout in milliseconds</param>
            <returns></returns>
        </member>
        <member name="M:Taobao.Top.Link.Endpoints.EndpointProxy.Send(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>send message
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Taobao.Top.Link.Endpoints.EndpointProxy.Send(Taobao.Top.Link.Channel.IChannelSender,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>send message
            </summary>
            <param name="sender">use to send, must belong this proxy</param>
            <param name="message"></param>
        </member>
        <member name="P:Taobao.Top.Link.Endpoints.EndpointProxy.Identity">
            <summary>get id
            </summary>
        </member>
        <member name="P:Taobao.Top.Link.Endpoints.EndpointProxy.Token">
            <summary>known by both side, like a sessionId
            </summary>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Core.ScanEventArgs">
            <summary>
            Event arguments for scanning.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Core.ScanEventArgs.#ctor(System.String)">
            <summary>
            Initialise a new instance of <see cref="T:ICSharpCode.SharpZipLib.Core.ScanEventArgs"/>
            </summary>
            <param name="name">The file or directory name.</param>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Core.ScanEventArgs.Name">
            <summary>
            The file or directory name for this event.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Core.ScanEventArgs.ContinueRunning">
            <summary>
            Get set a value indicating if scanning should continue or not.
            </summary>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Core.ProgressEventArgs">
            <summary>
            Event arguments during processing of a single file or directory.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Core.ProgressEventArgs.#ctor(System.String,System.Int64,System.Int64)">
            <summary>
            Initialise a new instance of <see cref="T:ICSharpCode.SharpZipLib.Core.ScanEventArgs"/>
            </summary>
            <param name="name">The file or directory name if known.</param>
            <param name="processed">The number of bytes processed so far</param>
            <param name="target">The total number of bytes to process, 0 if not known</param>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Core.ProgressEventArgs.Name">
            <summary>
            The name for this event if known.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Core.ProgressEventArgs.ContinueRunning">
            <summary>
            Get set a value indicating wether scanning should continue or not.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Core.ProgressEventArgs.PercentComplete">
            <summary>
            Get a percentage representing how much of the <see cref="P:ICSharpCode.SharpZipLib.Core.ProgressEventArgs.Target"></see> has been processed
            </summary>
            <value>0.0 to 100.0 percent; 0 if target is not known.</value>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Core.ProgressEventArgs.Processed">
            <summary>
            The number of bytes processed so far
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Core.ProgressEventArgs.Target">
            <summary>
            The number of bytes to process.
            </summary>
            <remarks>Target may be 0 or negative if the value isnt known.</remarks>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Core.DirectoryEventArgs">
            <summary>
            Event arguments for directories.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Core.DirectoryEventArgs.#ctor(System.String,System.Boolean)">
            <summary>
            Initialize an instance of <see cref="T:ICSharpCode.SharpZipLib.Core.DirectoryEventArgs"></see>.
            </summary>
            <param name="name">The name for this directory.</param>
            <param name="hasMatchingFiles">Flag value indicating if any matching files are contained in this directory.</param>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Core.DirectoryEventArgs.HasMatchingFiles">
            <summary>
            Get a value indicating if the directory contains any matching files or not.
            </summary>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Core.ScanFailureEventArgs">
            <summary>
            Arguments passed when scan failures are detected.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Core.ScanFailureEventArgs.#ctor(System.String,System.Exception)">
            <summary>
            Initialise a new instance of <see cref="T:ICSharpCode.SharpZipLib.Core.ScanFailureEventArgs"></see>
            </summary>
            <param name="name">The name to apply.</param>
            <param name="e">The exception to use.</param>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Core.ScanFailureEventArgs.Name">
            <summary>
            The applicable name.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Core.ScanFailureEventArgs.Exception">
            <summary>
            The applicable exception.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Core.ScanFailureEventArgs.ContinueRunning">
            <summary>
            Get / set a value indicating wether scanning should continue.
            </summary>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Core.ProcessDirectoryHandler">
            <summary>
            Delegate invoked before starting to process a directory.
            </summary>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Core.ProcessFileHandler">
            <summary>
            Delegate invoked before starting to process a file.
            </summary>
            <param name="sender">The source of the event</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Core.ProgressHandler">
            <summary>
            Delegate invoked during processing of a file or directory
            </summary>
            <param name="sender">The source of the event</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Core.CompletedFileHandler">
            <summary>
            Delegate invoked when a file has been completely processed.
            </summary>
            <param name="sender">The source of the event</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Core.DirectoryFailureHandler">
            <summary>
            Delegate invoked when a directory failure is detected.
            </summary>
            <param name="sender">The source of the event</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Core.FileFailureHandler">
            <summary>
            Delegate invoked when a file failure is detected.
            </summary>
            <param name="sender">The source of the event</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Core.FileSystemScanner">
            <summary>
            FileSystemScanner provides facilities scanning of files and directories.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Core.FileSystemScanner.#ctor(System.String)">
            <summary>
            Initialise a new instance of <see cref="T:ICSharpCode.SharpZipLib.Core.FileSystemScanner"></see>
            </summary>
            <param name="filter">The <see cref="T:ICSharpCode.SharpZipLib.Core.PathFilter">file filter</see> to apply when scanning.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Core.FileSystemScanner.#ctor(System.String,System.String)">
            <summary>
            Initialise a new instance of <see cref="T:ICSharpCode.SharpZipLib.Core.FileSystemScanner"></see>
            </summary>
            <param name="fileFilter">The <see cref="T:ICSharpCode.SharpZipLib.Core.PathFilter">file filter</see> to apply.</param>
            <param name="directoryFilter">The <see cref="T:ICSharpCode.SharpZipLib.Core.PathFilter"> directory filter</see> to apply.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Core.FileSystemScanner.#ctor(ICSharpCode.SharpZipLib.Core.IScanFilter)">
            <summary>
            Initialise a new instance of <see cref="T:ICSharpCode.SharpZipLib.Core.FileSystemScanner"></see>
            </summary>
            <param name="fileFilter">The file <see cref="T:ICSharpCode.SharpZipLib.Core.IScanFilter">filter</see> to apply.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Core.FileSystemScanner.#ctor(ICSharpCode.SharpZipLib.Core.IScanFilter,ICSharpCode.SharpZipLib.Core.IScanFilter)">
            <summary>
            Initialise a new instance of <see cref="T:ICSharpCode.SharpZipLib.Core.FileSystemScanner"></see>
            </summary>
            <param name="fileFilter">The file <see cref="T:ICSharpCode.SharpZipLib.Core.IScanFilter">filter</see>  to apply.</param>
            <param name="directoryFilter">The directory <see cref="T:ICSharpCode.SharpZipLib.Core.IScanFilter">filter</see>  to apply.</param>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Core.FileSystemScanner.ProcessDirectory">
            <summary>
            Delegate to invoke when a directory is processed.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Core.FileSystemScanner.ProcessFile">
            <summary>
            Delegate to invoke when a file is processed.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Core.FileSystemScanner.CompletedFile">
            <summary>
            Delegate to invoke when processing for a file has finished.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Core.FileSystemScanner.DirectoryFailure">
            <summary>
            Delegate to invoke when a directory failure is detected.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Core.FileSystemScanner.FileFailure">
            <summary>
            Delegate to invoke when a file failure is detected.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Core.FileSystemScanner.OnDirectoryFailure(System.String,System.Exception)">
            <summary>
            Raise the DirectoryFailure event.
            </summary>
            <param name="directory">The directory name.</param>
            <param name="e">The exception detected.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Core.FileSystemScanner.OnFileFailure(System.String,System.Exception)">
            <summary>
            Raise the FileFailure event.
            </summary>
            <param name="file">The file name.</param>
            <param name="e">The exception detected.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Core.FileSystemScanner.OnProcessFile(System.String)">
            <summary>
            Raise the ProcessFile event.
            </summary>
            <param name="file">The file name.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Core.FileSystemScanner.OnCompleteFile(System.String)">
            <summary>
            Raise the complete file event
            </summary>
            <param name="file">The file name</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Core.FileSystemScanner.OnProcessDirectory(System.String,System.Boolean)">
            <summary>
            Raise the ProcessDirectory event.
            </summary>
            <param name="directory">The directory name.</param>
            <param name="hasMatchingFiles">Flag indicating if the directory has matching files.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Core.FileSystemScanner.Scan(System.String,System.Boolean)">
            <summary>
            Scan a directory.
            </summary>
            <param name="directory">The base directory to scan.</param>
            <param name="recurse">True to recurse subdirectories, false to scan a single directory.</param>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Core.FileSystemScanner.fileFilter_">
            <summary>
            The file filter currently in use.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Core.FileSystemScanner.directoryFilter_">
            <summary>
            The directory filter currently in use.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Core.FileSystemScanner.alive_">
            <summary>
            Flag indicating if scanning should continue running.
            </summary>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Checksums.StrangeCRC">
            <summary>
            Bzip2 checksum algorithm
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Checksums.StrangeCRC.#ctor">
            <summary>
            Initialise a default instance of <see cref="T:ICSharpCode.SharpZipLib.Checksums.StrangeCRC"></see>
            </summary>	
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Checksums.StrangeCRC.Reset">
            <summary>
            Reset the state of Crc.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Checksums.StrangeCRC.Update(System.Int32)">
            <summary>
            Update the Crc value.
            </summary>
            <param name="value">data update is based on</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Checksums.StrangeCRC.Update(System.Byte[])">
            <summary>
            Update Crc based on a block of data
            </summary>
            <param name="buffer">The buffer containing data to update the crc with.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Checksums.StrangeCRC.Update(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Update Crc based on a portion of a block of data
            </summary>
            <param name="buffer">block of data</param>
            <param name="offset">index of first byte to use</param>
            <param name="count">number of bytes to use</param>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Checksums.StrangeCRC.Value">
            <summary>
            Get the current Crc value.
            </summary>
        </member>
        <member name="T:Top.Api.Domain.Tracks">
            <summary>
            Tracks Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Tracks.EnterTime">
            <summary>
            轨迹发生的时间，即用户进入页面的时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Tracks.RefererKeyword">
            <summary>
            referer_keyword
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Tracks.RefererUrl">
            <summary>
            referer_url
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Tracks.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Tracks.Url">
            <summary>
            url
            </summary>
        </member>
        <member name="T:Top.Api.Domain.MsgGroupDO">
            <summary>
            MsgGroupDO Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.MsgGroupDO.Appkey">
            <summary>
            123
            </summary>
        </member>
        <member name="P:Top.Api.Domain.MsgGroupDO.Description">
            <summary>
            123
            </summary>
        </member>
        <member name="P:Top.Api.Domain.MsgGroupDO.GmtCreate">
            <summary>
            123
            </summary>
        </member>
        <member name="P:Top.Api.Domain.MsgGroupDO.GmtModified">
            <summary>
            123
            </summary>
        </member>
        <member name="P:Top.Api.Domain.MsgGroupDO.Id">
            <summary>
            123
            </summary>
        </member>
        <member name="P:Top.Api.Domain.MsgGroupDO.Name">
            <summary>
            123
            </summary>
        </member>
        <member name="T:Top.Api.Domain.FenxiaoGrade">
            <summary>
            FenxiaoGrade Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoGrade.Created">
            <summary>
            记录创建时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoGrade.GradeId">
            <summary>
            主键
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoGrade.Modified">
            <summary>
            记录最后修改时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoGrade.Name">
            <summary>
            分销商等级名称
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaAdgroupCatmatchforecastGetResponse">
            <summary>
            SimbaAdgroupCatmatchforecastGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaAdgroupCatmatchforecastGetResponse.AdgroupCatmatchForecast">
            <summary>
            类目出价预估结果信息 预测数据皆为估算结果，以实际发生为准
            </summary>
        </member>
        <member name="T:Top.Api.Response.LogisticsOnlineSendResponse">
            <summary>
            LogisticsOnlineSendResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.LogisticsOnlineSendResponse.Shipping">
            <summary>
            de
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaInsightCatsforecastnewGetResponse">
            <summary>
            SimbaInsightCatsforecastnewGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaInsightCatsforecastnewGetResponse.CategoryForecastList">
            <summary>
            词的相关类目列表
            </summary>
        </member>
        <member name="T:Top.Api.Response.SubuserDutyDeleteResponse">
            <summary>
            SubuserDutyDeleteResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SubuserDutyDeleteResponse.IsSuccess">
            <summary>
            操作是否成功 true:操作成功; false:操作失败
            </summary>
        </member>
        <member name="T:Top.Api.Response.TicketItemAddResponse">
            <summary>
            TicketItemAddResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TicketItemAddResponse.TicketItemProcessResult">
            <summary>
            门票商品操作结果，具体请参见TicketItemProcessResult数据结构
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaRtrptAdgroupGetResponse">
            <summary>
            SimbaRtrptAdgroupGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaRtrptAdgroupGetResponse.Results">
            <summary>
            1111
            </summary>
        </member>
        <member name="T:Top.Api.Response.OcTradetagsGetResponse">
            <summary>
            OcTradetagsGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.OcTradetagsGetResponse.TradeTags">
            <summary>
            返回结果
            </summary>
        </member>
        <member name="T:Top.Api.Response.LogisticsConsignResendResponse">
            <summary>
            LogisticsConsignResendResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.LogisticsConsignResendResponse.Shipping">
            <summary>
            返回发货是否成功is_success
            </summary>
        </member>
        <member name="T:Top.Api.Response.DeliveryTemplatesGetResponse">
            <summary>
            DeliveryTemplatesGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.DeliveryTemplatesGetResponse.DeliveryTemplates">
            <summary>
            运费模板列表
            </summary>
        </member>
        <member name="P:Top.Api.Response.DeliveryTemplatesGetResponse.TotalResults">
            <summary>
            获得到符合条件的结果总数
            </summary>
        </member>
        <member name="T:Top.Api.Response.SellercatsListUpdateResponse">
            <summary>
            SellercatsListUpdateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SellercatsListUpdateResponse.SellerCat">
            <summary>
            返回sellercat数据结构中的：cid,modified
            </summary>
        </member>
        <member name="T:Top.Api.Response.SellercatsListAddResponse">
            <summary>
            SellercatsListAddResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SellercatsListAddResponse.SellerCat">
            <summary>
            返回seller_cat数据结构中的：cid,created
            </summary>
        </member>
        <member name="T:Top.Api.Response.TradesSoldIncrementvGetResponse">
            <summary>
            TradesSoldIncrementvGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TradesSoldIncrementvGetResponse.HasNext">
            <summary>
            是否存在下一页
            </summary>
        </member>
        <member name="P:Top.Api.Response.TradesSoldIncrementvGetResponse.TotalResults">
            <summary>
            搜索到的交易信息总数
            </summary>
        </member>
        <member name="P:Top.Api.Response.TradesSoldIncrementvGetResponse.Trades">
            <summary>
            搜索到的交易信息列表，返回的Trade和Order中包含的具体信息为入参fields请求的字段信息
            </summary>
        </member>
        <member name="T:Top.Api.Response.TmallProductSpecsGetResponse">
            <summary>
            TmallProductSpecsGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallProductSpecsGetResponse.ProductSpecs">
            <summary>
            返回一组产品规格信息。
            </summary>
        </member>
        <member name="T:Top.Api.Response.ItemUpdateResponse">
            <summary>
            ItemUpdateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ItemUpdateResponse.Item">
            <summary>
            商品结构里的num_iid，modified
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaCampaignPlatformUpdateRequest">
            <summary>
            TOP API: taobao.simba.campaign.platform.update
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaCampaignPlatformUpdateRequest.CampaignId">
            <summary>
            推广计划Id
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaCampaignPlatformUpdateRequest.MobileDiscount">
            <summary>
            站内无线频道折扣。百分比，数值必须是大于等于 1小于等于200的整数
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaCampaignPlatformUpdateRequest.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaCampaignPlatformUpdateRequest.NonsearchChannels">
            <summary>
            非搜索投放频道代码数组，频道代码必须是直通车非搜索类频道列表中的值。
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaCampaignPlatformUpdateRequest.OutsideDiscount">
            <summary>
            溢价的百分比，必须是大于等于 1小于等于200的整数
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaCampaignPlatformUpdateRequest.SearchChannels">
            <summary>
            搜索投放频道代码数组，频道代码必须是直通车搜索类频道列表中的值，必须包含淘宝内网。
            </summary>
        </member>
        <member name="T:Top.Api.Request.ItemrecommendItemsGetRequest">
            <summary>
            TOP API: taobao.itemrecommend.items.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemrecommendItemsGetRequest.Count">
            <summary>
            请求返回宝贝的个数，建议取20个
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemrecommendItemsGetRequest.Ext">
            <summary>
            额外的参数信息
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemrecommendItemsGetRequest.ItemId">
            <summary>
            商品ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemrecommendItemsGetRequest.RecommendType">
            <summary>
            查询类型标识符，可传入1-3，1：同类商品推荐，2：异类商品推荐， 3：同店商品推荐。其他值当非法值处理
            </summary>
        </member>
        <member name="T:Top.Api.Request.TopSecretGetRequest">
            <summary>
            TOP API: taobao.top.secret.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.TopSecretGetRequest.CustomerUserId">
            <summary>
            自定义用户id
            </summary>
        </member>
        <member name="P:Top.Api.Request.TopSecretGetRequest.RandomNum">
            <summary>
            伪随机数
            </summary>
        </member>
        <member name="P:Top.Api.Request.TopSecretGetRequest.SecretVersion">
            <summary>
            秘钥版本号
            </summary>
        </member>
        <member name="T:Top.Api.Request.TmallProductSchemaGetRequest">
            <summary>
            TOP API: tmall.product.schema.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallProductSchemaGetRequest.ProductId">
            <summary>
            产品编号
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaInsightWordssubdataGetRequest">
            <summary>
            TOP API: taobao.simba.insight.wordssubdata.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaInsightWordssubdataGetRequest.BidwordList">
            <summary>
            关键词列表
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaInsightWordssubdataGetRequest.EndDate">
            <summary>
            结束时间
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaInsightWordssubdataGetRequest.StartDate">
            <summary>
            开始时间
            </summary>
        </member>
        <member name="T:Top.Api.Request.SubuserFullinfoGetRequest">
            <summary>
            TOP API: taobao.subuser.fullinfo.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SubuserFullinfoGetRequest.Fields">
            <summary>
            传入所需要的参数信息（若不需要获取子账号或主账号的企业邮箱地址，则无需传入该参数；若需要获取子账号或主账号的企业邮箱地址，则需要传入fields；可选参数值为subuser_email和user_email，传入其他参数值均无效；两个参数都需要则以逗号隔开传入即可，例如：subuser_email,user_email）
            </summary>
        </member>
        <member name="P:Top.Api.Request.SubuserFullinfoGetRequest.SubId">
            <summary>
            子账号ID（传参中sub_id和sub_nick至少需要其中一个，若sub_id与sub_nick同时传入并且合法，那么sub_nick优先，以sub_nick查询子账号）
            </summary>
        </member>
        <member name="P:Top.Api.Request.SubuserFullinfoGetRequest.SubNick">
            <summary>
            子账号用户名（传参中sub_id和sub_nick至少需要其中一个，若sub_id与sub_nick同时传入并且合法，那么sub_nick优先，以sub_nick查询子账号）
            </summary>
        </member>
        <member name="T:Top.Api.Request.ItemSkuDeleteRequest">
            <summary>
            TOP API: taobao.item.sku.delete
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemSkuDeleteRequest.Ignorewarning">
            <summary>
            忽略警告提示.
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemSkuDeleteRequest.ItemNum">
            <summary>
            sku所属商品的数量,大于0的整数。当用户删除sku，使商品数量不等于sku数量之和时候，用于修改商品的数量，使sku能够删除成功。特别是删除最后一个sku的时候，一定要设置商品数量到正常的值，否则删除失败
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemSkuDeleteRequest.ItemPrice">
            <summary>
            sku所属商品的价格。当用户删除sku，使商品价格不属于sku价格之间的时候，用于修改商品的价格，使sku能够删除成功
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemSkuDeleteRequest.Lang">
            <summary>
            Sku文字的版本。可选值:zh_HK(繁体),zh_CN(简体);默认值:zh_CN
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemSkuDeleteRequest.NumIid">
            <summary>
            Sku所属商品数字id，可通过 taobao.item.get 获取。必选
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemSkuDeleteRequest.Properties">
            <summary>
            Sku属性串。格式:pid:vid;pid:vid,如: 1627207:3232483;1630696:3284570,表示机身颜色:军绿色;手机套餐:一电一充
            </summary>
        </member>
        <member name="T:Top.Api.Request.OcTradetagsGetRequest">
            <summary>
            TOP API: taobao.oc.tradetags.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.OcTradetagsGetRequest.History">
            <summary>
            是否查询历史标签
            </summary>
        </member>
        <member name="P:Top.Api.Request.OcTradetagsGetRequest.TagNames">
            <summary>
            不填，则不做标签名称过滤
            </summary>
        </member>
        <member name="P:Top.Api.Request.OcTradetagsGetRequest.TagTypes">
            <summary>
            不填，则默认只查询1,2。1为官方标，2为自定义标，3为主站只读标签
            </summary>
        </member>
        <member name="P:Top.Api.Request.OcTradetagsGetRequest.Tid">
            <summary>
            交易主订单id
            </summary>
        </member>
        <member name="T:Top.Api.Request.ItemsInventoryGetRequest">
            <summary>
            TOP API: taobao.items.inventory.get
            </summary>
        </member>
        <!-- 对于成员“P:Top.Api.Request.ItemsInventoryGetRequest.Banner”忽略有格式错误的 XML 注释 -->
        <member name="P:Top.Api.Request.ItemsInventoryGetRequest.Cid">
            <summary>
            商品类目ID。ItemCat中的cid字段。可以通过taobao.itemcats.get取到
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemsInventoryGetRequest.EndModified">
            <summary>
            商品结束修改时间
            </summary>
        </member>
        <!-- 对于成员“P:Top.Api.Request.ItemsInventoryGetRequest.Fields”忽略有格式错误的 XML 注释 -->
        <member name="P:Top.Api.Request.ItemsInventoryGetRequest.HasDiscount">
            <summary>
            是否参与会员折扣。可选值：true，false。默认不过滤该条件
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemsInventoryGetRequest.IsCspu">
            <summary>
            是否挂接了达尔文标准产品体系。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemsInventoryGetRequest.IsEx">
            <summary>
            商品是否在外部网店显示
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemsInventoryGetRequest.IsTaobao">
            <summary>
            商品是否在淘宝显示
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemsInventoryGetRequest.OrderBy">
            <summary>
            排序方式。格式为column:asc/desc ，column可选值:list_time(上架时间),delist_time(下架时间),num(商品数量)，modified(最近修改时间);默认上架时间降序(即最新上架排在前面)。如按照上架时间降序排序方式为list_time:desc
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemsInventoryGetRequest.PageNo">
            <summary>
            页码。取值范围:大于零小于等于101的整数;默认值为1，即返回第一页数据。当页码超过101页时系统就会报错，故请大家在用此接口获取数据时尽可能的细化自己的搜索条件，例如根据修改时间分段获取商品。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemsInventoryGetRequest.PageSize">
            <summary>
            每页条数。取值范围:大于零的整数;最大值：200；默认值：40。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemsInventoryGetRequest.Q">
            <summary>
            搜索字段。搜索商品的title。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemsInventoryGetRequest.SellerCids">
            <summary>
            卖家店铺内自定义类目ID。多个之间用“,”分隔。可以根据taobao.sellercats.list.get获得.(<font color="red">注：目前最多支持32个ID号传入</font>)
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemsInventoryGetRequest.StartModified">
            <summary>
            商品起始修改时间
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaNonsearchDemographicsUpdateRequest">
            <summary>
            TOP API: taobao.simba.nonsearch.demographics.update
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaNonsearchDemographicsUpdateRequest.CampaignId">
            <summary>
            推广计划ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaNonsearchDemographicsUpdateRequest.DemographicIdPriceJson">
            <summary>
            投放人群维度Id，加价json数组字符串。数组长度不能超过15，json数组中的key必须和相应实体DemographicSetting中的属性字段保持一致，否则对应的实体对象属性获取不到相应的值  incrementalPrice是整数，以“分”为单位，不能小于1，不能大于日限额,不能大于9999分; 可以为0表示不加价；投放人群维度ID必须有效
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaNonsearchDemographicsUpdateRequest.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="T:Top.Api.Request.TmallItemUpdateSchemaGetRequest">
            <summary>
            TOP API: tmall.item.update.schema.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemUpdateSchemaGetRequest.CategoryId">
            <summary>
            商品发布的目标类目，必须是叶子类目。如果没有切换类目需求，不需要填写。
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemUpdateSchemaGetRequest.ItemId">
            <summary>
            需要编辑的商品ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemUpdateSchemaGetRequest.ProductId">
            <summary>
            商品发布的目标product_id。如果没有切换产品的需求，参数可以不填写。
            </summary>
        </member>
        <member name="T:Top.Api.Request.MaPackcodeCreateRequest">
            <summary>
            TOP API: taobao.ma.packcode.create
            </summary>
        </member>
        <member name="T:Top.Api.Request.DeliveryTemplateGetRequest">
            <summary>
            TOP API: taobao.delivery.template.get
            </summary>
        </member>
        <!-- 对于成员“P:Top.Api.Request.DeliveryTemplateGetRequest.Fields”忽略有格式错误的 XML 注释 -->
        <member name="P:Top.Api.Request.DeliveryTemplateGetRequest.TemplateIds">
            <summary>
            需要查询的运费模板ID列表
            </summary>
        </member>
        <member name="P:Top.Api.Request.DeliveryTemplateGetRequest.UserNick">
            <summary>
            在没有登录的情况下根据淘宝用户昵称查询指定的模板
            </summary>
        </member>
        <member name="T:Top.Api.Request.TmallItemSizemappingTemplateGetRequest">
            <summary>
            TOP API: tmall.item.sizemapping.template.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemSizemappingTemplateGetRequest.TemplateId">
            <summary>
            尺码表模板ID
            </summary>
        </member>
        <member name="T:Top.Api.Request.ItemImgUploadRequest">
            <summary>
            TOP API: taobao.item.img.upload
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemImgUploadRequest.Id">
            <summary>
            商品图片id(如果是更新图片，则需要传该参数)
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemImgUploadRequest.Image">
            <summary>
            商品图片内容类型:JPG,GIF;最大:3M 。支持的文件类型：gif,jpg,jpeg,png
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemImgUploadRequest.IsMajor">
            <summary>
            是否将该图片设为主图,可选值:true,false;默认值:false(非主图)
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemImgUploadRequest.NumIid">
            <summary>
            商品数字ID，该参数必须
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemImgUploadRequest.Position">
            <summary>
            图片序号
            </summary>
        </member>
        <member name="T:Top.Api.Domain.SubwayItemPartition">
            <summary>
            SubwayItemPartition Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubwayItemPartition.ItemList">
            <summary>
            商品列表
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubwayItemPartition.OrderBy">
            <summary>
            排序，  True:升级False:降序
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubwayItemPartition.OrderField">
            <summary>
            排序字段
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubwayItemPartition.PageNo">
            <summary>
            返回第几页的数据从1开始
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubwayItemPartition.PageSize">
            <summary>
            每页数据大小
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubwayItemPartition.TotalItem">
            <summary>
            所查询的数据总数，只有当返回第一页数据时有值，当要求返回的数据非第一页时，此返回值无效
            </summary>
        </member>
        <member name="T:Top.Api.Domain.TransitStepInfo">
            <summary>
            TransitStepInfo Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TransitStepInfo.Action">
            <summary>
            节点说明 ，指明当前节点揽收、派送，签收。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TransitStepInfo.Desc">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TransitStepInfo.NodeDescription">
            <summary>
            地址地一
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TransitStepInfo.StatusDesc">
            <summary>
            状态描述
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TransitStepInfo.StatusTime">
            <summary>
            状态发生的时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TransitStepInfo.Time">
            <summary>
            时间。。
            </summary>
        </member>
        <member name="T:Top.Api.Domain.Evaluation">
            <summary>
            Evaluation Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Evaluation.EvaluationName">
            <summary>
            客服评价内容
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Evaluation.EvaluationNum">
            <summary>
            评价数量
            </summary>
        </member>
        <member name="T:Top.Api.Domain.LogisticServiceTag">
            <summary>
            LogisticServiceTag Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.LogisticServiceTag.ServiceTag">
            <summary>
            物流服务下的标签属性,多个标签之间有";"分隔
            </summary>
        </member>
        <member name="P:Top.Api.Domain.LogisticServiceTag.ServiceType">
            <summary>
            消费者选快递请直接判断service_tag是否包含companyCode。而不要判断service_type
            </summary>
        </member>
        <member name="T:Top.Api.Domain.AccountInfo">
            <summary>
            AccountInfo Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.AccountInfo.Account">
            <summary>
            账号
            </summary>
        </member>
        <member name="P:Top.Api.Domain.AccountInfo.AccountStats">
            <summary>
            操作列表
            </summary>
        </member>
        <member name="P:Top.Api.Domain.AccountInfo.Count">
            <summary>
            account_stats列表的长度
            </summary>
        </member>
        <member name="T:Top.Api.Domain.ADGroupPlace">
            <summary>
            ADGroupPlace Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ADGroupPlace.AdgroupId">
            <summary>
            推广组ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ADGroupPlace.CampaignId">
            <summary>
            推广计划ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ADGroupPlace.CreateTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ADGroupPlace.IsDefaultPrice">
            <summary>
            是否使用默认出价，0-不用；1-使用；
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ADGroupPlace.MaxPrice">
            <summary>
            出价
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ADGroupPlace.ModifiedTime">
            <summary>
            修改时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ADGroupPlace.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ADGroupPlace.PlaceId">
            <summary>
            位置标识
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ADGroupPlace.PlaceName">
            <summary>
            位置名称
            </summary>
        </member>
        <member name="T:Top.Api.Domain.PaimaiInfo">
            <summary>
            PaimaiInfo Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PaimaiInfo.Deposit">
            <summary>
            用户自定义的固定保证金。如果用户未传则说明用户选择使用淘宝默认的保证金模式10%，此时deposit等于0.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PaimaiInfo.Interval">
            <summary>
            降价拍中的降价间隔
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PaimaiInfo.Mode">
            <summary>
            拍卖类型，目前包括增加拍，荷兰拍和降价拍。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PaimaiInfo.Reserve">
            <summary>
            降价拍的保留价
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PaimaiInfo.ValidHour">
            <summary>
            对于拍卖来说可以设定有效期，这里是有效期的小时数。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PaimaiInfo.ValidMinute">
            <summary>
            对于拍卖来说可以设定有效期，这里是有效期的分钟数。
            </summary>
        </member>
        <member name="T:Top.Api.Domain.DataPushTask">
            <summary>
            DataPushTask Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DataPushTask.AppKey">
            <summary>
            任务所属的appkey
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DataPushTask.Created">
            <summary>
            任务创建时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DataPushTask.Id">
            <summary>
            任务编号
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DataPushTask.NextExecuteTime">
            <summary>
            下次执行时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DataPushTask.NowSyncTime">
            <summary>
            上一次同步到的时间点
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DataPushTask.Params">
            <summary>
            任务的业务参数，用json格式表示
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DataPushTask.Type">
            <summary>
            任务类型代码
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DataPushTask.UserId">
            <summary>
            任务所属的用户编号
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DataPushTask.UserNick">
            <summary>
            用户的nick
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DataPushTask.Version">
            <summary>
            任务的版本号，在更新任务时，需要用到此数据
            </summary>
        </member>
        <member name="T:Top.Api.Domain.InsightWordDataUnderCatDTO">
            <summary>
            InsightWordDataUnderCatDTO Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordDataUnderCatDTO.Bidword">
            <summary>
            关键词
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordDataUnderCatDTO.CatId">
            <summary>
            类目id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordDataUnderCatDTO.CatName">
            <summary>
            类目名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordDataUnderCatDTO.Click">
            <summary>
            点击量
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordDataUnderCatDTO.Competition">
            <summary>
            竞争度
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordDataUnderCatDTO.Cost">
            <summary>
            花费，单位（分）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordDataUnderCatDTO.Coverage">
            <summary>
            点击转化率
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordDataUnderCatDTO.Cpc">
            <summary>
            平均点击花费
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordDataUnderCatDTO.Ctr">
            <summary>
            点击率
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordDataUnderCatDTO.Directtransaction">
            <summary>
            直接成交金额
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordDataUnderCatDTO.Directtransactionshipping">
            <summary>
            直接成交笔数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordDataUnderCatDTO.Favitemtotal">
            <summary>
            宝贝搜藏数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordDataUnderCatDTO.Favshoptotal">
            <summary>
            店铺搜藏数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordDataUnderCatDTO.Favtotal">
            <summary>
            总的收藏数，包括宝贝收藏和店铺收藏
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordDataUnderCatDTO.Impression">
            <summary>
            展现量
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordDataUnderCatDTO.Indirecttransaction">
            <summary>
            间接成交金额
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordDataUnderCatDTO.Indirecttransactionshipping">
            <summary>
            间接成交笔数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordDataUnderCatDTO.Roi">
            <summary>
            投入产出比
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordDataUnderCatDTO.Transactionshippingtotal">
            <summary>
            总的成交笔数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightWordDataUnderCatDTO.Transactiontotal">
            <summary>
            成交总金额
            </summary>
        </member>
        <member name="T:Top.Api.Domain.ProductExtraInfo">
            <summary>
            ProductExtraInfo Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ProductExtraInfo.FieldKey">
            <summary>
            产品扩展信息键
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ProductExtraInfo.FieldName">
            <summary>
            产品扩展信息名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ProductExtraInfo.FieldValue">
            <summary>
            产品扩展信息简介
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ProductExtraInfo.ProductId">
            <summary>
            产品ID
            </summary>
        </member>
        <member name="T:Top.Api.Domain.PromotionMjs">
            <summary>
            PromotionMjs Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PromotionMjs.AreaIds">
            <summary>
            不免邮省份的area_id列表。用';'间隔。最多10个。[110000:"北京";  120000:"天津";  130000:"河北";  140000:"山西";  150000:"内蒙古";  210000:"辽宁";  220000:"吉林";  230000:"黑龙江";  310000:"上海";  320000:"江苏";  330000:"浙江";  340000:"安徽";  350000:"福建";  360000:"江西";  370000:"山东";  410000:"河南";  420000:"湖北";  430000:"湖南";  440000:"广东";  450000:"广西";  460000:"海南";  500000:"重庆";  510000:"四川";  520000:"贵州";  530000:"云南";  540000:"西藏";  610000:"陕西";  620000:"甘肃";  630000:"青海";  640000:"宁夏";  650000:"新疆";  710000:"台湾";  810000:"香港";  820000:"澳门";  990000:"海外"]
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PromotionMjs.CouponTime">
            <summary>
            送优惠卷。优惠卷的有效期时间。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PromotionMjs.CouponValue">
            <summary>
            送优惠卷面额。分为[3,5,10,20,50,100]面值。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PromotionMjs.FreePost">
            <summary>
            是否免邮！
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PromotionMjs.FullMoney">
            <summary>
            满就送的满多少钱。正整数。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PromotionMjs.GiftName">
            <summary>
            最长15个汉字。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PromotionMjs.GiftUrl">
            <summary>
            礼品的url地址。礼品链接必须是以http://或https://开头的淘宝站内链接。正则表达式:"^http[s]{0,1}://([a-z0-9\\-_]+\\.)*(mall\\.)?(taobao|taobaocdn)\\.(com|net|cn|com\\.cn)(/.*)*$"
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PromotionMjs.Points">
            <summary>
            满就送积分。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PromotionMjs.ReduceAfter">
            <summary>
            true时，减后满full_money才免邮费。false时，减前满full_money就免邮。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PromotionMjs.ReduceMoney">
            <summary>
            满就送减掉的钱数。当满足full_money时，就减掉的钱数。这个钱数是小于full_money的正整数。
            </summary>
        </member>
        <member name="T:Top.Api.Domain.RecommendWord">
            <summary>
            RecommendWord Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RecommendWord.AveragePrice">
            <summary>
            平均价格
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RecommendWord.Pertinence">
            <summary>
            相关度
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RecommendWord.Pv">
            <summary>
            搜索量
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RecommendWord.Word">
            <summary>
            推荐的关键词
            </summary>
        </member>
        <member name="T:Top.Api.Domain.ItemCat">
            <summary>
            ItemCat Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ItemCat.Cid">
            <summary>
            商品所属类目ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ItemCat.Features">
            <summary>
            Feature对象列表  目前已有的属性：  若Attr_key为 udsaleprop，attr_value为1 则允许卖家在改类目新增自定义销售属性,不然为不允许
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ItemCat.IsParent">
            <summary>
            该类目是否为父类目(即：该类目是否还有子类目)
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ItemCat.Name">
            <summary>
            类目名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ItemCat.ParentCid">
            <summary>
            父类目ID=0时，代表的是一级的类目
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ItemCat.SortOrder">
            <summary>
            排列序号，表示同级类目的展现次序，如数值相等则按名称次序排列。取值范围:大于零的整数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ItemCat.Status">
            <summary>
            状态。可选值:normal(正常),deleted(删除)
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ItemCat.TaosirCat">
            <summary>
            是否度量衡类目
            </summary>
        </member>
        <member name="T:Top.Api.Domain.BrandCatMetaData">
            <summary>
            BrandCatMetaData Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.BrandCatMetaData.BrandId">
            <summary>
            品牌id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.BrandCatMetaData.CatId">
            <summary>
            叶子类目id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.BrandCatMetaData.CertifiedData">
            <summary>
            以;隔开多个认证资料。:隔开资料ID与内容。如？1:产品包装图片;2:完整产品资质
            </summary>
        </member>
        <member name="P:Top.Api.Domain.BrandCatMetaData.IsDarwin">
            <summary>
            类目、品牌是否切入达尔文
            </summary>
        </member>
        <member name="T:DingTalk.Api.BaseDingTalkRequest`1">
            <summary>
            基础TOP请求类，存放一些通用的请求参数。
            </summary>
        </member>
        <member name="F:DingTalk.Api.BaseDingTalkRequest`1.otherParams">
            <summary>
            HTTP请求URL参数
            </summary>
        </member>
        <member name="F:DingTalk.Api.BaseDingTalkRequest`1.headerParams">
            <summary>
            HTTP请求头参数
            </summary>
        </member>
        <member name="T:Top.Api.TopBatchResponse">
            <summary>
            批量API响应类。
            </summary>
        </member>
        <member name="M:Top.Api.TopBatchResponse.GetResponse``1(Top.Api.ITopRequest{``0})">
            <summary>
            根据指定的API请求获取相应的API响应结果。
            </summary>
        </member>
        <member name="P:Top.Api.TopBatchResponse.ResponseList">
            <summary>
            当批量API请求成功后，或获取所有API的响应结果。
            </summary>
        </member>
        <member name="T:Aliyun.Api.Parser.AliyunXmlParser">
            <summary>
            TOP XML响应通用解释器。
            </summary>
        </member>
        <member name="T:Aliyun.Api.Parser.IAliyunParser">
            <summary>
            TOP API响应解释器接口。响应格式可以是XML, JSON等等。
            </summary>
        </member>
        <member name="M:Aliyun.Api.Parser.IAliyunParser.Parse``1(System.String)">
            <summary>
            把响应字符串解释成相应的领域对象。
            </summary>
            <typeparam name="T">领域对象</typeparam>
            <param name="body">响应字符串</param>
            <returns>领域对象</returns>
        </member>
        <member name="M:Aliyun.Api.Parser.AliyunXmlParser.GetRootElement(System.String)">
            <summary>
            获取XML响应的根节点名称
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiRptTaskGetResponse">
            <summary>
            ZuanshiRptTaskGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiRptTaskGetResponse.RptTask">
            <summary>
            报表下载任务信息
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerCreativeFindResponse">
            <summary>
            ZuanshiBannerCreativeFindResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindResponse.Result">
            <summary>
            返回数据
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerCreativeFindResponse.ReasonDomain">
            <summary>
            ReasonDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindResponse.ReasonDomain.AuditReasonId">
            <summary>
            原因id
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindResponse.ReasonDomain.AuditReasonName">
            <summary>
            原因名称
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindResponse.ReasonDomain.FlawUrls">
            <summary>
            原因对应的链接
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindResponse.ReasonDomain.RedirectUrl">
            <summary>
            截图
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerCreativeFindResponse.BlockReasonDomain">
            <summary>
            BlockReasonDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindResponse.BlockReasonDomain.BlockId">
            <summary>
            位置id
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindResponse.BlockReasonDomain.BlockName">
            <summary>
            位置名称
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindResponse.BlockReasonDomain.BlockUrl">
            <summary>
            位置对应的链接
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindResponse.BlockReasonDomain.Reasons">
            <summary>
            reasonDTOs
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerCreativeFindResponse.CreativeSizeDomain">
            <summary>
            CreativeSizeDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindResponse.CreativeSizeDomain.Height">
            <summary>
            高
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindResponse.CreativeSizeDomain.Width">
            <summary>
            宽
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerCreativeFindResponse.SubCreativeDomain">
            <summary>
            SubCreativeDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindResponse.SubCreativeDomain.CreativeId">
            <summary>
            创意ID
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindResponse.SubCreativeDomain.CreativeSize">
            <summary>
            创意尺寸
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindResponse.SubCreativeDomain.ImgPath">
            <summary>
            图片地址
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindResponse.SubCreativeDomain.StandardCreativeId">
            <summary>
            标尺创意ID
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerCreativeFindResponse.MaterialDomain">
            <summary>
            MaterialDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindResponse.MaterialDomain.Content">
            <summary>
            素材内容
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindResponse.MaterialDomain.Format">
            <summary>
            素材类型
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindResponse.MaterialDomain.MaterialSize">
            <summary>
            素材尺寸
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerCreativeFindResponse.CreativeDomain">
            <summary>
            CreativeDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindResponse.CreativeDomain.AuditStatus">
            <summary>
            待审核：-4,-1,0，审核通过：1，审核拒绝：-2,-5,-9
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindResponse.CreativeDomain.AuditTime">
            <summary>
            审核时间
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindResponse.CreativeDomain.BlockReasons">
            <summary>
            审核拒绝原因
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindResponse.CreativeDomain.CatId">
            <summary>
            类目id
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindResponse.CreativeDomain.CatName">
            <summary>
            类目名称
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindResponse.CreativeDomain.ClickUrl">
            <summary>
            点击链接
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindResponse.CreativeDomain.CreateTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindResponse.CreativeDomain.CreativeLevel">
            <summary>
            创意等级
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindResponse.CreativeDomain.CreativeSize">
            <summary>
            创意尺寸
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindResponse.CreativeDomain.ExpireTime">
            <summary>
            过期时间
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindResponse.CreativeDomain.Format">
            <summary>
            创意格式
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindResponse.CreativeDomain.Id">
            <summary>
            创意ID
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindResponse.CreativeDomain.ImagePath">
            <summary>
            图片地址
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindResponse.CreativeDomain.Materials">
            <summary>
            创意对应的素材
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindResponse.CreativeDomain.ModifiedTime">
            <summary>
            修改时间
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindResponse.CreativeDomain.MultiMaterial">
            <summary>
            是否支持多个素材 1：支持 0：不支持
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindResponse.CreativeDomain.Name">
            <summary>
            创意名称
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindResponse.CreativeDomain.OnlineStatus">
            <summary>
            在线状态：1：正常，-1：回收站
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindResponse.CreativeDomain.PackageType">
            <summary>
            0：非标尺创意，1：标尺创意，2：创意包
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindResponse.CreativeDomain.SubCreatives">
            <summary>
            标尺创意裂变后的创意
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindResponse.CreativeDomain.TxtValue">
            <summary>
            文字链创意内容
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerCreativeFindResponse.ResultDomain">
            <summary>
            ResultDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindResponse.ResultDomain.Creatives">
            <summary>
            数据结果
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindResponse.ResultDomain.Message">
            <summary>
            错误时候，返回错误信息
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindResponse.ResultDomain.Success">
            <summary>
            true：调用成功，false：调用失败
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeFindResponse.ResultDomain.TotalCount">
            <summary>
            创意总数
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerCpcTargetingFindResponse">
            <summary>
            ZuanshiBannerCpcTargetingFindResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCpcTargetingFindResponse.Result">
            <summary>
            调用结果对象
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerCpcTargetingFindResponse.TargetDTODomain">
            <summary>
            TargetDTODomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCpcTargetingFindResponse.TargetDTODomain.TargetName">
            <summary>
            定向名称
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCpcTargetingFindResponse.TargetDTODomain.TargetType">
            <summary>
            定向类型,用于标识定向，创建修改查询定向接口使用
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerCpcTargetingFindResponse.ResultDTODomain">
            <summary>
            ResultDTODomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCpcTargetingFindResponse.ResultDTODomain.Message">
            <summary>
            message
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCpcTargetingFindResponse.ResultDTODomain.Success">
            <summary>
            调用是否成功,true-成功，false-失败
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCpcTargetingFindResponse.ResultDTODomain.Targetings">
            <summary>
            定向列表
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerAdgroupFindResponse">
            <summary>
            ZuanshiBannerAdgroupFindResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdgroupFindResponse.Result">
            <summary>
            result
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerAdgroupFindResponse.AdgroupDomain">
            <summary>
            AdgroupDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdgroupFindResponse.AdgroupDomain.AdgroupId">
            <summary>
            单元ID
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdgroupFindResponse.AdgroupDomain.AdgroupName">
            <summary>
            单元名称
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdgroupFindResponse.AdgroupDomain.CampaignId">
            <summary>
            计划ID
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdgroupFindResponse.AdgroupDomain.OnlineStatus">
            <summary>
            状态
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerAdgroupFindResponse.ResultDomain">
            <summary>
            ResultDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdgroupFindResponse.ResultDomain.Adgroups">
            <summary>
            单元数据列表
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdgroupFindResponse.ResultDomain.Message">
            <summary>
            message
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdgroupFindResponse.ResultDomain.Success">
            <summary>
            success
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdgroupFindResponse.ResultDomain.TotalCount">
            <summary>
            单元总数
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAdvertiserCreativeRtrptsGetResponse">
            <summary>
            ZuanshiAdvertiserCreativeRtrptsGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRtrptsGetResponse.CreativeRealtimeRptList">
            <summary>
            返回值
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAdvertiserCreativeRtrptsGetResponse.DataDomain">
            <summary>
            DataDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRtrptsGetResponse.DataDomain.AdPv">
            <summary>
            展现量
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRtrptsGetResponse.DataDomain.AdgroupId">
            <summary>
            推广单元id
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRtrptsGetResponse.DataDomain.CampaignId">
            <summary>
            计划id
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRtrptsGetResponse.DataDomain.Charge">
            <summary>
            消耗
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRtrptsGetResponse.DataDomain.Click">
            <summary>
            点击量
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRtrptsGetResponse.DataDomain.CreativeId">
            <summary>
            创意id
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRtrptsGetResponse.DataDomain.Ctr">
            <summary>
            点击率
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRtrptsGetResponse.DataDomain.Ecpc">
            <summary>
            平均点击单价
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRtrptsGetResponse.DataDomain.Ecpm">
            <summary>
            千次展现成本
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRtrptsGetResponse.DataDomain.HourId">
            <summary>
            小时数，取值范围0-23
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRtrptsGetResponse.DataDomain.LogDate">
            <summary>
            查询日期
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAdvertiserAdgroupRptsTotalGetResponse">
            <summary>
            ZuanshiAdvertiserAdgroupRptsTotalGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRptsTotalGetResponse.AdgroupOfflineRptTotalList">
            <summary>
            查询结果
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAdvertiserAdgroupRptsTotalGetResponse.DataDomain">
            <summary>
            DataDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRptsTotalGetResponse.DataDomain.AdPv">
            <summary>
            展现数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRptsTotalGetResponse.DataDomain.AdgroupId">
            <summary>
            单元id
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRptsTotalGetResponse.DataDomain.AdgroupName">
            <summary>
            单元名称
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRptsTotalGetResponse.DataDomain.AlipayInShopNum">
            <summary>
            成交数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRptsTotalGetResponse.DataDomain.AlipayInshopAmt">
            <summary>
            成交额
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRptsTotalGetResponse.DataDomain.AvgAccessPageNum">
            <summary>
            平均访问页数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRptsTotalGetResponse.DataDomain.AvgAccessTime">
            <summary>
            平均访问时长
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRptsTotalGetResponse.DataDomain.CampaignId">
            <summary>
            计划id
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRptsTotalGetResponse.DataDomain.CampaignName">
            <summary>
            计划名称
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRptsTotalGetResponse.DataDomain.CartNum">
            <summary>
            加购物车数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRptsTotalGetResponse.DataDomain.Charge">
            <summary>
            花费
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRptsTotalGetResponse.DataDomain.Click">
            <summary>
            点击数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRptsTotalGetResponse.DataDomain.Ctr">
            <summary>
            ctr
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRptsTotalGetResponse.DataDomain.Cvr">
            <summary>
            cvr
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRptsTotalGetResponse.DataDomain.DeepInshopUv">
            <summary>
            深度进店uv
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRptsTotalGetResponse.DataDomain.DirShopColNum">
            <summary>
            店铺收藏数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRptsTotalGetResponse.DataDomain.Ecpc">
            <summary>
            ecpc
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRptsTotalGetResponse.DataDomain.Ecpm">
            <summary>
            ecpm
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRptsTotalGetResponse.DataDomain.GmvInshopAmt">
            <summary>
            gmv成交额
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRptsTotalGetResponse.DataDomain.GmvInshopNum">
            <summary>
            gmv成交数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRptsTotalGetResponse.DataDomain.InshopItemColNum">
            <summary>
            宝贝收藏数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRptsTotalGetResponse.DataDomain.Roi">
            <summary>
            投入产出比
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRptsTotalGetResponse.DataDomain.Uv">
            <summary>
            uv
            </summary>
        </member>
        <member name="T:Top.Api.Response.TmallInventoryQueryForstoreResponse">
            <summary>
            TmallInventoryQueryForstoreResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallInventoryQueryForstoreResponse.Errorcode">
            <summary>
            错误code
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallInventoryQueryForstoreResponse.Errormessage">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallInventoryQueryForstoreResponse.Issuccess">
            <summary>
            整体成功或失败
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallInventoryQueryForstoreResponse.Result">
            <summary>
            查询结果
            </summary>
        </member>
        <member name="T:Top.Api.Response.TmallInventoryQueryForstoreResponse.InventorySubDetailDtoDomain">
            <summary>
            InventorySubDetailDtoDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallInventoryQueryForstoreResponse.InventorySubDetailDtoDomain.InvBizCode">
            <summary>
            ONLINE_INVENTORY:线上可售卖库存。SHARE_INVENTORY：线下独享库存，门店自提可用
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallInventoryQueryForstoreResponse.InventorySubDetailDtoDomain.OccupyQuantity">
            <summary>
            占用库存数
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallInventoryQueryForstoreResponse.InventorySubDetailDtoDomain.Quantity">
            <summary>
            仓库物理库存数
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallInventoryQueryForstoreResponse.InventorySubDetailDtoDomain.ReserveQuantity">
            <summary>
            预扣库存数
            </summary>
        </member>
        <member name="T:Top.Api.Response.TmallInventoryQueryForstoreResponse.InventoryInfoDetailDtoDomain">
            <summary>
            InventoryInfoDetailDtoDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallInventoryQueryForstoreResponse.InventoryInfoDetailDtoDomain.InvStoreType">
            <summary>
            distType
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallInventoryQueryForstoreResponse.InventoryInfoDetailDtoDomain.OccupyQuantity">
            <summary>
            占用库存数
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallInventoryQueryForstoreResponse.InventoryInfoDetailDtoDomain.Quantity">
            <summary>
            仓库物理库存数
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallInventoryQueryForstoreResponse.InventoryInfoDetailDtoDomain.ReserveQuantity">
            <summary>
            预扣库存数
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallInventoryQueryForstoreResponse.InventoryInfoDetailDtoDomain.ScItemCode">
            <summary>
            后端商品code
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallInventoryQueryForstoreResponse.InventoryInfoDetailDtoDomain.ScItemId">
            <summary>
            后端商品id
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallInventoryQueryForstoreResponse.InventoryInfoDetailDtoDomain.StoreCode">
            <summary>
            仓库code
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallInventoryQueryForstoreResponse.InventoryInfoDetailDtoDomain.SubList">
            <summary>
            subList
            </summary>
        </member>
        <member name="T:Top.Api.Response.TmallInventoryQueryForstoreResponse.TipInfoDomain">
            <summary>
            TipInfoDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallInventoryQueryForstoreResponse.TipInfoDomain.Errorcode">
            <summary>
            errorCode
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallInventoryQueryForstoreResponse.TipInfoDomain.Errormessage">
            <summary>
            errorMessage
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallInventoryQueryForstoreResponse.TipInfoDomain.InvStoreType">
            <summary>
            invStoreType
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallInventoryQueryForstoreResponse.TipInfoDomain.ScItemCode">
            <summary>
            scItemCode
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallInventoryQueryForstoreResponse.TipInfoDomain.ScItemId">
            <summary>
            scItemId
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallInventoryQueryForstoreResponse.TipInfoDomain.StoreCode">
            <summary>
            storeCode
            </summary>
        </member>
        <member name="T:Top.Api.Response.TmallInventoryQueryForstoreResponse.InventoryQueryResultDomain">
            <summary>
            InventoryQueryResultDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallInventoryQueryForstoreResponse.InventoryQueryResultDomain.ItemInventorys">
            <summary>
            查询成功列表
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallInventoryQueryForstoreResponse.InventoryQueryResultDomain.TipInfos">
            <summary>
            tipInfos
            </summary>
        </member>
        <member name="T:Top.Api.Response.ScitemOutercodeGetResponse">
            <summary>
            ScitemOutercodeGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ScitemOutercodeGetResponse.ScItem">
            <summary>
            后台商品
            </summary>
        </member>
        <member name="T:Top.Api.Response.OpenimTribelogsImportResponse">
            <summary>
            OpenimTribelogsImportResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.OpenimTribelogsImportResponse.Message">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="P:Top.Api.Response.OpenimTribelogsImportResponse.Ret">
            <summary>
            错误码
            </summary>
        </member>
        <member name="P:Top.Api.Response.OpenimTribelogsImportResponse.Succ">
            <summary>
            是否成功
            </summary>
        </member>
        <member name="T:Top.Api.Response.OpenimTrackGetdetailsResponse">
            <summary>
            OpenimTrackGetdetailsResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.OpenimTrackGetdetailsResponse.Tracks">
            <summary>
            用户轨迹
            </summary>
        </member>
        <member name="T:Top.Api.Response.OpenimChatlogsGetResponse">
            <summary>
            OpenimChatlogsGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.OpenimChatlogsGetResponse.Result">
            <summary>
            聊天记录查询结果
            </summary>
        </member>
        <member name="T:Top.Api.Response.LocationRelationQueryResponse">
            <summary>
            LocationRelationQueryResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.LocationRelationQueryResponse.Result">
            <summary>
            result
            </summary>
        </member>
        <member name="T:Top.Api.Response.LocationRelationQueryResponse.LocationRelationDtoDomain">
            <summary>
            LocationRelationDtoDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.LocationRelationQueryResponse.LocationRelationDtoDomain.SourceInvStoreType">
            <summary>
            实体类型 2：仓库  6：门店
            </summary>
        </member>
        <member name="P:Top.Api.Response.LocationRelationQueryResponse.LocationRelationDtoDomain.SourceStoreCode">
            <summary>
            实体code
            </summary>
        </member>
        <member name="P:Top.Api.Response.LocationRelationQueryResponse.LocationRelationDtoDomain.Status">
            <summary>
            状态 0 正常  -1 删除
            </summary>
        </member>
        <member name="P:Top.Api.Response.LocationRelationQueryResponse.LocationRelationDtoDomain.TargetInvStoreType">
            <summary>
            实体类型 2：仓库  6：门店
            </summary>
        </member>
        <member name="P:Top.Api.Response.LocationRelationQueryResponse.LocationRelationDtoDomain.TargetStoreCode">
            <summary>
            实体code
            </summary>
        </member>
        <member name="T:Top.Api.Response.LocationRelationQueryResponse.SingleResultDomain">
            <summary>
            SingleResultDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.LocationRelationQueryResponse.SingleResultDomain.ErrorCode">
            <summary>
            错误码
            </summary>
        </member>
        <member name="P:Top.Api.Response.LocationRelationQueryResponse.SingleResultDomain.ErrorMessage">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="P:Top.Api.Response.LocationRelationQueryResponse.SingleResultDomain.LocationRelationList">
            <summary>
            地点关系
            </summary>
        </member>
        <member name="P:Top.Api.Response.LocationRelationQueryResponse.SingleResultDomain.Success">
            <summary>
            是否成功
            </summary>
        </member>
        <member name="T:Top.Api.Response.FenxiaoProductMapAddResponse">
            <summary>
            FenxiaoProductMapAddResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoProductMapAddResponse.IsSuccess">
            <summary>
            操作结果
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiBannerCreativeUnbindRequest">
            <summary>
            TOP API: taobao.zuanshi.banner.creative.unbind
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCreativeUnbindRequest.AdgroupId">
            <summary>
            单元ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCreativeUnbindRequest.CampaignId">
            <summary>
            计划ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCreativeUnbindRequest.CreativeIdList">
            <summary>
            创意列表ID
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiBannerCampaignStatusRequest">
            <summary>
            TOP API: taobao.zuanshi.banner.campaign.status
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCampaignStatusRequest.CampaignIdList">
            <summary>
            计划ID列表
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCampaignStatusRequest.Status">
            <summary>
            计划状态，0:暂停,1:投放,9:投放结束
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiBannerAdgroupModifyRequest">
            <summary>
            TOP API: taobao.zuanshi.banner.adgroup.modify
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerAdgroupModifyRequest.AdboardFilter">
            <summary>
            创意优选，1：开启，0关闭，其他值默认开启，cpc不能修改这个字段
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerAdgroupModifyRequest.CampaignId">
            <summary>
            计划ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerAdgroupModifyRequest.Id">
            <summary>
            单元ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerAdgroupModifyRequest.IntelligentBid">
            <summary>
            智能出价，0：不使用,1：优化进店，2：优化成交，cpc不能选择2优化成交
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerAdgroupModifyRequest.Name">
            <summary>
            单元名称
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiAdvertiserRptsDownloadHourGetRequest">
            <summary>
            TOP API: taobao.zuanshi.advertiser.rpts.download.hour.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserRptsDownloadHourGetRequest.CampaignModel">
            <summary>
            计划类型。1：全店推广；4单品推广
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserRptsDownloadHourGetRequest.Hierarchy">
            <summary>
            下载那种广告实体的数据取值范围 campaign,adgroup,creative,target,adzone,targetAdzone。一次一个，不能多个。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserRptsDownloadHourGetRequest.LogDate">
            <summary>
            日期
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiAdvertiserCampaignRptsDayGetRequest">
            <summary>
            TOP API: taobao.zuanshi.advertiser.campaign.rpts.day.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserCampaignRptsDayGetRequest.CampaignId">
            <summary>
            计划id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserCampaignRptsDayGetRequest.CampaignModel">
            <summary>
            计划类型。1：全店推广；4单品推广
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserCampaignRptsDayGetRequest.Effect">
            <summary>
            效果周期，取值范围：3,7,15。分别表示效果转化周期-3天/7天/15天。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserCampaignRptsDayGetRequest.EffectType">
            <summary>
            效果类型。“impression”：展现效果；“click”：点击效果
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserCampaignRptsDayGetRequest.EndTime">
            <summary>
            结束日期
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserCampaignRptsDayGetRequest.StartTime">
            <summary>
            开始日期
            </summary>
        </member>
        <member name="T:Top.Api.Request.ScitemUpdateRequest">
            <summary>
            TOP API: taobao.scitem.update
            </summary>
        </member>
        <member name="P:Top.Api.Request.ScitemUpdateRequest.BarCode">
            <summary>
            条形码
            </summary>
        </member>
        <member name="P:Top.Api.Request.ScitemUpdateRequest.BrandId">
            <summary>
            品牌id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ScitemUpdateRequest.BrandName">
            <summary>
            brand_Name
            </summary>
        </member>
        <member name="P:Top.Api.Request.ScitemUpdateRequest.Height">
            <summary>
            高 单位：mm
            </summary>
        </member>
        <member name="P:Top.Api.Request.ScitemUpdateRequest.IsAreaSale">
            <summary>
            1表示区域销售，0或是空是非区域销售
            </summary>
        </member>
        <member name="P:Top.Api.Request.ScitemUpdateRequest.IsCostly">
            <summary>
            是否是贵重品 0:不是 1：是
            </summary>
        </member>
        <member name="P:Top.Api.Request.ScitemUpdateRequest.IsDangerous">
            <summary>
            是否危险 0：不是  0：是
            </summary>
        </member>
        <member name="P:Top.Api.Request.ScitemUpdateRequest.IsFriable">
            <summary>
            是否易碎 0：不是  1：是
            </summary>
        </member>
        <member name="P:Top.Api.Request.ScitemUpdateRequest.IsWarranty">
            <summary>
            是否保质期：0:不是 1：是
            </summary>
        </member>
        <member name="P:Top.Api.Request.ScitemUpdateRequest.ItemId">
            <summary>
            后端商品ID，跟outer_code必须指定一个
            </summary>
        </member>
        <member name="P:Top.Api.Request.ScitemUpdateRequest.ItemName">
            <summary>
            商品名称
            </summary>
        </member>
        <member name="P:Top.Api.Request.ScitemUpdateRequest.ItemType">
            <summary>
            0.普通供应链商品 1.供应链组合主商品
            </summary>
        </member>
        <member name="P:Top.Api.Request.ScitemUpdateRequest.Length">
            <summary>
            长度 单位：mm
            </summary>
        </member>
        <member name="P:Top.Api.Request.ScitemUpdateRequest.MatterStatus">
            <summary>
            0:液体，1：粉体，2：固体
            </summary>
        </member>
        <member name="P:Top.Api.Request.ScitemUpdateRequest.OuterCode">
            <summary>
            商家编码，跟item_id必须指定一个
            </summary>
        </member>
        <member name="P:Top.Api.Request.ScitemUpdateRequest.Price">
            <summary>
            price
            </summary>
        </member>
        <member name="P:Top.Api.Request.ScitemUpdateRequest.Remark">
            <summary>
            remark
            </summary>
        </member>
        <member name="P:Top.Api.Request.ScitemUpdateRequest.RemoveProperties">
            <summary>
            移除商品属性P列表,P由系统分配：p1；p2
            </summary>
        </member>
        <member name="P:Top.Api.Request.ScitemUpdateRequest.SpuId">
            <summary>
            淘宝SKU产品级编码CSPU ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.ScitemUpdateRequest.UpdateProperties">
            <summary>
            需要更新的商品属性格式是  p1:v1,p2:v2,p3:v3
            </summary>
        </member>
        <member name="P:Top.Api.Request.ScitemUpdateRequest.Volume">
            <summary>
            体积：立方厘米
            </summary>
        </member>
        <member name="P:Top.Api.Request.ScitemUpdateRequest.Weight">
            <summary>
            weight
            </summary>
        </member>
        <member name="P:Top.Api.Request.ScitemUpdateRequest.Width">
            <summary>
            宽 单位：mm
            </summary>
        </member>
        <member name="P:Top.Api.Request.ScitemUpdateRequest.WmsCode">
            <summary>
            仓储商编码
            </summary>
        </member>
        <member name="T:Top.Api.Request.RegionSaleQueryRequest">
            <summary>
            TOP API: taobao.region.sale.query
            </summary>
        </member>
        <member name="P:Top.Api.Request.RegionSaleQueryRequest.ItemId">
            <summary>
            商品id
            </summary>
        </member>
        <member name="P:Top.Api.Request.RegionSaleQueryRequest.SaleRegionLevel">
            <summary>
            1:国家;2:省;3: 市;4:区县
            </summary>
        </member>
        <member name="P:Top.Api.Request.RegionSaleQueryRequest.SkuId">
            <summary>
            无sku传0
            </summary>
        </member>
        <member name="T:Top.Api.Request.RegionPriceCancleRequest">
            <summary>
            TOP API: taobao.region.price.cancle
            </summary>
        </member>
        <member name="P:Top.Api.Request.RegionPriceCancleRequest.ItemId">
            <summary>
            商品
            </summary>
        </member>
        <member name="P:Top.Api.Request.RegionPriceCancleRequest.SkuId">
            <summary>
            无sku传0
            </summary>
        </member>
        <member name="T:Top.Api.Request.OpenimUsersUpdateRequest">
            <summary>
            TOP API: taobao.openim.users.update
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimUsersUpdateRequest.Userinfos">
            <summary>
            用户信息列表
            </summary>
        </member>
        <member name="T:Top.Api.Request.OpenimTribeCreateRequest">
            <summary>
            TOP API: taobao.openim.tribe.create
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimTribeCreateRequest.Members">
            <summary>
            创建群时候拉入群的成员tribe_type = 1（即为讨论组类型)时  该参数为必选tribe_type = 0 (即为普通群类型)时，改参数无效，可不填
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimTribeCreateRequest.Notice">
            <summary>
            群公告
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimTribeCreateRequest.TribeName">
            <summary>
            群名称
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimTribeCreateRequest.TribeType">
            <summary>
            群类型有两种tribe_type = 0  普通群  普通群有管理员角色，对成员加入有权限控制tribe_type = 1  讨论组  讨论组没有管理员，不能解散
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimTribeCreateRequest.User">
            <summary>
            用户信息
            </summary>
        </member>
        <member name="T:Top.Api.Request.OpenimSnfilterwordSetfilterRequest">
            <summary>
            TOP API: taobao.openim.snfilterword.setfilter
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimSnfilterwordSetfilterRequest.Creator">
            <summary>
            上传者身份信息，区分不同上传者;只是记录，没有身份校验功能
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimSnfilterwordSetfilterRequest.Desc">
            <summary>
            过滤原因描述
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimSnfilterwordSetfilterRequest.Filterword">
            <summary>
            需要过滤的关键词
            </summary>
        </member>
        <member name="T:Top.Api.Request.InventoryInitialRequest">
            <summary>
            TOP API: taobao.inventory.initial
            </summary>
        </member>
        <member name="P:Top.Api.Request.InventoryInitialRequest.Items">
            <summary>
            商品初始库存信息： [{"scItemId":"商品后端ID，如果有传scItemCode,参数可以为0","scItemCode":"商品商家编码","inventoryType":"库存类型  1：正常,2：损坏,3：冻结,10：质押,11-20:用户自定义","quantity":"数量"}]
            </summary>
        </member>
        <member name="P:Top.Api.Request.InventoryInitialRequest.StoreCode">
            <summary>
            商家仓库编码
            </summary>
        </member>
        <member name="T:Top.Api.Request.InventoryInitialItemRequest">
            <summary>
            TOP API: taobao.inventory.initial.item
            </summary>
        </member>
        <member name="P:Top.Api.Request.InventoryInitialItemRequest.ScItemId">
            <summary>
            后端商品id
            </summary>
        </member>
        <member name="P:Top.Api.Request.InventoryInitialItemRequest.StoreInventorys">
            <summary>
            商品初始库存信息： [{"storeCode":"必选,商家仓库编号","inventoryType":"可选，库存类型 1：正常,2：损坏,3：冻结,10：质押,11-20:用户自定义,默认为1","quantity":"必选,数量"}]
            </summary>
        </member>
        <member name="T:Top.Api.Request.InventoryAdjustTradeRequest">
            <summary>
            TOP API: taobao.inventory.adjust.trade
            </summary>
        </member>
        <member name="P:Top.Api.Request.InventoryAdjustTradeRequest.BizUniqueCode">
            <summary>
            商家外部定单号
            </summary>
        </member>
        <member name="P:Top.Api.Request.InventoryAdjustTradeRequest.Items">
            <summary>
            商品初始库存信息： [{ "TBOrderCode”:”淘宝交易号”,"TBSubOrderCode ":"淘宝子交易单号,赠品可以不填","”isGift”:”TRUE或者FALSE,是否赠品”,storeCode":"商家仓库编码"," scItemId ":"商品后端ID","scItemCode":"商品商家编码"," originScItemId ":"原商品ID","inventoryType":"","quantity":"111","isComplete":"TRUE或者FALSE，是否全部确认出库"}]
            </summary>
        </member>
        <member name="P:Top.Api.Request.InventoryAdjustTradeRequest.OperateTime">
            <summary>
            业务操作时间
            </summary>
        </member>
        <member name="P:Top.Api.Request.InventoryAdjustTradeRequest.TbOrderType">
            <summary>
            订单类型：B2C、B2B
            </summary>
        </member>
        <member name="T:Top.Api.Request.FenxiaoProductUpdateRequest">
            <summary>
            TOP API: taobao.fenxiao.product.update
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductUpdateRequest.AlarmNumber">
            <summary>
            警戒库存必须是0到29999。
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductUpdateRequest.CategoryId">
            <summary>
            所属类目id，参考Taobao.itemcats.get，不支持成人等类目，输入成人类目id保存提示类目属性错误。
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductUpdateRequest.City">
            <summary>
            所在地：市，例：“杭州”
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductUpdateRequest.CostPrice">
            <summary>
            代销采购价格，单位：元。例：“10.56”。必须在0.01元到10000000元之间。
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductUpdateRequest.DealerCostPrice">
            <summary>
            经销采购价，单位：元。例：“10.56”。必须在0.01元到10000000元之间。
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductUpdateRequest.Desc">
            <summary>
            产品描述，长度为5到25000字符。
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductUpdateRequest.DiscountId">
            <summary>
            折扣ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductUpdateRequest.HaveGuarantee">
            <summary>
            是否有保修，可选值：false（否）、true（是），默认false。
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductUpdateRequest.HaveInvoice">
            <summary>
            是否有发票，可选值：false（否）、true（是），默认false。
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductUpdateRequest.Image">
            <summary>
            主图图片，如果pic_path参数不空，则优先使用pic_path，忽略该参数
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductUpdateRequest.InputProperties">
            <summary>
            自定义属性。格式为pid:value;pid:value
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductUpdateRequest.IsAuthz">
            <summary>
            产品是否需要授权isAuthz:yes|no   yes:需要授权   no:不需要授权
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductUpdateRequest.Name">
            <summary>
            产品名称，长度不超过60个字节。
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductUpdateRequest.OuterId">
            <summary>
            商家编码，长度不能超过60个字节。
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductUpdateRequest.PicPath">
            <summary>
            产品主图图片空间相对路径或绝对路径
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductUpdateRequest.Pid">
            <summary>
            产品ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductUpdateRequest.PostageEms">
            <summary>
            ems费用，单位：元。例：“10.56”。大小为0.01元到999999元之间。更新时必须指定运费类型为buyer，否则不更新。
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductUpdateRequest.PostageFast">
            <summary>
            快递费用，单位：元。例：“10.56”。大小为0.01元到999999元之间。更新时必须指定运费类型为buyer，否则不更新。
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductUpdateRequest.PostageId">
            <summary>
            运费模板ID，参考taobao.postages.get。更新时必须指定运费类型为 buyer，否则不更新。
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductUpdateRequest.PostageOrdinary">
            <summary>
            平邮费用，单位：元。例：“10.56”。大小为0.01元到999999元之间。更新时必须指定运费类型为buyer，否则不更新。
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductUpdateRequest.PostageType">
            <summary>
            运费类型，可选值：seller（供应商承担运费）、buyer（分销商承担运费）。
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductUpdateRequest.Properties">
            <summary>
            产品属性
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductUpdateRequest.PropertyAlias">
            <summary>
            属性别名
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductUpdateRequest.Prov">
            <summary>
            所在地：省，例：“浙江”
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductUpdateRequest.Quantity">
            <summary>
            产品库存必须是1到999999。
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductUpdateRequest.RetailPriceHigh">
            <summary>
            最高零售价，单位：元。例：“10.56”。必须在0.01元到10000000元之间，最高零售价必须大于最低零售价。
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductUpdateRequest.RetailPriceLow">
            <summary>
            最低零售价，单位：元。例：“10.56”。必须在0.01元到10000000元之间。
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductUpdateRequest.SkuCostPrices">
            <summary>
            sku采购价格，单位元，例："10.50,11.00,20.50"，字段必须和上面的sku_ids或sku_properties保持一致。
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductUpdateRequest.SkuDealerCostPrices">
            <summary>
            sku的经销采购价。如果多个，用逗号分隔，并与其他sku信息保持相同顺序。其中每个值的单位：元。例：“10.56,12.3”。必须在0.01元到10000000元之间。
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductUpdateRequest.SkuIds">
            <summary>
            sku id列表，例：1001,1002,1003。如果传入sku_properties将忽略此参数。
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductUpdateRequest.SkuOuterIds">
            <summary>
            sku商家编码 ，单位元，例："S1000,S1002,S1003"，字段必须和上面的id或sku_properties保持一致，如果没有可以写成",,"
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductUpdateRequest.SkuProperties">
            <summary>
            sku属性。格式:pid:vid;pid:vid,表示一组属性如:1627207:3232483;1630696:3284570,表示一组:机身颜色:军绿色;手机套餐:一电一充。多组之间用逗号“,”区分。(属性的pid调用taobao.itemprops.get取得，属性值的vid用taobao.itempropvalues.get取得vid)  通过此字段可新增和更新sku。若传入此值将忽略sku_ids字段。sku其他字段与此值保持一致。
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductUpdateRequest.SkuPropertiesDel">
            <summary>
            根据sku属性删除sku信息。需要按组删除属性。
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductUpdateRequest.SkuQuantitys">
            <summary>
            sku库存，单位元，例："10,20,30"，字段必须和sku_ids或sku_properties保持一致。
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductUpdateRequest.SkuStandardPrices">
            <summary>
            sku采购基准价，单位元，例："10.50,11.00,20.50"，字段必须和上面的sku_ids或sku_properties保持一致。
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductUpdateRequest.StandardPrice">
            <summary>
            采购基准价，单位：元。例：“10.56”。必须在0.01元到10000000元之间。
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductUpdateRequest.StandardRetailPrice">
            <summary>
            零售基准价，单位：元。例：“10.56”。必须在0.01元到10000000元之间。
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductUpdateRequest.Status">
            <summary>
            发布状态，可选值：up（上架）、down（下架）、delete（删除），输入非法字符则忽略。
            </summary>
        </member>
        <member name="T:Top.Api.Request.FenxiaoProductcatsGetRequest">
            <summary>
            TOP API: taobao.fenxiao.productcats.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductcatsGetRequest.Fields">
            <summary>
            返回字段列表
            </summary>
        </member>
        <member name="T:Top.Api.Request.FenxiaoDistributorItemsGetRequest">
            <summary>
            TOP API: taobao.fenxiao.distributor.items.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoDistributorItemsGetRequest.DistributorId">
            <summary>
            分销商ID 。
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoDistributorItemsGetRequest.EndModified">
            <summary>
            设置结束时间,空为不设置。
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoDistributorItemsGetRequest.PageNo">
            <summary>
            页码（大于0的整数，默认1）
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoDistributorItemsGetRequest.PageSize">
            <summary>
            每页记录数（默认20，最大50）
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoDistributorItemsGetRequest.ProductId">
            <summary>
            产品ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoDistributorItemsGetRequest.StartModified">
            <summary>
            设置开始时间。空为不设置。
            </summary>
        </member>
        <member name="T:Taobao.Top.Link.Channel.WebSocket.WebSocketClient">
            <summary>simple websocket client helper
            </summary>
        </member>
        <member name="M:Taobao.Top.Link.Channel.WebSocket.WebSocketClient.Connect(System.Uri,System.Int32)">
            <summary>connect to uri via websocket
            </summary>
            <param name="uri">remote address</param>
            <param name="timeout">timeout in milliseconds</param>
            <returns></returns>
        </member>
        <member name="M:Taobao.Top.Link.Channel.WebSocket.WebSocketClient.Connect(Top.Api.ITopLogger,System.Uri,System.Int32)">
            <summary>connect to uri via websocket
            </summary>
            <param name="loggerFactory">loggerFactory</param>
            <param name="uri">remote address</param>
            <param name="timeout">timeout in milliseconds</param>
            <returns></returns>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Zip.ZipNameTransform">
            <summary>
            ZipNameTransform transforms names as per the Zip file naming convention.
            </summary>
            <remarks>The use of absolute names is supported although its use is not valid 
            according to Zip naming conventions, and should not be used if maximum compatability is desired.</remarks>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipNameTransform.#ctor">
            <summary>
            Initialize a new instance of <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipNameTransform"></see>
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipNameTransform.#ctor(System.String)">
            <summary>
            Initialize a new instance of <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipNameTransform"></see>
            </summary>
            <param name="trimPrefix">The string to trim from the front of paths if found.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipNameTransform.#cctor">
            <summary>
            Static constructor.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipNameTransform.TransformDirectory(System.String)">
            <summary>
            Transform a windows directory name according to the Zip file naming conventions.
            </summary>
            <param name="name">The directory name to transform.</param>
            <returns>The transformed name.</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipNameTransform.TransformFile(System.String)">
            <summary>
            Transform a windows file name according to the Zip file naming conventions.
            </summary>
            <param name="name">The file name to transform.</param>
            <returns>The transformed name.</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipNameTransform.MakeValidName(System.String,System.Char)">
            <summary>
            Force a name to be valid by replacing invalid characters with a fixed value
            </summary>
            <param name="name">The name to force valid</param>
            <param name="replacement">The replacement character to use.</param>
            <returns>Returns a valid name</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipNameTransform.IsValidName(System.String,System.Boolean)">
            <summary>
            Test a name to see if it is a valid name for a zip entry.
            </summary>
            <param name="name">The name to test.</param>
            <param name="relaxed">If true checking is relaxed about windows file names and absolute paths.</param>
            <returns>Returns true if the name is a valid zip name; false otherwise.</returns>
            <remarks>Zip path names are actually in Unix format, and should only contain relative paths.
            This means that any path stored should not contain a drive or
            device letter, or a leading slash.  All slashes should forward slashes '/'.
            An empty name is valid for a file where the input comes from standard input.
            A null name is not considered valid.
            </remarks>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipNameTransform.IsValidName(System.String)">
            <summary>
            Test a name to see if it is a valid name for a zip entry.
            </summary>
            <param name="name">The name to test.</param>
            <returns>Returns true if the name is a valid zip name; false otherwise.</returns>
            <remarks>Zip path names are actually in unix format,
            and should only contain relative paths if a path is present.
            This means that the path stored should not contain a drive or
            device letter, or a leading slash.  All slashes should forward slashes '/'.
            An empty name is valid where the input comes from standard input.
            A null name is not considered valid.
            </remarks>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipNameTransform.TrimPrefix">
            <summary>
            Get/set the path prefix to be trimmed from paths if present.
            </summary>
            <remarks>The prefix is trimmed before any conversion from
            a windows path is done.</remarks>
        </member>
        <member name="T:Top.Api.Domain.TbkFavorites">
            <summary>
            TbkFavorites Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TbkFavorites.FavoritesId">
            <summary>
            选品库id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TbkFavorites.FavoritesTitle">
            <summary>
            选品组名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TbkFavorites.Type">
            <summary>
            选品库类型，1：普通类型，2高佣金类型
            </summary>
        </member>
        <member name="T:Top.Api.Response.TmallItemDapeiTemplateUpdateResponse">
            <summary>
            TmallItemDapeiTemplateUpdateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallItemDapeiTemplateUpdateResponse.Id">
            <summary>
            被更新模板ID
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaCampaignScheduleGetResponse">
            <summary>
            SimbaCampaignScheduleGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaCampaignScheduleGetResponse.CampaignSchedule">
            <summary>
            修改后的推广计划分时折扣
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaToolsItemsTopGetResponse">
            <summary>
            SimbaToolsItemsTopGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaToolsItemsTopGetResponse.Rankeditems">
            <summary>
            推广组信息列表
            </summary>
        </member>
        <member name="T:Top.Api.Response.TopatsSimbaCampkeywordeffectGetResponse">
            <summary>
            TopatsSimbaCampkeywordeffectGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TopatsSimbaCampkeywordeffectGetResponse.Task">
            <summary>
            创建任务信息。里面只包含task_id和created
            </summary>
        </member>
        <member name="T:Top.Api.Response.TopatsSimbaCampkeywordeffectGetResponse.SubtaskDomain">
            <summary>
            SubtaskDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TopatsSimbaCampkeywordeffectGetResponse.SubtaskDomain.IsSuccess">
            <summary>
            标记子任务是否成功。为true表示子任务成功，用户可以按照正确执行的结果格式解析sub_task_result。为false表示子任务失败了，用户需要按照失败的结果格式解析sub_task_result（里面只有sub_code和sub_msg）
            </summary>
        </member>
        <member name="P:Top.Api.Response.TopatsSimbaCampkeywordeffectGetResponse.SubtaskDomain.SubTaskRequest">
            <summary>
            子任务的有效请求参数，以json格式进行key:value的组合
            </summary>
        </member>
        <member name="P:Top.Api.Response.TopatsSimbaCampkeywordeffectGetResponse.SubtaskDomain.SubTaskResult">
            <summary>
            子任务返回的结果，以json格式进行key:value组合，可以和单个api请求结果解析复用。以获取交易订单详情为例：子任务执行成功返回的结果格式为：{“trade”:{"tid":123456,"seller_nick":"淘宝卖家"}}；子任务执行失败结果格式为{"sub_code":"isv.trade-not-exist","sub_msg":"交易订单不存在"}
            </summary>
        </member>
        <member name="T:Top.Api.Response.TopatsSimbaCampkeywordeffectGetResponse.TaskDomain">
            <summary>
            TaskDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TopatsSimbaCampkeywordeffectGetResponse.TaskDomain.CheckCode">
            <summary>
            下载文件的MD5校验码，通过此校验码可以检查下载的文件是否是完整的。
            </summary>
        </member>
        <member name="P:Top.Api.Response.TopatsSimbaCampkeywordeffectGetResponse.TaskDomain.Created">
            <summary>
            任务创建时间
            </summary>
        </member>
        <member name="P:Top.Api.Response.TopatsSimbaCampkeywordeffectGetResponse.TaskDomain.DownloadUrl">
            <summary>
            大任务结果下载地址。当创建的认任务是大数据量的任务时，获取结果会返回此字段，同时subtasks列表会为空。 通过这个地址可以下载到结果的结构体，格式同普通任务下载的一样。 每次获取到的地址只能下载一次。下载的文件加上后缀名.zip打开。
            </summary>
        </member>
        <member name="P:Top.Api.Response.TopatsSimbaCampkeywordeffectGetResponse.TaskDomain.Method">
            <summary>
            此任务是由哪个api产生的
            </summary>
        </member>
        <member name="P:Top.Api.Response.TopatsSimbaCampkeywordeffectGetResponse.TaskDomain.Schedule">
            <summary>
            定时类型任务的执行时间点
            </summary>
        </member>
        <member name="P:Top.Api.Response.TopatsSimbaCampkeywordeffectGetResponse.TaskDomain.Status">
            <summary>
            异步任务处理状态。new（还未开始处理），doing（处理中），done（处理结束）。
            </summary>
        </member>
        <member name="P:Top.Api.Response.TopatsSimbaCampkeywordeffectGetResponse.TaskDomain.Subtasks">
            <summary>
            子任务处理结果，如果任务还没有处理完，返回的结果列表为空。如果任务处理完毕，返回子任务结果列表
            </summary>
        </member>
        <member name="P:Top.Api.Response.TopatsSimbaCampkeywordeffectGetResponse.TaskDomain.TaskId">
            <summary>
            异步任务id。创建异步任务时返回的任务id号
            </summary>
        </member>
        <member name="T:Top.Api.Response.TopatsSimbaCampkeywordbaseGetResponse">
            <summary>
            TopatsSimbaCampkeywordbaseGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TopatsSimbaCampkeywordbaseGetResponse.Task">
            <summary>
            创建任务信息。里面只包含task_id和created
            </summary>
        </member>
        <member name="T:Top.Api.Response.TopatsSimbaCampkeywordbaseGetResponse.SubtaskDomain">
            <summary>
            SubtaskDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TopatsSimbaCampkeywordbaseGetResponse.SubtaskDomain.IsSuccess">
            <summary>
            标记子任务是否成功。为true表示子任务成功，用户可以按照正确执行的结果格式解析sub_task_result。为false表示子任务失败了，用户需要按照失败的结果格式解析sub_task_result（里面只有sub_code和sub_msg）
            </summary>
        </member>
        <member name="P:Top.Api.Response.TopatsSimbaCampkeywordbaseGetResponse.SubtaskDomain.SubTaskRequest">
            <summary>
            子任务的有效请求参数，以json格式进行key:value的组合
            </summary>
        </member>
        <member name="P:Top.Api.Response.TopatsSimbaCampkeywordbaseGetResponse.SubtaskDomain.SubTaskResult">
            <summary>
            子任务返回的结果，以json格式进行key:value组合，可以和单个api请求结果解析复用。以获取交易订单详情为例：子任务执行成功返回的结果格式为：{“trade”:{"tid":123456,"seller_nick":"淘宝卖家"}}；子任务执行失败结果格式为{"sub_code":"isv.trade-not-exist","sub_msg":"交易订单不存在"}
            </summary>
        </member>
        <member name="T:Top.Api.Response.TopatsSimbaCampkeywordbaseGetResponse.TaskDomain">
            <summary>
            TaskDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TopatsSimbaCampkeywordbaseGetResponse.TaskDomain.CheckCode">
            <summary>
            下载文件的MD5校验码，通过此校验码可以检查下载的文件是否是完整的。
            </summary>
        </member>
        <member name="P:Top.Api.Response.TopatsSimbaCampkeywordbaseGetResponse.TaskDomain.Created">
            <summary>
            任务创建时间
            </summary>
        </member>
        <member name="P:Top.Api.Response.TopatsSimbaCampkeywordbaseGetResponse.TaskDomain.DownloadUrl">
            <summary>
            大任务结果下载地址。当创建的认任务是大数据量的任务时，获取结果会返回此字段，同时subtasks列表会为空。 通过这个地址可以下载到结果的结构体，格式同普通任务下载的一样。 每次获取到的地址只能下载一次。下载的文件加上后缀名.zip打开。
            </summary>
        </member>
        <member name="P:Top.Api.Response.TopatsSimbaCampkeywordbaseGetResponse.TaskDomain.Method">
            <summary>
            此任务是由哪个api产生的
            </summary>
        </member>
        <member name="P:Top.Api.Response.TopatsSimbaCampkeywordbaseGetResponse.TaskDomain.Schedule">
            <summary>
            定时类型任务的执行时间点
            </summary>
        </member>
        <member name="P:Top.Api.Response.TopatsSimbaCampkeywordbaseGetResponse.TaskDomain.Status">
            <summary>
            异步任务处理状态。new（还未开始处理），doing（处理中），done（处理结束）。
            </summary>
        </member>
        <member name="P:Top.Api.Response.TopatsSimbaCampkeywordbaseGetResponse.TaskDomain.Subtasks">
            <summary>
            子任务处理结果，如果任务还没有处理完，返回的结果列表为空。如果任务处理完毕，返回子任务结果列表
            </summary>
        </member>
        <member name="P:Top.Api.Response.TopatsSimbaCampkeywordbaseGetResponse.TaskDomain.TaskId">
            <summary>
            异步任务id。创建异步任务时返回的任务id号
            </summary>
        </member>
        <member name="T:Top.Api.Response.TmallProductMatchSchemaGetResponse">
            <summary>
            TmallProductMatchSchemaGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallProductMatchSchemaGetResponse.MatchResult">
            <summary>
            返回匹配product的规则文档
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaAdgroupChangedcatmatchsGetResponse">
            <summary>
            SimbaAdgroupChangedcatmatchsGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaAdgroupChangedcatmatchsGetResponse.ChangedCatmatchs">
            <summary>
            一页类目出价对象
            </summary>
        </member>
        <member name="T:Top.Api.Response.FuwuScoresGetResponse">
            <summary>
            FuwuScoresGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.FuwuScoresGetResponse.ScoreResult">
            <summary>
            评价流水记录
            </summary>
        </member>
        <member name="T:Top.Api.Response.LogisticsAddressRemoveResponse">
            <summary>
            LogisticsAddressRemoveResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.LogisticsAddressRemoveResponse.AddressResult">
            <summary>
            只返回修改日期modify_date
            </summary>
        </member>
        <member name="T:Top.Api.Response.SubuserEmployeeUpdateResponse">
            <summary>
            SubuserEmployeeUpdateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SubuserEmployeeUpdateResponse.IsSuccess">
            <summary>
            操作是否成功 true:操作成功; false:操作失败
            </summary>
        </member>
        <member name="T:Top.Api.Response.ShopRemainshowcaseGetResponse">
            <summary>
            ShopRemainshowcaseGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ShopRemainshowcaseGetResponse.Shop">
            <summary>
            支持返回剩余橱窗数量，已用橱窗数量，总橱窗数量
            </summary>
        </member>
        <member name="T:Top.Api.Response.ShopRemainshowcaseGetResponse.RemainCountShopDomain">
            <summary>
            RemainCountShopDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ShopRemainshowcaseGetResponse.RemainCountShopDomain.AllCount">
            <summary>
            总橱窗数量，对于C卖家返回总橱窗数，对于B卖家返回0（只有taobao.shop.remainshowcase.get可以返回）
            </summary>
        </member>
        <member name="P:Top.Api.Response.ShopRemainshowcaseGetResponse.RemainCountShopDomain.RemainCount">
            <summary>
            已用的橱窗数量，对于C卖家返回已使用的橱窗数，对于B卖家返回-1（只有taobao.shop.remainshowcase.get可以返回）
            </summary>
        </member>
        <member name="P:Top.Api.Response.ShopRemainshowcaseGetResponse.RemainCountShopDomain.UsedCount">
            <summary>
            剩余橱窗数量，对于C卖家返回剩余橱窗数，对于B卖家返回-1（只有taobao.shop.remainshowcase.get可以返回）
            </summary>
        </member>
        <member name="T:Top.Api.Response.ItemTemplatesGetResponse">
            <summary>
            ItemTemplatesGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ItemTemplatesGetResponse.ItemTemplateList">
            <summary>
            返回宝贝模板对象。包含模板id，模板name，还有模板的类别（0表示外店，1表示内店）
            </summary>
        </member>
        <member name="T:Top.Api.Response.PicturePicturesGetResponse">
            <summary>
            PicturePicturesGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.PicturePicturesGetResponse.Pictures">
            <summary>
            图片空间图片数据对象
            </summary>
        </member>
        <member name="T:Top.Api.Response.TradeOrderskuUpdateResponse">
            <summary>
            TradeOrderskuUpdateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TradeOrderskuUpdateResponse.Order">
            <summary>
            只返回oid和modified
            </summary>
        </member>
        <member name="T:Top.Api.Response.PromotionMjsGetResponse">
            <summary>
            PromotionMjsGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.PromotionMjsGetResponse.EndTime">
            <summary>
            活动结束时间。
            </summary>
        </member>
        <member name="P:Top.Api.Response.PromotionMjsGetResponse.Memo">
            <summary>
            活动备注。可为空，100汉字以内。
            </summary>
        </member>
        <member name="P:Top.Api.Response.PromotionMjsGetResponse.MjsList">
            <summary>
            满就送活动优惠列表。
            </summary>
        </member>
        <member name="P:Top.Api.Response.PromotionMjsGetResponse.MjsName">
            <summary>
            满就送名称。
            </summary>
        </member>
        <member name="P:Top.Api.Response.PromotionMjsGetResponse.NoCap">
            <summary>
            上不封顶标识！
            </summary>
        </member>
        <member name="P:Top.Api.Response.PromotionMjsGetResponse.ShopName">
            <summary>
            淘宝店铺或外店的名字。
            </summary>
        </member>
        <member name="P:Top.Api.Response.PromotionMjsGetResponse.StartTime">
            <summary>
            活动开始时间。
            </summary>
        </member>
        <member name="T:Top.Api.Response.TmallProductSuitespecsGetResponse">
            <summary>
            TmallProductSuitespecsGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallProductSuitespecsGetResponse.ProductSpecs">
            <summary>
            返回一组产品规格信息。
            </summary>
        </member>
        <member name="T:Top.Api.Response.SkusCustomGetResponse">
            <summary>
            SkusCustomGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SkusCustomGetResponse.Skus">
            <summary>
            Sku对象，具体字段以fields决定
            </summary>
        </member>
        <member name="T:Top.Api.Response.TmallProductUpdateSchemaGetResponse">
            <summary>
            TmallProductUpdateSchemaGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallProductUpdateSchemaGetResponse.UpdateProductSchema">
            <summary>
            参数产品ID对产品的更新规则
            </summary>
        </member>
        <member name="T:Top.Api.Response.WangwangEserviceStreamweigthsGetResponse">
            <summary>
            WangwangEserviceStreamweigthsGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.WangwangEserviceStreamweigthsGetResponse.ResultCode">
            <summary>
            0表示返回正确
            </summary>
        </member>
        <member name="P:Top.Api.Response.WangwangEserviceStreamweigthsGetResponse.ResultCount">
            <summary>
            返回数据条数
            </summary>
        </member>
        <member name="P:Top.Api.Response.WangwangEserviceStreamweigthsGetResponse.StaffStreamWeights">
            <summary>
            分流权重数据
            </summary>
        </member>
        <member name="P:Top.Api.Response.WangwangEserviceStreamweigthsGetResponse.TotalWeight">
            <summary>
            返回数据的总权重，返回数据为空的时候没有这个数字
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaRptAdgroupkeywordeffectGetResponse">
            <summary>
            SimbaRptAdgroupkeywordeffectGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaRptAdgroupkeywordeffectGetResponse.RptAdgroupkeywordEffectList">
            <summary>
            词效果数据返回结果
            </summary>
        </member>
        <member name="T:Top.Api.Response.TmallItemCombineGetResponse">
            <summary>
            TmallItemCombineGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallItemCombineGetResponse.Results">
            <summary>
            results
            </summary>
        </member>
        <member name="T:Top.Api.Response.ItemPropimgDeleteResponse">
            <summary>
            ItemPropimgDeleteResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ItemPropimgDeleteResponse.PropImg">
            <summary>
            属性图片结构
            </summary>
        </member>
        <member name="T:Top.Api.Response.ItemGetResponse">
            <summary>
            ItemGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ItemGetResponse.Item">
            <summary>
            获取的商品 具体字段根据权限和设定的fields决定
            </summary>
        </member>
        <member name="T:Top.Api.Response.ProductAddResponse">
            <summary>
            ProductAddResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ProductAddResponse.Product">
            <summary>
            产品结构
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaCampaignUpdateRequest">
            <summary>
            TOP API: taobao.simba.campaign.update
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaCampaignUpdateRequest.CampaignId">
            <summary>
            推广计划Id
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaCampaignUpdateRequest.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaCampaignUpdateRequest.OnlineStatus">
            <summary>
            用户设置的上下限状态；offline-下线；online-上线；
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaCampaignUpdateRequest.Title">
            <summary>
            推广计划名称，不能多余40个字符，不能和客户其他推广计划同名。
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaAdgroupDeleteRequest">
            <summary>
            TOP API: taobao.simba.adgroup.delete
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupDeleteRequest.AdgroupId">
            <summary>
            推广组Id
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupDeleteRequest.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaToolsItemsTopGetRequest">
            <summary>
            TOP API: taobao.simba.tools.items.top.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaToolsItemsTopGetRequest.Ip">
            <summary>
            输入的必须是一个符合ipv4或者ipv6格式的IP地址
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaToolsItemsTopGetRequest.Keyword">
            <summary>
            关键词
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaToolsItemsTopGetRequest.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="T:Top.Api.Request.TopAuthTokenCreateRequest">
            <summary>
            TOP API: taobao.top.auth.token.create
            </summary>
        </member>
        <member name="P:Top.Api.Request.TopAuthTokenCreateRequest.Code">
            <summary>
            授权code，grantType==authorization_code 时需要
            </summary>
        </member>
        <member name="P:Top.Api.Request.TopAuthTokenCreateRequest.Uuid">
            <summary>
            与生成code的uuid配对
            </summary>
        </member>
        <member name="T:Top.Api.Request.VasOrderSearchRequest">
            <summary>
            TOP API: taobao.vas.order.search
            </summary>
        </member>
        <member name="P:Top.Api.Request.VasOrderSearchRequest.ArticleCode">
            <summary>
            应用收费代码，从合作伙伴后台（my.open.taobao.com）-收费管理-收费项目列表 能够获得该应用的收费代码
            </summary>
        </member>
        <member name="P:Top.Api.Request.VasOrderSearchRequest.BizOrderId">
            <summary>
            订单号
            </summary>
        </member>
        <member name="P:Top.Api.Request.VasOrderSearchRequest.BizType">
            <summary>
            订单类型，1=新订 2=续订 3=升级 4=后台赠送 5=后台自动续订 6=订单审核后生成订购关系（暂时用不到） 空=全部
            </summary>
        </member>
        <member name="P:Top.Api.Request.VasOrderSearchRequest.EndCreated">
            <summary>
            订单创建时间（订购时间）结束值
            </summary>
        </member>
        <member name="P:Top.Api.Request.VasOrderSearchRequest.ItemCode">
            <summary>
            收费项目代码，从合作伙伴后台（my.open.taobao.com）-收费管理-收费项目列表 能够获得收费项目代码
            </summary>
        </member>
        <member name="P:Top.Api.Request.VasOrderSearchRequest.Nick">
            <summary>
            淘宝会员名
            </summary>
        </member>
        <member name="P:Top.Api.Request.VasOrderSearchRequest.OrderId">
            <summary>
            子订单号
            </summary>
        </member>
        <member name="P:Top.Api.Request.VasOrderSearchRequest.PageNo">
            <summary>
            页码
            </summary>
        </member>
        <member name="P:Top.Api.Request.VasOrderSearchRequest.PageSize">
            <summary>
            一页包含的记录数
            </summary>
        </member>
        <member name="P:Top.Api.Request.VasOrderSearchRequest.StartCreated">
            <summary>
            订单创建时间（订购时间）起始值（当start_created和end_created都不填写时，默认返回最近90天的数据）
            </summary>
        </member>
        <member name="T:Top.Api.Request.PromotionActivityGetRequest">
            <summary>
            TOP API: taobao.promotion.activity.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.PromotionActivityGetRequest.ActivityId">
            <summary>
            活动的id
            </summary>
        </member>
        <member name="T:Top.Api.Request.LogisticsOnlineSendRequest">
            <summary>
            TOP API: taobao.logistics.online.send
            </summary>
        </member>
        <member name="P:Top.Api.Request.LogisticsOnlineSendRequest.CancelId">
            <summary>
            卖家联系人地址库ID，可以通过taobao.logistics.address.search接口查询到地址库ID。 如果为空，取的卖家的默认退货地址
            </summary>
        </member>
        <member name="P:Top.Api.Request.LogisticsOnlineSendRequest.CompanyCode">
            <summary>
            物流公司代码.如"POST"就代表中国邮政,"ZJS"就代表宅急送.调用 taobao.logistics.companies.get 获取。
            </summary>
        </member>
        <member name="P:Top.Api.Request.LogisticsOnlineSendRequest.Feature">
            <summary>
            feature参数格式 范例: identCode=tid1:识别码1,识别码2|tid2:识别码3;machineCode=tid3:3C机器号A,3C机器号B identCode为识别码的KEY,machineCode为3C的KEY,多个key之间用”;”分隔 “tid1:识别码1,识别码2|tid2:识别码3”为identCode对应的value。 "|"不同商品间的分隔符。 例1商品和2商品，之间就用"|"分开。 TID就是商品代表的子订单号，对应taobao.trade.fullinfo.get 接口获得的oid字段。(通过OID可以唯一定位到当前商品上) ":"TID和具体传入参数间的分隔符。冒号前表示TID,之后代表该商品的参数属性。 "," 属性间分隔符。（对应商品数量，当存在一个商品的数量超过1个时，用逗号分开）。 具体:当订单中A商品的数量为2个，其中手机串号分别为"12345","67890"。 参数格式：identCode=TIDA:12345,67890。 TIDA对应了A宝贝，冒号后用逗号分隔的"12345","67890".说明本订单A宝贝的数量为2，值分别为"12345","67890"。 当存在"|"时，就说明订单中存在多个商品，商品间用"|"分隔了开来。|"之后的内容含义同上。
            </summary>
        </member>
        <member name="P:Top.Api.Request.LogisticsOnlineSendRequest.IsSplit">
            <summary>
            表明是否是拆单，默认值0，1表示拆单
            </summary>
        </member>
        <member name="P:Top.Api.Request.LogisticsOnlineSendRequest.OutSid">
            <summary>
            运单号.具体一个物流公司的真实运单号码。淘宝官方物流会校验，请谨慎传入；
            </summary>
        </member>
        <member name="P:Top.Api.Request.LogisticsOnlineSendRequest.SellerIp">
            <summary>
            商家的IP地址
            </summary>
        </member>
        <member name="P:Top.Api.Request.LogisticsOnlineSendRequest.SenderId">
            <summary>
            卖家联系人地址库ID，可以通过taobao.logistics.address.search接口查询到地址库ID。如果为空，取的卖家的默认取货地址
            </summary>
        </member>
        <member name="P:Top.Api.Request.LogisticsOnlineSendRequest.SubTid">
            <summary>
            需要拆单发货的子订单集合，针对的是一笔交易下有多个子订单需要分开发货的场景；1次可传人多个子订单号，子订单间用逗号隔开；为空表示不做拆单发货。
            </summary>
        </member>
        <member name="P:Top.Api.Request.LogisticsOnlineSendRequest.Tid">
            <summary>
            淘宝交易ID
            </summary>
        </member>
        <member name="T:Top.Api.Request.ItemTemplatesGetRequest">
            <summary>
            TOP API: taobao.item.templates.get
            </summary>
        </member>
        <member name="T:Top.Api.Request.MaQrcodeCommonCreateRequest">
            <summary>
            TOP API: taobao.ma.qrcode.common.create
            </summary>
        </member>
        <member name="P:Top.Api.Request.MaQrcodeCommonCreateRequest.ChannelName">
            <summary>
            二维码需要布点的位置，方便用户在码平台上可以区分看到不同布点的扫码数据情况；列表值，用半角','号分割，单个渠道名不能超过16字符。
            </summary>
        </member>
        <member name="P:Top.Api.Request.MaQrcodeCommonCreateRequest.Content">
            <summary>
            二维码的内容之一，由type决定：type=page时，content传入无线页面的URL连接内容；type=item时，content传入宝贝数字ID；type=url时，content传入普通的URL连接内容；type=shop时，content传入店铺ID；
            </summary>
        </member>
        <member name="P:Top.Api.Request.MaQrcodeCommonCreateRequest.Logo">
            <summary>
            二维码的logo地址，只允许淘宝官方图片空间的图片地址，其他非图片空间图片不支持。官方淘logo图片地址：http://img01.taobaocdn.com/imgextra/T1Od8YFT8eXXXXXXXX。
            </summary>
        </member>
        <member name="P:Top.Api.Request.MaQrcodeCommonCreateRequest.Name">
            <summary>
            二维码名字，即创建的二维码，在码平台上显示记录的名字。
            </summary>
        </member>
        <member name="P:Top.Api.Request.MaQrcodeCommonCreateRequest.NeedEps">
            <summary>
            是否需要矢量图，如果需要矢量图，设置为true；只支持普通二维码，官方模板不支持矢量图
            </summary>
        </member>
        <member name="P:Top.Api.Request.MaQrcodeCommonCreateRequest.Size">
            <summary>
            二维码尺寸，只支持普通二维码，不支持官方模板，单位为像素，最小为60×60，最大为300×300，建议175×175。官方模板大小尺寸见style说明。
            </summary>
        </member>
        <member name="P:Top.Api.Request.MaQrcodeCommonCreateRequest.Style">
            <summary>
            二维码的样式名，支持普通码的颜色或官方模板的模板名；普通码的颜色可选输入：“000000”(黑色)、“EF4F2B”(橙色);官方模板的可选输入（实际尺寸比样例大）：“ww_color.png“ 尺寸290x320，样例：http://gtms03.alicdn.com/tps/i3/T1YLPRFRXXXXbsbYwb-100-102.png；“tb_scan.png“ 尺寸290x320，样例：http://gtms01.alicdn.com/tps/i1/T14vsEFThdXXbsbYwb-100-102.png；“ww_hide_color.png“  尺寸200x263，样例：http://gtms04.alicdn.com/tps/i4/TB1URvlFVXXXXbRXFXXwxcf6pXX-76-100.png；“tmall_hide_color.png“ 尺寸200x263，样例：http://gtms01.alicdn.com/tps/i1/TB1S5PiFVXXXXacXVXXwxcf6pXX-76-100.png。
            </summary>
        </member>
        <member name="P:Top.Api.Request.MaQrcodeCommonCreateRequest.Type">
            <summary>
            要制作的二维码业务类型：page:无线页面类型item:宝贝ID类型url:普通的URL连接类型shop:店铺ID类型
            </summary>
        </member>
        <member name="T:Top.Api.Request.TicketItemAddRequest">
            <summary>
            TOP API: taobao.ticket.item.add
            </summary>
        </member>
        <member name="P:Top.Api.Request.TicketItemAddRequest.AuctionPoint">
            <summary>
            门票商品返点比例（只对B卖家开放，单位为%）
            </summary>
        </member>
        <member name="P:Top.Api.Request.TicketItemAddRequest.AuctionStatus">
            <summary>
            门票商品状态（onsale：上架，instock：仓库）
            </summary>
        </member>
        <member name="P:Top.Api.Request.TicketItemAddRequest.CheckToolMerchant">
            <summary>
            核销机具提供商
            </summary>
        </member>
        <member name="P:Top.Api.Request.TicketItemAddRequest.City">
            <summary>
            门票商品所在地-城市
            </summary>
        </member>
        <member name="P:Top.Api.Request.TicketItemAddRequest.Description">
            <summary>
            门票宝贝描述
            </summary>
        </member>
        <member name="P:Top.Api.Request.TicketItemAddRequest.EtcAssociationStatus">
            <summary>
            门票商品电子凭证是否关联本地商户-在门票商品为电子凭证时必选
            </summary>
        </member>
        <member name="P:Top.Api.Request.TicketItemAddRequest.EtcAutoRefund">
            <summary>
            门票商品电子凭证的自动退款比例-在门票商品为电子凭证时必选
            </summary>
        </member>
        <member name="P:Top.Api.Request.TicketItemAddRequest.EtcMerchantId">
            <summary>
            门票商品电子凭证的码商-在门票商品为电子凭证时必选
            </summary>
        </member>
        <member name="P:Top.Api.Request.TicketItemAddRequest.EtcMerchantNick">
            <summary>
            门票商品电子凭证的码商名-在门票商品为电子凭证时必选
            </summary>
        </member>
        <member name="P:Top.Api.Request.TicketItemAddRequest.EtcNetworkId">
            <summary>
            门票商品电子凭证网店ID-在门票商品为电子凭证时必选
            </summary>
        </member>
        <member name="P:Top.Api.Request.TicketItemAddRequest.EtcOverduePay">
            <summary>
            门票商品电子凭证的过期退款比例-在门票商品为电子凭证时必选
            </summary>
        </member>
        <member name="P:Top.Api.Request.TicketItemAddRequest.EtcVerificationPay">
            <summary>
            门票商品电子凭证是否核销打款-在门票商品为电子凭证时必选
            </summary>
        </member>
        <member name="P:Top.Api.Request.TicketItemAddRequest.HaveInvoice">
            <summary>
            门票商品是否有发票（有发票：true，没有发票：false）.  对于B卖家来说只能选择有发票。
            </summary>
        </member>
        <member name="P:Top.Api.Request.TicketItemAddRequest.Image1">
            <summary>
            商品主图-该值来自图片空间接口返回的图片链接（不包含域名和前缀）
            </summary>
        </member>
        <member name="P:Top.Api.Request.TicketItemAddRequest.Image2">
            <summary>
            第一张多图-该值来自图片空间接口返回的图片链接（不包含域名和前缀）
            </summary>
        </member>
        <member name="P:Top.Api.Request.TicketItemAddRequest.Image3">
            <summary>
            第二张多图-该值来自图片空间接口返回的图片链接（不包含域名和前缀）
            </summary>
        </member>
        <member name="P:Top.Api.Request.TicketItemAddRequest.Image4">
            <summary>
            第三张多图-该值来自图片空间接口返回的图片链接（不包含域名和前缀）
            </summary>
        </member>
        <member name="P:Top.Api.Request.TicketItemAddRequest.Image5">
            <summary>
            第四张多图-该值来自图片空间接口返回的图片链接（不包含域名和前缀）
            </summary>
        </member>
        <member name="P:Top.Api.Request.TicketItemAddRequest.ListTime">
            <summary>
            门票商品的上架时间（精确到分，格式为：yyyy-MM-dd HH:mm）
            </summary>
        </member>
        <member name="P:Top.Api.Request.TicketItemAddRequest.PostageId">
            <summary>
            门票商品的物流运费模板-在产品规格使用到物流时必选
            </summary>
        </member>
        <!-- 对于成员“P:Top.Api.Request.TicketItemAddRequest.ProductId”忽略有格式错误的 XML 注释 -->
        <member name="P:Top.Api.Request.TicketItemAddRequest.PromotedStatus">
            <summary>
            门票商品是否橱窗推荐（橱窗推荐；true，不推荐则可不用设置该值）
            </summary>
        </member>
        <member name="P:Top.Api.Request.TicketItemAddRequest.Prov">
            <summary>
            门票商品所在地-省份
            </summary>
        </member>
        <member name="P:Top.Api.Request.TicketItemAddRequest.SellerCsPhone">
            <summary>
            卖家客服电话。注意有格式校验。可以是手机号或座机号。手机号规则以1开头的11位数字；座机格式：包含两部分，区号（3-4位数字）和电话（7-8位数字），且区号和电话之间使用"-"相连
            </summary>
        </member>
        <member name="P:Top.Api.Request.TicketItemAddRequest.ShopCats">
            <summary>
            门票宝贝所属的店铺分类列表-店铺分类标识请使用店铺相关接口获取获取，多个店铺分类标识之间通过逗号进行分隔，最多包含10个分类标识
            </summary>
        </member>
        <!-- 对于成员“P:Top.Api.Request.TicketItemAddRequest.Skus”忽略有格式错误的 XML 注释 -->
        <member name="P:Top.Api.Request.TicketItemAddRequest.SubStockAtBuy">
            <summary>
            门票商品库存技术方式（拍下减库存：true，付款减库存：false）
            </summary>
        </member>
        <member name="P:Top.Api.Request.TicketItemAddRequest.Title">
            <summary>
            门票商品标题
            </summary>
        </member>
        <member name="P:Top.Api.Request.TicketItemAddRequest.VideoId">
            <summary>
            门票商品视频-视频标识由多媒体中相关接口获取
            </summary>
        </member>
        <member name="P:Top.Api.Request.TicketItemAddRequest.VipPromoted">
            <summary>
            门票商品是否参与店铺会员打折
            </summary>
        </member>
        <member name="T:Top.Api.Request.UserSellerGetRequest">
            <summary>
            TOP API: taobao.user.seller.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.UserSellerGetRequest.Fields">
            <summary>
            需要返回的字段列表，可选值为返回示例值中的可以看到的字段
            </summary>
        </member>
        <member name="T:Top.Api.Request.PromotionMjsGetRequest">
            <summary>
            TOP API: taobao.promotion.mjs.get
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaCreativeidsChangedGetRequest">
            <summary>
            TOP API: taobao.simba.creativeids.changed.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaCreativeidsChangedGetRequest.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaCreativeidsChangedGetRequest.PageNo">
            <summary>
            返回的第几页数据，默认为1
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaCreativeidsChangedGetRequest.PageSize">
            <summary>
            返回的每页数据量大小,默认200最大1000
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaCreativeidsChangedGetRequest.StartTime">
            <summary>
            得到此时间点之后的数据，不能大于一个月
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaAdgroupMobilediscountDeleteRequest">
            <summary>
            TOP API: taobao.simba.adgroup.mobilediscount.delete
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupMobilediscountDeleteRequest.AdgroupIds">
            <summary>
            adgroup主键数组（批量最多支持200个）
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupMobilediscountDeleteRequest.Nick">
            <summary>
            昵称
            </summary>
        </member>
        <member name="T:Top.Api.Request.TmallItemSchemaUpdateRequest">
            <summary>
            TOP API: tmall.item.schema.update
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemSchemaUpdateRequest.CategoryId">
            <summary>
            商品发布的目标类目，必须是叶子类目。如果没有切换类目需求不需要填写
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemSchemaUpdateRequest.ItemId">
            <summary>
            需要编辑的商品ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemSchemaUpdateRequest.ProductId">
            <summary>
            商品发布的目标product_id。如果没有切换类目或者切换产品的需求，参数不用填写
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemSchemaUpdateRequest.XmlData">
            <summary>
            根据tmall.item.update.schema.get生成的商品编辑规则入参数据
            </summary>
        </member>
        <member name="T:Top.Api.Request.PictureCategoryUpdateRequest">
            <summary>
            TOP API: taobao.picture.category.update
            </summary>
        </member>
        <member name="P:Top.Api.Request.PictureCategoryUpdateRequest.CategoryId">
            <summary>
            要更新的图片分类的id
            </summary>
        </member>
        <member name="P:Top.Api.Request.PictureCategoryUpdateRequest.CategoryName">
            <summary>
            图片分类的新名字，最大长度20字符，不能为空
            </summary>
        </member>
        <member name="P:Top.Api.Request.PictureCategoryUpdateRequest.ParentId">
            <summary>
            图片分类的新父分类id
            </summary>
        </member>
        <member name="T:Top.Api.Request.WangwangEserviceGroupmemberGetRequest">
            <summary>
            TOP API: taobao.wangwang.eservice.groupmember.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.WangwangEserviceGroupmemberGetRequest.ManagerId">
            <summary>
            主帐号ID：cntaobao+淘宝nick，例如cntaobaotest
            </summary>
        </member>
        <member name="T:Top.Api.Request.DeliveryTemplateDeleteRequest">
            <summary>
            TOP API: taobao.delivery.template.delete
            </summary>
        </member>
        <member name="P:Top.Api.Request.DeliveryTemplateDeleteRequest.TemplateId">
            <summary>
            运费模板ID
            </summary>
        </member>
        <member name="T:Top.Api.Request.SellercatsListUpdateRequest">
            <summary>
            TOP API: taobao.sellercats.list.update
            </summary>
        </member>
        <member name="P:Top.Api.Request.SellercatsListUpdateRequest.Cid">
            <summary>
            卖家自定义类目编号
            </summary>
        </member>
        <member name="P:Top.Api.Request.SellercatsListUpdateRequest.Name">
            <summary>
            卖家自定义类目名称。不超过20个字符
            </summary>
        </member>
        <member name="P:Top.Api.Request.SellercatsListUpdateRequest.PictUrl">
            <summary>
            链接图片URL地址
            </summary>
        </member>
        <member name="P:Top.Api.Request.SellercatsListUpdateRequest.SortOrder">
            <summary>
            该类目在页面上的排序位置,取值范围:大于零的整数
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaRptCustbaseGetRequest">
            <summary>
            TOP API: taobao.simba.rpt.custbase.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptCustbaseGetRequest.EndTime">
            <summary>
            结束日期，格式yyyy-mm-dd
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptCustbaseGetRequest.Nick">
            <summary>
            昵称
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptCustbaseGetRequest.PageNo">
            <summary>
            页码
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptCustbaseGetRequest.PageSize">
            <summary>
            每页大小
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptCustbaseGetRequest.Source">
            <summary>
            数据来源（站内：1，站外：2 ，汇总：SUMMARY）SUMMARY必须单选，其他值可多选例如1,2
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptCustbaseGetRequest.StartTime">
            <summary>
            开始日期，格式yyyy-mm-dd
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptCustbaseGetRequest.SubwayToken">
            <summary>
            权限验证信息
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaRptCampaigneffectGetRequest">
            <summary>
            TOP API: taobao.simba.rpt.campaigneffect.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptCampaigneffectGetRequest.CampaignId">
            <summary>
            推广计划id
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptCampaigneffectGetRequest.EndTime">
            <summary>
            结束时间，格式yyyy-mm-dd
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptCampaigneffectGetRequest.Nick">
            <summary>
            昵称
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptCampaigneffectGetRequest.PageNo">
            <summary>
            页码
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptCampaigneffectGetRequest.PageSize">
            <summary>
            每页大小
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptCampaigneffectGetRequest.SearchType">
            <summary>
            报表类型（搜索：SEARCH,类目出价：CAT,  定向投放：NOSEARCH 全部：ALL）可以一次取多个例如：SEARCH,CAT
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptCampaigneffectGetRequest.Source">
            <summary>
            数据来源（站内：1，站外：2）可多选以逗号分隔，默认值为：1,2
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptCampaigneffectGetRequest.StartTime">
            <summary>
            开始时间，格式yyyy-mm-dd
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptCampaigneffectGetRequest.SubwayToken">
            <summary>
            权限校验参数
            </summary>
        </member>
        <member name="T:Top.Api.Request.TradeMemoUpdateRequest">
            <summary>
            TOP API: taobao.trade.memo.update
            </summary>
        </member>
        <member name="P:Top.Api.Request.TradeMemoUpdateRequest.Flag">
            <summary>
            卖家交易备注旗帜，可选值为：0(灰色), 1(红色), 2(黄色), 3(绿色), 4(蓝色), 5(粉红色)，默认值为0
            </summary>
        </member>
        <member name="P:Top.Api.Request.TradeMemoUpdateRequest.Memo">
            <summary>
            卖家交易备注。最大长度: 1000个字节
            </summary>
        </member>
        <member name="P:Top.Api.Request.TradeMemoUpdateRequest.Reset">
            <summary>
            是否对memo的值置空若为true，则不管传入的memo字段的值是否为空，都将会对已有的memo值清空，慎用；若用false，则会根据memo是否为空来修改memo的值：若memo为空则忽略对已有memo字段的修改，若memo非空，则使用新传入的memo覆盖已有的memo的值
            </summary>
        </member>
        <member name="P:Top.Api.Request.TradeMemoUpdateRequest.Tid">
            <summary>
            交易编号
            </summary>
        </member>
        <member name="T:Top.Api.Request.TradesSoldGetRequest">
            <summary>
            TOP API: taobao.trades.sold.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.TradesSoldGetRequest.BuyerNick">
            <summary>
            买家昵称
            </summary>
        </member>
        <member name="P:Top.Api.Request.TradesSoldGetRequest.EndCreated">
            <summary>
            查询交易创建时间结束。格式:yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="P:Top.Api.Request.TradesSoldGetRequest.ExtType">
            <summary>
            可选值有ershou(二手市场的订单）,service（商城服务子订单）mark（双十一大促活动异常订单）作为扩展类型筛选只能做单个ext_type查询，不能全部查询所有的ext_type类型
            </summary>
        </member>
        <member name="P:Top.Api.Request.TradesSoldGetRequest.Fields">
            <summary>
            需要返回的字段列表，多个字段用半角逗号分隔，可选值为返回示例中能看到的所有字段。rx_audit_status=0,处方药未审核
            </summary>
        </member>
        <member name="P:Top.Api.Request.TradesSoldGetRequest.PageNo">
            <summary>
            页码。取值范围:大于零的整数; 默认值:1
            </summary>
        </member>
        <member name="P:Top.Api.Request.TradesSoldGetRequest.PageSize">
            <summary>
            每页条数。取值范围:大于零的整数; 默认值:40;最大值:100
            </summary>
        </member>
        <!-- 对于成员“P:Top.Api.Request.TradesSoldGetRequest.RateStatus”忽略有格式错误的 XML 注释 -->
        <member name="P:Top.Api.Request.TradesSoldGetRequest.StartCreated">
            <summary>
            查询三个月内交易创建时间开始。格式:yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="P:Top.Api.Request.TradesSoldGetRequest.Status">
            <summary>
            交易状态（<a href="http://open.taobao.com/doc/detail.htm?id=102856" target="_blank">查看可选值</a>），默认查询所有交易状态的数据，除了默认值外每次只能查询一种状态。
            </summary>
        </member>
        <member name="P:Top.Api.Request.TradesSoldGetRequest.Tag">
            <summary>
            卖家对交易的自定义分组标签，目前可选值为：time_card（点卡软件代充），fee_card（话费软件代充）
            </summary>
        </member>
        <member name="P:Top.Api.Request.TradesSoldGetRequest.Type">
            <summary>
            交易类型列表，同时查询多种交易类型可用逗号分隔。<span style="color:red;font-weight: bold;">默认同时查询guarantee_trade,auto_delivery,ec,cod,step 这5 种的交易类型的数据；查询所有交易类型的数据，需要设置下面全部可选值。</span>可选值：fixed(一口价)auction(拍卖)guarantee_trade(一口价、拍卖)step(分阶段付款，万人团，阶梯团订单）independent_simple_trade(旺店入门版交易)independent_shop_trade(旺店标准版交易)auto_delivery(自动发货)ec(直冲)cod(货到付款)game_equipment(游戏装备)shopex_trade(ShopEX交易)netcn_trade(万网交易)external_trade(统一外部交易)instant_trade (即时到账)b2c_cod(大商家货到付款)hotel_trade(酒店类型交易)super_market_trade(商超交易)super_market_cod_trade(商超货到付款交易)taohua(淘花网交易类型）waimai(外卖交易类型）o2o_offlinetrade（O2O交易）nopaid（即时到帐/趣味猜交易类型）step (万人团) eticket(电子凭证) tmall_i18n（天猫国际）;nopaid （无付款交易）insurance_plus（保险）finance（基金）注：guarantee_trade是一个组合查询条件，并不是一种交易类型，获取批量或单个订单中不会返回此种类型的订单。pre_auth_type(预授权0元购)
            </summary>
        </member>
        <member name="P:Top.Api.Request.TradesSoldGetRequest.UseHasNext">
            <summary>
            是否启用has_next的分页方式，如果指定true,则返回的结果中不包含总记录数，但是会新增一个是否存在下一页的的字段，通过此种方式获取增量交易，接口调用成功率在原有的基础上有所提升。
            </summary>
        </member>
        <member name="T:Top.Api.Request.TmallProductSpecsGetRequest">
            <summary>
            TOP API: tmall.product.specs.get
            </summary>
        </member>
        <!-- 对于成员“P:Top.Api.Request.TmallProductSpecsGetRequest.CatId”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“P:Top.Api.Request.TmallProductSpecsGetRequest.ProductId”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“P:Top.Api.Request.TmallProductSpecsGetRequest.Properties”忽略有格式错误的 XML 注释 -->
        <member name="T:Top.Api.Domain.ChannelOption">
            <summary>
            ChannelOption Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ChannelOption.ChannelId">
            <summary>
            频道id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ChannelOption.IsNonsearch">
            <summary>
            是否有非搜索流量，true：是；false：否；
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ChannelOption.IsSearch">
            <summary>
            是否有搜索流量，true：是；false：否；
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ChannelOption.Name">
            <summary>
            频道名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ChannelOption.TrafficName">
            <summary>
            流量名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ChannelOption.TrafficType">
            <summary>
            流量类型，taobao：淘宝站内；other：淘宝站外
            </summary>
        </member>
        <member name="T:Top.Api.Domain.ArticleUserSubscribe">
            <summary>
            ArticleUserSubscribe Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ArticleUserSubscribe.Deadline">
            <summary>
            订购关系到期时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ArticleUserSubscribe.ItemCode">
            <summary>
            收费项目代码，从合作伙伴后台（my.open.taobao.com）-收费管理-收费项目列表 能够获得收费项目代码
            </summary>
        </member>
        <member name="T:Top.Api.Domain.CertTxtInfo">
            <summary>
            CertTxtInfo Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.CertTxtInfo.CertType">
            <summary>
            认证类型的数值id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.CertTxtInfo.Text">
            <summary>
            认证文本信息
            </summary>
        </member>
        <member name="T:Top.Api.Domain.ShopCat">
            <summary>
            ShopCat Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ShopCat.Cid">
            <summary>
            类目编号
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ShopCat.IsParent">
            <summary>
            该类目是否为父类目。即：该类目是否还有子类目
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ShopCat.Name">
            <summary>
            类目名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ShopCat.ParentCid">
            <summary>
            父类目编号，注：此类目指前台类目，值等于0：表示此类目为一级类目，值不等于0：表示此类目有父类目
            </summary>
        </member>
        <member name="T:Top.Api.Domain.TicketEtc">
            <summary>
            TicketEtc Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TicketEtc.AssociationStatus">
            <summary>
            商品电子凭证是否关联本地商户-在门票商品为电子凭证时必选
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TicketEtc.AutoRefund">
            <summary>
            商品电子凭证的自动退款比例-在门票商品为电子凭证时必选
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TicketEtc.MerchantId">
            <summary>
            商品电子凭证的码商-在门票商品为电子凭证时必选
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TicketEtc.MerchantNick">
            <summary>
            商品电子凭证的码商名-在门票商品为电子凭证时必选
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TicketEtc.NetworkId">
            <summary>
            商品电子凭证的码商-在门票商品为电子凭证时必选
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TicketEtc.OverduePay">
            <summary>
            商品电子凭证的过期退款比例-在门票商品为电子凭证时必选
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TicketEtc.VerificationPay">
            <summary>
            商品电子凭证是否核销打款-在门票商品为电子凭证时必选
            </summary>
        </member>
        <member name="T:Top.Api.Domain.TradeRate">
            <summary>
            TradeRate Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeRate.Content">
            <summary>
            评价内容,最大长度:500个汉字
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeRate.Created">
            <summary>
            评价创建时间,格式:yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeRate.ItemPrice">
            <summary>
            商品价格,精确到2位小数;单位:元.如:200.07，表示:200元7分
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeRate.ItemTitle">
            <summary>
            商品标题
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeRate.Nick">
            <summary>
            评价者昵称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeRate.NumIid">
            <summary>
            商品的数字ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeRate.Oid">
            <summary>
            子订单ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeRate.RatedNick">
            <summary>
            被评价者昵称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeRate.Reply">
            <summary>
            评价解释,最大长度:500个汉字
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeRate.Result">
            <summary>
            评价结果,可选值:good(好评),neutral(中评),bad(差评)
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeRate.Role">
            <summary>
            评价者角色.可选值:seller(卖家),buyer(买家)
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeRate.Tid">
            <summary>
            交易ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeRate.ValidScore">
            <summary>
            评价信息是否用于记分，  可取值：true(参与记分)和false(不参与记分)
            </summary>
        </member>
        <member name="T:Top.Api.Domain.InsightCategoryForcastDTO">
            <summary>
            InsightCategoryForcastDTO Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightCategoryForcastDTO.Bidword">
            <summary>
            查询词
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightCategoryForcastDTO.CatPathId">
            <summary>
            表示该类目的所有父级类目，按层级顺序排列，层级越高的在前面，不同的层级之间用空格分隔
            </summary>
        </member>
        <!-- 对于成员“P:Top.Api.Domain.InsightCategoryForcastDTO.CatPathName”忽略有格式错误的 XML 注释 -->
        <member name="P:Top.Api.Domain.InsightCategoryForcastDTO.Score">
            <summary>
            表示词与该类目的相关度，值越大表示越相关
            </summary>
        </member>
        <member name="T:Top.Api.Domain.RecommendWordPage">
            <summary>
            RecommendWordPage Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RecommendWordPage.PageNo">
            <summary>
            返回第几页的数据从1开始。  如果输入的值大于可取得的最大页码值时，将返回  最大的页码值并且recommend_word_list值将  为空
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RecommendWordPage.PageSize">
            <summary>
            每页数据大小
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RecommendWordPage.RecommendWordList">
            <summary>
            推荐词分页对象列表
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RecommendWordPage.TotalItem">
            <summary>
            所查询的数据总数
            </summary>
        </member>
        <member name="T:Top.Api.Util.SecurityUtil">
            <summary>
            安全工具类
            </summary>
        </member>
        <member name="M:Top.Api.Util.SecurityUtil.IsBase64Value(System.String)">
            <summary>
            判断是否base64值
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Top.Api.Util.SecurityUtil.GetSlideWindows(System.String,System.Int32)">
            <summary>
            生成滑动窗口
            </summary>
            <param name="input">数据</param>
            <param name="slideSize">分词大小</param>
            <returns>分词元素</returns>
        </member>
        <member name="M:Top.Api.Util.SecurityUtil.IsLetterOrDigit(System.Char)">
            <summary>
            判断是否小写字母
            </summary>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="M:Top.Api.Util.SecurityUtil.Compress(System.Byte[],System.Int32)">
            <summary>
            压缩
            </summary>
            <param name="input"></param>
            <param name="toLength"></param>
            <returns></returns>
        </member>
        <member name="M:Top.Api.Util.SecurityUtil.EncodeBase64(System.String,System.Text.Encoding)">
            <summary>
            Base64加密
            </summary>
            <param name="source">待加密的明文</param>
            <param name="encode">编码方式</param>
            <returns></returns>
        </member>
        <member name="M:Top.Api.Util.SecurityUtil.EncodeBase64(System.String)">
            <summary>
            Base64加密
            </summary>
            <param name="source">待加密的明文</param>
            <returns></returns>
            
            <seealso cref="M:Top.Api.Util.SecurityUtil.EncodeBase64(System.String,System.Text.Encoding)">  
            参看SecurityUtil.EncodeBase64(string,Encoding)方法的说明 </seealso>  
        </member>
        <member name="M:Top.Api.Util.SecurityUtil.AESEncrypt(System.String,System.Byte[])">
            <summary>
            AES加密 
            </summary>
            <param name="context">待加密的内容</param>
            <param name="keyBytes">加密密钥</param>
            <returns></returns>
        </member>
        <member name="M:Top.Api.Util.SecurityUtil.AESDecrypt(System.String,System.Byte[])">
            <summary>
            AES解密
            </summary>
            <param name="context"></param>
            <param name="keyBytes"></param>
            <returns></returns>
        </member>
        <member name="M:Top.Api.Util.SecurityUtil.HmacMD5EncryptToBase64(System.String,System.Byte[])">
            <summary>
            生成BASE64(H_MAC)
            </summary>
            <param name="encryptText">被签名的字符串</param>
            <param name="encryptKey">秘钥</param>
            <returns></returns>
        </member>
        <member name="M:Top.Api.Util.SecurityUtil.HmacMD5EncryptToBase64(System.String,System.Byte[],System.Int32)">
            <summary>
            生成BASE64(H_MAC),压缩H_MAC值
            </summary>
            <param name="encryptText"></param>
            <param name="encryptKey"></param>
            <param name="compressLen"></param>
            <returns></returns>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerInterestFindResponse">
            <summary>
            ZuanshiBannerInterestFindResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerInterestFindResponse.Result">
            <summary>
            返回结果对象
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerInterestFindResponse.InterestDTODomain">
            <summary>
            InterestDTODomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerInterestFindResponse.InterestDTODomain.InterestId">
            <summary>
            兴趣点ID
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerInterestFindResponse.InterestDTODomain.InterestName">
            <summary>
            兴趣点名称
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerInterestFindResponse.ResultDTODomain">
            <summary>
            ResultDTODomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerInterestFindResponse.ResultDTODomain.Interests">
            <summary>
            兴趣点列表
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerInterestFindResponse.ResultDTODomain.Message">
            <summary>
            调用返回消息
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerInterestFindResponse.ResultDTODomain.Success">
            <summary>
            调用是否成功,true-成功，false-失败
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerDmpFindResponse">
            <summary>
            ZuanshiBannerDmpFindResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerDmpFindResponse.Result">
            <summary>
            result
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerDmpFindResponse.DmpCrowdDTODomain">
            <summary>
            DmpCrowdDTODomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerDmpFindResponse.DmpCrowdDTODomain.Coverage">
            <summary>
            覆盖人数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerDmpFindResponse.DmpCrowdDTODomain.DmpCrowdId">
            <summary>
            DMP人群ID
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerDmpFindResponse.DmpCrowdDTODomain.DmpCrowdName">
            <summary>
            DMP人群名称
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerDmpFindResponse.DmpCrowdDTODomain.EnableTime">
            <summary>
            人群生效时间
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerDmpFindResponse.DmpCrowdDTODomain.UpdateTime">
            <summary>
            人群修改时间
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerDmpFindResponse.ResultDTODomain">
            <summary>
            ResultDTODomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerDmpFindResponse.ResultDTODomain.Crowds">
            <summary>
            人群列表
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerDmpFindResponse.ResultDTODomain.Message">
            <summary>
            message
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerDmpFindResponse.ResultDTODomain.Success">
            <summary>
            调用是否成功,true-成功，false-失败
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerCreativeUnbindResponse">
            <summary>
            ZuanshiBannerCreativeUnbindResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeUnbindResponse.Result">
            <summary>
            返回结果
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerCreativeUnbindResponse.ResultDTODomain">
            <summary>
            ResultDTODomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeUnbindResponse.ResultDTODomain.Message">
            <summary>
            错误时候，返回错误信息
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeUnbindResponse.ResultDTODomain.Success">
            <summary>
            true：调用成功，false：调用失败
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerCreativeBindResponse">
            <summary>
            ZuanshiBannerCreativeBindResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeBindResponse.Result">
            <summary>
            result
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerCreativeBindResponse.ResultDtoDomain">
            <summary>
            ResultDtoDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeBindResponse.ResultDtoDomain.Message">
            <summary>
            错误时候，返回错误信息
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeBindResponse.ResultDtoDomain.Success">
            <summary>
            true：调用成功，false：调用失败
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerAdgroupGetResponse">
            <summary>
            ZuanshiBannerAdgroupGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdgroupGetResponse.Result">
            <summary>
            result
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerAdgroupGetResponse.AdgroupDomain">
            <summary>
            AdgroupDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdgroupGetResponse.AdgroupDomain.AdboardFilter">
            <summary>
            创意优选：1 开启，0 关闭
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdgroupGetResponse.AdgroupDomain.CampaignId">
            <summary>
            计划ID
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdgroupGetResponse.AdgroupDomain.Id">
            <summary>
            单元ID
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdgroupGetResponse.AdgroupDomain.IntelligentBid">
            <summary>
            智能出价: 1 开启，0 关闭
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdgroupGetResponse.AdgroupDomain.Name">
            <summary>
            单元名称
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdgroupGetResponse.AdgroupDomain.OnlineStatus">
            <summary>
            状态
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerAdgroupGetResponse.ResultDomain">
            <summary>
            ResultDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdgroupGetResponse.ResultDomain.Adgroup">
            <summary>
            单元数据
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdgroupGetResponse.ResultDomain.Message">
            <summary>
            message
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdgroupGetResponse.ResultDomain.Success">
            <summary>
            调用是否成功
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAdvertiserRptsDownloadDayGetResponse">
            <summary>
            ZuanshiAdvertiserRptsDownloadDayGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserRptsDownloadDayGetResponse.Result">
            <summary>
            创建任务信息。里面只包含task_id和created
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAdvertiserRptsDownloadDayGetResponse.StructDomain">
            <summary>
            StructDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserRptsDownloadDayGetResponse.StructDomain.IsSuccess">
            <summary>
            标记子任务是否成功。为true表示子任务成功，用户可以按照正确执行的结果格式解析sub_task_result。为false表示子任务失败了，用户需要按照失败的结果格式解析sub_task_result（里面只有sub_code和sub_msg）
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserRptsDownloadDayGetResponse.StructDomain.SubTaskRequest">
            <summary>
            子任务的有效请求参数，以json格式进行key:value的组合
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserRptsDownloadDayGetResponse.StructDomain.SubTaskResult">
            <summary>
            子任务返回的结果，以json格式进行key:value组合，可以和单个api请求结果解析复用。以获取交易订单详情为例：子任务执行成功返回的结果格式为：{“trade”:{"tid":123456,"seller_nick":"淘宝卖家"}}；子任务执行失败结果格式为{"sub_code":"isv.trade-not-exist","sub_msg":"交易订单不存在"}
            </summary>
        </member>
        <member name="T:Top.Api.Response.TbkItemGetResponse">
            <summary>
            TbkItemGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkItemGetResponse.Results">
            <summary>
            淘宝客商品
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkItemGetResponse.TotalResults">
            <summary>
            搜索到符合条件的结果总数
            </summary>
        </member>
        <member name="T:Top.Api.Response.ItemAddSchemaGetResponse">
            <summary>
            ItemAddSchemaGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ItemAddSchemaGetResponse.AddRules">
            <summary>
            返回结果的集合
            </summary>
        </member>
        <member name="T:Top.Api.Response.InventoryStoreQueryResponse">
            <summary>
            InventoryStoreQueryResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.InventoryStoreQueryResponse.StoreList">
            <summary>
            仓库列表
            </summary>
        </member>
        <member name="T:Top.Api.Response.FenxiaoProductSkuDeleteResponse">
            <summary>
            FenxiaoProductSkuDeleteResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoProductSkuDeleteResponse.Created">
            <summary>
            操作时间
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoProductSkuDeleteResponse.Result">
            <summary>
            操作结果
            </summary>
        </member>
        <member name="T:Top.Api.Response.FenxiaoOrdersGetResponse">
            <summary>
            FenxiaoOrdersGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoOrdersGetResponse.PurchaseOrders">
            <summary>
            采购单及子采购单信息。返回 PurchaseOrder 包含的字段信息。
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoOrdersGetResponse.TotalResults">
            <summary>
            搜索到的采购单记录总数
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiBannerInterestFindRequest">
            <summary>
            TOP API: taobao.zuanshi.banner.interest.find
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerInterestFindRequest.ItemIds">
            <summary>
            按宝贝ID列表查询兴趣点
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerInterestFindRequest.Keyword">
            <summary>
            按关键字查询兴趣点
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerInterestFindRequest.Nickname">
            <summary>
            按店铺名称查询兴趣点
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiBannerCpmTargetingFindRequest">
            <summary>
            TOP API: taobao.zuanshi.banner.cpm.targeting.find
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiBannerAdgroupFindRequest">
            <summary>
            TOP API: taobao.zuanshi.banner.adgroup.find
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerAdgroupFindRequest.AdgroupIdList">
            <summary>
            单元id列表
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerAdgroupFindRequest.CampaignId">
            <summary>
            计划ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerAdgroupFindRequest.Name">
            <summary>
            单元名称
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerAdgroupFindRequest.PageNum">
            <summary>
            当前页码
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerAdgroupFindRequest.PageSize">
            <summary>
            分页大小
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerAdgroupFindRequest.Status">
            <summary>
            状态，1：正常投放，0：暂停投放，9：结束投放
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiAdvertiserTargetRtrptsTotalGetRequest">
            <summary>
            TOP API: taobao.zuanshi.advertiser.target.rtrpts.total.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserTargetRtrptsTotalGetRequest.AdgroupId">
            <summary>
            推广单元id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserTargetRtrptsTotalGetRequest.CampaignId">
            <summary>
            计划id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserTargetRtrptsTotalGetRequest.CampaignModel">
            <summary>
            计划类型。1：全店推广，4：单品推广。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserTargetRtrptsTotalGetRequest.LogDate">
            <summary>
            日期
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserTargetRtrptsTotalGetRequest.Offset">
            <summary>
            分页偏移量
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserTargetRtrptsTotalGetRequest.PageSize">
            <summary>
            每页记录数
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserTargetRtrptsTotalGetRequest.TargetId">
            <summary>
            定向id
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiAdvertiserTargetAdzoneRptsDayGetRequest">
            <summary>
            TOP API: taobao.zuanshi.advertiser.target.adzone.rpts.day.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserTargetAdzoneRptsDayGetRequest.AdgroupId">
            <summary>
            推广单元id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserTargetAdzoneRptsDayGetRequest.AdzoneId">
            <summary>
            资源位id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserTargetAdzoneRptsDayGetRequest.CampaignId">
            <summary>
            计划id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserTargetAdzoneRptsDayGetRequest.Effect">
            <summary>
            效果周期，取值范围：3,7,15。分别表示效果转化周期-3天/7天/15天。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserTargetAdzoneRptsDayGetRequest.EffectType">
            <summary>
            效果类型。“impression”：展现效果；“click”：点击效果
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserTargetAdzoneRptsDayGetRequest.EndTime">
            <summary>
            结束日期
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserTargetAdzoneRptsDayGetRequest.StartTime">
            <summary>
            开始日期
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserTargetAdzoneRptsDayGetRequest.TargetId">
            <summary>
            定向id
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiAdvertiserCampaignRptsDownloadRequest">
            <summary>
            TOP API: taobao.zuanshi.advertiser.campaign.rpts.download
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserCampaignRptsDownloadRequest.EndTime">
            <summary>
            查询结束时间
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserCampaignRptsDownloadRequest.RptType">
            <summary>
            计划类型，1代表展示网络，2代表明星店铺，3代表视频网络
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserCampaignRptsDownloadRequest.StartTime">
            <summary>
            查询开始时间
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiAdvertiserAdzoneRtrptsTotalGetRequest">
            <summary>
            TOP API: taobao.zuanshi.advertiser.adzone.rtrpts.total.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAdzoneRtrptsTotalGetRequest.AdgroupId">
            <summary>
            推广单元id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAdzoneRtrptsTotalGetRequest.AdzoneId">
            <summary>
            资源位id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAdzoneRtrptsTotalGetRequest.CampaignId">
            <summary>
            计划id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAdzoneRtrptsTotalGetRequest.CampaignModel">
            <summary>
            计划类型。1：全店推广，4：单品推广。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAdzoneRtrptsTotalGetRequest.LogDate">
            <summary>
            日期
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAdzoneRtrptsTotalGetRequest.Offset">
            <summary>
            偏移量
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAdzoneRtrptsTotalGetRequest.PageSize">
            <summary>
            每页记录数
            </summary>
        </member>
        <member name="T:Top.Api.Request.WangwangClientidBindRequest">
            <summary>
            TOP API: taobao.wangwang.clientid.bind
            </summary>
        </member>
        <member name="P:Top.Api.Request.WangwangClientidBindRequest.AppName">
            <summary>
            应用名
            </summary>
        </member>
        <member name="P:Top.Api.Request.WangwangClientidBindRequest.ClientId">
            <summary>
            客户端Id
            </summary>
        </member>
        <member name="T:Top.Api.Request.TmcUserTopicsGetRequest">
            <summary>
            TOP API: taobao.tmc.user.topics.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmcUserTopicsGetRequest.Nick">
            <summary>
            卖家nick
            </summary>
        </member>
        <member name="T:Top.Api.Request.ScitemMapAddRequest">
            <summary>
            TOP API: taobao.scitem.map.add
            </summary>
        </member>
        <member name="P:Top.Api.Request.ScitemMapAddRequest.ItemId">
            <summary>
            前台ic商品id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ScitemMapAddRequest.NeedCheck">
            <summary>
            默认值为false  true:进行高级校验,前端商品或SKU的商家编码必须与后端商品的商家编码一致，否则会拒绝关联  false:不进行高级校验
            </summary>
        </member>
        <member name="P:Top.Api.Request.ScitemMapAddRequest.OuterCode">
            <summary>
            sc_item_id和outer_code 其中一个不能为空
            </summary>
        </member>
        <member name="P:Top.Api.Request.ScitemMapAddRequest.ScItemId">
            <summary>
            sc_item_id和outer_code 其中一个不能为空
            </summary>
        </member>
        <member name="P:Top.Api.Request.ScitemMapAddRequest.SkuId">
            <summary>
            前台ic商品skuid
            </summary>
        </member>
        <member name="T:Top.Api.Request.ScitemAddRequest">
            <summary>
            TOP API: taobao.scitem.add
            </summary>
        </member>
        <member name="P:Top.Api.Request.ScitemAddRequest.BarCode">
            <summary>
            条形码
            </summary>
        </member>
        <member name="P:Top.Api.Request.ScitemAddRequest.BrandId">
            <summary>
            品牌id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ScitemAddRequest.BrandName">
            <summary>
            brand_Name
            </summary>
        </member>
        <member name="P:Top.Api.Request.ScitemAddRequest.Height">
            <summary>
            高 单位：mm
            </summary>
        </member>
        <member name="P:Top.Api.Request.ScitemAddRequest.IsAreaSale">
            <summary>
            1表示区域销售，0或是空是非区域销售
            </summary>
        </member>
        <member name="P:Top.Api.Request.ScitemAddRequest.IsCostly">
            <summary>
            是否是贵重品 0:不是 1：是
            </summary>
        </member>
        <member name="P:Top.Api.Request.ScitemAddRequest.IsDangerous">
            <summary>
            是否危险 0：不是  1：是
            </summary>
        </member>
        <member name="P:Top.Api.Request.ScitemAddRequest.IsFriable">
            <summary>
            是否易碎 0：不是  1：是
            </summary>
        </member>
        <member name="P:Top.Api.Request.ScitemAddRequest.IsWarranty">
            <summary>
            是否保质期：0:不是 1：是
            </summary>
        </member>
        <member name="P:Top.Api.Request.ScitemAddRequest.ItemName">
            <summary>
            商品名称
            </summary>
        </member>
        <member name="P:Top.Api.Request.ScitemAddRequest.ItemType">
            <summary>
            0.普通供应链商品 1.供应链组合主商品
            </summary>
        </member>
        <member name="P:Top.Api.Request.ScitemAddRequest.Length">
            <summary>
            长度 单位：mm
            </summary>
        </member>
        <member name="P:Top.Api.Request.ScitemAddRequest.MatterStatus">
            <summary>
            0:液体，1：粉体，2：固体
            </summary>
        </member>
        <member name="P:Top.Api.Request.ScitemAddRequest.OuterCode">
            <summary>
            商家编码
            </summary>
        </member>
        <member name="P:Top.Api.Request.ScitemAddRequest.Price">
            <summary>
            价格 单位：分
            </summary>
        </member>
        <member name="P:Top.Api.Request.ScitemAddRequest.Properties">
            <summary>
            商品属性格式是  p1:v1,p2:v2,p3:v3
            </summary>
        </member>
        <member name="P:Top.Api.Request.ScitemAddRequest.Remark">
            <summary>
            remark
            </summary>
        </member>
        <member name="P:Top.Api.Request.ScitemAddRequest.SpuId">
            <summary>
            spuId或是cspuid
            </summary>
        </member>
        <member name="P:Top.Api.Request.ScitemAddRequest.Volume">
            <summary>
            体积：立方厘米
            </summary>
        </member>
        <member name="P:Top.Api.Request.ScitemAddRequest.Weight">
            <summary>
            重量 单位：g
            </summary>
        </member>
        <member name="P:Top.Api.Request.ScitemAddRequest.Width">
            <summary>
            宽 单位：mm
            </summary>
        </member>
        <member name="P:Top.Api.Request.ScitemAddRequest.WmsCode">
            <summary>
            仓储商编码
            </summary>
        </member>
        <member name="T:Top.Api.Request.OpenimTribeGetmembersRequest">
            <summary>
            TOP API: taobao.openim.tribe.getmembers
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimTribeGetmembersRequest.TribeId">
            <summary>
            群id
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimTribeGetmembersRequest.User">
            <summary>
            用户信息
            </summary>
        </member>
        <member name="T:Top.Api.Request.JushitaJmsGroupDeleteRequest">
            <summary>
            TOP API: taobao.jushita.jms.group.delete
            </summary>
        </member>
        <member name="P:Top.Api.Request.JushitaJmsGroupDeleteRequest.GroupName">
            <summary>
            分组名称，分组删除后，用户的消息将会存储于默认分组中。警告：由于分组已经删除，用户之前未消费的消息将无法再获取。不能以default开头，default开头为系统默认组。
            </summary>
        </member>
        <member name="P:Top.Api.Request.JushitaJmsGroupDeleteRequest.Nicks">
            <summary>
            用户列表，不传表示删除整个分组，如果用户全部删除后，也会自动删除整个分组
            </summary>
        </member>
        <member name="P:Top.Api.Request.JushitaJmsGroupDeleteRequest.UserPlatform">
            <summary>
            用户所属于的平台类型，tbUIC:淘宝用户; icbu: icbu用户
            </summary>
        </member>
        <member name="T:Top.Api.Request.ItemQualificationDisplayGetRequest">
            <summary>
            TOP API: taobao.item.qualification.display.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemQualificationDisplayGetRequest.CategoryId">
            <summary>
            类目id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemQualificationDisplayGetRequest.ItemId">
            <summary>
            商品id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemQualificationDisplayGetRequest.Param">
            <summary>
            参数列表，为key和value都是string的map的转化的json格式
            </summary>
        </member>
        <member name="T:Top.Api.Request.InventoryMerchantAdjustRequest">
            <summary>
            TOP API: taobao.inventory.merchant.adjust
            </summary>
        </member>
        <member name="P:Top.Api.Request.InventoryMerchantAdjustRequest.InventoryCheck">
            <summary>
            调整库存对象
            </summary>
        </member>
        <member name="T:Top.Api.Request.InventoryMerchantAdjustRequest.InventoryCheckDetailDtoDomain">
            <summary>
            InventoryCheckDetailDtoDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Request.InventoryMerchantAdjustRequest.InventoryCheckDetailDtoDomain.InvBizCode">
            <summary>
            如果是门店类型,则为必填。 ONLINE_INVENTORY  线上可售库存，  SHARE_INVENTORY 线下可售库存
            </summary>
        </member>
        <member name="P:Top.Api.Request.InventoryMerchantAdjustRequest.InventoryCheckDetailDtoDomain.Quantity">
            <summary>
            调整数量，正数盘盈，负数盘亏
            </summary>
        </member>
        <member name="P:Top.Api.Request.InventoryMerchantAdjustRequest.InventoryCheckDetailDtoDomain.ScItemId">
            <summary>
            后端货品id
            </summary>
        </member>
        <member name="P:Top.Api.Request.InventoryMerchantAdjustRequest.InventoryCheckDetailDtoDomain.SubOrderId">
            <summary>
            每个货品的调整子单据号，作为业务调整依据，处理时会幂等
            </summary>
        </member>
        <member name="T:Top.Api.Request.InventoryMerchantAdjustRequest.InventoryCheckDtoDomain">
            <summary>
            InventoryCheckDtoDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Request.InventoryMerchantAdjustRequest.InventoryCheckDtoDomain.CheckMode">
            <summary>
            2: 出入库盘盈盘亏
            </summary>
        </member>
        <member name="P:Top.Api.Request.InventoryMerchantAdjustRequest.InventoryCheckDtoDomain.DetailList">
            <summary>
            调整明细
            </summary>
        </member>
        <member name="P:Top.Api.Request.InventoryMerchantAdjustRequest.InventoryCheckDtoDomain.InvStoreType">
            <summary>
            2： 仓库类型   6：门店类型
            </summary>
        </member>
        <member name="P:Top.Api.Request.InventoryMerchantAdjustRequest.InventoryCheckDtoDomain.OrderId">
            <summary>
            调整单据号
            </summary>
        </member>
        <member name="P:Top.Api.Request.InventoryMerchantAdjustRequest.InventoryCheckDtoDomain.StoreCode">
            <summary>
            仓库code或者门店id
            </summary>
        </member>
        <member name="T:Top.Api.Request.FenxiaoRefundCreateRequest">
            <summary>
            TOP API: taobao.fenxiao.refund.create
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoRefundCreateRequest.IsReturnGoods">
            <summary>
            是否退货，只有子采购单发货后，才能申请退货
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoRefundCreateRequest.IsReturnPostFee">
            <summary>
            此条子采购单是否退邮费，邮费要记在最后一笔申请退款的子单上面
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoRefundCreateRequest.RefundDesc">
            <summary>
            退款说明,2-200字
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoRefundCreateRequest.RefundReasonId">
            <summary>
            发货前：  1、缺货，2、拍错商品，3、商品缺少所需样式，4、协商一致退款，5、未及时发货，0、其它  发货后：  经销：  1、商品质量问题，2、收到的商品不符，3、协商一致退款，4、一直未收到货，5、退还多付邮费，6、折扣、赠品、发票等问题，0、其它  代销：  1、商品质量问题，2、收到的商品不符，3、协商一致退款，4、买家一直未收到货，5、退还多付邮费，6、折扣、赠品、发票等问题，0、其它
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoRefundCreateRequest.ReturnFee">
            <summary>
            需要退款的金额，单位为分
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoRefundCreateRequest.SubOrderId">
            <summary>
            需要创建退款的子采购单id
            </summary>
        </member>
        <member name="T:Top.Api.Request.FenxiaoProductMapAddRequest">
            <summary>
            TOP API: taobao.fenxiao.product.map.add
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductMapAddRequest.NotCheckOuterCode">
            <summary>
            是否需要校验商家编码，true不校验，false校验。
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductMapAddRequest.ProductId">
            <summary>
            分销产品id。
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductMapAddRequest.ScItemId">
            <summary>
            后端商品id（如果当前分销产品没有sku和后端商品时需要指定）。
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductMapAddRequest.ScItemIds">
            <summary>
            在有sku的情况下，与各个sku对应的后端商品id列表。逗号分隔，顺序需要保证与sku_ids一致。
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductMapAddRequest.SkuIds">
            <summary>
            分销产品的sku id。逗号分隔，顺序需要保证与sc_item_ids一致（没有sku就不传）。
            </summary>
        </member>
        <member name="T:Top.Api.Request.FenxiaoGradesGetRequest">
            <summary>
            TOP API: taobao.fenxiao.grades.get
            </summary>
        </member>
        <member name="T:Top.Api.Request.FenxiaoDealerRequisitionorderAgreeRequest">
            <summary>
            TOP API: taobao.fenxiao.dealer.requisitionorder.agree
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoDealerRequisitionorderAgreeRequest.DealerOrderId">
            <summary>
            采购申请/经销采购单编号
            </summary>
        </member>
        <member name="T:Top.Api.Request.DmpTagGetRequest">
            <summary>
            TOP API: taobao.dmp.tag.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.DmpTagGetRequest.TagId">
            <summary>
            标签ID
            </summary>
        </member>
        <member name="T:Top.Api.Request.DmpAnalysisCoverageRequest">
            <summary>
            TOP API: taobao.dmp.analysis.coverage
            </summary>
        </member>
        <member name="P:Top.Api.Request.DmpAnalysisCoverageRequest.SelectTagOptionSetDTO">
            <summary>
            标签组合规则
            </summary>
        </member>
        <member name="T:Top.Api.Request.DmpAnalysisCoverageRequest.SelectTagOptionDTODomain">
            <summary>
            SelectTagOptionDTODomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Request.DmpAnalysisCoverageRequest.SelectTagOptionDTODomain.OptionGroupId">
            <summary>
            标签选项分组ID，可以通过标签详细接口查询
            </summary>
        </member>
        <member name="P:Top.Api.Request.DmpAnalysisCoverageRequest.SelectTagOptionDTODomain.TagId">
            <summary>
            标签ID,用户有权限的标签
            </summary>
        </member>
        <member name="P:Top.Api.Request.DmpAnalysisCoverageRequest.SelectTagOptionDTODomain.Values">
            <summary>
            多个选项用逗号分隔；INPUT连续值使用1,100表示从1到100。注意：INPUT类型必须区间，如想取大于1，填1,999999999；取小于100，填0,100
            </summary>
        </member>
        <member name="T:Top.Api.Request.DmpAnalysisCoverageRequest.SelectTagOptionSetDTODomain">
            <summary>
            SelectTagOptionSetDTODomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Request.DmpAnalysisCoverageRequest.SelectTagOptionSetDTODomain.Selects">
            <summary>
            标签列表，标签之间逻辑关系为并且关系
            </summary>
        </member>
        <member name="T:Taobao.Top.Link.ResetableTimer">
            <summary>easy timer impl
            </summary>
        </member>
        <member name="M:Taobao.Top.Link.ResetableTimer.Cancel">
            <summary>cancel timer
            </summary>
        </member>
        <member name="M:Taobao.Top.Link.ResetableTimer.Delay">
            <summary>delay in period
            </summary>
        </member>
        <member name="T:Top.Api.Domain.ScItemMap">
            <summary>
            ScItemMap Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ScItemMap.ItemId">
            <summary>
            map_type=1时，item_id为IC商品id    map_type=7时，item_id为分销商品id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ScItemMap.MapType">
            <summary>
            1:前台和后台关系  7:分销和后台关系
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ScItemMap.RelItemId">
            <summary>
            后端商品ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ScItemMap.RelOuterCode">
            <summary>
            后端商品所有者商家编码
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ScItemMap.RelUserId">
            <summary>
            后端商品所有者id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ScItemMap.RelUserNick">
            <summary>
            后端商品所有者名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ScItemMap.SkuId">
            <summary>
            当宝贝下没SKU时该字段为空
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ScItemMap.UserId">
            <summary>
            Ic商家id(分销商id)
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ScItemMap.UserNick">
            <summary>
            Ic商家nick(分销商nick)
            </summary>
        </member>
        <member name="T:Top.Api.Domain.RptAdvertiserDayDTO">
            <summary>
            RptAdvertiserDayDTO Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RptAdvertiserDayDTO.AdPv">
            <summary>
            展现量
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RptAdvertiserDayDTO.AdvertiserId">
            <summary>
            广告主id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RptAdvertiserDayDTO.AdvertiserName">
            <summary>
            广告主名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RptAdvertiserDayDTO.Charge">
            <summary>
            消耗
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RptAdvertiserDayDTO.Click">
            <summary>
            点击量
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RptAdvertiserDayDTO.Ctr">
            <summary>
            点击率
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RptAdvertiserDayDTO.Ecpc">
            <summary>
            点击单价
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RptAdvertiserDayDTO.Ecpm">
            <summary>
            千次展现成本
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RptAdvertiserDayDTO.LogDate">
            <summary>
            日期
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RptAdvertiserDayDTO.RptType">
            <summary>
            计划类型
            </summary>
        </member>
        <member name="T:Top.Api.Domain.RptAdvertiserCatDTO">
            <summary>
            RptAdvertiserCatDTO Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RptAdvertiserCatDTO.Cpc">
            <summary>
            平均CPC
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RptAdvertiserCatDTO.Ctr">
            <summary>
            平均CTR区间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RptAdvertiserCatDTO.LogDate">
            <summary>
            日期
            </summary>
        </member>
        <member name="T:Top.Api.Domain.RefundDetail">
            <summary>
            RefundDetail Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RefundDetail.BuyerRefund">
            <summary>
            下游买家的退款信息
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RefundDetail.DistributorNick">
            <summary>
            分销商nick
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RefundDetail.IsReturnGoods">
            <summary>
            是否退货
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RefundDetail.Modified">
            <summary>
            退款修改时间。格式:yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RefundDetail.PaySupFee">
            <summary>
            支付给供应商的金额
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RefundDetail.PurchaseOrderId">
            <summary>
            主采购单id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RefundDetail.RefundCreateTime">
            <summary>
            退款创建时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RefundDetail.RefundDesc">
            <summary>
            退款说明
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RefundDetail.RefundFee">
            <summary>
            退款的金额
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RefundDetail.RefundFlowType">
            <summary>
            退款流程类型：  4：发货前退款；  1：发货后退款不退货；  2：发货后退款退货
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RefundDetail.RefundReason">
            <summary>
            退款原因
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RefundDetail.RefundStatus">
            <summary>
            退款状态  1：买家已经申请退款，等待卖家同意  2：卖家已经同意退款，等待买家退货  3：买家已经退货，等待卖家确认收货  4：退款关闭  5：退款成功  6：卖家拒绝退款  12：同意退款，待打款  9：没有申请退款  10：卖家拒绝确认收货
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RefundDetail.SubOrderId">
            <summary>
            子单id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RefundDetail.SupplierNick">
            <summary>
            供应商nick
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RefundDetail.Timeout">
            <summary>
            超时时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RefundDetail.ToType">
            <summary>
            超时类型：  1：供应商同意退款/同意退货超时；  2：供应商确认收货超时
            </summary>
        </member>
        <member name="T:Top.Api.Domain.NTbkShop">
            <summary>
            NTbkShop Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.NTbkShop.ClickUrl">
            <summary>
            淘客地址
            </summary>
        </member>
        <member name="P:Top.Api.Domain.NTbkShop.PictUrl">
            <summary>
            店标图片
            </summary>
        </member>
        <member name="P:Top.Api.Domain.NTbkShop.SellerNick">
            <summary>
            卖家昵称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.NTbkShop.ShopTitle">
            <summary>
            店铺名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.NTbkShop.ShopType">
            <summary>
            店铺类型，B：天猫，C：淘宝
            </summary>
        </member>
        <member name="P:Top.Api.Domain.NTbkShop.ShopUrl">
            <summary>
            店铺地址
            </summary>
        </member>
        <member name="P:Top.Api.Domain.NTbkShop.UserId">
            <summary>
            卖家ID
            </summary>
        </member>
        <member name="T:Top.Api.Domain.EsMessage">
            <summary>
            EsMessage Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.EsMessage.Content">
            <summary>
            消息内容
            </summary>
        </member>
        <member name="P:Top.Api.Domain.EsMessage.FromId">
            <summary>
            发送方
            </summary>
        </member>
        <member name="P:Top.Api.Domain.EsMessage.Time">
            <summary>
            消息时间，UTC时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.EsMessage.ToId">
            <summary>
            接收方
            </summary>
        </member>
        <member name="P:Top.Api.Domain.EsMessage.Type">
            <summary>
            消息类型
            </summary>
        </member>
        <member name="P:Top.Api.Domain.EsMessage.Uuid">
            <summary>
            消息UUID
            </summary>
        </member>
        <member name="T:Top.Api.Domain.BuyerRefund">
            <summary>
            BuyerRefund Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.BuyerRefund.BizOrderId">
            <summary>
            订单id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.BuyerRefund.BuyerNick">
            <summary>
            下游买家nick
            </summary>
        </member>
        <member name="P:Top.Api.Domain.BuyerRefund.GoodsStatusDesc">
            <summary>
            货物的状态： 买家已收到货 买家已退货 买家未收到货
            </summary>
        </member>
        <member name="P:Top.Api.Domain.BuyerRefund.Modified">
            <summary>
            退款修改时间。格式:yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="P:Top.Api.Domain.BuyerRefund.NeedReturnGoods">
            <summary>
            买家是否退货
            </summary>
        </member>
        <member name="P:Top.Api.Domain.BuyerRefund.RefundCreateTime">
            <summary>
            退款创建时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.BuyerRefund.RefundDesc">
            <summary>
            退款说明
            </summary>
        </member>
        <member name="P:Top.Api.Domain.BuyerRefund.RefundId">
            <summary>
            交易退款id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.BuyerRefund.RefundReason">
            <summary>
            退款原因
            </summary>
        </member>
        <member name="P:Top.Api.Domain.BuyerRefund.RefundStatus">
            <summary>
            退款状态
            </summary>
        </member>
        <member name="P:Top.Api.Domain.BuyerRefund.ReturnFee">
            <summary>
            退还买家的金额
            </summary>
        </member>
        <member name="P:Top.Api.Domain.BuyerRefund.SubOrderId">
            <summary>
            采购单子单id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.BuyerRefund.ToSellerFee">
            <summary>
            支付分销商的金额
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaAccountBalanceGetResponse">
            <summary>
            SimbaAccountBalanceGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaAccountBalanceGetResponse.Balance">
            <summary>
            实时余额，”元”为单位
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaCreativeAddResponse">
            <summary>
            SimbaCreativeAddResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaCreativeAddResponse.Creative">
            <summary>
            新增加的创意对象
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaCreativesRecordGetResponse">
            <summary>
            SimbaCreativesRecordGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaCreativesRecordGetResponse.Creativerecords">
            <summary>
            创意修改对象列表
            </summary>
        </member>
        <member name="T:Top.Api.Response.ItemIncrementUpdateSchemaGetResponse">
            <summary>
            ItemIncrementUpdateSchemaGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ItemIncrementUpdateSchemaGetResponse.UpdateRules">
            <summary>
            返回的结果集
            </summary>
        </member>
        <member name="T:Top.Api.Response.HttpdnsGetResponse">
            <summary>
            HttpdnsGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.HttpdnsGetResponse.Result">
            <summary>
            HTTP DNS配置信息
            </summary>
        </member>
        <member name="T:Top.Api.Response.WirelessXcodeCreateResponse">
            <summary>
            WirelessXcodeCreateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.WirelessXcodeCreateResponse.Xcode">
            <summary>
            创建二维码/短连接 返回信息
            </summary>
        </member>
        <member name="T:Top.Api.Response.SubusersGetResponse">
            <summary>
            SubusersGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SubusersGetResponse.Subaccounts">
            <summary>
            子账号基本信息
            </summary>
        </member>
        <member name="T:Top.Api.Response.TicketItemGetResponse">
            <summary>
            TicketItemGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TicketItemGetResponse.TicketItem">
            <summary>
            参见TicketItem数据结构文档
            </summary>
        </member>
        <member name="T:Top.Api.Response.PictureCategoryAddResponse">
            <summary>
            PictureCategoryAddResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.PictureCategoryAddResponse.PictureCategory">
            <summary>
            图片分类信息
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaKeywordidsChangedGetResponse">
            <summary>
            SimbaKeywordidsChangedGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaKeywordidsChangedGetResponse.ChangedKeywordIds">
            <summary>
            词的ID列表
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaAdgroupidsChangedGetResponse">
            <summary>
            SimbaAdgroupidsChangedGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaAdgroupidsChangedGetResponse.ChangedAdgroupids">
            <summary>
            推广组ID列表
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaNonsearchAdgroupplacesUpdateResponse">
            <summary>
            SimbaNonsearchAdgroupplacesUpdateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaNonsearchAdgroupplacesUpdateResponse.AdgroupPlaceList">
            <summary>
            推广组定向推广位置列表
            </summary>
        </member>
        <member name="T:Top.Api.Response.ItemJointPropimgResponse">
            <summary>
            ItemJointPropimgResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ItemJointPropimgResponse.PropImg">
            <summary>
            属性图片对象信息
            </summary>
        </member>
        <member name="T:Top.Api.Response.TmallItemSchemaUpdateResponse">
            <summary>
            TmallItemSchemaUpdateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallItemSchemaUpdateResponse.GmtModified">
            <summary>
            商品更新操作成功时间
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallItemSchemaUpdateResponse.UpdateItemResult">
            <summary>
            返回商品发布结果
            </summary>
        </member>
        <member name="T:Top.Api.Response.ItemDeleteResponse">
            <summary>
            ItemDeleteResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ItemDeleteResponse.Item">
            <summary>
            被删除商品的相关信息
            </summary>
        </member>
        <member name="T:Top.Api.Response.PictureCategoryUpdateResponse">
            <summary>
            PictureCategoryUpdateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.PictureCategoryUpdateResponse.Done">
            <summary>
            更新图片分类是否成功
            </summary>
        </member>
        <member name="T:Top.Api.Response.PictureReplaceResponse">
            <summary>
            PictureReplaceResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.PictureReplaceResponse.Done">
            <summary>
            图片替换是否成功
            </summary>
        </member>
        <member name="T:Top.Api.Response.DeliveryTemplateAddResponse">
            <summary>
            DeliveryTemplateAddResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.DeliveryTemplateAddResponse.DeliveryTemplate">
            <summary>
            模板对象
            </summary>
        </member>
        <member name="T:Top.Api.Response.KfcKeywordSearchResponse">
            <summary>
            KfcKeywordSearchResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.KfcKeywordSearchResponse.KfcSearchResult">
            <summary>
            KFC 关键词过滤匹配结果
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaRptAdgroupkeywordbaseGetResponse">
            <summary>
            SimbaRptAdgroupkeywordbaseGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaRptAdgroupkeywordbaseGetResponse.RptAdgroupkeywordBaseList">
            <summary>
            词基础数据返回结果
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaAdgroupAddRequest">
            <summary>
            TOP API: taobao.simba.adgroup.add
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupAddRequest.CampaignId">
            <summary>
            推广计划Id
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupAddRequest.DefaultPrice">
            <summary>
            推广组默认出价，单位为分，不能小于5 不能大于日最高限额
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupAddRequest.ImgUrl">
            <summary>
            创意图片地址，必须是商品的图片之一
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupAddRequest.ItemId">
            <summary>
            商品Id
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupAddRequest.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupAddRequest.Title">
            <summary>
            创意标题，最多20个汉字
            </summary>
        </member>
        <member name="T:Top.Api.Request.TopatsTaskDeleteRequest">
            <summary>
            TOP API: taobao.topats.task.delete
            </summary>
        </member>
        <member name="P:Top.Api.Request.TopatsTaskDeleteRequest.TaskId">
            <summary>
            需要取消的任务ID
            </summary>
        </member>
        <member name="T:Top.Api.Request.TopatsSimbaCampkeywordbaseGetRequest">
            <summary>
            TOP API: taobao.topats.simba.campkeywordbase.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.TopatsSimbaCampkeywordbaseGetRequest.CampaignId">
            <summary>
            查询推广计划ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.TopatsSimbaCampkeywordbaseGetRequest.SearchType">
            <summary>
            报表类型。可选值：SEARCH（搜索）、CAT（类目出价）、 NOSEARCH（定向投放），可多选，如：SEARCH,CAT
            </summary>
        </member>
        <member name="P:Top.Api.Request.TopatsSimbaCampkeywordbaseGetRequest.Source">
            <summary>
            数据来源。可选值：1（站内）、2（站外）、SUMMARY（汇总），其中SUMMARY必须单选，其它值可多选，如：1,2
            </summary>
        </member>
        <member name="P:Top.Api.Request.TopatsSimbaCampkeywordbaseGetRequest.TimeSlot">
            <summary>
            时间参数（昨天：DAY、 前一周：7DAY 、前15天：15DAY 、前30天：30DAY 、前90天：90DAY）单选
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaInsightCatsworddataGetRequest">
            <summary>
            TOP API: taobao.simba.insight.catsworddata.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaInsightCatsworddataGetRequest.BidwordList">
            <summary>
            需要查询的关键词列表，最大长度100。
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaInsightCatsworddataGetRequest.CatId">
            <summary>
            类目id
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaInsightCatsworddataGetRequest.EndDate">
            <summary>
            结束时间，格式只能为：yyyy-MM-dd
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaInsightCatsworddataGetRequest.StartDate">
            <summary>
            开始时间，格式只能为：yyyy-MM-dd
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaAdgroupsbyadgroupidsGetRequest">
            <summary>
            TOP API: taobao.simba.adgroupsbyadgroupids.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupsbyadgroupidsGetRequest.AdgroupIds">
            <summary>
            推广组Id列表
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupsbyadgroupidsGetRequest.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupsbyadgroupidsGetRequest.PageNo">
            <summary>
            页码，从1开始
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupsbyadgroupidsGetRequest.PageSize">
            <summary>
            页尺寸，最大200，如果入参adgroup_ids有传入值，则page_size和page_no值不起作用。如果adgrpup_ids为空而campaign_id有值，此时page_size和page_no值才是返回的页数据大小和页码
            </summary>
        </member>
        <member name="T:Top.Api.Request.LogisticsOnlineCancelRequest">
            <summary>
            TOP API: taobao.logistics.online.cancel
            </summary>
        </member>
        <member name="P:Top.Api.Request.LogisticsOnlineCancelRequest.Tid">
            <summary>
            淘宝交易ID
            </summary>
        </member>
        <member name="T:Top.Api.Request.TicketItemGetRequest">
            <summary>
            TOP API: taobao.ticket.item.get
            </summary>
        </member>
        <!-- 对于成员“P:Top.Api.Request.TicketItemGetRequest.Fields”忽略有格式错误的 XML 注释 -->
        <member name="P:Top.Api.Request.TicketItemGetRequest.ItemId">
            <summary>
            新门票类目商品的标识（非日历价格库存商品）
            </summary>
        </member>
        <member name="T:Top.Api.Request.JushitaJdpUserDeleteRequest">
            <summary>
            TOP API: taobao.jushita.jdp.user.delete
            </summary>
        </member>
        <member name="P:Top.Api.Request.JushitaJdpUserDeleteRequest.Nick">
            <summary>
            要删除用户的昵称
            </summary>
        </member>
        <member name="P:Top.Api.Request.JushitaJdpUserDeleteRequest.UserId">
            <summary>
            需要删除的用户编号
            </summary>
        </member>
        <member name="T:Top.Api.Request.LogisticsOrdersGetRequest">
            <summary>
            TOP API: taobao.logistics.orders.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.LogisticsOrdersGetRequest.BuyerNick">
            <summary>
            买家昵称
            </summary>
        </member>
        <member name="P:Top.Api.Request.LogisticsOrdersGetRequest.EndCreated">
            <summary>
            创建时间结束
            </summary>
        </member>
        <!-- 对于成员“P:Top.Api.Request.LogisticsOrdersGetRequest.Fields”忽略有格式错误的 XML 注释 -->
        <member name="P:Top.Api.Request.LogisticsOrdersGetRequest.FreightPayer">
            <summary>
            谁承担运费.可选值:buyer(买家),seller(卖家).如:buyer
            </summary>
        </member>
        <!-- 对于成员“P:Top.Api.Request.LogisticsOrdersGetRequest.PageNo”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“P:Top.Api.Request.LogisticsOrdersGetRequest.PageSize”忽略有格式错误的 XML 注释 -->
        <member name="P:Top.Api.Request.LogisticsOrdersGetRequest.ReceiverName">
            <summary>
            收货人姓名
            </summary>
        </member>
        <member name="P:Top.Api.Request.LogisticsOrdersGetRequest.SellerConfirm">
            <summary>
            卖家是否发货.可选值:yes(是),no(否).如:yes
            </summary>
        </member>
        <member name="P:Top.Api.Request.LogisticsOrdersGetRequest.StartCreated">
            <summary>
            创建时间开始
            </summary>
        </member>
        <member name="P:Top.Api.Request.LogisticsOrdersGetRequest.Status">
            <summary>
            物流状态.查看数据结构 Shipping 中的status字段.
            </summary>
        </member>
        <member name="P:Top.Api.Request.LogisticsOrdersGetRequest.Tid">
            <summary>
            交易ID.如果加入tid参数的话,不用传其他的参数,若传入tid：非拆单场景，仅会返回一条物流订单信息；拆单场景，会返回多条物流订单信息
            </summary>
        </member>
        <member name="P:Top.Api.Request.LogisticsOrdersGetRequest.Type">
            <summary>
            物流方式.可选值:post(平邮),express(快递),ems(EMS).如:post
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaRptDemographicbaseGetRequest">
            <summary>
            TOP API: taobao.simba.rpt.demographicbase.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptDemographicbaseGetRequest.CampaignId">
            <summary>
            推广计划id
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptDemographicbaseGetRequest.EndTime">
            <summary>
            结束时间,格式为：yyyy-mm-dd
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptDemographicbaseGetRequest.Nick">
            <summary>
            昵称
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptDemographicbaseGetRequest.PageNo">
            <summary>
            页码
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptDemographicbaseGetRequest.PageSize">
            <summary>
            每页大小
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptDemographicbaseGetRequest.StartTime">
            <summary>
            开始时间,格式为：yyyy-mm-dd
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptDemographicbaseGetRequest.SubwayToken">
            <summary>
            权限校验参数
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaKeywordidsDeletedGetRequest">
            <summary>
            TOP API: taobao.simba.keywordids.deleted.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaKeywordidsDeletedGetRequest.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaKeywordidsDeletedGetRequest.PageNo">
            <summary>
            返回的第几页数据，默认为1
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaKeywordidsDeletedGetRequest.PageSize">
            <summary>
            返回的每页数据量大小,默认200最大1000
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaKeywordidsDeletedGetRequest.StartTime">
            <summary>
            得到此时间点之后的数据，不能大于一个月
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaKeywordsQscoreSplitGetRequest">
            <summary>
            TOP API: taobao.simba.keywords.qscore.split.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaKeywordsQscoreSplitGetRequest.AdGroupId">
            <summary>
            推广组id
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaKeywordsQscoreSplitGetRequest.BidwordIds">
            <summary>
            词id数组（最多批量获取20个）
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaKeywordsQscoreSplitGetRequest.Nick">
            <summary>
            账号昵称
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaNonsearchAllplacesGetRequest">
            <summary>
            TOP API: taobao.simba.nonsearch.allplaces.get
            </summary>
        </member>
        <member name="T:Top.Api.Request.PictureDeleteRequest">
            <summary>
            TOP API: taobao.picture.delete
            </summary>
        </member>
        <member name="P:Top.Api.Request.PictureDeleteRequest.PictureIds">
            <summary>
            图片ID字符串,可以一个也可以一组,用英文逗号间隔,如450,120,155.限制数量是100
            </summary>
        </member>
        <member name="T:Top.Api.Request.TopatsResultGetRequest">
            <summary>
            TOP API: taobao.topats.result.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.TopatsResultGetRequest.TaskId">
            <summary>
            任务ID，创建任务时返回的task_id
            </summary>
        </member>
        <member name="T:Top.Api.Request.ProductUpdateRequest">
            <summary>
            TOP API: taobao.product.update
            </summary>
        </member>
        <member name="P:Top.Api.Request.ProductUpdateRequest.Binds">
            <summary>
            非关键属性.调用taobao.itemprops.get获取pid,调用taobao.itempropvalues.get获取vid;格式:pid:vid;pid:vid
            </summary>
        </member>
        <member name="P:Top.Api.Request.ProductUpdateRequest.Desc">
            <summary>
            产品描述.最大不超过25000个字符
            </summary>
        </member>
        <member name="P:Top.Api.Request.ProductUpdateRequest.ExtraInfo">
            <summary>
            存放产品扩展信息，由List(ProductExtraInfo)转化成jsonArray存入.
            </summary>
        </member>
        <member name="P:Top.Api.Request.ProductUpdateRequest.Image">
            <summary>
            产品主图.最大500K,目前仅支持GIF,JPG
            </summary>
        </member>
        <member name="P:Top.Api.Request.ProductUpdateRequest.Major">
            <summary>
            是否是主图
            </summary>
        </member>
        <member name="P:Top.Api.Request.ProductUpdateRequest.MarketId">
            <summary>
            市场ID，1为更新C2C市场的产品信息， 2为更新B2C市场的产品信息。  不填写此值则C用户更新B2C市场的产品信息，B用户更新B2C市场的产品信息。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ProductUpdateRequest.Name">
            <summary>
            产品名称.最大不超过30个字符
            </summary>
        </member>
        <member name="P:Top.Api.Request.ProductUpdateRequest.NativeUnkeyprops">
            <summary>
            自定义非关键属性
            </summary>
        </member>
        <member name="P:Top.Api.Request.ProductUpdateRequest.OuterId">
            <summary>
            外部产品ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.ProductUpdateRequest.PackingList">
            <summary>
            保证清单。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ProductUpdateRequest.Price">
            <summary>
            产品市场价.精确到2位小数;单位为元.如:200.07
            </summary>
        </member>
        <member name="P:Top.Api.Request.ProductUpdateRequest.ProductId">
            <summary>
            产品ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.ProductUpdateRequest.SaleProps">
            <summary>
            销售属性.调用taobao.itemprops.get获取pid,调用taobao.itempropvalues.get获取vid;格式:pid:vid;pid:vid
            </summary>
        </member>
        <member name="P:Top.Api.Request.ProductUpdateRequest.SellPt">
            <summary>
            产品卖点描述，最长40个字节
            </summary>
        </member>
        <member name="T:Top.Api.Domain.ShopScore">
            <summary>
            ShopScore Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ShopScore.DeliveryScore">
            <summary>
            发货速度评分
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ShopScore.ItemScore">
            <summary>
            商品描述评分
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ShopScore.ServiceScore">
            <summary>
            服务态度评分
            </summary>
        </member>
        <member name="T:Top.Api.Domain.PictureCategory">
            <summary>
            PictureCategory Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PictureCategory.Created">
            <summary>
            图片类目的创建时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PictureCategory.Modified">
            <summary>
            图片分类的修改时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PictureCategory.ParentId">
            <summary>
            一级分类的parent_id为0  二级分类的则为其父分类的picture_category_id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PictureCategory.PictureCategoryId">
            <summary>
            图片分类ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PictureCategory.PictureCategoryName">
            <summary>
            图片分类名
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PictureCategory.Position">
            <summary>
            图片分类排序
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PictureCategory.Total">
            <summary>
            分类下的图片数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PictureCategory.Type">
            <summary>
            图片分类型别，sys-fixture代表店铺装修分类(系统分类)，sys-auction代表宝贝图片分类(系统分类)，user-define代表用户自定义分类
            </summary>
        </member>
        <member name="T:Top.Api.Domain.Video">
            <summary>
            Video Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Video.Created">
            <summary>
            视频关联记录创建时间（格式：yyyy-MM-dd HH:mm:ss）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Video.Id">
            <summary>
            视频关联记录的id，和商品相对应
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Video.Iid">
            <summary>
            视频记录关联的商品的数字id(注意：iid近期即将废弃，请用num_iid参数)
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Video.Modified">
            <summary>
            视频关联记录修改时间（格式：yyyy-MM-dd HH:mm:ss）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Video.NumIid">
            <summary>
            视频记录所关联的商品的数字id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Video.Url">
            <summary>
            video的url连接地址。淘秀里视频记录里面存储的url地址
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Video.VideoId">
            <summary>
            video的id，对应于视频在淘秀的存储记录
            </summary>
        </member>
        <member name="T:Top.Api.Domain.ItemImg">
            <summary>
            ItemImg Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ItemImg.Created">
            <summary>
            图片创建时间 时间格式：yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ItemImg.Id">
            <summary>
            商品图片的id，和商品相对应（主图id默认为0）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ItemImg.Position">
            <summary>
            图片放在第几张（多图时可设置）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ItemImg.Url">
            <summary>
            图片链接地址
            </summary>
        </member>
        <member name="T:Top.Api.Domain.AfterSale">
            <summary>
            AfterSale Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.AfterSale.AfterSaleId">
            <summary>
            id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.AfterSale.AfterSaleName">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.AfterSale.AfterSalePath">
            <summary>
            tfs地址
            </summary>
        </member>
        <member name="T:Top.Api.Domain.LogisticsPartner">
            <summary>
            LogisticsPartner Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.LogisticsPartner.Carriage">
            <summary>
            物流公司揽收和资费详细信息
            </summary>
        </member>
        <member name="P:Top.Api.Domain.LogisticsPartner.CoverRemark">
            <summary>
            揽收说明信息
            </summary>
        </member>
        <member name="P:Top.Api.Domain.LogisticsPartner.Partner">
            <summary>
            物流公司详细信息
            </summary>
        </member>
        <member name="P:Top.Api.Domain.LogisticsPartner.UncoverRemark">
            <summary>
            不可送达的说明信息
            </summary>
        </member>
        <member name="T:Top.Api.Domain.OnlineTimesOnDay">
            <summary>
            OnlineTimesOnDay Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.OnlineTimesOnDay.OnlineDate">
            <summary>
            在线日期
            </summary>
        </member>
        <member name="P:Top.Api.Domain.OnlineTimesOnDay.OnlineTimeByIds">
            <summary>
            在线时长列表
            </summary>
        </member>
        <member name="T:Top.Api.Domain.ADGroupCatMatchPage">
            <summary>
            ADGroupCatMatchPage Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ADGroupCatMatchPage.AdgroupCatmatchList">
            <summary>
            类目出价列表
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ADGroupCatMatchPage.PageNo">
            <summary>
            返回第几页的数据从1开始
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ADGroupCatMatchPage.PageSize">
            <summary>
            每页数据大小
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ADGroupCatMatchPage.TotalItem">
            <summary>
            所查询的数据总数，只有当返回第一页数据时有值，当要求返回的数据非第一页时，此返回值无效
            </summary>
        </member>
        <member name="T:Top.Api.Domain.EvalDetail">
            <summary>
            EvalDetail Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.EvalDetail.EvalCode">
            <summary>
            评价详细：  1 非常满意  2 满意  3 一般  4 不满意
            </summary>
        </member>
        <member name="P:Top.Api.Domain.EvalDetail.EvalRecer">
            <summary>
            评价接收者
            </summary>
        </member>
        <member name="P:Top.Api.Domain.EvalDetail.EvalSender">
            <summary>
            评价发送者
            </summary>
        </member>
        <member name="P:Top.Api.Domain.EvalDetail.EvalTime">
            <summary>
            评价时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.EvalDetail.SendTime">
            <summary>
            评价发送时间
            </summary>
        </member>
        <member name="T:Top.Api.Domain.ItemProp">
            <summary>
            ItemProp Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ItemProp.ChildTemplate">
            <summary>
            子属性的模板（卖家自行输入属性时需要用到）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ItemProp.Cid">
            <summary>
            类目ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ItemProp.Features">
            <summary>
            属性的feature列表
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ItemProp.IsAllowAlias">
            <summary>
            是否允许别名。可选值：true（是），false（否）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ItemProp.IsColorProp">
            <summary>
            是否颜色属性。可选值:true(是),false(否)
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ItemProp.IsEnumProp">
            <summary>
            是否是可枚举属性。可选值:true(是),false(否)
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ItemProp.IsInputProp">
            <summary>
            在is_enum_prop是true的前提下，是否是卖家可以自行输入的属性（注：如果is_enum_prop返回false，该参数统一返回false）。可选值:true(是),false(否)。<b>对于品牌和型号属性（包括子属性）：如果用户是C卖家，则可自定义属性；如果是B卖家，则不可自定义属性，而必须要授权的属性。</b>
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ItemProp.IsItemProp">
            <summary>
            是否商品属性。可选值:true(是),false(否)
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ItemProp.IsKeyProp">
            <summary>
            是否关键属性。可选值:true(是),false(否)
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ItemProp.IsMaterial">
            <summary>
            是否是材质 属性项
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ItemProp.IsSaleProp">
            <summary>
            是否销售属性。可选值:true(是),false(否)
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ItemProp.IsTaosir">
            <summary>
            是否度量衡属性项
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ItemProp.MaterialDo">
            <summary>
            材质属性信息
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ItemProp.ModifiedTime">
            <summary>
            属性修改时间（增量类目专用）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ItemProp.ModifiedType">
            <summary>
            三种枚举类型：modify，add，delete（增量类目专用）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ItemProp.Multi">
            <summary>
            发布产品或商品时是否可以多选。可选值:true(是),false(否)
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ItemProp.Must">
            <summary>
            发布产品或商品时是否为必选属性。可选值:true(是),false(否)
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ItemProp.Name">
            <summary>
            属性名
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ItemProp.ParentPid">
            <summary>
            上级属性ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ItemProp.ParentVid">
            <summary>
            上级属性值ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ItemProp.Pid">
            <summary>
            属性 ID 例：品牌的PID=20000
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ItemProp.PropValues">
            <summary>
            null
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ItemProp.Required">
            <summary>
            发布产品或商品时是否为必选属性(与must相同)。可选值:true(是),false(否)
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ItemProp.SortOrder">
            <summary>
            排列序号。取值范围:大于零的整排列序号。取值范围:大于零的整数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ItemProp.Status">
            <summary>
            状态。可选值:normal(正常),deleted(删除)
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ItemProp.TaosirDo">
            <summary>
            度量衡相关信息
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ItemProp.Type">
            <summary>
            属性值类型。可选值：  multiCheck(枚举多选)  optional(枚举单选)  multiCheckText(枚举可输入多选)  optionalText(枚举可输入单选)  text(非枚举可输入)
            </summary>
        </member>
        <member name="T:Top.Api.Domain.SubUserInfo">
            <summary>
            SubUserInfo Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubUserInfo.FullName">
            <summary>
            子账号姓名
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubUserInfo.IsOnline">
            <summary>
            是否参与分流 1不参与 2参与
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubUserInfo.Nick">
            <summary>
            子账号用户名
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubUserInfo.SellerId">
            <summary>
            子账号所属的主账号的唯一标识
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubUserInfo.SellerNick">
            <summary>
            主账号昵称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubUserInfo.Status">
            <summary>
            子账号当前状态 1正常 -1删除  2冻结
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubUserInfo.SubId">
            <summary>
            子账号Id
            </summary>
        </member>
        <member name="T:Top.Api.Domain.PromotionInItem">
            <summary>
            PromotionInItem Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PromotionInItem.Desc">
            <summary>
            优惠描述
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PromotionInItem.EndTime">
            <summary>
            优惠结束时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PromotionInItem.ItemPromoPrice">
            <summary>
            优惠折后价格
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PromotionInItem.Name">
            <summary>
            优惠展示名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PromotionInItem.OtherNeed">
            <summary>
            需要支付附加物，显示为+xxx。如：+20淘金币
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PromotionInItem.OtherSend">
            <summary>
            赠送东西。如：送10商城积分
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PromotionInItem.PromotionId">
            <summary>
            idValue的值
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PromotionInItem.SkuIdList">
            <summary>
            sku价格对应的id（保证二者顺序相同）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PromotionInItem.SkuPriceList">
            <summary>
            sku价格列表
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PromotionInItem.StartTime">
            <summary>
            优惠开始时间
            </summary>
        </member>
        <member name="T:Top.Api.Domain.TradeExt">
            <summary>
            TradeExt Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeExt.BeforeCloseFlag">
            <summary>
            关闭订单前扩展标识位
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeExt.BeforeConfirmFlag">
            <summary>
            确认收货前扩展标识位
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeExt.BeforeEnableFlag">
            <summary>
            enable前扩展标识位
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeExt.BeforeModifyFlag">
            <summary>
            修改前扩展标识位
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeExt.BeforePayFlag">
            <summary>
            付款前扩展标识位
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeExt.BeforeRateFlag">
            <summary>
            评价前扩展标识位
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeExt.BeforeRefundFlag">
            <summary>
            退款前扩展标识位
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeExt.BeforeShipFlag">
            <summary>
            发货前扩展标识位
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeExt.ExtAttributes">
            <summary>
            attributes标记
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeExt.ExtraData">
            <summary>
            第三方个性化数据
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeExt.ThirdPartyStatus">
            <summary>
            第三方状态，第三方自由定义
            </summary>
        </member>
        <member name="T:Top.Api.ITopLogger">
            <summary>
            日志打点接口。
            </summary>
        </member>
        <member name="T:Top.Api.Util.WebUtils">
            <summary>
            网络工具类。
            </summary>
        </member>
        <member name="M:Top.Api.Util.WebUtils.DoPost(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            执行HTTP POST请求。
            </summary>
            <param name="url">请求地址</param>
            <param name="textParams">请求文本参数</param>
            <returns>HTTP响应</returns>
        </member>
        <member name="M:Top.Api.Util.WebUtils.DoPost(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            执行HTTP POST请求。
            </summary>
            <param name="url">请求地址</param>
            <param name="textParams">请求文本参数</param>
            <param name="headerParams">请求头部参数</param>
            <returns>HTTP响应</returns>
        </member>
        <member name="M:Top.Api.Util.WebUtils.DoGet(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            执行HTTP GET请求。
            </summary>
            <param name="url">请求地址</param>
            <param name="textParams">请求文本参数</param>
            <returns>HTTP响应</returns>
        </member>
        <member name="M:Top.Api.Util.WebUtils.DoGet(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            执行HTTP GET请求。
            </summary>
            <param name="url">请求地址</param>
            <param name="textParams">请求文本参数</param>
            <param name="headerParams">请求头部参数</param>
            <returns>HTTP响应</returns>
        </member>
        <member name="M:Top.Api.Util.WebUtils.DoPost(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,Top.Api.Util.FileItem},System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            执行带文件上传的HTTP POST请求。
            </summary>
            <param name="url">请求地址</param>
            <param name="textParams">请求文本参数</param>
            <param name="fileParams">请求文件参数</param>
            <param name="headerParams">请求头部参数</param>
            <returns>HTTP响应</returns>
        </member>
        <member name="M:Top.Api.Util.WebUtils.DoPost(System.String,System.Byte[],System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            执行带body体的POST请求。
            </summary>
            <param name="url">请求地址，含URL参数</param>
            <param name="body">请求body体字节流</param>
            <param name="contentType">body内容类型</param>
            <param name="headerParams">请求头部参数</param>
            <returns>HTTP响应</returns>
        </member>
        <member name="M:Top.Api.Util.WebUtils.GetResponseAsString(System.Net.HttpWebResponse,System.Text.Encoding)">
            <summary>
            把响应流转换为文本。
            </summary>
            <param name="rsp">响应流对象</param>
            <param name="encoding">编码方式</param>
            <returns>响应文本</returns>
        </member>
        <member name="M:Top.Api.Util.WebUtils.BuildRequestUrl(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            组装含参数的请求URL。
            </summary>
            <param name="url">请求地址</param>
            <param name="parameters">请求参数映射</param>
            <returns>带参数的请求URL</returns>
        </member>
        <member name="M:Top.Api.Util.WebUtils.BuildRequestUrl(System.String,System.String[])">
            <summary>
            组装含参数的请求URL。
            </summary>
            <param name="url">请求地址</param>
            <param name="queries">一个或多个经过URL编码后的请求参数串</param>
            <returns>带参数的请求URL</returns>
        </member>
        <member name="M:Top.Api.Util.WebUtils.BuildQuery(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            组装普通文本请求参数。
            </summary>
            <param name="parameters">Key-Value形式请求参数字典</param>
            <returns>URL编码后的请求数据</returns>
        </member>
        <member name="P:Top.Api.Util.WebUtils.Timeout">
            <summary>
            等待请求开始返回的超时时间
            </summary>
        </member>
        <member name="P:Top.Api.Util.WebUtils.ReadWriteTimeout">
            <summary>
            等待读取数据完成的超时时间
            </summary>
        </member>
        <member name="P:Top.Api.Util.WebUtils.IgnoreSSLCheck">
            <summary>
            是否忽略SSL检查
            </summary>
        </member>
        <member name="T:Top.Tmc.TmcClientIdentity">
            <summary>消息服务客户端标识</summary>
        </member>
        <member name="P:Top.Tmc.TmcClientIdentity.AppKey">
            <summary>获取appKey
            </summary>
        </member>
        <member name="P:Top.Tmc.TmcClientIdentity.GroupName">
            <summary>获取groupName
            </summary>
        </member>
        <member name="T:Top.Tmc.TmcServerIdentity">
            <summary>TMC服务端标识
            </summary>
        </member>
        <member name="T:Top.Api.Security.SecurityCore">
            <summary>
            加、解密核心类
            </summary>
        </member>
        <member name="M:Top.Api.Security.SecurityCore.IsIndexEncrypt(System.String,System.Nullable{System.Int64})">
            <summary>
            判断密文是否支持检索
            </summary>
            <param name="key"></param>
            <param name="version"></param>
            <returns></returns>
        </member>
        <member name="M:Top.Api.Security.SecurityCore.GetCompressLen">
            <summary>
            获取压缩长度
            </summary>
            <returns></returns>
        </member>
        <member name="M:Top.Api.Security.SecurityCore.GetSlideSize">
            <summary>
            获取滑动窗口大小
            </summary>
            <returns></returns>
        </member>
        <member name="M:Top.Api.Security.SecurityCore.GetSecret(System.String,System.Nullable{System.Int64})">
            <summary>
            获取秘钥
            </summary>
            <param name="session"></param>
            <param name="secretVersion"></param>
            <returns></returns>
        </member>
        <member name="M:Top.Api.Security.SecurityCore.GetSecret(System.String,System.String)">
            <summary>
            从本地获取秘钥信息
            </summary>
            <param name="session"></param>
            <param name="cacheKey"></param>
            <returns></returns>
        </member>
        <member name="M:Top.Api.Security.SecurityCore.CallSecretApi(System.String,System.Nullable{System.Int64})">
            <summary>
            调用获取秘钥api
            </summary>
            <param name="session"></param>
            <param name="secretVersion"></param>
            <returns></returns>
        </member>
        <member name="M:Top.Api.Security.SecurityCore.SetNullCache(Top.Api.Security.SecretContext)">
            <summary>
            设置空缓存
            </summary>
            <param name="secretContext"></param>
        </member>
        <member name="M:Top.Api.Security.SecurityCore.AsynUpdateSecret(System.String,System.Nullable{System.Int64})">
            <summary>
            异步更新秘钥
            </summary>
            <param name="session"></param>
            <param name="secretVersion"></param>
        </member>
        <member name="T:Aliyun.Api.DefaultAliyunClient">
            <summary>
            基于REST的阿里云客户端。
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerCreativeModifyResponse">
            <summary>
            ZuanshiBannerCreativeModifyResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeModifyResponse.Result">
            <summary>
            结果对象
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerCreativeModifyResponse.ResultDtoDomain">
            <summary>
            ResultDtoDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeModifyResponse.ResultDtoDomain.Message">
            <summary>
            返回描述信息
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeModifyResponse.ResultDtoDomain.Success">
            <summary>
            true：调用成功，false：调用失败
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerCampaignFindResponse">
            <summary>
            ZuanshiBannerCampaignFindResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCampaignFindResponse.Result">
            <summary>
            返回数据
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerCampaignFindResponse.BannerTimeDomain">
            <summary>
            BannerTimeDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCampaignFindResponse.BannerTimeDomain.WeekEnds">
            <summary>
            周六和周日
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCampaignFindResponse.BannerTimeDomain.Workdays">
            <summary>
            周一到周五
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerCampaignFindResponse.PropertiesDomain">
            <summary>
            PropertiesDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCampaignFindResponse.PropertiesDomain.Marketingdemand">
            <summary>
            计划类型：-1：自定义，1：日常托管，2：日常推荐，3：拉新托管，4：拉新推荐
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCampaignFindResponse.PropertiesDomain.TopAppKey">
            <summary>
            服务商appKey
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerCampaignFindResponse.CampaignDomain">
            <summary>
            CampaignDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCampaignFindResponse.CampaignDomain.BannerTime">
            <summary>
            投放时间
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCampaignFindResponse.CampaignDomain.DayBudget">
            <summary>
            日预算（分）
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCampaignFindResponse.CampaignDomain.EndTime">
            <summary>
            结束时间
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCampaignFindResponse.CampaignDomain.Id">
            <summary>
            计划ID
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCampaignFindResponse.CampaignDomain.LifeCycle">
            <summary>
            草稿：1，2,完成：99
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCampaignFindResponse.CampaignDomain.Name">
            <summary>
            计划名称
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCampaignFindResponse.CampaignDomain.OnlineStatus">
            <summary>
            计划状态
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCampaignFindResponse.CampaignDomain.Properties">
            <summary>
            扩展数据
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCampaignFindResponse.CampaignDomain.SpeedType">
            <summary>
            投放方式，0:尽快;1:平滑
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCampaignFindResponse.CampaignDomain.StartTime">
            <summary>
            开始时间
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCampaignFindResponse.CampaignDomain.Type">
            <summary>
            计划类型
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerCampaignFindResponse.ResultDomain">
            <summary>
            ResultDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCampaignFindResponse.ResultDomain.Campaigns">
            <summary>
            数据结果
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCampaignFindResponse.ResultDomain.Message">
            <summary>
            错误时候，返回错误信息
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCampaignFindResponse.ResultDomain.Success">
            <summary>
            true：调用成功，false：调用失败
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCampaignFindResponse.ResultDomain.TotalCount">
            <summary>
            计划总数
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRptsTotalGetResponse">
            <summary>
            ZuanshiAdvertiserTargetAdzoneRptsTotalGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRptsTotalGetResponse.TargetAdzoneOfflineRptTotalList">
            <summary>
            result
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRptsTotalGetResponse.DataDomain">
            <summary>
            DataDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRptsTotalGetResponse.DataDomain.AdPv">
            <summary>
            展现数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRptsTotalGetResponse.DataDomain.AdgroupId">
            <summary>
            单元id
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRptsTotalGetResponse.DataDomain.AdgroupName">
            <summary>
            单元名称
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRptsTotalGetResponse.DataDomain.AdzoneId">
            <summary>
            资源位id
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRptsTotalGetResponse.DataDomain.AdzoneName">
            <summary>
            资源位名称
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRptsTotalGetResponse.DataDomain.AlipayInShopNum">
            <summary>
            成交量
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRptsTotalGetResponse.DataDomain.AlipayInshopAmt">
            <summary>
            成交额
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRptsTotalGetResponse.DataDomain.AvgAccessPageNum">
            <summary>
            平均访问页面数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRptsTotalGetResponse.DataDomain.AvgAccessTime">
            <summary>
            平均访问时长
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRptsTotalGetResponse.DataDomain.CampaignId">
            <summary>
            计划id
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRptsTotalGetResponse.DataDomain.CampaignName">
            <summary>
            计划名称
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRptsTotalGetResponse.DataDomain.CartNum">
            <summary>
            加购物车数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRptsTotalGetResponse.DataDomain.Charge">
            <summary>
            花费
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRptsTotalGetResponse.DataDomain.Click">
            <summary>
            点击数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRptsTotalGetResponse.DataDomain.Ctr">
            <summary>
            ctr
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRptsTotalGetResponse.DataDomain.Cvr">
            <summary>
            cvr
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRptsTotalGetResponse.DataDomain.DeepInshopUv">
            <summary>
            深度进店uv
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRptsTotalGetResponse.DataDomain.DirShopColNum">
            <summary>
            店铺收藏数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRptsTotalGetResponse.DataDomain.Ecpc">
            <summary>
            ecpc
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRptsTotalGetResponse.DataDomain.Ecpm">
            <summary>
            ecpm
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRptsTotalGetResponse.DataDomain.GmvInshopAmt">
            <summary>
            gmv成交额
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRptsTotalGetResponse.DataDomain.GmvInshopNum">
            <summary>
            gmv成交数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRptsTotalGetResponse.DataDomain.InshopItemColNum">
            <summary>
            宝贝收藏数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRptsTotalGetResponse.DataDomain.Roi">
            <summary>
            roi
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRptsTotalGetResponse.DataDomain.TargetId">
            <summary>
            targetId
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRptsTotalGetResponse.DataDomain.TargetName">
            <summary>
            定向名称
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRptsTotalGetResponse.DataDomain.Uv">
            <summary>
            uv
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAdvertiserDestRptsDownloadResponse">
            <summary>
            ZuanshiAdvertiserDestRptsDownloadResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserDestRptsDownloadResponse.TaskId">
            <summary>
            生成的任务id标识，用于轮询任务状态
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAdvertiserAdzoneRptsDownloadResponse">
            <summary>
            ZuanshiAdvertiserAdzoneRptsDownloadResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRptsDownloadResponse.TaskId">
            <summary>
            生成的任务id标识，用于轮询任务状态
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAdvertiserAdgroupRtrptsGetResponse">
            <summary>
            ZuanshiAdvertiserAdgroupRtrptsGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRtrptsGetResponse.AdgroupRealtimeRptList">
            <summary>
            返回推广单元分时数据列表
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAdvertiserAdgroupRtrptsGetResponse.DataDomain">
            <summary>
            DataDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRtrptsGetResponse.DataDomain.AdPv">
            <summary>
            展现量
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRtrptsGetResponse.DataDomain.AdgroupId">
            <summary>
            推广单元id
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRtrptsGetResponse.DataDomain.CampaignId">
            <summary>
            计划id
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRtrptsGetResponse.DataDomain.Charge">
            <summary>
            消耗，单位元
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRtrptsGetResponse.DataDomain.Click">
            <summary>
            点击量
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRtrptsGetResponse.DataDomain.Ctr">
            <summary>
            ctr
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRtrptsGetResponse.DataDomain.Ecpc">
            <summary>
            ecpc
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRtrptsGetResponse.DataDomain.Ecpm">
            <summary>
            ecpm
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRtrptsGetResponse.DataDomain.HourId">
            <summary>
            小时数，取值范围0-23
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdgroupRtrptsGetResponse.DataDomain.LogDate">
            <summary>
            查询日期
            </summary>
        </member>
        <member name="T:Top.Api.Response.ScitemUpdateResponse">
            <summary>
            ScitemUpdateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ScitemUpdateResponse.UpdateRows">
            <summary>
            更新商品数量,1表示成功更新了一条数据，0：表示未找到匹配的数据
            </summary>
        </member>
        <member name="T:Top.Api.Response.ScitemMapDeleteResponse">
            <summary>
            ScitemMapDeleteResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ScitemMapDeleteResponse.Module">
            <summary>
            失效条数
            </summary>
        </member>
        <member name="T:Top.Api.Response.ScitemAddResponse">
            <summary>
            ScitemAddResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ScitemAddResponse.ScItem">
            <summary>
            后台商品信息
            </summary>
        </member>
        <member name="T:Top.Api.Response.OpenimTribeUnsetmanagerResponse">
            <summary>
            OpenimTribeUnsetmanagerResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.OpenimTribeUnsetmanagerResponse.TribeCode">
            <summary>
            群服务code
            </summary>
        </member>
        <member name="T:Top.Api.Response.OpenimTribeGettribeinfoResponse">
            <summary>
            OpenimTribeGettribeinfoResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.OpenimTribeGettribeinfoResponse.TribeInfo">
            <summary>
            群信息
            </summary>
        </member>
        <member name="T:Top.Api.Response.OpenimTrackGetsummaryResponse">
            <summary>
            OpenimTrackGetsummaryResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.OpenimTrackGetsummaryResponse.Tracksummary">
            <summary>
            用户最近访问信息
            </summary>
        </member>
        <member name="T:Top.Api.Response.InventoryStoreManageResponse">
            <summary>
            InventoryStoreManageResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.InventoryStoreManageResponse.StoreList">
            <summary>
            返回结果
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiAdzonesGetRequest">
            <summary>
            TOP API: taobao.zuanshi.adzones.get
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiAdvertiserTargetRtrptsGetRequest">
            <summary>
            TOP API: taobao.zuanshi.advertiser.target.rtrpts.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserTargetRtrptsGetRequest.AdgroupId">
            <summary>
            推广组id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserTargetRtrptsGetRequest.CampaignId">
            <summary>
            计划id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserTargetRtrptsGetRequest.CampaignModel">
            <summary>
            计划类型。1：全店推广，4：单品推广。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserTargetRtrptsGetRequest.LogDate">
            <summary>
            查询日期
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserTargetRtrptsGetRequest.TargetId">
            <summary>
            定向标签id
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiAdvertiserCreativeRtrptsGetRequest">
            <summary>
            TOP API: taobao.zuanshi.advertiser.creative.rtrpts.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserCreativeRtrptsGetRequest.AdgroupId">
            <summary>
            单元id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserCreativeRtrptsGetRequest.CampaignId">
            <summary>
            计划id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserCreativeRtrptsGetRequest.CampaignModel">
            <summary>
            计划类型。1：全店推广，4：单品推广。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserCreativeRtrptsGetRequest.CreativeId">
            <summary>
            创意id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserCreativeRtrptsGetRequest.LogDate">
            <summary>
            查询日期
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiAdvertiserCampaignRptsTotalGetRequest">
            <summary>
            TOP API: taobao.zuanshi.advertiser.campaign.rpts.total.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserCampaignRptsTotalGetRequest.CampaignId">
            <summary>
            计划id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserCampaignRptsTotalGetRequest.CampaignModel">
            <summary>
            计划类型。1：全店推广；4单品推广
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserCampaignRptsTotalGetRequest.Effect">
            <summary>
            效果周期，取值范围：3,7,15。分别表示效果转化周期-3天/7天/15天。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserCampaignRptsTotalGetRequest.EffectType">
            <summary>
            效果类型。“impression”：展现效果；“click”：点击效果
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserCampaignRptsTotalGetRequest.EndTime">
            <summary>
            结束日期
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserCampaignRptsTotalGetRequest.Offset">
            <summary>
            分页偏移量
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserCampaignRptsTotalGetRequest.PageSize">
            <summary>
            每页条数，必传；每页最多200
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserCampaignRptsTotalGetRequest.StartTime">
            <summary>
            开始日期
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiAccountGetRequest">
            <summary>
            TOP API: taobao.zuanshi.account.get
            </summary>
        </member>
        <member name="T:Top.Api.Request.TmcMessagesProduceRequest">
            <summary>
            TOP API: taobao.tmc.messages.produce
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmcMessagesProduceRequest.Messages">
            <summary>
            tmc消息列表, 最多50条，元素结构与taobao.tmc.message.produce一致，用json表示的消息列表。例如：[{"content": "{\"tid\":1234554321,\"status\":\"X_LOGISTICS_PRINTED\",\"action_time\":\"2014-08-08 18:24:00\",\"seller_nick\": \"向阳aa\",\"operator\":\"小张\"}","topic": "taobao_jds_TradeTrace"},{"content": "{\"tid\":1234554321,\"status\":\"X_LOGISTICS_PRINTED\",\"action_time\":\"2014-08-08 18:24:00\",\"seller_nick\": \"向阳aa\",\"operator\":\"小张\"}","topic": "taobao_jds_TradeTrace"}]
            </summary>
        </member>
        <member name="T:Top.Api.Request.TmcMessagesProduceRequest.TmcPublishMessageDomain">
            <summary>
            TmcPublishMessageDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmcMessagesProduceRequest.TmcPublishMessageDomain.Content">
            <summary>
            消息内容的JSON表述，必须按照topic的定义来填充
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmcMessagesProduceRequest.TmcPublishMessageDomain.JsonExContent">
            <summary>
            消息的扩增属性，用json格式表示
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmcMessagesProduceRequest.TmcPublishMessageDomain.TargetAppKey">
            <summary>
            直发消息需要传入目标appkey
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmcMessagesProduceRequest.TmcPublishMessageDomain.TargetGroup">
            <summary>
            目标分组
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmcMessagesProduceRequest.TmcPublishMessageDomain.Topic">
            <summary>
            消息类型
            </summary>
        </member>
        <member name="T:Top.Api.Request.TmallItemHscodeDetailGetRequest">
            <summary>
            TOP API: tmall.item.hscode.detail.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemHscodeDetailGetRequest.Hscode">
            <summary>
            hscode
            </summary>
        </member>
        <member name="T:Top.Api.Request.TmallInventoryQueryForstoreRequest">
            <summary>
            TOP API: tmall.inventory.query.forstore
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallInventoryQueryForstoreRequest.ParamList">
            <summary>
            查询列表
            </summary>
        </member>
        <member name="T:Top.Api.Request.TmallInventoryQueryForstoreRequest.InventoryQueryForStoreRequestDomain">
            <summary>
            InventoryQueryForStoreRequestDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallInventoryQueryForstoreRequest.InventoryQueryForStoreRequestDomain.InvStoreType">
            <summary>
            实体类型  2：仓库类型， 6：门店类型
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallInventoryQueryForstoreRequest.InventoryQueryForStoreRequestDomain.ScItemCode">
            <summary>
            后端商品code
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallInventoryQueryForstoreRequest.InventoryQueryForStoreRequestDomain.ScItemId">
            <summary>
            后端商品id
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallInventoryQueryForstoreRequest.InventoryQueryForStoreRequestDomain.StoreCode">
            <summary>
            仓库code
            </summary>
        </member>
        <member name="T:Top.Api.Request.ScitemOutercodeGetRequest">
            <summary>
            TOP API: taobao.scitem.outercode.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.ScitemOutercodeGetRequest.OuterCode">
            <summary>
            商品编码
            </summary>
        </member>
        <member name="T:Top.Api.Request.OpenimChatlogsImportRequest">
            <summary>
            TOP API: taobao.openim.chatlogs.import
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimChatlogsImportRequest.Messages">
            <summary>
            消息序列
            </summary>
        </member>
        <member name="T:Top.Api.Request.OpenimChatlogsImportRequest.TextMessageDomain">
            <summary>
            TextMessageDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimChatlogsImportRequest.TextMessageDomain.FromId">
            <summary>
            发送方userid
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimChatlogsImportRequest.TextMessageDomain.Message">
            <summary>
            消息
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimChatlogsImportRequest.TextMessageDomain.Time">
            <summary>
            消息时间。UTC时间，精确到秒。必须在一个月内
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimChatlogsImportRequest.TextMessageDomain.ToId">
            <summary>
            接受方userid
            </summary>
        </member>
        <member name="T:Top.Api.Request.FenxiaoProductSkuDeleteRequest">
            <summary>
            TOP API: taobao.fenxiao.product.sku.delete
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductSkuDeleteRequest.ProductId">
            <summary>
            产品id
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductSkuDeleteRequest.Properties">
            <summary>
            sku属性
            </summary>
        </member>
        <member name="T:Taobao.Top.Link.Endpoints.EndpointHandler">
            <summary>deal with protocol/callback/send
            </summary>
        </member>
        <member name="T:Top.Api.Domain.TradeMonitor">
            <summary>
            TradeMonitor Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeMonitor.Area">
            <summary>
            地区
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeMonitor.BuyAmount">
            <summary>
            交易订单的商品购买数量
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeMonitor.BuyerFullName">
            <summary>
            收货人姓名
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeMonitor.BuyerNick">
            <summary>
            买家的淘宝账号昵称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeMonitor.City">
            <summary>
            城市
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeMonitor.DistributorNick">
            <summary>
            经销商的淘宝账号昵称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeMonitor.ItemId">
            <summary>
            交易订单的商品id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeMonitor.ItemNumber">
            <summary>
            交易订单的商品的商家编码
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeMonitor.ItemPrice">
            <summary>
            交易订单的商品价格
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeMonitor.ItemSkuName">
            <summary>
            交易订单的商品的sku名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeMonitor.ItemSkuNumber">
            <summary>
            交易订单的商品的sku商家编码
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeMonitor.ItemTitle">
            <summary>
            交易订单的商品标题
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeMonitor.ItemTotalPrice">
            <summary>
            交易订单的商品总价格（单价×数量+改价+优惠）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeMonitor.PayTime">
            <summary>
            交易订单的付款时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeMonitor.ProductId">
            <summary>
            供应商的产品id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeMonitor.ProductNumber">
            <summary>
            供应商的产品的商家编码
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeMonitor.ProductSkuNumber">
            <summary>
            供应商的产品的sku商家编码
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeMonitor.ProductTitle">
            <summary>
            供应商的产品标题
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeMonitor.Provence">
            <summary>
            省份
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeMonitor.RetailPriceHigh">
            <summary>
            交易订单的商品最高零售价
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeMonitor.RetailPriceLow">
            <summary>
            交易订单的商品最低零售价
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeMonitor.ShippingAddress">
            <summary>
            收货人地址
            </summary>
        </member>
        <!-- 对于成员“P:Top.Api.Domain.TradeMonitor.Status”忽略有格式错误的 XML 注释 -->
        <member name="P:Top.Api.Domain.TradeMonitor.SubTcOrderId">
            <summary>
            交易订单的子订单号
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeMonitor.SupplierNick">
            <summary>
            供应商的淘宝账号昵称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeMonitor.TcAdjustFee">
            <summary>
            商品的卖出金额调整，金额增加时为正数，金额减少时为负数，单位是分，不带小数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeMonitor.TcDiscountFee">
            <summary>
            优惠金额，始终为正数，单位是分，不带小数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeMonitor.TcOrderId">
            <summary>
            交易订单号
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeMonitor.TcPreferentialType">
            <summary>
            商品优惠类型：聚划算、秒杀或其他
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeMonitor.TradeMonitorId">
            <summary>
            主键id
            </summary>
        </member>
        <member name="T:Top.Api.Domain.Tracksummary">
            <summary>
            Tracksummary Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Tracksummary.Browser">
            <summary>
            浏览器
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Tracksummary.City">
            <summary>
            城市
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Tracksummary.Country">
            <summary>
            国家
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Tracksummary.Device">
            <summary>
            设备
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Tracksummary.ExtraParam">
            <summary>
            额外参数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Tracksummary.ExtraUi">
            <summary>
            UI参数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Tracksummary.FromChannel">
            <summary>
            渠道
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Tracksummary.Ip">
            <summary>
            ip地址
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Tracksummary.Isp">
            <summary>
            运营商，如电信，联通
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Tracksummary.Os">
            <summary>
            操作系统
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Tracksummary.RefererKeyword">
            <summary>
            referer_关键字
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Tracksummary.RefererUrl">
            <summary>
            referer_url
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Tracksummary.Region">
            <summary>
            省份，如浙江省
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Tracksummary.TotalTime">
            <summary>
            访问总时间，以毫秒为单位
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Tracksummary.VisitCount">
            <summary>
            访问总次数
            </summary>
        </member>
        <member name="T:Top.Api.Domain.ScItem">
            <summary>
            ScItem Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ScItem.BarCode">
            <summary>
            条形码
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ScItem.BrandId">
            <summary>
            品牌id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ScItem.BrandName">
            <summary>
            品牌名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ScItem.Height">
            <summary>
            高 单位：mm
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ScItem.IsAreaSale">
            <summary>
            1表示区域销售，0或是空是非区域销售
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ScItem.IsCostly">
            <summary>
            贵重品:false:不是 true：是
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ScItem.IsDangerous">
            <summary>
            是否危险 false：不是  true：是
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ScItem.IsFriable">
            <summary>
            是否易碎 false ：不是  true：是
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ScItem.IsWarranty">
            <summary>
            是否保质期：false:不是 true：是
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ScItem.ItemId">
            <summary>
            商品id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ScItem.ItemName">
            <summary>
            商品名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ScItem.ItemType">
            <summary>
            1.普通供应链商品 2.供应链组合主商品
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ScItem.Length">
            <summary>
            长度 单位：mm
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ScItem.MatterStatus">
            <summary>
            LIQUID:液体，1：粉体，SOLID：固体
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ScItem.Options">
            <summary>
            后端商品options字段
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ScItem.OuterCode">
            <summary>
            商家编码
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ScItem.Price">
            <summary>
            价格：分（吊牌价）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ScItem.Properties">
            <summary>
            商品属性格式是  p1:v1,p2:v2,p3:v3
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ScItem.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ScItem.Volume">
            <summary>
            体积：立方厘米
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ScItem.Weight">
            <summary>
            重量.单位：克
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ScItem.Width">
            <summary>
            宽 单位：mm
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ScItem.WmsCode">
            <summary>
            仓储商编码，可以支持多个，格式wmsname:code
            </summary>
        </member>
        <member name="T:Top.Api.Domain.Receiver">
            <summary>
            Receiver Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Receiver.Address">
            <summary>
            收货人的详细地址信息
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Receiver.CardId">
            <summary>
            证件号
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Receiver.City">
            <summary>
            收货人的城市
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Receiver.District">
            <summary>
            区/县
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Receiver.MobilePhone">
            <summary>
            移动电话
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Receiver.Name">
            <summary>
            收货人全名
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Receiver.Phone">
            <summary>
            固定电话
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Receiver.State">
            <summary>
            收货人所在省份
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Receiver.Zip">
            <summary>
            邮政编码
            </summary>
        </member>
        <member name="T:Top.Api.Domain.LoginUser">
            <summary>
            LoginUser Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.LoginUser.CreateTime">
            <summary>
            入驻时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.LoginUser.Nick">
            <summary>
            会员NICK
            </summary>
        </member>
        <member name="P:Top.Api.Domain.LoginUser.UserId">
            <summary>
            分销用户ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.LoginUser.UserType">
            <summary>
            分销用户类型(1:分销商，2:供应商，3:品牌商；2、3都表示有供货能力，只是身份不同)
            </summary>
        </member>
        <member name="T:Top.Api.Response.TmallItemDapeiTemplateDeleteResponse">
            <summary>
            TmallItemDapeiTemplateDeleteResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallItemDapeiTemplateDeleteResponse.Result">
            <summary>
            result
            </summary>
        </member>
        <member name="T:Top.Api.Response.TmallItemDapeiTemplateDeleteResponse.ResultSetDomain">
            <summary>
            ResultSetDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallItemDapeiTemplateDeleteResponse.ResultSetDomain.Error">
            <summary>
            error
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallItemDapeiTemplateDeleteResponse.ResultSetDomain.ErrorCode">
            <summary>
            errorCode
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallItemDapeiTemplateDeleteResponse.ResultSetDomain.ErrorMsg">
            <summary>
            errorMsg
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallItemDapeiTemplateDeleteResponse.ResultSetDomain.FirstResult">
            <summary>
            firstResult
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaAdgroupsItemExistResponse">
            <summary>
            SimbaAdgroupsItemExistResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaAdgroupsItemExistResponse.Exist">
            <summary>
            true表示已经被推广，false表示没有被推广
            </summary>
        </member>
        <member name="T:Top.Api.Response.CategoryrecommendItemsGetResponse">
            <summary>
            CategoryrecommendItemsGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.CategoryrecommendItemsGetResponse.FavoriteItems">
            <summary>
            返回关联的商品集合
            </summary>
        </member>
        <member name="T:Top.Api.Response.TmallItemIncrementUpdateSchemaGetResponse">
            <summary>
            TmallItemIncrementUpdateSchemaGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallItemIncrementUpdateSchemaGetResponse.UpdateItemResult">
            <summary>
            返回增量更新商品的规则文档
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaInsightWordsdataGetResponse">
            <summary>
            SimbaInsightWordsdataGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaInsightWordsdataGetResponse.WordDataList">
            <summary>
            关键词大盘数据列表
            </summary>
        </member>
        <member name="T:Top.Api.Response.TmallItemDescModulesGetResponse">
            <summary>
            TmallItemDescModulesGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallItemDescModulesGetResponse.ModularDescInfo">
            <summary>
            返回描述模块信息
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaAdgroupsbyadgroupidsGetResponse">
            <summary>
            SimbaAdgroupsbyadgroupidsGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaAdgroupsbyadgroupidsGetResponse.Adgroups">
            <summary>
            返回的推广组分页对象
            </summary>
        </member>
        <member name="T:Top.Api.Response.AstrolabeMappingGetResponse">
            <summary>
            AstrolabeMappingGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.AstrolabeMappingGetResponse.Result">
            <summary>
            卖家Id与授权AppKey的映射Mapping
            </summary>
        </member>
        <member name="T:Top.Api.Response.ItemSellerGetResponse">
            <summary>
            ItemSellerGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ItemSellerGetResponse.Item">
            <summary>
            商品详细信息
            </summary>
        </member>
        <member name="T:Top.Api.Response.TmallItemQuantityUpdateResponse">
            <summary>
            TmallItemQuantityUpdateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallItemQuantityUpdateResponse.QuantityUpdateResult">
            <summary>
            库存更新结果，商品id
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaCreativesChangedGetResponse">
            <summary>
            SimbaCreativesChangedGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaCreativesChangedGetResponse.Creatives">
            <summary>
            广告创意分页对象
            </summary>
        </member>
        <member name="T:Top.Api.Response.PictureUploadResponse">
            <summary>
            PictureUploadResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.PictureUploadResponse.Picture">
            <summary>
            当前上传的一张图片信息
            </summary>
        </member>
        <member name="T:Top.Api.Response.TmallItemUpdateSchemaGetResponse">
            <summary>
            TmallItemUpdateSchemaGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallItemUpdateSchemaGetResponse.UpdateItemResult">
            <summary>
            返回发布商品的规则文档
            </summary>
        </member>
        <member name="T:Top.Api.Response.SellercatsListGetResponse">
            <summary>
            SellercatsListGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SellercatsListGetResponse.SellerCats">
            <summary>
            卖家自定义类目
            </summary>
        </member>
        <member name="T:Top.Api.Response.TradeFullinfoGetResponse">
            <summary>
            TradeFullinfoGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TradeFullinfoGetResponse.Trade">
            <summary>
            交易主订单信息
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaRptCampadgroupeffectGetResponse">
            <summary>
            SimbaRptCampadgroupeffectGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaRptCampadgroupeffectGetResponse.RptCampadgroupEffectList">
            <summary>
            推广计划下推广组的效果数据列表
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaRptCampaignbaseGetResponse">
            <summary>
            SimbaRptCampaignbaseGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaRptCampaignbaseGetResponse.RptCampaignBaseList">
            <summary>
            推广计划查询结果
            </summary>
        </member>
        <member name="T:Top.Api.Response.ItemSkuAddResponse">
            <summary>
            ItemSkuAddResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ItemSkuAddResponse.Sku">
            <summary>
            sku
            </summary>
        </member>
        <member name="T:Top.Api.Response.ProductGetResponse">
            <summary>
            ProductGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ProductGetResponse.Product">
            <summary>
            返回具体信息为入参fields请求的字段信息
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaCampaignChanneloptionsGetRequest">
            <summary>
            TOP API: taobao.simba.campaign.channeloptions.get
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaAdgroupsItemExistRequest">
            <summary>
            TOP API: taobao.simba.adgroups.item.exist
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupsItemExistRequest.CampaignId">
            <summary>
            推广计划Id
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupsItemExistRequest.ItemId">
            <summary>
            商品Id
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupsItemExistRequest.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaCreativeAddRequest">
            <summary>
            TOP API: taobao.simba.creative.add
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaCreativeAddRequest.AdgroupId">
            <summary>
            推广组Id
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaCreativeAddRequest.ImgUrl">
            <summary>
            创意图片地址，必须是推广组对应商品的图片之一
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaCreativeAddRequest.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaCreativeAddRequest.Title">
            <summary>
            创意标题，最多20个汉字
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaAdgroupCatmatchforecastGetRequest">
            <summary>
            TOP API: taobao.simba.adgroup.catmatchforecast.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupCatmatchforecastGetRequest.AdgroupId">
            <summary>
            推广组ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupCatmatchforecastGetRequest.CatmatchPrice">
            <summary>
            类目出价,出价范围在5-9999之间,单位分
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupCatmatchforecastGetRequest.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="T:Top.Api.Request.SubuserDutyAddRequest">
            <summary>
            TOP API: taobao.subuser.duty.add
            </summary>
        </member>
        <member name="P:Top.Api.Request.SubuserDutyAddRequest.DutyLevel">
            <summary>
            职务级别
            </summary>
        </member>
        <member name="P:Top.Api.Request.SubuserDutyAddRequest.DutyName">
            <summary>
            职务名称
            </summary>
        </member>
        <member name="P:Top.Api.Request.SubuserDutyAddRequest.UserNick">
            <summary>
            主账号用户名
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaKeywordscatQscoreGetRequest">
            <summary>
            TOP API: taobao.simba.keywordscat.qscore.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaKeywordscatQscoreGetRequest.AdgroupId">
            <summary>
            推广组Id
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaKeywordscatQscoreGetRequest.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="T:Top.Api.Request.TmallItemOuteridUpdateRequest">
            <summary>
            TOP API: tmall.item.outerid.update
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemOuteridUpdateRequest.ItemId">
            <summary>
            商品ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemOuteridUpdateRequest.OuterId">
            <summary>
            商品维度商家编码，如果不修改可以不传；清空请设置空串
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemOuteridUpdateRequest.SkuOuters">
            <summary>
            商品SKU更新OuterId时候用的数据
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaRtrptCustGetRequest">
            <summary>
            TOP API: taobao.simba.rtrpt.cust.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRtrptCustGetRequest.Nick">
            <summary>
            昵称
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRtrptCustGetRequest.TheDate">
            <summary>
            日期，格式yyyy-mm-dd
            </summary>
        </member>
        <member name="T:Top.Api.Request.SellercenterSubusersGetRequest">
            <summary>
            TOP API: taobao.sellercenter.subusers.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SellercenterSubusersGetRequest.Nick">
            <summary>
            表示卖家昵称
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaCatmatchidsDeletedGetRequest">
            <summary>
            TOP API: taobao.simba.catmatchids.deleted.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaCatmatchidsDeletedGetRequest.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaCatmatchidsDeletedGetRequest.PageNo">
            <summary>
            返回的第几页数据，默认为1
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaCatmatchidsDeletedGetRequest.PageSize">
            <summary>
            返回的每页数据量大小,默认200最大1000
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaCatmatchidsDeletedGetRequest.StartTime">
            <summary>
            得到此时间点之后的数据，不能大于一个月
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaAdgroupNonsearchpricesUpdateRequest">
            <summary>
            TOP API: taobao.simba.adgroup.nonsearchprices.update
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupNonsearchpricesUpdateRequest.AdgroupidPriceJson">
            <summary>
            推广组id，通投位置价格，是否使用默认出价json 数组字符串，数组个数最多200个.  json数组中的key必须和对应实体ADGroup中的属性字段保持一致，否则对应的实体对象属性获取不到相应的值，  adgroupId,isNonsearchDefaultPrice不能为空。nonsearchMaxPrice是整数，以“分”为单位，不能小于5，不能大于日限额,不能大于9999分。 启用非搜索默认出价时nonsearchMaxPrice为0
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupNonsearchpricesUpdateRequest.CampaignId">
            <summary>
            推广计划ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupNonsearchpricesUpdateRequest.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="T:Top.Api.Request.ItemcatsGetRequest">
            <summary>
            TOP API: taobao.itemcats.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemcatsGetRequest.Cids">
            <summary>
            商品所属类目ID列表，用半角逗号(,)分隔 例如:(18957,19562,) (cids、parent_cid至少传一个)
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemcatsGetRequest.Datetime">
            <summary>
            无效字段，暂无法使用。时间戳（格式:yyyy-MM-dd HH:mm:ss）如果该字段没有传，则取当前所有的类目信息,如果传了parent_cid或者cids，则忽略datetime，如果该字段传了，那么可以查询到该时间到现在为止的增量变化
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemcatsGetRequest.Fields">
            <summary>
            需要返回的字段列表，见ItemCat，默认返回：cid,parent_cid,name,is_parent；增量类目信息,根据fields传入的参数返回相应的结果。 features字段： 1、如果存在attr_key=freeze表示该类目被冻结了，attr_value=0,5，value可能存在2个值（也可能只有1个），用逗号分割，0表示禁编辑，5表示禁止发布
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemcatsGetRequest.ParentCid">
            <summary>
            父商品类目 id，0表示根节点, 传输该参数返回所有子类目。 (cids、parent_cid至少传一个)
            </summary>
        </member>
        <member name="T:Top.Api.Request.WangwangEserviceStreamweigthsGetRequest">
            <summary>
            TOP API: taobao.wangwang.eservice.streamweigths.get
            </summary>
        </member>
        <member name="T:Top.Api.Request.TmallBrandcatControlGetRequest">
            <summary>
            TOP API: tmall.brandcat.control.get
            </summary>
        </member>
        <member name="T:Top.Api.Request.WangwangEserviceNewevalsGetRequest">
            <summary>
            TOP API: taobao.wangwang.eservice.newevals.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.WangwangEserviceNewevalsGetRequest.Btime">
            <summary>
            查询登录日志的开始日期，必须按示例的格式，否则会返回错误；  开始时间不能在当前时间30天前，开始时间和结束时间的间隔不能超过7天；  开始时间不能超过当前系统时间
            </summary>
        </member>
        <member name="P:Top.Api.Request.WangwangEserviceNewevalsGetRequest.Etime">
            <summary>
            查询登录日志的结束时间，必须按示例的格式，否则会返回错误；  结束时间不能小于开始时间，结束时间和开始时间的间隔不能超过7天
            </summary>
        </member>
        <member name="P:Top.Api.Request.WangwangEserviceNewevalsGetRequest.QueryIds">
            <summary>
            需要查询登录日志的账号列表，多个id之间用逗号隔开，每次查询的id数不能超过30个
            </summary>
        </member>
        <member name="T:Top.Api.Request.TraderatesGetRequest">
            <summary>
            TOP API: taobao.traderates.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.TraderatesGetRequest.EndDate">
            <summary>
            评价结束时间。如果只输入结束时间，那么全部返回所有评价数据。
            </summary>
        </member>
        <member name="P:Top.Api.Request.TraderatesGetRequest.Fields">
            <summary>
            需返回的字段列表。可选值：TradeRate 结构中的所有字段，多个字段之间用“,”分隔
            </summary>
        </member>
        <member name="P:Top.Api.Request.TraderatesGetRequest.NumIid">
            <summary>
            商品的数字ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.TraderatesGetRequest.PageNo">
            <summary>
            页码。取值范围:大于零的整数最大限制为200; 默认值:1
            </summary>
        </member>
        <member name="P:Top.Api.Request.TraderatesGetRequest.PageSize">
            <summary>
            每页获取条数。默认值40，最小值1，最大值150。
            </summary>
        </member>
        <member name="P:Top.Api.Request.TraderatesGetRequest.PeerNick">
            <summary>
            评价对方昵称
            </summary>
        </member>
        <member name="P:Top.Api.Request.TraderatesGetRequest.RateType">
            <summary>
            评价类型。可选值:get(得到),give(给出)
            </summary>
        </member>
        <member name="P:Top.Api.Request.TraderatesGetRequest.Result">
            <summary>
            评价结果。可选值:good(好评),neutral(中评),bad(差评)
            </summary>
        </member>
        <member name="P:Top.Api.Request.TraderatesGetRequest.Role">
            <summary>
            评价者角色即评价的发起方。可选值:seller(卖家),buyer(买家)。 当 give buyer 以买家身份给卖家的评价； 当 get seller 以买家身份得到卖家给的评价； 当 give seller 以卖家身份给买家的评价； 当 get buyer 以卖家身份得到买家给的评价。
            </summary>
        </member>
        <member name="P:Top.Api.Request.TraderatesGetRequest.StartDate">
            <summary>
            评价开始时。如果只输入开始时间，那么能返回开始时间之后的评价数据。
            </summary>
        </member>
        <member name="P:Top.Api.Request.TraderatesGetRequest.Tid">
            <summary>
            交易订单id，可以是父订单id号，也可以是子订单id号
            </summary>
        </member>
        <member name="P:Top.Api.Request.TraderatesGetRequest.UseHasNext">
            <summary>
            是否启用has_next的分页方式，如果指定true,则返回的结果中不包含总记录数，但是会新增一个是否存在下一页的的字段，通过此种方式获取评价信息，效率在原有的基础上有80%的提升。
            </summary>
        </member>
        <member name="T:Top.Api.Request.ProductAddRequest">
            <summary>
            TOP API: taobao.product.add
            </summary>
        </member>
        <!-- 对于成员“P:Top.Api.Request.ProductAddRequest.Binds”忽略有格式错误的 XML 注释 -->
        <member name="P:Top.Api.Request.ProductAddRequest.Cid">
            <summary>
            商品类目ID.调用taobao.itemcats.get获取;注意:必须是叶子类目 id.
            </summary>
        </member>
        <!-- 对于成员“P:Top.Api.Request.ProductAddRequest.CustomerProps”忽略有格式错误的 XML 注释 -->
        <member name="P:Top.Api.Request.ProductAddRequest.Desc">
            <summary>
            产品描述.最大不超过25000个字符
            </summary>
        </member>
        <member name="P:Top.Api.Request.ProductAddRequest.ExtraInfo">
            <summary>
            存放产品扩展信息，由List(ProductExtraInfo)转化成jsonArray存入.
            </summary>
        </member>
        <member name="P:Top.Api.Request.ProductAddRequest.Image">
            <summary>
            产品主图片.最大1M,目前仅支持GIF,JPG.
            </summary>
        </member>
        <member name="P:Top.Api.Request.ProductAddRequest.IsPubSuite">
            <summary>
            是否发布套装产品，和suite_items_str配合使用，is_pub_suite=true走套装SPU发布逻辑，达尔文体系下不需要再走tmall.product.spec.add发布产品规格
            </summary>
        </member>
        <member name="P:Top.Api.Request.ProductAddRequest.Major">
            <summary>
            是不是主图
            </summary>
        </member>
        <member name="P:Top.Api.Request.ProductAddRequest.MarketId">
            <summary>
            市场ID，1为新增C2C市场的产品信息， 2为新增B2C市场的产品信息。  不填写此值则C用户新增B2C市场的产品信息，B用户新增B2C市场的产品信息。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ProductAddRequest.MarketTime">
            <summary>
            上市时间。目前只支持鞋城类目传入此参数
            </summary>
        </member>
        <member name="P:Top.Api.Request.ProductAddRequest.Name">
            <summary>
            产品名称,最大30个字符.
            </summary>
        </member>
        <member name="P:Top.Api.Request.ProductAddRequest.OuterId">
            <summary>
            外部产品ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.ProductAddRequest.PackingList">
            <summary>
            包装清单。注意，在管控类目下，包装清单不能为空，同时保证清单的格式为：  名称:数字;名称:数字;  其中，名称不能违禁、不能超过60字符，数字不能超过999
            </summary>
        </member>
        <member name="P:Top.Api.Request.ProductAddRequest.Price">
            <summary>
            产品市场价.精确到2位小数;单位为元.如：200.07
            </summary>
        </member>
        <member name="P:Top.Api.Request.ProductAddRequest.PropertyAlias">
            <summary>
            销售属性值别名。格式为pid1:vid1:alias1;pid1:vid2:alia2。只有少数销售属性值支持传入别名，比如颜色和尺寸
            </summary>
        </member>
        <member name="P:Top.Api.Request.ProductAddRequest.Props">
            <summary>
            关键属性 结构:pid:vid;pid:vid.调用taobao.itemprops.get获取pid,调用taobao.itempropvalues.get获取vid;如果碰到用户自定义属性,请用customer_props.
            </summary>
        </member>
        <member name="P:Top.Api.Request.ProductAddRequest.SaleProps">
            <summary>
            销售属性结构:pid:vid;pid:vid.调用taobao.itemprops.get获取is_sale_prop＝true的pid,调用taobao.itempropvalues.get获取vid.
            </summary>
        </member>
        <member name="P:Top.Api.Request.ProductAddRequest.SellPt">
            <summary>
            商品卖点描述，长度限制为20个汉字
            </summary>
        </member>
        <member name="P:Top.Api.Request.ProductAddRequest.SuiteItemsStr">
            <summary>
            发布套装产品时，套装关联的产品规格+数量的字符串，格式：specsId:number。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ProductAddRequest.TemplateId">
            <summary>
            在天猫，无关键属性发布产品，必须指定模板ID,模板ID通过tmall.product.template.get获取
            </summary>
        </member>
        <member name="P:Top.Api.Request.ProductAddRequest.VerticalMarket">
            <summary>
            加入垂直市场，目前只支持以鞋城卖家身份加入名鞋馆(暂时此字段还不起作用，不对外开放)
            </summary>
        </member>
        <member name="T:Top.Api.Domain.SizeMappingTemplate">
            <summary>
            SizeMappingTemplate Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SizeMappingTemplate.TemplateContent">
            <summary>
            尺码表模板内容，格式为"尺码值:维度名称:数值,尺码值:维度名称:数值"。其中，数值的单位，长度单位为厘米（cm），体重单位为公斤（kg）。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SizeMappingTemplate.TemplateId">
            <summary>
            尺码表模板ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SizeMappingTemplate.TemplateName">
            <summary>
            尺码表模板名称
            </summary>
        </member>
        <member name="T:Top.Api.Domain.UserInfo">
            <summary>
            UserInfo Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.UserInfo.AvailableSpace">
            <summary>
            用户的可用容量，即订购量与免费量之和
            </summary>
        </member>
        <member name="P:Top.Api.Domain.UserInfo.FreeSpace">
            <summary>
            图片空间的免费容量
            </summary>
        </member>
        <member name="P:Top.Api.Domain.UserInfo.OrderExpiryDate">
            <summary>
            图片空间的订购有效期
            </summary>
        </member>
        <member name="P:Top.Api.Domain.UserInfo.OrderSpace">
            <summary>
            用户订购的图片空间容量
            </summary>
        </member>
        <member name="P:Top.Api.Domain.UserInfo.RemainingSpace">
            <summary>
            剩余的图片空间容量
            </summary>
        </member>
        <member name="P:Top.Api.Domain.UserInfo.UsedSpace">
            <summary>
            已使用的图片空间容量
            </summary>
        </member>
        <member name="P:Top.Api.Domain.UserInfo.WaterMark">
            <summary>
            用户自定义的水印参数，通过"|"分割开，如果用户没有定义则为""  具体水印参数组合方法，用"|"分开，顺序按"是否全局设置|水印文字|是否文字水印优先|透明度|字体|字体大小|字体是否加粗|字体是否斜体|字体是否加下划线|字体颜色|旋转角度|是否带阴影|水印位置|图片水印URL|reference水印相对位置" reference取值有左上（1）/中间（3）/右下（2）,其中的null代表为空
            </summary>
        </member>
        <member name="T:Top.Api.Domain.MsPayment">
            <summary>
            MsPayment Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.MsPayment.Price">
            <summary>
            订金
            </summary>
        </member>
        <member name="P:Top.Api.Domain.MsPayment.ReferencePrice">
            <summary>
            参考价
            </summary>
        </member>
        <member name="P:Top.Api.Domain.MsPayment.VoucherPrice">
            <summary>
            尾款可抵扣金额
            </summary>
        </member>
        <member name="T:Top.Api.Domain.KeywordPage">
            <summary>
            KeywordPage Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.KeywordPage.KeywordList">
            <summary>
            关键词列表
            </summary>
        </member>
        <member name="P:Top.Api.Domain.KeywordPage.PageNo">
            <summary>
            返回第几页的数据从1开始
            </summary>
        </member>
        <member name="P:Top.Api.Domain.KeywordPage.PageSize">
            <summary>
            每页数据大小
            </summary>
        </member>
        <member name="P:Top.Api.Domain.KeywordPage.TotalItem">
            <summary>
            所查询的数据总数，只有当返回第一页数据时有值，当要求返回的数据非第一页时，此返回值无效
            </summary>
        </member>
        <member name="T:Top.Api.Domain.FavoriteShop">
            <summary>
            FavoriteShop Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FavoriteShop.Rate">
            <summary>
            店铺卖家信用
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FavoriteShop.SellerId">
            <summary>
            卖家ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FavoriteShop.SellerNick">
            <summary>
            卖家昵称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FavoriteShop.ShopId">
            <summary>
            店铺ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FavoriteShop.ShopName">
            <summary>
            店铺ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FavoriteShop.ShopPic">
            <summary>
            店铺LOGO图片
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FavoriteShop.ShopUrl">
            <summary>
            店铺首页链接
            </summary>
        </member>
        <member name="T:Top.Api.Domain.ProductPropImg">
            <summary>
            ProductPropImg Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ProductPropImg.Created">
            <summary>
            添加时间.格式:yyyy-mm-dd hh:mm:ss
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ProductPropImg.Id">
            <summary>
            产品属性图片ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ProductPropImg.Modified">
            <summary>
            修改时间.格式:yyyy-mm-dd hh:mm:ss
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ProductPropImg.Position">
            <summary>
            图片序号。产品里的图片展示顺序，数据越小越靠前。要求是正整数。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ProductPropImg.ProductId">
            <summary>
            图片所属产品的ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ProductPropImg.Props">
            <summary>
            属性串(pid:vid),目前只有颜色属性.如:颜色:红色表示为　1627207:28326
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ProductPropImg.Url">
            <summary>
            图片地址.(绝对地址,格式:http://host/image_path)
            </summary>
        </member>
        <member name="T:Top.Api.Util.TopUtils">
            <summary>
            TOP系统工具类。
            </summary>
        </member>
        <member name="M:Top.Api.Util.TopUtils.SignTopRequest(System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String)">
            <summary>
            给TOP请求签名。
            </summary>
            <param name="parameters">所有字符型的TOP请求参数</param>
            <param name="secret">签名密钥</param>
            <param name="signMethod">签名方法，可选值：md5, hmac</param>
            <returns>签名</returns>
        </member>
        <member name="M:Top.Api.Util.TopUtils.SignTopRequest(System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.String)">
            <summary>
            给TOP请求签名。
            </summary>
            <param name="parameters">所有字符型的TOP请求参数</param>
            <param name="body">请求主体内容</param>
            <param name="secret">签名密钥</param>
            <param name="signMethod">签名方法，可选值：md5, hmac</param>
            <returns>签名</returns>
        </member>
        <member name="M:Top.Api.Util.TopUtils.CleanupDictionary``1(System.Collections.Generic.IDictionary{System.String,``0})">
            <summary>
            清除字典中值为空的项。
            </summary>
            <param name="dict">待清除的字典</param>
            <returns>清除后的字典</returns>
        </member>
        <member name="M:Top.Api.Util.TopUtils.ObjectToJson(System.Object)">
            <summary>
            把对象转换为JSON字符串。
            </summary>
        </member>
        <member name="M:Top.Api.Util.TopUtils.JsonToObject(System.String)">
            <summary>
            把JSON字符串转换为对象。
            </summary>
        </member>
        <member name="M:Top.Api.Util.TopUtils.ParseResponse``1(System.String)">
            <summary>
            把JSON解释为API响应对象。
            </summary>
            <typeparam name="T">API响应类型</typeparam>
            <param name="json">JSON字符串</param>
            <returns>API响应对象</returns>
        </member>
        <member name="M:Top.Api.Util.TopUtils.GetCurrentTimeMillis">
            <summary>
            获取从1970年1月1日到现在的毫秒总数。
            </summary>
            <returns>毫秒数</returns>
        </member>
        <member name="M:Top.Api.Util.TopUtils.GetIntranetIp">
            <summary>
            获取本机的局域网IP。
            </summary>
        </member>
        <member name="T:Top.Api.Util.AtsUtils">
            <summary>
            异步API下载工具类。
            </summary>
        </member>
        <member name="M:Top.Api.Util.AtsUtils.Download(System.String,System.String)">
            <summary>
            通过HTTP GET方式下载文件到指定的目录。
            </summary>
            <param name="url">需要下载的URL</param>
            <param name="destDir">需要下载到的目录</param>
            <returns>下载后的文件</returns>
        </member>
        <member name="M:Top.Api.Util.AtsUtils.Ungzip(System.String,System.String)">
            <summary>
            解压gzip文件到指定的目录，目前只能解压gzip包里面只包含一个文件的压缩包。
            </summary>
            <param name="gzipFile">需要解压的gzip文件</param>
            <param name="destDir">需要解压到的目录（不能和压缩文件在同一个目录）</param>
            <returns>解压后的文件</returns>
        </member>
        <member name="M:Top.Api.Util.AtsUtils.Unzip(System.String,System.String)">
            <summary>
            解压zip文件到指定的目录。
            </summary>
            <param name="zipFile">需要解压的zip文件</param>
            <param name="destDir">需要解压到的目录</param>
            <returns>解压后的文件列表（不包含文件夹）</returns>
        </member>
        <member name="M:Top.Api.Util.AtsUtils.CheckMd5sum(System.String,System.String)">
            <summary>
            检查指定文件的md5sum和指定的检验码是否一致。
            </summary>
            <param name="fileName">需要检验的文件</param>
            <param name="checkCode">已知的md5sum检验码</param>
            <returns>true/false</returns>
        </member>
        <member name="T:Top.Api.Util.CheckResult">
            <summary>
            SPI请求校验结果。
            </summary>
        </member>
        <member name="T:Top.Api.Util.SpiUtils">
            <summary>
            SPI服务提供方工具类。
            </summary>
        </member>
        <member name="M:Top.Api.Util.SpiUtils.CheckSign(System.Web.HttpRequest,System.String)">
            <summary>
            校验SPI请求签名，不支持带上传文件的HTTP请求。
            </summary>
            <param name="request">HttpRequest对象实例</param>
            <param name="secret">APP密钥</param>
            <returns>校验结果</returns>
        </member>
        <member name="M:Top.Api.Util.SpiUtils.CheckSign4FormRequest(System.Web.HttpRequest,System.String)">
            <summary>
            校验SPI请求签名，适用于Content-Type为application/x-www-form-urlencoded或multipart/form-data的GET或POST请求。
            </summary>
            <param name="request">请求对象</param>
            <param name="secret">app对应的secret</param>
            <returns>true：校验通过；false：校验不通过</returns>
        </member>
        <member name="M:Top.Api.Util.SpiUtils.CheckSign4TextRequest(System.Web.HttpRequest,System.String,System.String)">
            <summary>
            校验SPI请求签名，适用于Content-Type为text/xml或text/json的POST请求。
            </summary>
            <param name="request">请求对象</param>
            <param name="body">请求体的文本内容</param>
            <param name="secret">app对应的secret</param>
            <returns>true：校验通过；false：校验不通过</returns>
        </member>
        <member name="M:Top.Api.Util.SpiUtils.Sign(System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.String)">
            <summary>
            签名规则：hex(md5(secret+sorted(header_params+url_params+form_params)+body)+secret)
            </summary>
        </member>
        <member name="M:Top.Api.Util.SpiUtils.CheckTimestamp(System.Web.HttpRequest,System.Int32)">
            <summary>
            检查SPI请求到达服务器端是否已经超过指定的分钟数，如果超过则拒绝请求。
            </summary>
            <returns>true代表不超过，false代表超过。</returns>
        </member>
        <member name="M:Top.Api.Util.SpiUtils.CheckRemoteIp(System.Web.HttpRequest,System.Collections.Generic.List{System.String})">
            <summary>
            检查发起SPI请求的来源IP是否是TOP机房的出口IP。
            </summary>
            <param name="request">HTTP请求对象</param>
            <param name="topIpList">TOP网关IP出口地址段列表，通过taobao.top.ipout.get获得</param>
            <returns>true表达IP来源合法，false代表IP来源不合法</returns>
        </member>
        <member name="T:Top.Api.Util.AtsUtilsStone">
            <summary>
            异步API下载工具类。
            </summary>
        </member>
        <member name="M:Top.Api.Util.AtsUtilsStone.Download(System.String,System.String,System.String@,System.Int64@,System.Int64@)">
            <summary>
            通过HTTP GET方式下载文件到指定的目录。
            </summary>
            <param name="url">需要下载的URL</param>
            <param name="destDir">需要下载到的目录</param>
            <param name="statusNow">显示下载状态</param>
            <param name="percentage">下载百分比</param>
            <param name="percentageMax">下载百分比最大值</param>
            <returns>下载后的文件</returns>
        </member>
        <member name="M:Top.Api.Util.AtsUtilsStone.Ungzip(System.String,System.String)">
            <summary>
            解压gzip文件到指定的目录，目前只能解压gzip包里面只包含一个文件的压缩包。
            </summary>
            <param name="gzipFile">需要解压的gzip文件</param>
            <param name="destDir">需要解压到的目录（不能和压缩文件在同一个目录）</param>
            <returns>解压后的文件</returns>
        </member>
        <member name="M:Top.Api.Util.AtsUtilsStone.Unzip(System.String,System.String)">
            <summary>
            解压zip文件到指定的目录。
            </summary>
            <param name="zipFile">需要解压的zip文件</param>
            <param name="destDir">需要解压到的目录</param>
            <returns>解压后的文件列表（不包含文件夹）</returns>
        </member>
        <member name="M:Top.Api.Util.AtsUtilsStone.CheckMd5sum(System.String,System.String)">
            <summary>
            检查指定文件的md5sum和指定的检验码是否一致。
            </summary>
            <param name="fileName">需要检验的文件</param>
            <param name="checkCode">已知的md5sum检验码</param>
            <returns>true/false</returns>
        </member>
        <member name="T:Top.Tmc.Message">
            <summary>
            消息服务-通用消息结构。
            </summary>
        </member>
        <member name="P:Top.Tmc.Message.Id">
            <summary>消息标识</summary>
        </member>
        <member name="P:Top.Tmc.Message.Topic">
            <summary>主题</summary>
        </member>
        <member name="P:Top.Tmc.Message.PubAppKey">
            <summary>发布者标识</summary>
        </member>
        <member name="P:Top.Tmc.Message.PubTime">
            <summary>发布时间</summary>
        </member>
        <member name="P:Top.Tmc.Message.OutgoingTime">
            <summary>从服务器发送时间</summary>
        </member>
        <member name="P:Top.Tmc.Message.UserId">
            <summary>消息所属的用户ID，若不是用户相关消息则为空</summary>
        </member>
        <member name="P:Top.Tmc.Message.UserNick">
            <summary>消息所属的用户昵称，若不是用户相关消息则为空</summary>
        </member>
        <member name="P:Top.Tmc.Message.Content">
            <summary>消息的业务具体内容（JSON结构）</summary>
        </member>
        <member name="M:Top.Tmc.MessageArgs.Fail">
            <summary>将当前消息处理设置为失败，若该消息启用了重试，失败的消息将会再指定时间内重新发送
            </summary>
        </member>
        <member name="M:Top.Tmc.MessageArgs.Fail(System.String)">
            <summary>将当前消息处理设置为失败，若该消息启用了重试，失败的消息将会再指定时间内重新发送
            <param name="reason">指定失败原因</param>
            </summary>
        </member>
        <member name="M:Top.Tmc.MessageArgs.Confirm">
            <summary>
            对当前消息进行确认
            </summary>
        </member>
        <member name="P:Top.Tmc.MessageArgs.Message">
            <summary>获取消息
            </summary>
        </member>
        <member name="T:Aliyun.Api.Parser.AliyunJsonParser">
            <summary>
            TOP JSON响应通用解释器。
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerDmpCrowdApplyResponse">
            <summary>
            ZuanshiBannerDmpCrowdApplyResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerDmpCrowdApplyResponse.Message">
            <summary>
            message
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerDmpCrowdApplyResponse.Result">
            <summary>
            调用是否成功,true-成功，false-失败
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerCampaignModifyResponse">
            <summary>
            ZuanshiBannerCampaignModifyResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCampaignModifyResponse.Result">
            <summary>
            返回结果
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerCampaignModifyResponse.ResultDTODomain">
            <summary>
            ResultDTODomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCampaignModifyResponse.ResultDTODomain.Message">
            <summary>
            返回信息
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCampaignModifyResponse.ResultDTODomain.Success">
            <summary>
            调用是否成功
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerAdgroupModifyResponse">
            <summary>
            ZuanshiBannerAdgroupModifyResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdgroupModifyResponse.Result">
            <summary>
            返回结果
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerAdgroupModifyResponse.ResultDTODomain">
            <summary>
            ResultDTODomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdgroupModifyResponse.ResultDTODomain.Message">
            <summary>
            返回消息
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdgroupModifyResponse.ResultDTODomain.Success">
            <summary>
            是否成功
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAdvertiserTransRptsDownloadResponse">
            <summary>
            ZuanshiAdvertiserTransRptsDownloadResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTransRptsDownloadResponse.TaskId">
            <summary>
            生成的任务id标识，用于轮询任务状态
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAdvertiserCampaignRptsTotalGetResponse">
            <summary>
            ZuanshiAdvertiserCampaignRptsTotalGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCampaignRptsTotalGetResponse.CampaignOfflineRptTotalList">
            <summary>
            查询结果
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAdvertiserCampaignRptsTotalGetResponse.DataDomain">
            <summary>
            DataDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCampaignRptsTotalGetResponse.DataDomain.AdPv">
            <summary>
            展现数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCampaignRptsTotalGetResponse.DataDomain.AlipayInShopNum">
            <summary>
            成交量
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCampaignRptsTotalGetResponse.DataDomain.AlipayInshopAmt">
            <summary>
            成交额
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCampaignRptsTotalGetResponse.DataDomain.AvgAccessPageNum">
            <summary>
            平均访问页面数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCampaignRptsTotalGetResponse.DataDomain.AvgAccessTime">
            <summary>
            平均访问时长
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCampaignRptsTotalGetResponse.DataDomain.CampaignId">
            <summary>
            计划id
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCampaignRptsTotalGetResponse.DataDomain.CampaignName">
            <summary>
            计划名称
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCampaignRptsTotalGetResponse.DataDomain.CartNum">
            <summary>
            加购物车数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCampaignRptsTotalGetResponse.DataDomain.Charge">
            <summary>
            花费
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCampaignRptsTotalGetResponse.DataDomain.Click">
            <summary>
            点击数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCampaignRptsTotalGetResponse.DataDomain.Ctr">
            <summary>
            ctr
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCampaignRptsTotalGetResponse.DataDomain.Cvr">
            <summary>
            cvr
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCampaignRptsTotalGetResponse.DataDomain.DeepInshopUv">
            <summary>
            深度进店访客
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCampaignRptsTotalGetResponse.DataDomain.DirShopColNum">
            <summary>
            店铺收藏数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCampaignRptsTotalGetResponse.DataDomain.Ecpc">
            <summary>
            ecpc
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCampaignRptsTotalGetResponse.DataDomain.Ecpm">
            <summary>
            ecpm
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCampaignRptsTotalGetResponse.DataDomain.GmvInshopAmt">
            <summary>
            gmv成交额
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCampaignRptsTotalGetResponse.DataDomain.GmvInshopNum">
            <summary>
            gmv成交量
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCampaignRptsTotalGetResponse.DataDomain.InshopItemColNum">
            <summary>
            宝贝收藏数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCampaignRptsTotalGetResponse.DataDomain.Roi">
            <summary>
            投入产出比
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCampaignRptsTotalGetResponse.DataDomain.Uv">
            <summary>
            uv
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAdvertiserCampaignRptsDayGetResponse">
            <summary>
            ZuanshiAdvertiserCampaignRptsDayGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCampaignRptsDayGetResponse.CampaignOfflineRptDaysList">
            <summary>
            结果
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAdvertiserCampaignRptsDayGetResponse.DataDomain">
            <summary>
            DataDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCampaignRptsDayGetResponse.DataDomain.AdPv">
            <summary>
            展现量
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCampaignRptsDayGetResponse.DataDomain.AlipayInShopNum">
            <summary>
            成交量
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCampaignRptsDayGetResponse.DataDomain.AlipayInshopAmt">
            <summary>
            成交额
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCampaignRptsDayGetResponse.DataDomain.AvgAccessPageNum">
            <summary>
            平均访问页面数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCampaignRptsDayGetResponse.DataDomain.AvgAccessTime">
            <summary>
            平均访问时长
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCampaignRptsDayGetResponse.DataDomain.CampaignId">
            <summary>
            计划id
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCampaignRptsDayGetResponse.DataDomain.CampaignName">
            <summary>
            计划名称
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCampaignRptsDayGetResponse.DataDomain.CartNum">
            <summary>
            加购物车数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCampaignRptsDayGetResponse.DataDomain.Charge">
            <summary>
            花费
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCampaignRptsDayGetResponse.DataDomain.Click">
            <summary>
            点击量
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCampaignRptsDayGetResponse.DataDomain.Ctr">
            <summary>
            ctr
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCampaignRptsDayGetResponse.DataDomain.Cvr">
            <summary>
            cvr
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCampaignRptsDayGetResponse.DataDomain.DeepInshopUv">
            <summary>
            深度进店uv
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCampaignRptsDayGetResponse.DataDomain.DirShopColNum">
            <summary>
            店铺加收藏数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCampaignRptsDayGetResponse.DataDomain.Ecpc">
            <summary>
            ecpc
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCampaignRptsDayGetResponse.DataDomain.Ecpm">
            <summary>
            ecpm
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCampaignRptsDayGetResponse.DataDomain.GmvInshopAmt">
            <summary>
            gmv成交额
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCampaignRptsDayGetResponse.DataDomain.GmvInshopNum">
            <summary>
            gmv成交量
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCampaignRptsDayGetResponse.DataDomain.InshopItemColNum">
            <summary>
            宝贝加收藏数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCampaignRptsDayGetResponse.DataDomain.LogDate">
            <summary>
            日期
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCampaignRptsDayGetResponse.DataDomain.Roi">
            <summary>
            投入产出比
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCampaignRptsDayGetResponse.DataDomain.Uv">
            <summary>
            uv
            </summary>
        </member>
        <member name="T:Top.Api.Response.OpenimUserserviceGetResponse">
            <summary>
            OpenimUserserviceGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.OpenimUserserviceGetResponse.Result">
            <summary>
            根据站点名称查询产品
            </summary>
        </member>
        <member name="T:Top.Api.Response.OpenimUserserviceGetResponse.ApiResultDomain">
            <summary>
            ApiResultDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.OpenimUserserviceGetResponse.ApiResultDomain.Code">
            <summary>
            执行成功
            </summary>
        </member>
        <!-- 对于成员“P:Top.Api.Response.OpenimUserserviceGetResponse.ApiResultDomain.Data”忽略有格式错误的 XML 注释 -->
        <member name="P:Top.Api.Response.OpenimUserserviceGetResponse.ApiResultDomain.ErrorMsg">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="T:Top.Api.Response.ItemSchemaAddResponse">
            <summary>
            ItemSchemaAddResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ItemSchemaAddResponse.AddResult">
            <summary>
            返回的结果
            </summary>
        </member>
        <member name="T:Top.Api.Response.InventoryWarehouseManageResponse">
            <summary>
            InventoryWarehouseManageResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.InventoryWarehouseManageResponse.Result">
            <summary>
            result
            </summary>
        </member>
        <member name="T:Top.Api.Response.InventoryWarehouseManageResponse.ResultDomain">
            <summary>
            ResultDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.InventoryWarehouseManageResponse.ResultDomain.Data">
            <summary>
            data
            </summary>
        </member>
        <member name="P:Top.Api.Response.InventoryWarehouseManageResponse.ResultDomain.ErrorCode">
            <summary>
            errorCode
            </summary>
        </member>
        <member name="P:Top.Api.Response.InventoryWarehouseManageResponse.ResultDomain.ErrorMsg">
            <summary>
            errorMsg
            </summary>
        </member>
        <member name="P:Top.Api.Response.InventoryWarehouseManageResponse.ResultDomain.Success">
            <summary>
            success
            </summary>
        </member>
        <member name="T:Top.Api.Response.FenxiaoGradeAddResponse">
            <summary>
            FenxiaoGradeAddResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoGradeAddResponse.GradeId">
            <summary>
            等级ID
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoGradeAddResponse.IsSuccess">
            <summary>
            操作是否成功
            </summary>
        </member>
        <member name="T:Top.Api.Response.FenxiaoDealerRequisitionorderGetResponse">
            <summary>
            FenxiaoDealerRequisitionorderGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoDealerRequisitionorderGetResponse.DealerOrders">
            <summary>
            采购申请/经销采购单结果列表
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoDealerRequisitionorderGetResponse.TotalResults">
            <summary>
            按查询条件查到的记录总数
            </summary>
        </member>
        <member name="T:Top.Api.Response.FenxiaoCooperationGetResponse">
            <summary>
            FenxiaoCooperationGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoCooperationGetResponse.Cooperations">
            <summary>
            合作分销关系
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoCooperationGetResponse.TotalResults">
            <summary>
            结果记录数
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiBannerCatelabelFindRequest">
            <summary>
            TOP API: taobao.zuanshi.banner.catelabel.find
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiBannerAdgroupAdzoneUnbindRequest">
            <summary>
            TOP API: taobao.zuanshi.banner.adgroup.adzone.unbind
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerAdgroupAdzoneUnbindRequest.AdgroupId">
            <summary>
            推广单元id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerAdgroupAdzoneUnbindRequest.AdzoneIdList">
            <summary>
            解绑广告位id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerAdgroupAdzoneUnbindRequest.CampaignId">
            <summary>
            推广计划id
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiAdvertiserAdzoneRptsDownloadRequest">
            <summary>
            TOP API: taobao.zuanshi.advertiser.adzone.rpts.download
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAdzoneRptsDownloadRequest.EndTime">
            <summary>
            查询结束时间
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAdzoneRptsDownloadRequest.RptType">
            <summary>
            计划类型，1代表展示网络，3代表视频网络
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAdzoneRptsDownloadRequest.StartTime">
            <summary>
            查询开始时间
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiAdvertiserAdgroupRtrptsGetRequest">
            <summary>
            TOP API: taobao.zuanshi.advertiser.adgroup.rtrpts.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAdgroupRtrptsGetRequest.AdgroupId">
            <summary>
            推广单元id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAdgroupRtrptsGetRequest.CampaignId">
            <summary>
            计划id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAdgroupRtrptsGetRequest.CampaignModel">
            <summary>
            计划类型。1：全店推广，4：单品推广。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAdgroupRtrptsGetRequest.LogDate">
            <summary>
            查询日期
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiAdvertiserAdgroupRptsDayGetRequest">
            <summary>
            TOP API: taobao.zuanshi.advertiser.adgroup.rpts.day.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAdgroupRptsDayGetRequest.AdgroupId">
            <summary>
            单元id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAdgroupRptsDayGetRequest.CampaignId">
            <summary>
            计划id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAdgroupRptsDayGetRequest.CampaignModel">
            <summary>
            计划类型。1：全店推广；4单品推广
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAdgroupRptsDayGetRequest.Effect">
            <summary>
            效果周期，取值范围：3,7,15。分别表示效果转化周期-3天/7天/15天。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAdgroupRptsDayGetRequest.EffectType">
            <summary>
            效果类型。“impression”：展现效果；“click”：点击效果
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAdgroupRptsDayGetRequest.EndTime">
            <summary>
            结束日期
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAdgroupRptsDayGetRequest.StartTime">
            <summary>
            开始日期
            </summary>
        </member>
        <member name="T:Top.Api.Request.ScitemGetRequest">
            <summary>
            TOP API: taobao.scitem.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.ScitemGetRequest.ItemId">
            <summary>
            商品id
            </summary>
        </member>
        <member name="T:Top.Api.Request.RegionWarehouseManageRequest">
            <summary>
            TOP API: taobao.region.warehouse.manage
            </summary>
        </member>
        <member name="P:Top.Api.Request.RegionWarehouseManageRequest.Regions">
            <summary>
            可映射三级地址,例: 广东省
            </summary>
        </member>
        <member name="P:Top.Api.Request.RegionWarehouseManageRequest.StoreCode">
            <summary>
            仓库编码
            </summary>
        </member>
        <member name="T:Top.Api.Request.ItemAddSchemaGetRequest">
            <summary>
            TOP API: taobao.item.add.schema.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemAddSchemaGetRequest.CategoryId">
            <summary>
            发布宝贝的叶子类目id
            </summary>
        </member>
        <member name="T:Top.Api.Request.FenxiaoRefundUpdateRequest">
            <summary>
            TOP API: taobao.fenxiao.refund.update
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoRefundUpdateRequest.IsReturnGoods">
            <summary>
            是否退货，只有子采购单发货后，才能申请退货
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoRefundUpdateRequest.RefundDesc">
            <summary>
            退款说明
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoRefundUpdateRequest.RefundReasonId">
            <summary>
            发货前：  1、缺货，2、拍错商品，3、商品缺少所需样式，4、协商一致退款，5、未及时发货，0、其它  发货后：  经销：  1、商品质量问题，2、收到的商品不符，3、协商一致退款，4、一直未收到货，5、退还多付邮费，6、折扣、赠品、发票等问题，0、其它  代销：  1、商品质量问题，2、收到的商品不符，3、协商一致退款，4、买家一直未收到货，5、退还多付邮费，6、折扣、赠品、发票等问题，0、其它
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoRefundUpdateRequest.ReturnFee">
            <summary>
            需要退款的金额
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoRefundUpdateRequest.SubOrderId">
            <summary>
            需要修改退款的子采购单id
            </summary>
        </member>
        <member name="T:Top.Api.Request.FenxiaoProductGradepriceUpdateRequest">
            <summary>
            TOP API: taobao.fenxiao.product.gradeprice.update
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductGradepriceUpdateRequest.Ids">
            <summary>
            会员等级的id或者分销商id，例如：”1001,2001,1002”
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductGradepriceUpdateRequest.Prices">
            <summary>
            优惠价格,大小为0到100000000之间的整数或两位小数，例：优惠价格为：100元2角5分，传入的参数应写成：100.25
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductGradepriceUpdateRequest.ProductId">
            <summary>
            产品Id
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductGradepriceUpdateRequest.SkuId">
            <summary>
            skuId，如果产品有skuId,必须要输入skuId;没有skuId的时候不必选
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductGradepriceUpdateRequest.TargetType">
            <summary>
            选择折扣方式：GRADE（按等级进行设置）;DISCITUTOR(按分销商进行设置）。例如"GRADE,DISTRIBUTOR"
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductGradepriceUpdateRequest.TradeType">
            <summary>
            交易类型： AGENT(代销)、DEALER(经销)，ALL(代销和经销)
            </summary>
        </member>
        <member name="T:Top.Api.Request.FenxiaoLoginUserGetRequest">
            <summary>
            TOP API: taobao.fenxiao.login.user.get
            </summary>
        </member>
        <member name="T:Top.Api.Request.FenxiaoDistributorProductsGetRequest">
            <summary>
            TOP API: taobao.fenxiao.distributor.products.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoDistributorProductsGetRequest.EndTime">
            <summary>
            结束时间
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoDistributorProductsGetRequest.Fields">
            <summary>
            指定查询额外的信息，可选值：skus（sku数据）、images（多图），多个可选值用逗号分割。
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoDistributorProductsGetRequest.ItemIds">
            <summary>
            根据商品ID列表查询，优先级次于产品ID列表，高于其他分页查询条件。如果商品不是分销商品，自动过滤。最大限制20，用逗号分割，例如：“1001,1002,1003,1004,1005”
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoDistributorProductsGetRequest.PageNo">
            <summary>
            页码（大于0的整数，默认1）
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoDistributorProductsGetRequest.PageSize">
            <summary>
            每页记录数（默认20，最大50）
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoDistributorProductsGetRequest.Pids">
            <summary>
            产品ID列表（最大限制30），用逗号分割，例如：“1001,1002,1003,1004,1005”
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoDistributorProductsGetRequest.ProductcatId">
            <summary>
            产品线ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoDistributorProductsGetRequest.StartTime">
            <summary>
            开始修改时间
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoDistributorProductsGetRequest.SupplierNick">
            <summary>
            供应商nick，分页查询时，必传
            </summary>
        </member>
        <member name="T:Top.Api.Request.FenxiaoDealerRequisitionorderRemarkUpdateRequest">
            <summary>
            TOP API: taobao.fenxiao.dealer.requisitionorder.remark.update
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoDealerRequisitionorderRemarkUpdateRequest.DealerOrderId">
            <summary>
            经销采购单ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoDealerRequisitionorderRemarkUpdateRequest.SupplierMemo">
            <summary>
            备注留言，可为空
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoDealerRequisitionorderRemarkUpdateRequest.SupplierMemoFlag">
            <summary>
            旗子的标记，必选。  1-5之间的数字。  非1-5之间，都采用1作为默认。  1:红色  2:黄色  3:绿色  4:蓝色  5:粉红色
            </summary>
        </member>
        <member name="T:Top.Api.Request.FenxiaoCooperationGetRequest">
            <summary>
            TOP API: taobao.fenxiao.cooperation.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoCooperationGetRequest.EndDate">
            <summary>
            合作结束时间yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoCooperationGetRequest.PageNo">
            <summary>
            页码（大于0的整数，默认1）
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoCooperationGetRequest.PageSize">
            <summary>
            每页记录数（默认20，最大50）
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoCooperationGetRequest.StartDate">
            <summary>
            合作开始时间yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoCooperationGetRequest.Status">
            <summary>
            合作状态： NORMAL(合作中)、 ENDING(终止中) 、END (终止)
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoCooperationGetRequest.TradeType">
            <summary>
            分销方式：AGENT(代销) 、DEALER（经销）
            </summary>
        </member>
        <member name="T:Taobao.Top.Link.Channel.ChannelContext">
            <summary>context used with channel event
            </summary>
        </member>
        <member name="M:Taobao.Top.Link.Channel.ChannelContext.Reply(System.Byte[])">
            <summary>
            send data to channel where the message come from
            </summary>
            <param name="data"></param>
        </member>
        <member name="P:Taobao.Top.Link.Channel.ChannelContext.Error">
            <summary>error from channel
            </summary>
        </member>
        <member name="P:Taobao.Top.Link.Channel.ChannelContext.Sender">
            <summary>the channel used to sending message
            </summary>
        </member>
        <member name="P:Taobao.Top.Link.Channel.ChannelContext.Message">
            <summary>received message
            </summary>
        </member>
        <member name="M:Taobao.Top.Link.Endpoints.Endpoint.GetEndpoint(Taobao.Top.Link.Endpoints.Identity)">
            <summary>get connected endpoint by id
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:Taobao.Top.Link.Endpoints.Endpoint.GetEndpoint(Taobao.Top.Link.Endpoints.Identity,System.String)">
            <summary>connect endpoint
            </summary>
            <param name="target">target id</param>
            <param name="uri">target address</param>
            <returns></returns>
        </member>
        <member name="M:Taobao.Top.Link.Endpoints.Endpoint.GetEndpoint(Taobao.Top.Link.Endpoints.Identity,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>connect endpoint
            </summary>
            <param name="target">target id</param>
            <param name="uri">target address</param>
            <param name="extras">passed as connect message</param>
            <returns></returns>
        </member>
        <member name="P:Taobao.Top.Link.Endpoints.Endpoint.ChannelSelector">
            <summary>get or set clientChannelSelector
            </summary>
        </member>
        <member name="E:Taobao.Top.Link.Endpoints.Endpoint.OnMessage">
            <summary>message received, see RTT based
            </summary>
        </member>
        <member name="E:Taobao.Top.Link.Endpoints.Endpoint.OnAckMessage">
            <summary>ack message received, see RTT based
            </summary>
        </member>
        <member name="P:Taobao.Top.Link.Endpoints.Endpoint.Identity">
            <summary>get id
            </summary>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Core.NameFilter">
            <summary>
            NameFilter is a string matching class which allows for both positive and negative
            matching.
            A filter is a sequence of independant <see cref="T:System.Text.RegularExpressions.Regex">regular expressions</see> separated by semi-colons ';'.
            To include a semi-colon it may be quoted as in \;. Each expression can be prefixed by a plus '+' sign or
            a minus '-' sign to denote the expression is intended to include or exclude names.
            If neither a plus or minus sign is found include is the default.
            A given name is tested for inclusion before checking exclusions.  Only names matching an include spec 
            and not matching an exclude spec are deemed to match the filter.
            An empty filter matches any name.
            </summary>
            <example>The following expression includes all name ending in '.dat' with the exception of 'dummy.dat'
            "+\.dat$;-^dummy\.dat$"
            </example>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Core.NameFilter.#ctor(System.String)">
            <summary>
            Construct an instance based on the filter expression passed
            </summary>
            <param name="filter">The filter expression.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Core.NameFilter.IsValidExpression(System.String)">
            <summary>
            Test a string to see if it is a valid regular expression.
            </summary>
            <param name="expression">The expression to test.</param>
            <returns>True if expression is a valid <see cref="T:System.Text.RegularExpressions.Regex"/> false otherwise.</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Core.NameFilter.IsValidFilterExpression(System.String)">
            <summary>
            Test an expression to see if it is valid as a filter.
            </summary>
            <param name="toTest">The filter expression to test.</param>
            <returns>True if the expression is valid, false otherwise.</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Core.NameFilter.SplitQuoted(System.String)">
            <summary>
            Split a string into its component pieces
            </summary>
            <param name="original">The original string</param>
            <returns>Returns an array of <see cref="T:System.String"/> values containing the individual filter elements.</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Core.NameFilter.ToString">
            <summary>
            Convert this filter to its string equivalent.
            </summary>
            <returns>The string equivalent for this filter.</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Core.NameFilter.IsIncluded(System.String)">
            <summary>
            Test a value to see if it is included by the filter.
            </summary>
            <param name="name">The value to test.</param>
            <returns>True if the value is included, false otherwise.</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Core.NameFilter.IsExcluded(System.String)">
            <summary>
            Test a value to see if it is excluded by the filter.
            </summary>
            <param name="name">The value to test.</param>
            <returns>True if the value is excluded, false otherwise.</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Core.NameFilter.IsMatch(System.String)">
            <summary>
            Test a value to see if it matches the filter.
            </summary>
            <param name="name">The value to test.</param>
            <returns>True if the value matches, false otherwise.</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Core.NameFilter.Compile">
            <summary>
            Compile this filter.
            </summary>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Zip.Compression.Streams.OutputWindow">
            <summary>
            Contains the output from the Inflation process.
            We need to have a window so that we can refer backwards into the output stream
            to repeat stuff.<br/>
            Author of the original java version : John Leuner
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Streams.OutputWindow.Write(System.Int32)">
            <summary>
            Write a byte to this output window
            </summary>
            <param name="value">value to write</param>
            <exception cref="T:System.InvalidOperationException">
            if window is full
            </exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Streams.OutputWindow.Repeat(System.Int32,System.Int32)">
            <summary>
            Append a byte pattern already in the window itself
            </summary>
            <param name="length">length of pattern to copy</param>
            <param name="distance">distance from end of window pattern occurs</param>
            <exception cref="T:System.InvalidOperationException">
            If the repeated data overflows the window
            </exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Streams.OutputWindow.CopyStored(ICSharpCode.SharpZipLib.Zip.Compression.Streams.StreamManipulator,System.Int32)">
            <summary>
            Copy from input manipulator to internal window
            </summary>
            <param name="input">source of data</param>
            <param name="length">length of data to copy</param>
            <returns>the number of bytes copied</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Streams.OutputWindow.CopyDict(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Copy dictionary to window
            </summary>
            <param name="dictionary">source dictionary</param>
            <param name="offset">offset of start in source dictionary</param>
            <param name="length">length of dictionary</param>
            <exception cref="T:System.InvalidOperationException">
            If window isnt empty
            </exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Streams.OutputWindow.GetFreeSpace">
            <summary>
            Get remaining unfilled space in window
            </summary>
            <returns>Number of bytes left in window</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Streams.OutputWindow.GetAvailable">
            <summary>
            Get bytes available for output in window
            </summary>
            <returns>Number of bytes filled</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Streams.OutputWindow.CopyOutput(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Copy contents of window to output
            </summary>
            <param name="output">buffer to copy to</param>
            <param name="offset">offset to start at</param>
            <param name="len">number of bytes to count</param>
            <returns>The number of bytes copied</returns>
            <exception cref="T:System.InvalidOperationException">
            If a window underflow occurs
            </exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.Streams.OutputWindow.Reset">
            <summary>
            Reset by clearing window so <see cref="M:ICSharpCode.SharpZipLib.Zip.Compression.Streams.OutputWindow.GetAvailable">GetAvailable</see> returns 0
            </summary>
        </member>
        <member name="T:Top.Api.Domain.Userinfos">
            <summary>
            Userinfos Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Userinfos.Address">
            <summary>
            地址，最大长度512
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Userinfos.Age">
            <summary>
            年龄
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Userinfos.Career">
            <summary>
            职位，最大长度128字节
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Userinfos.Email">
            <summary>
            email地址，最大长度128字节
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Userinfos.Extra">
            <summary>
            扩展字段（Json），最大长度4096字节
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Userinfos.Gender">
            <summary>
            性别。M: 男。 F：女
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Userinfos.GmtModified">
            <summary>
            最后更新时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Userinfos.IconUrl">
            <summary>
            头像url，最大长度512字节
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Userinfos.Mobile">
            <summary>
            手机号码，最大长度16字节
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Userinfos.Name">
            <summary>
            名字，最大长度64
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Userinfos.Nick">
            <summary>
            昵称，最大长度64字节
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Userinfos.Password">
            <summary>
            im密码，最大长度64字节
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Userinfos.Qq">
            <summary>
            qq，最大长度20字节
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Userinfos.Remark">
            <summary>
            remark，最大长度128字节
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Userinfos.Status">
            <summary>
            用户激活状态，0表示未激活，1表示激活
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Userinfos.Taobaoid">
            <summary>
            淘宝账号，最大长度64字节
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Userinfos.Userid">
            <summary>
            im用户名，最大长度64字节
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Userinfos.Vip">
            <summary>
            vip（Json），最大长度512字节
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Userinfos.Wechat">
            <summary>
            微信，最大长度64字节
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Userinfos.Weibo">
            <summary>
            微博，最大长度256字节
            </summary>
        </member>
        <member name="T:Top.Api.Domain.TribeUser">
            <summary>
            TribeUser Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TribeUser.AppKey">
            <summary>
            账户appkey
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TribeUser.Role">
            <summary>
            群成员角色
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TribeUser.TaobaoAccount">
            <summary>
            是否为淘宝账号
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TribeUser.Uid">
            <summary>
            用户id
            </summary>
        </member>
        <member name="T:Top.Api.Domain.TipInfo">
            <summary>
            TipInfo Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TipInfo.ErrorCode">
            <summary>
            错误码
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TipInfo.ErrroMessage">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TipInfo.Info">
            <summary>
            返回信息
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TipInfo.ScItemId">
            <summary>
            商品id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TipInfo.SubOrderId">
            <summary>
            子订单编号
            </summary>
        </member>
        <member name="T:Top.Api.Domain.Store">
            <summary>
            Store Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Store.Address">
            <summary>
            仓库的物理地址
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Store.AddressAreaName">
            <summary>
            仓库对应的淘宝区域
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Store.AliasName">
            <summary>
            仓库简称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Store.Contact">
            <summary>
            联系人
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Store.Phone">
            <summary>
            联系电话
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Store.PostCode">
            <summary>
            邮编
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Store.StoreCode">
            <summary>
            商家的仓库编码，不允许重复
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Store.StoreName">
            <summary>
            商家的仓库名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Store.StoreType">
            <summary>
            仓库类型
            </summary>
        </member>
        <member name="T:Top.Api.Domain.RoamingMessage">
            <summary>
            RoamingMessage Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RoamingMessage.ContentList">
            <summary>
            消息内容
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RoamingMessage.Direction">
            <summary>
            消息方向。user1 -> user2 = 0 , user2->user1 = 1
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RoamingMessage.Time">
            <summary>
            消息时间（UTC时间）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RoamingMessage.Type">
            <summary>
            消息类型
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RoamingMessage.Uuid">
            <summary>
            消息唯一ID
            </summary>
        </member>
        <member name="T:Top.Api.Domain.Cooperation">
            <summary>
            Cooperation Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Cooperation.AuthPayway">
            <summary>
            供应商授权的支付方式：ALIPAY(支付宝)、OFFPREPAY(预付款)、OFFTRANSFER(转帐)、OFFSETTLEMENT(后期结算)
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Cooperation.CooperateId">
            <summary>
            合作关系ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Cooperation.DistributorId">
            <summary>
            分销商ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Cooperation.DistributorNick">
            <summary>
            分销商nick
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Cooperation.EndDate">
            <summary>
            合作终止时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Cooperation.GradeId">
            <summary>
            等级ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Cooperation.ProductLine">
            <summary>
            授权产品线
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Cooperation.ProductLineName">
            <summary>
            授权产品线名称，和product_line中的值按序对应
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Cooperation.StartDate">
            <summary>
            合作起始时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Cooperation.Status">
            <summary>
            合作状态： NORMAL(合作中)、 ENDING(终止中) 、END (终止)
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Cooperation.SupplierId">
            <summary>
            供应商ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Cooperation.SupplierNick">
            <summary>
            供应商NICK
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Cooperation.TradeType">
            <summary>
            分销方式： AGENT(代销) 、DEALER(经销)
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaAdgroupUpdateResponse">
            <summary>
            SimbaAdgroupUpdateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaAdgroupUpdateResponse.Adgroup">
            <summary>
            被修改的推广组
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaInsightWordspricedataGetResponse">
            <summary>
            SimbaInsightWordspricedataGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaInsightWordspricedataGetResponse.WordPricedataList">
            <summary>
            竞价区间分布数据
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaInsightWordsareadataGetResponse">
            <summary>
            SimbaInsightWordsareadataGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaInsightWordsareadataGetResponse.WordAreadataList">
            <summary>
            地域细分数据
            </summary>
        </member>
        <member name="T:Top.Api.Response.SubuserFullinfoGetResponse">
            <summary>
            SubuserFullinfoGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SubuserFullinfoGetResponse.SubFullinfo">
            <summary>
            子账号详细信息，其中包括账号基本信息、员工信息和部门职务信息
            </summary>
        </member>
        <member name="T:Top.Api.Response.SkusQuantityUpdateResponse">
            <summary>
            SkusQuantityUpdateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SkusQuantityUpdateResponse.Item">
            <summary>
            iid、numIid、num和modified，skus中每个sku的skuId、quantity和modified
            </summary>
        </member>
        <member name="T:Top.Api.Response.LogisticsPartnersGetResponse">
            <summary>
            LogisticsPartnersGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.LogisticsPartnersGetResponse.LogisticsPartners">
            <summary>
            查询揽送范围之内的物流公司信息
            </summary>
        </member>
        <member name="T:Top.Api.Response.AppstoreSubscribeGetResponse">
            <summary>
            AppstoreSubscribeGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.AppstoreSubscribeGetResponse.UserSubscribe">
            <summary>
            用户订购信息
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaRtrptCreativeGetResponse">
            <summary>
            SimbaRtrptCreativeGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaRtrptCreativeGetResponse.Results">
            <summary>
            111
            </summary>
        </member>
        <member name="T:Top.Api.Response.SellercenterUserPermissionsGetResponse">
            <summary>
            SellercenterUserPermissionsGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SellercenterUserPermissionsGetResponse.Permissions">
            <summary>
            权限列表
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaCreativeidsChangedGetResponse">
            <summary>
            SimbaCreativeidsChangedGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaCreativeidsChangedGetResponse.ChangedCreativeIds">
            <summary>
            创意ID列表
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaKeywordsQscoreSplitGetResponse">
            <summary>
            SimbaKeywordsQscoreSplitGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaKeywordsQscoreSplitGetResponse.Result">
            <summary>
            result
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaKeywordsQscoreSplitGetResponse.WordscorelistDomain">
            <summary>
            WordscorelistDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaKeywordsQscoreSplitGetResponse.WordscorelistDomain.AdType">
            <summary>
            广告类型  单品： &quot;tbuad&quot;; 店铺： &quot;addp&quot;;
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaKeywordsQscoreSplitGetResponse.WordscorelistDomain.AdgroupId">
            <summary>
            推广组id
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaKeywordsQscoreSplitGetResponse.WordscorelistDomain.CampaignId">
            <summary>
            计划id
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaKeywordsQscoreSplitGetResponse.WordscorelistDomain.Catscore">
            <summary>
            类目质量得分
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaKeywordsQscoreSplitGetResponse.WordscorelistDomain.Creativescore">
            <summary>
            创意质量(创意效果)
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaKeywordsQscoreSplitGetResponse.WordscorelistDomain.CustomerId">
            <summary>
            客户id
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaKeywordsQscoreSplitGetResponse.WordscorelistDomain.Custscore">
            <summary>
            店铺质量(账户表现)
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaKeywordsQscoreSplitGetResponse.WordscorelistDomain.Cvrscore">
            <summary>
            点击转化率(买家体验)
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaKeywordsQscoreSplitGetResponse.WordscorelistDomain.KeywordId">
            <summary>
            词id
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaKeywordsQscoreSplitGetResponse.WordscorelistDomain.Kwscore">
            <summary>
            词相关性分数
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaKeywordsQscoreSplitGetResponse.WordscorelistDomain.MinPrice">
            <summary>
            最低展现出价
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaKeywordsQscoreSplitGetResponse.WordscorelistDomain.Nick">
            <summary>
            昵称
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaKeywordsQscoreSplitGetResponse.WordscorelistDomain.PcLeftFlag">
            <summary>
            词在pc端是否能首页推左(0:不能推左、1:可以推左)，此标记仅代表首页推左标
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaKeywordsQscoreSplitGetResponse.WordscorelistDomain.Plflag">
            <summary>
            词是否能推左
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaKeywordsQscoreSplitGetResponse.WordscorelistDomain.Pscore">
            <summary>
            属性得分
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaKeywordsQscoreSplitGetResponse.WordscorelistDomain.Qscore">
            <summary>
            PC质量得分（另外值为-1:所属的campaign没有该投放设备，且所属的adgroup有该投放设备的投放中的创意、-2:所属的campaign有该投放设备，且所属的adgroup没有该投放设备的投放中的创意、-3:所属的campaign没有该投放设备，且所属的adgroup没有该投放设备的投放中的创意）
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaKeywordsQscoreSplitGetResponse.WordscorelistDomain.Relescore">
            <summary>
            相关性，同kwscore
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaKeywordsQscoreSplitGetResponse.WordscorelistDomain.WirelessCreativescore">
            <summary>
            移动创意质量(创意效果)
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaKeywordsQscoreSplitGetResponse.WordscorelistDomain.WirelessCustscore">
            <summary>
            移动店铺质量(账户表现)
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaKeywordsQscoreSplitGetResponse.WordscorelistDomain.WirelessCvrscore">
            <summary>
            移动点击转化率(买家体验)
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaKeywordsQscoreSplitGetResponse.WordscorelistDomain.WirelessMatchflag">
            <summary>
            词是否有首屏展示机会。值含义(4: 有展现机会,且能上首屏 2: 有展示机会,上不了首屏、1: 无展现机会,更上不了首屏)
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaKeywordsQscoreSplitGetResponse.WordscorelistDomain.WirelessQscore">
            <summary>
            移动质量得分（另外值为-1:所属的campaign没有该投放设备，且所属的adgroup有该投放设备的投放中的创意、-2:所属的campaign有该投放设备，且所属的adgroup没有该投放设备的投放中的创意、-3:所属的campaign没有该投放设备，且所属的adgroup没有该投放设备的投放中的创意）
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaKeywordsQscoreSplitGetResponse.WordscorelistDomain.WirelessRelescore">
            <summary>
            移动相关性，同kwscore
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaKeywordsQscoreSplitGetResponse.WordscorelistDomain.Word">
            <summary>
            关键词
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaKeywordsQscoreSplitGetResponse.QScoreSplitDtoDomain">
            <summary>
            QScoreSplitDtoDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaKeywordsQscoreSplitGetResponse.QScoreSplitDtoDomain.AdgroupId">
            <summary>
            推广组id
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaKeywordsQscoreSplitGetResponse.QScoreSplitDtoDomain.CatMatchScore">
            <summary>
            类目质量得分
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaKeywordsQscoreSplitGetResponse.QScoreSplitDtoDomain.WordScoreList">
            <summary>
            关键词新质量得分列表，包含PC和移动的质量分
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaKeywordsQscoreSplitGetResponse.ResultDtoDomain">
            <summary>
            ResultDtoDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaKeywordsQscoreSplitGetResponse.ResultDtoDomain.Key">
            <summary>
            返回成功/错误码
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaKeywordsQscoreSplitGetResponse.ResultDtoDomain.Message">
            <summary>
            返回信息
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaKeywordsQscoreSplitGetResponse.ResultDtoDomain.Result">
            <summary>
            返回新质量分实体信息
            </summary>
        </member>
        <member name="T:Top.Api.Response.ItemsInventoryGetResponse">
            <summary>
            ItemsInventoryGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ItemsInventoryGetResponse.Items">
            <summary>
            搜索到底商品列表，具体字段根据设定的fields决定，不包括desc,stuff_status字段
            </summary>
        </member>
        <member name="P:Top.Api.Response.ItemsInventoryGetResponse.TotalResults">
            <summary>
            搜索到符合条件的结果总数
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaNonsearchAdgroupplacesDeleteResponse">
            <summary>
            SimbaNonsearchAdgroupplacesDeleteResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaNonsearchAdgroupplacesDeleteResponse.AdgroupPlaceList">
            <summary>
            推广组定向推广投放位置列表
            </summary>
        </member>
        <member name="T:Top.Api.Response.RefundMessageAddResponse">
            <summary>
            RefundMessageAddResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.RefundMessageAddResponse.RefundMessage">
            <summary>
            退款信息。包含id和created
            </summary>
        </member>
        <member name="T:Top.Api.Response.WangwangEserviceEvalsGetResponse">
            <summary>
            WangwangEserviceEvalsGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.WangwangEserviceEvalsGetResponse.ResultCode">
            <summary>
            0表示成功
            </summary>
        </member>
        <member name="P:Top.Api.Response.WangwangEserviceEvalsGetResponse.ResultCount">
            <summary>
            总条数
            </summary>
        </member>
        <member name="P:Top.Api.Response.WangwangEserviceEvalsGetResponse.StaffEvalDetails">
            <summary>
            评价具体数据
            </summary>
        </member>
        <member name="T:Top.Api.Response.DeliveryTemplateGetResponse">
            <summary>
            DeliveryTemplateGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.DeliveryTemplateGetResponse.DeliveryTemplates">
            <summary>
            运费模板列表
            </summary>
        </member>
        <member name="P:Top.Api.Response.DeliveryTemplateGetResponse.TotalResults">
            <summary>
            获得到符合条件的结果总数
            </summary>
        </member>
        <member name="T:Top.Api.Response.PictureUpdateResponse">
            <summary>
            PictureUpdateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.PictureUpdateResponse.Done">
            <summary>
            更新是否成功
            </summary>
        </member>
        <member name="T:Top.Api.Response.TmallProductSpecAddResponse">
            <summary>
            TmallProductSpecAddResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallProductSpecAddResponse.ProductSpec">
            <summary>
            产品规格对象
            </summary>
        </member>
        <member name="T:Top.Api.Response.TmallBrandcatSalesproGetResponse">
            <summary>
            TmallBrandcatSalesproGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallBrandcatSalesproGetResponse.CatBrandSaleProps">
            <summary>
            获取被管控品牌和类目下的销售属性，注意，一个管控品牌和类目下可能有多个销售属性。
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaRptCusteffectGetResponse">
            <summary>
            SimbaRptCusteffectGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaRptCusteffectGetResponse.RptCustEffectList">
            <summary>
            账户效果数据返回结果
            </summary>
        </member>
        <member name="T:Top.Api.Response.ItemSkusGetResponse">
            <summary>
            ItemSkusGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ItemSkusGetResponse.Skus">
            <summary>
            Sku列表
            </summary>
        </member>
        <member name="T:Top.Api.Response.ItempropvaluesGetResponse">
            <summary>
            ItempropvaluesGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ItempropvaluesGetResponse.LastModified">
            <summary>
            最近修改时间。格式:yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="P:Top.Api.Response.ItempropvaluesGetResponse.PropValues">
            <summary>
            属性值,根据fields传入的参数返回相应的结果
            </summary>
        </member>
        <member name="T:Top.Api.Response.LogisticsTraceSearchResponse">
            <summary>
            LogisticsTraceSearchResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.LogisticsTraceSearchResponse.CompanyName">
            <summary>
            物流公司名称
            </summary>
        </member>
        <member name="P:Top.Api.Response.LogisticsTraceSearchResponse.OutSid">
            <summary>
            运单号
            </summary>
        </member>
        <member name="P:Top.Api.Response.LogisticsTraceSearchResponse.Status">
            <summary>
            订单的物流状态（仅支持线上发货online订单，线下发货offline发出后直接变为已签收） * 等候发送给物流公司 *已提交给物流公司,等待物流公司接单 *已经确认消息接收，等待物流公司接单 *物流公司已接单 *物流公司不接单 *物流公司揽收失败 *物流公司揽收成功 *签收失败 *对方已签收 *对方拒绝签收
            </summary>
        </member>
        <member name="P:Top.Api.Response.LogisticsTraceSearchResponse.Tid">
            <summary>
            交易号
            </summary>
        </member>
        <member name="P:Top.Api.Response.LogisticsTraceSearchResponse.TraceList">
            <summary>
            流转信息列表
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaCampaignsGetRequest">
            <summary>
            TOP API: taobao.simba.campaigns.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaCampaignsGetRequest.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="T:Top.Api.Request.TmallItemDapeiTemplateDeleteRequest">
            <summary>
            TOP API: tmall.item.dapei.template.delete
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemDapeiTemplateDeleteRequest.Id">
            <summary>
            搭配模板ID
            </summary>
        </member>
        <member name="T:Top.Api.Request.FuwuSaleLinkGenRequest">
            <summary>
            TOP API: taobao.fuwu.sale.link.gen
            </summary>
        </member>
        <member name="P:Top.Api.Request.FuwuSaleLinkGenRequest.Nick">
            <summary>
            用户需要营销的目标人群中的用户nick
            </summary>
        </member>
        <member name="P:Top.Api.Request.FuwuSaleLinkGenRequest.ParamStr">
            <summary>
            从服务商后台，营销链接功能中生成的参数串直接复制使用。不要修改，否则抛错。
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaInsightWordsareadataGetRequest">
            <summary>
            TOP API: taobao.simba.insight.wordsareadata.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaInsightWordsareadataGetRequest.Bidword">
            <summary>
            关键词
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaInsightWordsareadataGetRequest.EndDate">
            <summary>
            结束时间，格式：yyyy-MM-dd
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaInsightWordsareadataGetRequest.StartDate">
            <summary>
            开始时间，格式：yyyy-MM-dd
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaAdgroupOnlineitemsvonGetRequest">
            <summary>
            TOP API: taobao.simba.adgroup.onlineitemsvon.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupOnlineitemsvonGetRequest.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupOnlineitemsvonGetRequest.OrderBy">
            <summary>
            排序，true:降序， false:升序
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupOnlineitemsvonGetRequest.OrderField">
            <summary>
            排序字段，starts：按开始时间排序bidCount:按销量排序
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupOnlineitemsvonGetRequest.PageNo">
            <summary>
            页码，从1开始,最大50。最大只能获取1W个宝贝
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaAdgroupOnlineitemsvonGetRequest.PageSize">
            <summary>
            页尺寸，最大200
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaKeywordsbykeywordidsGetRequest">
            <summary>
            TOP API: taobao.simba.keywordsbykeywordids.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaKeywordsbykeywordidsGetRequest.KeywordIds">
            <summary>
            关键词Id数组，最多200个；
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaKeywordsbykeywordidsGetRequest.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="T:Top.Api.Request.AstrolabeMappingGetRequest">
            <summary>
            TOP API: taobao.astrolabe.mapping.get
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaRtrptCreativeGetRequest">
            <summary>
            TOP API: taobao.simba.rtrpt.creative.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRtrptCreativeGetRequest.AdgroupId">
            <summary>
            推广组id
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRtrptCreativeGetRequest.CampaignId">
            <summary>
            推广计划id
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRtrptCreativeGetRequest.Nick">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRtrptCreativeGetRequest.TheDate">
            <summary>
            日期，格式yyyy-mm-dd
            </summary>
        </member>
        <member name="T:Top.Api.Request.PromotionLimitdiscountGetRequest">
            <summary>
            TOP API: taobao.promotion.limitdiscount.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.PromotionLimitdiscountGetRequest.EndTime">
            <summary>
            限时打折结束时间。输入的时间会被截取，年月日有效，时分秒忽略。
            </summary>
        </member>
        <member name="P:Top.Api.Request.PromotionLimitdiscountGetRequest.LimitDiscountId">
            <summary>
            限时打折ID。这个针对查询唯一限时打折情况。若此字段不为空，则说明操作为单条限时打折记录查询，其他字段忽略。若想分页按条件查询，这个字段置为空。
            </summary>
        </member>
        <member name="P:Top.Api.Request.PromotionLimitdiscountGetRequest.PageNumber">
            <summary>
            分页页号。默认1。当页数大于最大页数时，结果为最大页数的数据。
            </summary>
        </member>
        <member name="P:Top.Api.Request.PromotionLimitdiscountGetRequest.StartTime">
            <summary>
            限时打折开始时间。输入的时间会被截取，年月日有效，时分秒忽略。
            </summary>
        </member>
        <member name="P:Top.Api.Request.PromotionLimitdiscountGetRequest.Status">
            <summary>
            限时打折活动状态。ALL:全部状态;OVER:已结束;DOING:进行中;PROPARE:未开始(只支持大写)。当limit_discount_id为空时，为空时，默认为全部的状态。
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaNonsearchAdgroupplacesUpdateRequest">
            <summary>
            TOP API: taobao.simba.nonsearch.adgroupplaces.update
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaNonsearchAdgroupplacesUpdateRequest.AdgroupPlacesJson">
            <summary>
            推广组id，投放位置id，出价，是否默认出价 json数组字符串，数组个数最多200个。是否默认出价不能为空, 出价以“分”为单位，不能小于5分，不能大于最高日限额，不能大于9999分。  json数组中的key必须和对应实体AdGroupPlace中的属性字段保持一致，否则对应的实体对象属性获取不到相应的值
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaNonsearchAdgroupplacesUpdateRequest.CampaignId">
            <summary>
            推广计划ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaNonsearchAdgroupplacesUpdateRequest.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="T:Top.Api.Request.SellercatsListAddRequest">
            <summary>
            TOP API: taobao.sellercats.list.add
            </summary>
        </member>
        <member name="P:Top.Api.Request.SellercatsListAddRequest.Name">
            <summary>
            卖家自定义类目名称。不超过20个字符
            </summary>
        </member>
        <member name="P:Top.Api.Request.SellercatsListAddRequest.ParentCid">
            <summary>
            父类目编号，如果类目为店铺下的一级类目：值等于0，如果类目为子类目，调用获取taobao.sellercats.list.get父类目编号
            </summary>
        </member>
        <member name="P:Top.Api.Request.SellercatsListAddRequest.PictUrl">
            <summary>
            链接图片URL地址。(绝对地址，格式：http://host/image_path)
            </summary>
        </member>
        <member name="P:Top.Api.Request.SellercatsListAddRequest.SortOrder">
            <summary>
            该类目在页面上的排序位置,取值范围:大于零的整数
            </summary>
        </member>
        <member name="T:Top.Api.Request.TraderateListAddRequest">
            <summary>
            TOP API: taobao.traderate.list.add
            </summary>
        </member>
        <member name="P:Top.Api.Request.TraderateListAddRequest.Anony">
            <summary>
            是否匿名，卖家评不能匿名。可选值:true(匿名),false(非匿名)。 注意：如果买家匿名购买，那么买家的评价默认匿名
            </summary>
        </member>
        <member name="P:Top.Api.Request.TraderateListAddRequest.Content">
            <summary>
            评价内容,最大长度: 500个汉字 .注意：当评价结果为good时就不用输入评价内容.评价内容为neutral/bad的时候需要输入评价内容
            </summary>
        </member>
        <member name="P:Top.Api.Request.TraderateListAddRequest.Result">
            <summary>
            评价结果。可选值:good(好评),neutral(中评),bad(差评)
            </summary>
        </member>
        <member name="P:Top.Api.Request.TraderateListAddRequest.Role">
            <summary>
            评价者角色。可选值:seller(卖家),buyer(买家)
            </summary>
        </member>
        <member name="P:Top.Api.Request.TraderateListAddRequest.Tid">
            <summary>
            交易ID
            </summary>
        </member>
        <member name="T:Top.Api.Request.RefundsApplyGetRequest">
            <summary>
            TOP API: taobao.refunds.apply.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.RefundsApplyGetRequest.Fields">
            <summary>
            需要返回的字段。目前支持有：refund_id, tid, title, buyer_nick, seller_nick, total_fee, status, created, refund_fee
            </summary>
        </member>
        <member name="P:Top.Api.Request.RefundsApplyGetRequest.PageNo">
            <summary>
            页码。传入值为 1 代表第一页，传入值为 2 代表第二页，依此类推。默认返回的数据是从第一页开始
            </summary>
        </member>
        <member name="P:Top.Api.Request.RefundsApplyGetRequest.PageSize">
            <summary>
            每页条数。取值范围:大于零的整数; 默认值:40;最大值:100
            </summary>
        </member>
        <member name="P:Top.Api.Request.RefundsApplyGetRequest.SellerNick">
            <summary>
            卖家昵称
            </summary>
        </member>
        <member name="P:Top.Api.Request.RefundsApplyGetRequest.Status">
            <summary>
            退款状态，默认查询所有退款状态的数据，除了默认值外每次只能查询一种状态。  WAIT_SELLER_AGREE(买家已经申请退款，等待卖家同意)   WAIT_BUYER_RETURN_GOODS(卖家已经同意退款，等待买家退货)   WAIT_SELLER_CONFIRM_GOODS(买家已经退货，等待卖家确认收货)   SELLER_REFUSE_BUYER(卖家拒绝退款)   CLOSED(退款关闭)   SUCCESS(退款成功)
            </summary>
        </member>
        <member name="P:Top.Api.Request.RefundsApplyGetRequest.Type">
            <summary>
            交易类型列表，一次查询多种类型可用半角逗号分隔，默认同时查询guarantee_trade, auto_delivery的2种类型的数据。  fixed(一口价)   auction(拍卖)   guarantee_trade(一口价、拍卖)   independent_simple_trade(旺店入门版交易)   independent_shop_trade(旺店标准版交易)   auto_delivery(自动发货)   ec(直冲)   cod(货到付款)   fenxiao(分销)   game_equipment(游戏装备)   shopex_trade(ShopEX交易)   netcn_trade(万网交易)   external_trade(统一外部交易)
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaRptAdgroupcreativebaseGetRequest">
            <summary>
            TOP API: taobao.simba.rpt.adgroupcreativebase.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptAdgroupcreativebaseGetRequest.AdgroupId">
            <summary>
            推广组id
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptAdgroupcreativebaseGetRequest.CampaignId">
            <summary>
            查询推广计划id
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptAdgroupcreativebaseGetRequest.EndTime">
            <summary>
            结束日期，格式yyyy-mm-dd
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptAdgroupcreativebaseGetRequest.Nick">
            <summary>
            昵称
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptAdgroupcreativebaseGetRequest.PageNo">
            <summary>
            页码
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptAdgroupcreativebaseGetRequest.PageSize">
            <summary>
            每页大小
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptAdgroupcreativebaseGetRequest.SearchType">
            <summary>
            报表类型（搜索：SEARCH,类目出价：CAT, 定向投放：NOSEARCH汇总：SUMMARY）SUMMARY必须单选，其他值可多选例如：SEARCH,CAT
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptAdgroupcreativebaseGetRequest.Source">
            <summary>
            数据来源（PC站内：1，PC站外：2，无线站内：4，无线站外 : 5，汇总：SUMMARY）SUMMARY必须单选，其他值可多选例如1,2
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptAdgroupcreativebaseGetRequest.StartTime">
            <summary>
            开始日期，格式yyyy-mm-dd
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptAdgroupcreativebaseGetRequest.SubwayToken">
            <summary>
            权限验证信息
            </summary>
        </member>
        <member name="T:Top.Api.Request.ItemSkuAddRequest">
            <summary>
            TOP API: taobao.item.sku.add
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemSkuAddRequest.Ignorewarning">
            <summary>
            忽略警告提示.
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemSkuAddRequest.ItemPrice">
            <summary>
            sku所属商品的价格。当用户新增sku，使商品价格不属于sku价格之间的时候，用于修改商品的价格，使sku能够添加成功
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemSkuAddRequest.Lang">
            <summary>
            Sku文字的版本。可选值:zh_HK(繁体),zh_CN(简体);默认值:zh_CN
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemSkuAddRequest.NumIid">
            <summary>
            Sku所属商品数字id，可通过 taobao.item.get 获取。必选
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemSkuAddRequest.OuterId">
            <summary>
            Sku的商家外部id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemSkuAddRequest.Price">
            <summary>
            Sku的销售价格。商品的价格要在商品所有的sku的价格之间。精确到2位小数;单位:元。如:200.07，表示:200元7分
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemSkuAddRequest.Properties">
            <summary>
            Sku属性串。格式:pid:vid;pid:vid,如:1627207:3232483;1630696:3284570,表示:机身颜色:军绿色;手机套餐:一电一充。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemSkuAddRequest.Quantity">
            <summary>
            Sku的库存数量。sku的总数量应该小于等于商品总数量(Item的NUM)。取值范围:大于零的整数
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemSkuAddRequest.SkuHdHeight">
            <summary>
            家装建材类目，商品SKU的高度，单位为cm，部分类目必选。天猫商家专用。  可选值为："0-15", "15-25", "25-50", "50-60", "60-80", "80-120", "120-160", "160-200"。  数据和SKU一一对应，用,分隔，如：15-25,25-50,25-50
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemSkuAddRequest.SkuHdLampQuantity">
            <summary>
            家装建材类目，商品SKU的灯头数量，正整数，大于等于3，部分类目必选。天猫商家专用。  数据和SKU一一对应，用,分隔，如：3,5,7
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemSkuAddRequest.SkuHdLength">
            <summary>
            家装建材类目，商品SKU的长度，正整数，单位为cm，部分类目必选。天猫商家专用。  数据和SKU一一对应，用,分隔，如：20,30,30
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemSkuAddRequest.SpecId">
            <summary>
            产品的规格信息
            </summary>
        </member>
        <member name="T:Top.Api.Request.ItempropvaluesGetRequest">
            <summary>
            TOP API: taobao.itempropvalues.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItempropvaluesGetRequest.AttrKeys">
            <summary>
            属性的Key，支持多条，以“,”分隔
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItempropvaluesGetRequest.Cid">
            <summary>
            叶子类目ID ,通过taobao.itemcats.get获得叶子类目ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItempropvaluesGetRequest.Datetime">
            <summary>
            假如传2005-01-01 00:00:00，则取所有的属性和子属性(状态为删除的属性值不返回prop_name)
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItempropvaluesGetRequest.Fields">
            <summary>
            需要返回的字段。目前支持有：cid,pid,prop_name,vid,name,name_alias,status,sort_order
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItempropvaluesGetRequest.Pvs">
            <summary>
            属性和属性值 id串，格式例如(pid1;pid2)或(pid1:vid1;pid2:vid2)或(pid1;pid2:vid2)
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItempropvaluesGetRequest.Type">
            <summary>
            获取类目的类型：1代表集市、2代表天猫
            </summary>
        </member>
        <member name="T:Top.Api.Request.ProductGetRequest">
            <summary>
            TOP API: taobao.product.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.ProductGetRequest.Cid">
            <summary>
            商品类目id.调用taobao.itemcats.get获取;必须是叶子类目id,如果没有传product_id,那么cid和props必须要传.
            </summary>
        </member>
        <member name="P:Top.Api.Request.ProductGetRequest.CustomerProps">
            <summary>
            用户自定义关键属性,结构：pid1:value1;pid2:value2，如果有型号，系列等子属性用: 隔开 例如：“20000:优衣库:型号:001;632501:1234”，表示“品牌:优衣库:型号:001;货号:1234”
            </summary>
        </member>
        <member name="P:Top.Api.Request.ProductGetRequest.Fields">
            <summary>
            需返回的字段列表.可选值:Product数据结构中的所有字段;多个字段之间用","分隔.
            </summary>
        </member>
        <member name="P:Top.Api.Request.ProductGetRequest.MarketId">
            <summary>
            市场ID，1为取C2C市场的产品信息， 2为取B2C市场的产品信息。  不填写此值则默认取C2C的产品信息。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ProductGetRequest.ProductId">
            <summary>
            Product的id.两种方式来查看一个产品:1.传入product_id来查询 2.传入cid和props来查询
            </summary>
        </member>
        <member name="P:Top.Api.Request.ProductGetRequest.Props">
            <summary>
            比如:诺基亚N73这个产品的关键属性列表就是:品牌:诺基亚;型号:N73,对应的PV值就是10005:10027;10006:29729.
            </summary>
        </member>
        <member name="T:Top.Api.Domain.InsightCategoryDataDTO">
            <summary>
            InsightCategoryDataDTO Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightCategoryDataDTO.CatId">
            <summary>
            类目id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightCategoryDataDTO.CatName">
            <summary>
            类目名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightCategoryDataDTO.Click">
            <summary>
            点击量
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightCategoryDataDTO.Competition">
            <summary>
            竞争度
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightCategoryDataDTO.Cost">
            <summary>
            花费，单位（分）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightCategoryDataDTO.Coverage">
            <summary>
            点击转化率
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightCategoryDataDTO.Cpc">
            <summary>
            平均点击花费
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightCategoryDataDTO.Ctr">
            <summary>
            点击率
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightCategoryDataDTO.Directtransaction">
            <summary>
            直接成交金额
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightCategoryDataDTO.Directtransactionshipping">
            <summary>
            直接成交笔数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightCategoryDataDTO.Favitemtotal">
            <summary>
            宝贝搜藏数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightCategoryDataDTO.Favshoptotal">
            <summary>
            店铺搜藏数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightCategoryDataDTO.Favtotal">
            <summary>
            总的收藏数，包括宝贝收藏和店铺收藏
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightCategoryDataDTO.Impression">
            <summary>
            展现量
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightCategoryDataDTO.Indirecttransaction">
            <summary>
            间接成交金额
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightCategoryDataDTO.Indirecttransactionshipping">
            <summary>
            间接成交笔数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightCategoryDataDTO.Roi">
            <summary>
            投入产出比
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightCategoryDataDTO.Transactionshippingtotal">
            <summary>
            总的成交笔数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.InsightCategoryDataDTO.Transactiontotal">
            <summary>
            成交总金额
            </summary>
        </member>
        <member name="T:Top.Api.Domain.SuiteConfDO">
            <summary>
            SuiteConfDO Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SuiteConfDO.Inputs">
            <summary>
            如果有值，套装子规格形如：A*n,B*n,C*n....，n只能是inputs中的
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SuiteConfDO.MaxSize">
            <summary>
            套装，子规格限制数，当前一级类目，最多允许选择多少个产品规格，为空表示无限制。套装子规格形如:A*n,B*n,C*n....,max_size就是C的最大个数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SuiteConfDO.MaxTotalNumber">
            <summary>
            套装，子规格数量总和限制，当前一级类目，所以子产品规格的数量不能超过这个值，为空表示无限制,套装子规格形如：A*n,B*n,C*n....,max_total_number就是所有n和的最大限制
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SuiteConfDO.RootCatId">
            <summary>
            一级类目ID，标识在该一级在类目下能布套装
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SuiteConfDO.SuiteCatId">
            <summary>
            套装类目ID，当前一级类目，如果发布跨叶子类目的的套装，默认放到那个类目。如果没有值表示root_cat_id类目下发布的套装产品，不支持跨类目
            </summary>
        </member>
        <member name="T:Top.Api.Domain.CreativePage">
            <summary>
            CreativePage Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.CreativePage.CreativeList">
            <summary>
            广告创意列表
            </summary>
        </member>
        <member name="P:Top.Api.Domain.CreativePage.PageNo">
            <summary>
            返回第几页的数据从1开始
            </summary>
        </member>
        <member name="P:Top.Api.Domain.CreativePage.PageSize">
            <summary>
            每页数据大小
            </summary>
        </member>
        <member name="P:Top.Api.Domain.CreativePage.TotalItem">
            <summary>
            所查询的数据总数，只有当返回第一页数据时有值，当要求返回的数据非第一页时，此返回值无效
            </summary>
        </member>
        <member name="T:Top.Api.Domain.RptBaseEntityDTO">
            <summary>
            RptBaseEntityDTO Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RptBaseEntityDTO.Adgroupid">
            <summary>
            推广组id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RptBaseEntityDTO.Campaignid">
            <summary>
            计划id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RptBaseEntityDTO.Click">
            <summary>
            点击量
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RptBaseEntityDTO.Cost">
            <summary>
            花费
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RptBaseEntityDTO.Cpc">
            <summary>
            每点击一次花费
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RptBaseEntityDTO.Cpm">
            <summary>
            每千次展现花费
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RptBaseEntityDTO.Crowdid">
            <summary>
            人群id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RptBaseEntityDTO.Crowdname">
            <summary>
            人群名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RptBaseEntityDTO.Ctr">
            <summary>
            点击率
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RptBaseEntityDTO.Impression">
            <summary>
            展现量
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RptBaseEntityDTO.Source">
            <summary>
            流量来源，设备和网络。值包含PC站内，PC站外,移动站内，移动站外
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RptBaseEntityDTO.Thedate">
            <summary>
            日期
            </summary>
        </member>
        <member name="T:Top.Api.Domain.AddressResult">
            <summary>
            AddressResult Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.AddressResult.Addr">
            <summary>
            详细街道地址，不需要重复填写省/市/区
            </summary>
        </member>
        <member name="P:Top.Api.Domain.AddressResult.AreaId">
            <summary>
            区域ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.AddressResult.CancelDef">
            <summary>
            是否默认退货地址
            </summary>
        </member>
        <member name="P:Top.Api.Domain.AddressResult.City">
            <summary>
            市
            </summary>
        </member>
        <member name="P:Top.Api.Domain.AddressResult.ContactId">
            <summary>
            地址库ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.AddressResult.ContactName">
            <summary>
            联系人姓名
            </summary>
        </member>
        <member name="P:Top.Api.Domain.AddressResult.Country">
            <summary>
            区、县
            </summary>
        </member>
        <member name="P:Top.Api.Domain.AddressResult.GetDef">
            <summary>
            是否默认取货地址
            </summary>
        </member>
        <member name="P:Top.Api.Domain.AddressResult.Memo">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:Top.Api.Domain.AddressResult.MobilePhone">
            <summary>
            手机号码，手机与电话必需有一个   手机号码不能超过20位
            </summary>
        </member>
        <member name="P:Top.Api.Domain.AddressResult.ModifyDate">
            <summary>
            修改日期时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.AddressResult.Phone">
            <summary>
            电话号码,手机与电话必需有一个
            </summary>
        </member>
        <member name="P:Top.Api.Domain.AddressResult.Province">
            <summary>
            省
            </summary>
        </member>
        <member name="P:Top.Api.Domain.AddressResult.SellerCompany">
            <summary>
            公司名称,
            </summary>
        </member>
        <member name="P:Top.Api.Domain.AddressResult.SendDef">
            <summary>
            是否默认发货地址
            </summary>
        </member>
        <member name="P:Top.Api.Domain.AddressResult.ZipCode">
            <summary>
            地区邮政编码
            </summary>
        </member>
        <member name="T:Top.Api.Domain.WaitingTimeById">
            <summary>
            WaitingTimeById Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.WaitingTimeById.AvgWaitingTimes">
            <summary>
            平均等待时间长度（秒）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.WaitingTimeById.ServiceStaffId">
            <summary>
            客服人员ID
            </summary>
        </member>
        <member name="T:Top.Api.Domain.IdsModule">
            <summary>
            IdsModule Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.IdsModule.Id">
            <summary>
            宝贝描述规范化模块id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.IdsModule.Name">
            <summary>
            宝贝描述规范化模块名
            </summary>
        </member>
        <member name="P:Top.Api.Domain.IdsModule.Type">
            <summary>
            0为自动打标；  1为人工打标；
            </summary>
        </member>
        <member name="T:Top.Api.Domain.SubUserFullInfo">
            <summary>
            SubUserFullInfo Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubUserFullInfo.DepartmentId">
            <summary>
            部门Id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubUserFullInfo.DepartmentName">
            <summary>
            部门名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubUserFullInfo.DutyId">
            <summary>
            职务Id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubUserFullInfo.DutyLevel">
            <summary>
            职务等级
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubUserFullInfo.DutyName">
            <summary>
            职务名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubUserFullInfo.EmployeeId">
            <summary>
            员工ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubUserFullInfo.EmployeeName">
            <summary>
            员工姓名
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubUserFullInfo.EmployeeNickname">
            <summary>
            员工花名
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubUserFullInfo.EmployeeNum">
            <summary>
            入职员工工号
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubUserFullInfo.EntryDate">
            <summary>
            员工入职时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubUserFullInfo.LeaderId">
            <summary>
            直接上级的员工ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubUserFullInfo.OfficePhone">
            <summary>
            办公电话
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubUserFullInfo.ParentDepartment">
            <summary>
            父部门Id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubUserFullInfo.Sex">
            <summary>
            员工性别  1:男;  2:女
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubUserFullInfo.SubDispatchStatus">
            <summary>
            子账号是否参与分流 true:参与分流 false:未参与分流
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubUserFullInfo.SubId">
            <summary>
            子账号Id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubUserFullInfo.SubNick">
            <summary>
            子账号用户名
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubUserFullInfo.SubOwedStatus">
            <summary>
            子账号是否已欠费 true:已欠费 false:未欠费
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubUserFullInfo.SubStatus">
            <summary>
            子账号当前状态：1正常，2卖家停用，3处罚冻结
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubUserFullInfo.SubuserEmail">
            <summary>
            子账号企业邮箱
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubUserFullInfo.UserEmail">
            <summary>
            主账号企业邮箱
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubUserFullInfo.UserId">
            <summary>
            主账号Id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubUserFullInfo.UserNick">
            <summary>
            主账号用户名
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubUserFullInfo.WorkLocation">
            <summary>
            工作地点
            </summary>
        </member>
        <member name="T:Top.Api.Domain.JdpUser">
            <summary>
            JdpUser Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.JdpUser.HlAppkey">
            <summary>
            和数据回流绑定的appkey，用户的数据推到此appkey对应的rds后，会回传X_DOWNLOADED消息
            </summary>
        </member>
        <member name="P:Top.Api.Domain.JdpUser.Level">
            <summary>
            用户等级，用于区分大卖家，值越大则订单量越大
            </summary>
        </member>
        <member name="P:Top.Api.Domain.JdpUser.RdsId">
            <summary>
            rds的id，平台appkey会返回rds_id而不是rds_name
            </summary>
        </member>
        <member name="P:Top.Api.Domain.JdpUser.RdsName">
            <summary>
            rds数据库的实例名
            </summary>
        </member>
        <member name="P:Top.Api.Domain.JdpUser.SellerType">
            <summary>
            卖家类型，B表示商城卖家，C表示淘宝卖家
            </summary>
        </member>
        <member name="P:Top.Api.Domain.JdpUser.Status">
            <summary>
            0:暂停1：正常2：sessoin失效，停止3：已删除
            </summary>
        </member>
        <member name="P:Top.Api.Domain.JdpUser.UserId">
            <summary>
            用户id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.JdpUser.UserNick">
            <summary>
            用户昵称
            </summary>
        </member>
        <member name="T:Top.Api.Domain.User">
            <summary>
            User Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.User.Age">
            <summary>
            年龄
            </summary>
        </member>
        <member name="P:Top.Api.Domain.User.AlipayAccount">
            <summary>
            支付宝账户
            </summary>
        </member>
        <member name="P:Top.Api.Domain.User.AlipayBind">
            <summary>
            有无绑定。可选值:bind(绑定),notbind(未绑定)
            </summary>
        </member>
        <member name="P:Top.Api.Domain.User.AlipayNo">
            <summary>
            支付宝ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.User.AutoRepost">
            <summary>
            是否受限制。可选值:limited(受限制),unlimited(不受限)
            </summary>
        </member>
        <member name="P:Top.Api.Domain.User.Avatar">
            <summary>
            用户头像地址
            </summary>
        </member>
        <member name="P:Top.Api.Domain.User.Birthday">
            <summary>
            生日
            </summary>
        </member>
        <member name="P:Top.Api.Domain.User.BuyerCredit">
            <summary>
            买家信用
            </summary>
        </member>
        <member name="P:Top.Api.Domain.User.ConsumerProtection">
            <summary>
            是否参加消保
            </summary>
        </member>
        <member name="P:Top.Api.Domain.User.Created">
            <summary>
            用户注册时间。格式:yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="P:Top.Api.Domain.User.Email">
            <summary>
            联系人email
            </summary>
        </member>
        <member name="P:Top.Api.Domain.User.HasMorePic">
            <summary>
            是否购买多图服务。可选值:true(是),false(否)
            </summary>
        </member>
        <member name="P:Top.Api.Domain.User.HasShop">
            <summary>
            用户作为卖家是否开过店
            </summary>
        </member>
        <member name="P:Top.Api.Domain.User.HasSubStock">
            <summary>
            表示用户是否具备修改商品减库存逻辑的权限（一共有拍下减库存和付款减库存两种逻辑） 值含义： 1）true：是 2）false：否。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.User.IsGoldenSeller">
            <summary>
            用户是否是金牌卖家
            </summary>
        </member>
        <member name="P:Top.Api.Domain.User.IsLightningConsignment">
            <summary>
            是否24小时闪电发货(实物类)
            </summary>
        </member>
        <member name="P:Top.Api.Domain.User.ItemImgNum">
            <summary>
            可上传商品图片数量
            </summary>
        </member>
        <member name="P:Top.Api.Domain.User.ItemImgSize">
            <summary>
            单张商品图片最大容量(商品主图大小)。单位:k
            </summary>
        </member>
        <member name="P:Top.Api.Domain.User.LastVisit">
            <summary>
            最近登陆时间。格式:yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="P:Top.Api.Domain.User.Liangpin">
            <summary>
            是否是无名良品用户，true or false
            </summary>
        </member>
        <member name="P:Top.Api.Domain.User.Location">
            <summary>
            用户当前居住地公开信息。如：location.city获取其中的city数据
            </summary>
        </member>
        <member name="P:Top.Api.Domain.User.MagazineSubscribe">
            <summary>
            是否订阅了淘宝天下杂志
            </summary>
        </member>
        <member name="P:Top.Api.Domain.User.ManageBook">
            <summary>
            是否可以经营图书 ，true or false
            </summary>
        </member>
        <member name="P:Top.Api.Domain.User.Mobile">
            <summary>
            联系人手机号码
            </summary>
        </member>
        <member name="P:Top.Api.Domain.User.Nick">
            <summary>
            用户昵称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.User.OnlineGaming">
            <summary>
            用户是否为网游用户，属于隐私信息，需要登陆才能查看自己的。 目前仅供taobao.user.get使用
            </summary>
        </member>
        <member name="P:Top.Api.Domain.User.Phone">
            <summary>
            联系电话号码
            </summary>
        </member>
        <member name="P:Top.Api.Domain.User.PromotedType">
            <summary>
            有无实名认证。可选值:authentication(实名认证),not authentication(没有认证)
            </summary>
        </member>
        <member name="P:Top.Api.Domain.User.PropImgNum">
            <summary>
            可上传属性图片数量
            </summary>
        </member>
        <member name="P:Top.Api.Domain.User.PropImgSize">
            <summary>
            单张销售属性图片最大容量（非主图的商品图片和商品属性图片）。单位:k
            </summary>
        </member>
        <member name="P:Top.Api.Domain.User.RealName">
            <summary>
            用户真实姓名
            </summary>
        </member>
        <member name="P:Top.Api.Domain.User.SellerCredit">
            <summary>
            卖家信用
            </summary>
        </member>
        <member name="P:Top.Api.Domain.User.Sex">
            <summary>
            性别。可选值:m(男),f(女)
            </summary>
        </member>
        <member name="P:Top.Api.Domain.User.SignConsumerProtection">
            <summary>
            用户是否签署消保协议（因为加入基本消保的用户未必签署了消保协议）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.User.SignFoodSellerPromise">
            <summary>
            卖家是否签署食品卖家承诺协议
            </summary>
        </member>
        <member name="P:Top.Api.Domain.User.Status">
            <summary>
            状态。可选值:normal(正常),inactive(未激活),delete(删除),reeze(冻结),supervise(监管)
            </summary>
        </member>
        <member name="P:Top.Api.Domain.User.Type">
            <summary>
            用户类型。可选值:B(B商家),C(C商家)
            </summary>
        </member>
        <member name="P:Top.Api.Domain.User.Uid">
            <summary>
            用户字符串ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.User.UserId">
            <summary>
            用户数字ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.User.VerticalMarket">
            <summary>
            用户参与垂直市场类型。shoes表示鞋城垂直市场用户，3C表示3C垂直市场用户。多个类型之间用&quot;,&quot;分隔。如：一个用户既是3C用户又是鞋城用户，那么这个字段返回就是&quot;3C,shoes&quot;。如果用户不是垂直市场用户，此字段返回为&quot;&quot;。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.User.VipInfo">
            <summary>
            用户的全站vip信息，可取值如下：c(普通会员),asso_vip(荣誉会员)，vip1,vip2,vip3,vip4,vip5,vip6(六个等级的正式vip会员)，共8种取值，其中asso_vip是由vip会员衰退而成，与主站上的vip0对应。
            </summary>
        </member>
        <member name="P:Top.Api.Security.TopSecretGetResponse.Secret">
            <summary>
            秘钥值
            </summary>
        </member>
        <member name="P:Top.Api.Security.TopSecretGetResponse.SecretVersion">
            <summary>
            秘钥版本号
            </summary>
        </member>
        <member name="P:Top.Api.Security.TopSecretGetResponse.Interval">
            <summary>
            下次更新秘钥间隔，单位（秒）
            </summary>
        </member>
        <member name="P:Top.Api.Security.TopSecretGetResponse.MaxInterval">
            <summary>
            最长有效期，容灾使用，单位（秒）
            </summary>
        </member>
        <member name="P:Top.Api.Security.TopSecretGetResponse.AppConfig">
            <summary>
            App配置信息
            </summary>
        </member>
        <member name="T:Aliyun.Api.IAliyunUploadRequest`1">
            <summary>
            TOP上传请求接口，支持同时上传多个文件。
            </summary>
        </member>
        <member name="M:Aliyun.Api.IAliyunUploadRequest`1.GetFileParameters">
            <summary>
            获取所有的Key-Value形式的文件请求参数字典。其中：
            Key: 请求参数名
            Value: 文件对象
            </summary>
            <returns>文件请求参数字典</returns>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAdvertiserTargetRptsTotalGetResponse">
            <summary>
            ZuanshiAdvertiserTargetRptsTotalGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRptsTotalGetResponse.TargetOfflineRptTotalList">
            <summary>
            result
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAdvertiserTargetRptsTotalGetResponse.DataDomain">
            <summary>
            DataDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRptsTotalGetResponse.DataDomain.AdPv">
            <summary>
            展现数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRptsTotalGetResponse.DataDomain.AdgroupId">
            <summary>
            单元id
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRptsTotalGetResponse.DataDomain.AdgroupName">
            <summary>
            单元名称
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRptsTotalGetResponse.DataDomain.AlipayInShopNum">
            <summary>
            成交数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRptsTotalGetResponse.DataDomain.AlipayInshopAmt">
            <summary>
            成交额
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRptsTotalGetResponse.DataDomain.AvgAccessPageNum">
            <summary>
            平均访问页面数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRptsTotalGetResponse.DataDomain.AvgAccessTime">
            <summary>
            平均访问时长
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRptsTotalGetResponse.DataDomain.CampaignId">
            <summary>
            计划id
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRptsTotalGetResponse.DataDomain.CampaignName">
            <summary>
            计划名称
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRptsTotalGetResponse.DataDomain.CartNum">
            <summary>
            加购物车数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRptsTotalGetResponse.DataDomain.Charge">
            <summary>
            花费
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRptsTotalGetResponse.DataDomain.Click">
            <summary>
            点击数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRptsTotalGetResponse.DataDomain.Ctr">
            <summary>
            ctr
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRptsTotalGetResponse.DataDomain.Cvr">
            <summary>
            cvr
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRptsTotalGetResponse.DataDomain.DeepInshopUv">
            <summary>
            深度访问uv
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRptsTotalGetResponse.DataDomain.DirShopColNum">
            <summary>
            收藏店铺数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRptsTotalGetResponse.DataDomain.Ecpc">
            <summary>
            ecpc
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRptsTotalGetResponse.DataDomain.Ecpm">
            <summary>
            ecpm
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRptsTotalGetResponse.DataDomain.GmvInshopAmt">
            <summary>
            gmv成交额
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRptsTotalGetResponse.DataDomain.GmvInshopNum">
            <summary>
            gmv成交数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRptsTotalGetResponse.DataDomain.InshopItemColNum">
            <summary>
            收藏宝贝数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRptsTotalGetResponse.DataDomain.Roi">
            <summary>
            投入产出比
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRptsTotalGetResponse.DataDomain.TargetId">
            <summary>
            定向id
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRptsTotalGetResponse.DataDomain.TargetName">
            <summary>
            定向名称
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRptsTotalGetResponse.DataDomain.Uv">
            <summary>
            uv
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRtrptsGetResponse">
            <summary>
            ZuanshiAdvertiserTargetAdzoneRtrptsGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRtrptsGetResponse.TargetAdzoneRealtimeRptList">
            <summary>
            查询结果
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRtrptsGetResponse.DataDomain">
            <summary>
            DataDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRtrptsGetResponse.DataDomain.AdPv">
            <summary>
            展现量
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRtrptsGetResponse.DataDomain.AdgroupId">
            <summary>
            单元id
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRtrptsGetResponse.DataDomain.AdzoneId">
            <summary>
            资源位id
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRtrptsGetResponse.DataDomain.CampaignId">
            <summary>
            计划id
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRtrptsGetResponse.DataDomain.Charge">
            <summary>
            花费
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRtrptsGetResponse.DataDomain.Click">
            <summary>
            点击量
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRtrptsGetResponse.DataDomain.Ctr">
            <summary>
            点击率
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRtrptsGetResponse.DataDomain.Ecpc">
            <summary>
            单次点击花费
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRtrptsGetResponse.DataDomain.Ecpm">
            <summary>
            千次展现花费
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRtrptsGetResponse.DataDomain.HourId">
            <summary>
            小时数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRtrptsGetResponse.DataDomain.LogDate">
            <summary>
            日期
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetAdzoneRtrptsGetResponse.DataDomain.TargetId">
            <summary>
            定向id
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAdvertiserRptsDownloadHourGetResponse">
            <summary>
            ZuanshiAdvertiserRptsDownloadHourGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserRptsDownloadHourGetResponse.Result">
            <summary>
            创建任务信息。里面只包含task_id和created
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAdvertiserRptsDownloadHourGetResponse.StructDomain">
            <summary>
            StructDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserRptsDownloadHourGetResponse.StructDomain.IsSuccess">
            <summary>
            标记子任务是否成功。为true表示子任务成功，用户可以按照正确执行的结果格式解析sub_task_result。为false表示子任务失败了，用户需要按照失败的结果格式解析sub_task_result（里面只有sub_code和sub_msg）
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserRptsDownloadHourGetResponse.StructDomain.SubTaskRequest">
            <summary>
            子任务的有效请求参数，以json格式进行key:value的组合
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserRptsDownloadHourGetResponse.StructDomain.SubTaskResult">
            <summary>
            子任务返回的结果，以json格式进行key:value组合，可以和单个api请求结果解析复用。以获取交易订单详情为例：子任务执行成功返回的结果格式为：{“trade”:{"tid":123456,"seller_nick":"淘宝卖家"}}；子任务执行失败结果格式为{"sub_code":"isv.trade-not-exist","sub_msg":"交易订单不存在"}
            </summary>
        </member>
        <member name="T:Top.Api.Response.TbkUatmFavoritesGetResponse">
            <summary>
            TbkUatmFavoritesGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkUatmFavoritesGetResponse.Results">
            <summary>
            淘宝客选品库
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkUatmFavoritesGetResponse.TotalResults">
            <summary>
            选品库总数
            </summary>
        </member>
        <member name="T:Top.Api.Response.TbkDataReportResponse">
            <summary>
            TbkDataReportResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkDataReportResponse.Results">
            <summary>
            results
            </summary>
        </member>
        <member name="T:Top.Api.Response.ScitemGetResponse">
            <summary>
            ScitemGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ScitemGetResponse.ScItem">
            <summary>
            后端商品
            </summary>
        </member>
        <member name="T:Top.Api.Response.OpenimTribeSetmanagerResponse">
            <summary>
            OpenimTribeSetmanagerResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.OpenimTribeSetmanagerResponse.TribeCode">
            <summary>
            群服务code
            </summary>
        </member>
        <member name="T:Top.Api.Response.OpenimTribeModifytribeinfoResponse">
            <summary>
            OpenimTribeModifytribeinfoResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.OpenimTribeModifytribeinfoResponse.TribeCode">
            <summary>
            群服务code
            </summary>
        </member>
        <member name="T:Top.Api.Response.OpenimTribeJoinResponse">
            <summary>
            OpenimTribeJoinResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.OpenimTribeJoinResponse.TribeCode">
            <summary>
            群服务code
            </summary>
        </member>
        <member name="T:Top.Api.Response.OpenimTribeDismissResponse">
            <summary>
            OpenimTribeDismissResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.OpenimTribeDismissResponse.TribeCode">
            <summary>
            群服务code
            </summary>
        </member>
        <member name="T:Top.Api.Response.ItemUpdateSchemaGetResponse">
            <summary>
            ItemUpdateSchemaGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ItemUpdateSchemaGetResponse.UpdateRules">
            <summary>
            返回的结果集
            </summary>
        </member>
        <member name="T:Top.Api.Response.InventoryAdjustTradeResponse">
            <summary>
            InventoryAdjustTradeResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.InventoryAdjustTradeResponse.OperateCode">
            <summary>
            操作返回码
            </summary>
        </member>
        <member name="P:Top.Api.Response.InventoryAdjustTradeResponse.TipInfos">
            <summary>
            提示信息
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiCategoryRptsTotalGetRequest">
            <summary>
            TOP API: taobao.zuanshi.category.rpts.total.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiCategoryRptsTotalGetRequest.CampaignModel">
            <summary>
            计划类型。1：全店推广；4单品推广
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiCategoryRptsTotalGetRequest.Effect">
            <summary>
            效果周期，取值范围：3,7,15。分别表示效果转化周期-3天/7天/15天。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiCategoryRptsTotalGetRequest.EffectType">
            <summary>
            效果类型。“impression”：展现效果；“click”：点击效果
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiCategoryRptsTotalGetRequest.EndTime">
            <summary>
            结束日期
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiCategoryRptsTotalGetRequest.ShopMainCatId">
            <summary>
            类目id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiCategoryRptsTotalGetRequest.StartTime">
            <summary>
            开始日期
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiBannerAdzoneConditionRequest">
            <summary>
            TOP API: taobao.zuanshi.banner.adzone.condition
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiAdvertiserAdzoneRptsTotalGetRequest">
            <summary>
            TOP API: taobao.zuanshi.advertiser.adzone.rpts.total.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAdzoneRptsTotalGetRequest.AdgroupId">
            <summary>
            单元id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAdzoneRptsTotalGetRequest.AdzoneId">
            <summary>
            资源位id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAdzoneRptsTotalGetRequest.CampaignId">
            <summary>
            计划id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAdzoneRptsTotalGetRequest.CampaignModel">
            <summary>
            计划类型。1：全店推广；4单品推广
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAdzoneRptsTotalGetRequest.Effect">
            <summary>
            效果周期，取值范围：3,7,15。分别表示效果转化周期-3天/7天/15天。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAdzoneRptsTotalGetRequest.EffectType">
            <summary>
            效果类型。“impression”：展现效果；“click”：点击效果
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAdzoneRptsTotalGetRequest.EndTime">
            <summary>
            结束日期
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAdzoneRptsTotalGetRequest.Offset">
            <summary>
            分页偏移量
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAdzoneRptsTotalGetRequest.PageSize">
            <summary>
            每页条数，必传；每页最多200
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAdzoneRptsTotalGetRequest.StartTime">
            <summary>
            开始日期
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiAdvertiserAdgroupRtrptsTotalGetRequest">
            <summary>
            TOP API: taobao.zuanshi.advertiser.adgroup.rtrpts.total.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAdgroupRtrptsTotalGetRequest.AdgroupId">
            <summary>
            单元id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAdgroupRtrptsTotalGetRequest.CampaignId">
            <summary>
            计划id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAdgroupRtrptsTotalGetRequest.CampaignModel">
            <summary>
            计划类型。1：全店推广，4：单品推广。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAdgroupRtrptsTotalGetRequest.LogDate">
            <summary>
            日期
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAdgroupRtrptsTotalGetRequest.Offset">
            <summary>
            偏移量
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAdgroupRtrptsTotalGetRequest.PageSize">
            <summary>
            每页记录数
            </summary>
        </member>
        <member name="T:Top.Api.Request.TmcMessageProduceRequest">
            <summary>
            TOP API: taobao.tmc.message.produce
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmcMessageProduceRequest.Content">
            <summary>
            消息内容的JSON表述，必须按照topic的定义来填充
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmcMessageProduceRequest.ExContent">
            <summary>
            消息的扩增属性，用json格式表示
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmcMessageProduceRequest.MediaContent">
            <summary>
            回传的文件内容，目前仅支持jpg,png,bmp,gif,pdf类型的文件，文件最大1M。只有消息中有byte[]类型的数据时，才需要传此字段; 否则不需要传此字段。
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmcMessageProduceRequest.MediaContent2">
            <summary>
            回传的文件内容，目前仅支持jpg,png,bmp,gif,pdf类型的文件，文件最大1M。只有消息中有byte[]类型的数据时，才需要传此字段; 否则不需要传此字段。具体对应到沙体中的什么值，请参考消息字段说明。
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmcMessageProduceRequest.MediaContent3">
            <summary>
            回传的文件内容，目前仅支持jpg,png,bmp,gif,pdf类型的文件，文件最大1M。只有消息中有byte[]类型的数据时，才需要传此字段; 否则不需要传此字段。具体对应到沙体中的什么值，请参考消息字段说明。
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmcMessageProduceRequest.MediaContent4">
            <summary>
            回传的文件内容，目前仅支持jpg,png,bmp,gif,pdf类型的文件，文件最大1M。只有消息中有byte[]类型的数据时，才需要传此字段; 否则不需要传此字段。具体对应到沙体中的什么值，请参考消息字段说明。
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmcMessageProduceRequest.MediaContent5">
            <summary>
            回传的文件内容，目前仅支持jpg,png,bmp,gif,pdf类型的文件，文件最大1M。只有消息中有byte[]类型的数据时，才需要传此字段; 否则不需要传此字段。具体对应到沙体中的什么值，请参考消息字段说明。
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmcMessageProduceRequest.TargetAppkey">
            <summary>
            直发消息需要传入目标appkey
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmcMessageProduceRequest.TargetGroup">
            <summary>
            目标分组，一般为default
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmcMessageProduceRequest.Topic">
            <summary>
            消息类型
            </summary>
        </member>
        <member name="T:Top.Api.Request.TbkJuTqgGetRequest">
            <summary>
            TOP API: taobao.tbk.ju.tqg.get
            </summary>
        </member>
        <!-- 对于成员“P:Top.Api.Request.TbkJuTqgGetRequest.AdzoneId”忽略有格式错误的 XML 注释 -->
        <member name="P:Top.Api.Request.TbkJuTqgGetRequest.EndTime">
            <summary>
            最晚开团时间
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkJuTqgGetRequest.Fields">
            <summary>
            需返回的字段列表
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkJuTqgGetRequest.PageNo">
            <summary>
            第几页，默认1，1~100
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkJuTqgGetRequest.PageSize">
            <summary>
            页大小，默认40，1~40
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkJuTqgGetRequest.StartTime">
            <summary>
            最早开团时间
            </summary>
        </member>
        <member name="T:Top.Api.Request.RegionPriceManageRequest">
            <summary>
            TOP API: taobao.region.price.manage
            </summary>
        </member>
        <member name="P:Top.Api.Request.RegionPriceManageRequest.IsFull">
            <summary>
            true:全量, false:增量
            </summary>
        </member>
        <member name="P:Top.Api.Request.RegionPriceManageRequest.ItemId">
            <summary>
            商品id
            </summary>
        </member>
        <member name="P:Top.Api.Request.RegionPriceManageRequest.RegionalPriceDtos">
            <summary>
            列表
            </summary>
        </member>
        <member name="P:Top.Api.Request.RegionPriceManageRequest.SkuId">
            <summary>
            无sku传0
            </summary>
        </member>
        <member name="T:Top.Api.Request.RegionPriceManageRequest.RegionalPriceDtoDomain">
            <summary>
            RegionalPriceDtoDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Request.RegionPriceManageRequest.RegionalPriceDtoDomain.City">
            <summary>
            市
            </summary>
        </member>
        <member name="P:Top.Api.Request.RegionPriceManageRequest.RegionalPriceDtoDomain.Price">
            <summary>
            金额（分）
            </summary>
        </member>
        <member name="P:Top.Api.Request.RegionPriceManageRequest.RegionalPriceDtoDomain.Province">
            <summary>
            省
            </summary>
        </member>
        <member name="T:Top.Api.Request.OpenimTribelogsImportRequest">
            <summary>
            TOP API: taobao.openim.tribelogs.import
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimTribelogsImportRequest.Messages">
            <summary>
            消息列表
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimTribelogsImportRequest.TribeId">
            <summary>
            群号。必须为已存在的群，且群主属于本app
            </summary>
        </member>
        <member name="T:Top.Api.Request.OpenimTribelogsImportRequest.TribeTextMessageDomain">
            <summary>
            TribeTextMessageDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimTribelogsImportRequest.TribeTextMessageDomain.FromId">
            <summary>
            发送方userid。必须为本app已导入的账号
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimTribelogsImportRequest.TribeTextMessageDomain.Message">
            <summary>
            消息
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimTribelogsImportRequest.TribeTextMessageDomain.Time">
            <summary>
            消息时间。UTC时间，精确到秒。时间范围必须在当前时间30天内
            </summary>
        </member>
        <member name="T:Top.Api.Request.FenxiaoProductImageDeleteRequest">
            <summary>
            TOP API: taobao.fenxiao.product.image.delete
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductImageDeleteRequest.Position">
            <summary>
            图片位置
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductImageDeleteRequest.ProductId">
            <summary>
            产品ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductImageDeleteRequest.Properties">
            <summary>
            properties表示sku图片的属性。key:value形式，key是pid，value是vid。如果position是0的话，则properties需要是必传项
            </summary>
        </member>
        <member name="T:Top.Api.Request.FenxiaoOrderConfirmPaidRequest">
            <summary>
            TOP API: taobao.fenxiao.order.confirm.paid
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoOrderConfirmPaidRequest.ConfirmRemark">
            <summary>
            确认支付信息（字数小于100）
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoOrderConfirmPaidRequest.PurchaseOrderId">
            <summary>
            采购单编号。
            </summary>
        </member>
        <member name="T:Top.Api.Request.FenxiaoGradeAddRequest">
            <summary>
            TOP API: taobao.fenxiao.grade.add
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoGradeAddRequest.Name">
            <summary>
            等级名称，等级名称不可重复
            </summary>
        </member>
        <member name="T:Top.Api.Request.DmpCrowdCreateRequest">
            <summary>
            TOP API: taobao.dmp.crowd.create
            </summary>
        </member>
        <member name="P:Top.Api.Request.DmpCrowdCreateRequest.CrowdName">
            <summary>
            人群名称，最多40个字符，只支持汉字、字母、数字、下划线
            </summary>
        </member>
        <member name="P:Top.Api.Request.DmpCrowdCreateRequest.LookalikeMultiple">
            <summary>
            放大倍数，最多30倍
            </summary>
        </member>
        <member name="P:Top.Api.Request.DmpCrowdCreateRequest.SelectTagOptionSetDTO">
            <summary>
            标签组合条件
            </summary>
        </member>
        <member name="P:Top.Api.Request.DmpCrowdCreateRequest.ValidDate">
            <summary>
            过期时间,最长1年
            </summary>
        </member>
        <member name="T:Top.Api.Request.DmpCrowdCreateRequest.SelectTagOptionDTODomain">
            <summary>
            SelectTagOptionDTODomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Request.DmpCrowdCreateRequest.SelectTagOptionDTODomain.OptionGroupId">
            <summary>
            标签选项分组ID，可以通过标签详细接口查询
            </summary>
        </member>
        <member name="P:Top.Api.Request.DmpCrowdCreateRequest.SelectTagOptionDTODomain.TagId">
            <summary>
            标签ID,用户有权限的标签
            </summary>
        </member>
        <member name="P:Top.Api.Request.DmpCrowdCreateRequest.SelectTagOptionDTODomain.Values">
            <summary>
            多个选项用逗号分隔；INPUT连续值使用1,100表示从1到100
            </summary>
        </member>
        <member name="T:Top.Api.Request.DmpCrowdCreateRequest.SelectTagOptionSetDTODomain">
            <summary>
            SelectTagOptionSetDTODomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Request.DmpCrowdCreateRequest.SelectTagOptionSetDTODomain.Selects">
            <summary>
            标签组合条件
            </summary>
        </member>
        <member name="T:Top.Api.DefaultTopLogger">
            <summary>
            日志打点的简单实现。
            </summary>
        </member>
        <member name="T:WebSocketSharp.WebSocket">
            <summary>
            Implements the WebSocket interface.
            </summary>
            <remarks>
            The WebSocket class provides methods and properties for two-way communication using the WebSocket protocol (RFC 6455).
            </remarks>
        </member>
        <member name="M:WebSocketSharp.WebSocket.#ctor(System.String,System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:WebSocketSharp.WebSocket"/> class with the specified WebSocket URL and subprotocols.
            </summary>
            <param name="url">
            A <see cref="T:System.String"/> that contains the WebSocket URL.
            </param>
            <param name="protocols">
            An array of <see cref="T:System.String"/> that contains the WebSocket subprotocols if any.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="url"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="url"/> is not valid WebSocket URL.
            </exception>
        </member>
        <member name="M:WebSocketSharp.WebSocket.#ctor(System.String,System.EventHandler,System.EventHandler{WebSocketSharp.MessageEventArgs},System.EventHandler{WebSocketSharp.ErrorEventArgs},System.EventHandler{WebSocketSharp.CloseEventArgs},System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:WebSocketSharp.WebSocket"/> class with the specified WebSocket URL, OnOpen, OnMessage, OnError, OnClose event handlers and subprotocols.
            </summary>
            <param name="url">
            A <see cref="T:System.String"/> that contains the WebSocket URL.
            </param>
            <param name="onOpen">
            An OnOpen event handler.
            </param>
            <param name="onMessage">
            An OnMessage event handler.
            </param>
            <param name="onError">
            An OnError event handler.
            </param>
            <param name="onClose">
            An OnClose event handler.
            </param>
            <param name="protocols">
            An array of <see cref="T:System.String"/> that contains the WebSocket subprotocols if any.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="url"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="url"/> is not valid WebSocket URL.
            </exception>
        </member>
        <member name="M:WebSocketSharp.WebSocket.Close">
            <summary>
            Closes the connection and releases all associated resources after sends a Close control frame.
            </summary>
        </member>
        <member name="M:WebSocketSharp.WebSocket.Close(WebSocketSharp.Frame.CloseStatusCode)">
            <summary>
            Closes the connection and releases all associated resources after sends a Close control frame.
            </summary>
            <param name="code">
            A <see cref="T:WebSocketSharp.Frame.CloseStatusCode"/> that contains a status code indicating a reason for closure.
            </param>
        </member>
        <member name="M:WebSocketSharp.WebSocket.Close(System.UInt16)">
            <summary>
            Closes the connection and releases all associated resources after sends a Close control frame.
            </summary>
            <param name="code">
            A <see cref="T:System.UInt16"/> that contains a status code indicating a reason for closure.
            </param>
        </member>
        <member name="M:WebSocketSharp.WebSocket.Close(WebSocketSharp.Frame.CloseStatusCode,System.String)">
            <summary>
            Closes the connection and releases all associated resources after sends a Close control frame.
            </summary>
            <param name="code">
            A <see cref="T:WebSocketSharp.Frame.CloseStatusCode"/> that contains a status code indicating a reason for closure.
            </param>
            <param name="reason">
            A <see cref="T:System.String"/> that contains a reason for closure.
            </param>
        </member>
        <member name="M:WebSocketSharp.WebSocket.Close(System.UInt16,System.String)">
            <summary>
            Closes the connection and releases all associated resources after sends a Close control frame.
            </summary>
            <param name="code">
            A <see cref="T:System.UInt16"/> that contains a status code indicating a reason for closure.
            </param>
            <param name="reason">
            A <see cref="T:System.String"/> that contains a reason for closure.
            </param>
        </member>
        <member name="M:WebSocketSharp.WebSocket.Connect">
            <summary>
            Establishes a connection.
            </summary>
        </member>
        <member name="M:WebSocketSharp.WebSocket.Dispose">
            <summary>
            Closes the connection and releases all associated resources after sends a Close control frame.
            </summary>
            <remarks>
            Call <see cref="M:WebSocketSharp.WebSocket.Dispose"/> when you are finished using the <see cref="T:WebSocketSharp.WebSocket"/>. The
            <see cref="M:WebSocketSharp.WebSocket.Dispose"/> method leaves the <see cref="T:WebSocketSharp.WebSocket"/> in an unusable state. After
            calling <see cref="M:WebSocketSharp.WebSocket.Dispose"/>, you must release all references to the <see cref="T:WebSocketSharp.WebSocket"/> so
            the garbage collector can reclaim the memory that the <see cref="T:WebSocketSharp.WebSocket"/> was occupying.
            </remarks>
        </member>
        <member name="M:WebSocketSharp.WebSocket.Ping">
            <summary>
            Sends a Ping frame using the connection.
            </summary>
            <returns>
            <c>true</c> if the WebSocket receives a Pong frame in a time; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:WebSocketSharp.WebSocket.Ping(System.String)">
            <summary>
            Sends a Ping frame with a message using the connection.
            </summary>
            <param name="message">
            A <see cref="T:System.String"/> that contains the message to be sent.
            </param>
            <returns>
            <c>true</c> if the WebSocket receives a Pong frame in a time; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:WebSocketSharp.WebSocket.Send(System.String)">
            <summary>
            Sends a text data using the connection.
            </summary>
            <param name="data">
            A <see cref="T:System.String"/> that contains the text data to be sent.
            </param>
        </member>
        <member name="M:WebSocketSharp.WebSocket.Send(System.Byte[])">
            <summary>
            Sends a binary data using the connection.
            </summary>
            <param name="data">
            An array of <see cref="T:System.Byte"/> that contains the binary data to be sent.
            </param>
        </member>
        <member name="M:WebSocketSharp.WebSocket.Send(System.IO.FileInfo)">
            <summary>
            Sends a binary data using the connection.
            </summary>
            <param name="file">
            A <see cref="T:System.IO.FileInfo"/> that contains the binary data to be sent.
            </param>
        </member>
        <member name="M:WebSocketSharp.WebSocket.SendAsync(System.String,WebSocketSharp.Action)">
            <summary>
            Sends a text data asynchronously using the connection.
            </summary>
            <param name="data">
            A <see cref="T:System.String"/> that contains the text data to be sent.
            </param>
            <param name="completed">
            An <see cref="T:WebSocketSharp.Action"/> delegate that contains the method(s) that is called when an asynchronous operation completes.
            </param>
        </member>
        <member name="M:WebSocketSharp.WebSocket.SendAsync(System.Byte[],WebSocketSharp.Action)">
            <summary>
            Sends a binary data asynchronously using the connection.
            </summary>
            <param name="data">
            An array of <see cref="T:System.Byte"/> that contains the binary data to be sent.
            </param>
            <param name="completed">
            An <see cref="T:WebSocketSharp.Action"/> delegate that contains the method(s) that is called when an asynchronous operation completes.
            </param>
        </member>
        <member name="M:WebSocketSharp.WebSocket.SendAsync(System.IO.FileInfo,WebSocketSharp.Action)">
            <summary>
            Sends a binary data asynchronously using the connection.
            </summary>
            <param name="file">
            A <see cref="T:System.IO.FileInfo"/> that contains the binary data to be sent.
            </param>
            <param name="completed">
            An <see cref="T:WebSocketSharp.Action"/> delegate that contains the method(s) that is called when an asynchronous operation completes.
            </param>
        </member>
        <member name="P:WebSocketSharp.WebSocket.BufferedAmount">
            <summary>
            Gets the amount of untransmitted data.
            </summary>
            <value>
            The number of bytes of untransmitted data.
            </value>
        </member>
        <member name="P:WebSocketSharp.WebSocket.Extensions">
            <summary>
            Gets the extensions selected by the server.
            </summary>
            <value>
            A <see cref="T:System.String"/> that contains the extensions if any. By default, <c>String.Empty</c>. (Currently this will only ever be the <c>String.Empty</c>.)
            </value>
        </member>
        <member name="P:WebSocketSharp.WebSocket.IsAlive">
            <summary>
            Gets a value indicating whether a connection is alive.
            </summary>
            <value>
            <c>true</c> if the connection is alive; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:WebSocketSharp.WebSocket.IsSecure">
            <summary>
            Gets a value indicating whether a connection is secure.
            </summary>
            <value>
            <c>true</c> if the connection is secure; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:WebSocketSharp.WebSocket.Protocol">
            <summary>
            Gets the subprotocol selected by the server.
            </summary>
            <value>
            A <see cref="T:System.String"/> that contains the subprotocol if any. By default, <c>String.Empty</c>.
            </value>
        </member>
        <member name="P:WebSocketSharp.WebSocket.ReadyState">
            <summary>
            Gets the state of the connection.
            </summary>
            <value>
            A <see cref="T:WebSocketSharp.WsState"/>. By default, <c>WsState.CONNECTING</c>.
            </value>
        </member>
        <member name="P:WebSocketSharp.WebSocket.UnTransmittedBuffer">
            <summary>
            Gets the untransmitted WebSocket frames.
            </summary>
            <value>
            A <c>IList&lt;WsFrame&gt;</c> that contains the untransmitted WebSocket frames.
            </value>
        </member>
        <member name="P:WebSocketSharp.WebSocket.Url">
            <summary>
            Gets or sets the WebSocket URL.
            </summary>
            <value>
            A <see cref="T:System.Uri"/> that contains the WebSocket URL.
            </value>
        </member>
        <member name="P:WebSocketSharp.WebSocket.Origin">
            <summary>
            Gets or sets the WebSocket Origin.
            </summary>
        </member>
        <member name="P:WebSocketSharp.WebSocket.ExtraHeaders">
            <summary>
            Gets or sets the extra WebSocket handshake headers.
            </summary>
        </member>
        <member name="E:WebSocketSharp.WebSocket.OnOpen">
            <summary>
            Occurs when the WebSocket connection has been established.
            </summary>
        </member>
        <member name="E:WebSocketSharp.WebSocket.OnMessage">
            <summary>
            Occurs when the WebSocket receives a data frame.
            </summary>
        </member>
        <member name="E:WebSocketSharp.WebSocket.OnError">
            <summary>
            Occurs when the WebSocket gets an error.
            </summary>
        </member>
        <member name="E:WebSocketSharp.WebSocket.OnClose">
            <summary>
            Occurs when the WebSocket receives a Close frame or the Close method is called.
            </summary>
        </member>
        <member name="T:Taobao.Top.Link.Channel.ChannelClosedEventArgs">
            <summary>channel closed reason
            </summary>
        </member>
        <member name="P:Taobao.Top.Link.Channel.ChannelClosedEventArgs.Reason">
            <summary>get reason why closed
            </summary>
        </member>
        <member name="T:Taobao.Top.Link.Channel.TCP.TcpServerChannel">
            <summary>server channel bind on raw tcp, just impl an easy server
            </summary>
        </member>
        <member name="M:Taobao.Top.Link.Channel.TCP.TcpServerChannel.#ctor(Top.Api.ITopLogger,System.Int32,Taobao.Top.Link.Channel.TCP.TcpServerChannel.IOWorker)">
            <summary>init tcp server channel
            </summary>
            <param name="factory"></param>
            <param name="port"></param>
            <param name="ioWorker">deal with networkstream</param>
        </member>
        <member name="M:Taobao.Top.Link.Endpoints.SendCallback.WaitReturn(System.Int32)">
            <summary>wait until got return message
            </summary>
            <param name="timeout">timeout in milliseconds</param>
        </member>
        <member name="P:Taobao.Top.Link.Endpoints.SendCallback.Target">
            <summary>get which endpoint to send
            </summary>
        </member>
        <member name="P:Taobao.Top.Link.Endpoints.SendCallback.Error">
            <summary>get error in sending
            </summary>
        </member>
        <member name="P:Taobao.Top.Link.Endpoints.SendCallback.Return">
            <summary>get reply
            </summary>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Zip.DescriptorData">
            <summary>
            Holds data pertinent to a data descriptor.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.DescriptorData.CompressedSize">
            <summary>
            Get /set the compressed size of data.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.DescriptorData.Size">
            <summary>
            Get / set the uncompressed size of data
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.DescriptorData.Crc">
            <summary>
            Get /set the crc value.
            </summary>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Zip.ZipHelperStream">
            <summary>
            This class assists with writing/reading from Zip files.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipHelperStream.#ctor(System.String)">
            <summary>
            Initialise an instance of this class.
            </summary>
            <param name="name">The name of the file to open.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipHelperStream.#ctor(System.IO.Stream)">
            <summary>
            Initialise a new instance of <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipHelperStream"/>.
            </summary>
            <param name="stream">The stream to use.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipHelperStream.Close">
            <summary>
            Close the stream.
            </summary>
            <remarks>
            The underlying stream is closed only if <see cref="P:ICSharpCode.SharpZipLib.Zip.ZipHelperStream.IsStreamOwner"/> is true.
            </remarks>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipHelperStream.LocateBlockWithSignature(System.Int32,System.Int64,System.Int32,System.Int32)">
            <summary>
            Locates a block with the desired <paramref name="signature"/>.
            </summary>
            <param name="signature">The signature to find.</param>
            <param name="endLocation">Location, marking the end of block.</param>
            <param name="minimumBlockSize">Minimum size of the block.</param>
            <param name="maximumVariableData">The maximum variable data.</param>
            <returns>Eeturns the offset of the first byte after the signature; -1 if not found</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipHelperStream.WriteZip64EndOfCentralDirectory(System.Int64,System.Int64,System.Int64)">
            <summary>
            Write Zip64 end of central directory records (File header and locator).
            </summary>
            <param name="noOfEntries">The number of entries in the central directory.</param>
            <param name="sizeEntries">The size of entries in the central directory.</param>
            <param name="centralDirOffset">The offset of the dentral directory.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipHelperStream.WriteEndOfCentralDirectory(System.Int64,System.Int64,System.Int64,System.Byte[])">
            <summary>
            Write the required records to end the central directory.
            </summary>
            <param name="noOfEntries">The number of entries in the directory.</param>
            <param name="sizeEntries">The size of the entries in the directory.</param>
            <param name="startOfCentralDirectory">The start of the central directory.</param>
            <param name="comment">The archive comment.  (This can be null).</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipHelperStream.ReadLEShort">
            <summary>
            Read an unsigned short in little endian byte order.
            </summary>
            <returns>Returns the value read.</returns>
            <exception cref="T:System.IO.IOException">
            An i/o error occurs.
            </exception>
            <exception cref="T:System.IO.EndOfStreamException">
            The file ends prematurely
            </exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipHelperStream.ReadLEInt">
            <summary>
            Read an int in little endian byte order.
            </summary>
            <returns>Returns the value read.</returns>
            <exception cref="T:System.IO.IOException">
            An i/o error occurs.
            </exception>
            <exception cref="T:System.IO.EndOfStreamException">
            The file ends prematurely
            </exception>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipHelperStream.ReadLELong">
            <summary>
            Read a long in little endian byte order.
            </summary>
            <returns>The value read.</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipHelperStream.WriteLEShort(System.Int32)">
            <summary>
            Write an unsigned short in little endian byte order.
            </summary>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipHelperStream.WriteLEUshort(System.UInt16)">
            <summary>
            Write a ushort in little endian byte order.
            </summary>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipHelperStream.WriteLEInt(System.Int32)">
            <summary>
            Write an int in little endian byte order.
            </summary>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipHelperStream.WriteLEUint(System.UInt32)">
            <summary>
            Write a uint in little endian byte order.
            </summary>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipHelperStream.WriteLELong(System.Int64)">
            <summary>
            Write a long in little endian byte order.
            </summary>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipHelperStream.WriteLEUlong(System.UInt64)">
            <summary>
            Write a ulong in little endian byte order.
            </summary>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipHelperStream.WriteDataDescriptor(ICSharpCode.SharpZipLib.Zip.ZipEntry)">
            <summary>
            Write a data descriptor.
            </summary>
            <param name="entry">The entry to write a descriptor for.</param>
            <returns>Returns the number of descriptor bytes written.</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipHelperStream.ReadDataDescriptor(System.Boolean,ICSharpCode.SharpZipLib.Zip.DescriptorData)">
            <summary>
            Read data descriptor at the end of compressed data.
            </summary>
            <param name="zip64">if set to <c>true</c> [zip64].</param>
            <param name="data">The data to fill in.</param>
            <returns>Returns the number of bytes read in the descriptor.</returns>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipHelperStream.IsStreamOwner">
            <summary>
            Get / set a value indicating wether the the underlying stream is owned or not.
            </summary>
            <remarks>If the stream is owned it is closed when this instance is closed.</remarks>
        </member>
        <member name="T:Top.Api.Domain.TribeInfo">
            <summary>
            TribeInfo Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TribeInfo.CheckMode">
            <summary>
            群验证模式
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TribeInfo.Icon">
            <summary>
            群头像URL地址
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TribeInfo.Name">
            <summary>
            群名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TribeInfo.Notice">
            <summary>
            群公告
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TribeInfo.RecvFlag">
            <summary>
            群接收标记
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TribeInfo.TribeId">
            <summary>
            群ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TribeInfo.TribeType">
            <summary>
            群类型
            </summary>
        </member>
        <member name="T:Top.Api.Domain.Distributor">
            <summary>
            Distributor Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Distributor.AlipayAccount">
            <summary>
            分销商的支付宝帐户
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Distributor.Appraise">
            <summary>
            分销商的淘宝卖家评价
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Distributor.CategoryId">
            <summary>
            分销商店铺主营类目
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Distributor.ContactPerson">
            <summary>
            联系人
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Distributor.Created">
            <summary>
            分销商创建时间 时间格式：yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Distributor.DistributorId">
            <summary>
            分销商Id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Distributor.DistributorName">
            <summary>
            分销商姓名
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Distributor.Email">
            <summary>
            分销商的email
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Distributor.FullName">
            <summary>
            分销商的真实姓名，认证姓名
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Distributor.Level">
            <summary>
            店铺等级
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Distributor.MobilePhone">
            <summary>
            分销商的手机号
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Distributor.Phone">
            <summary>
            分销商的电话
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Distributor.ShopWebLink">
            <summary>
            分销商的网店链接
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Distributor.Starts">
            <summary>
            分销商卖家的开店时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Distributor.UserId">
            <summary>
            分销商ID
            </summary>
        </member>
        <member name="T:Top.Api.Domain.DisplayQualifications">
            <summary>
            DisplayQualifications Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DisplayQualifications.Message">
            <summary>
            返回消息
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DisplayQualifications.Model">
            <summary>
            填充列表
            </summary>
        </member>
        <member name="P:Top.Api.Domain.DisplayQualifications.Result">
            <summary>
            是否成功
            </summary>
        </member>
        <member name="T:Top.Api.Domain.AdzoneDTO">
            <summary>
            AdzoneDTO Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.AdzoneDTO.AdzoneId">
            <summary>
            资源位id标识
            </summary>
        </member>
        <member name="P:Top.Api.Domain.AdzoneDTO.AdzoneLevel">
            <summary>
            创意等级要求，99:未分级，1:一级
            </summary>
        </member>
        <member name="P:Top.Api.Domain.AdzoneDTO.AdzoneName">
            <summary>
            资源位名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.AdzoneDTO.AdzoneSize">
            <summary>
            尺寸
            </summary>
        </member>
        <member name="P:Top.Api.Domain.AdzoneDTO.AllowAdFormat">
            <summary>
            创意类型（位运算）,1文字，2 图片，4 Flash，8 视频，16 文字链， 32 图文广告， 64 JS广告牌， 128 HTML， 256 flash不遮盖 ,  512创意模板
            </summary>
        </member>
        <member name="P:Top.Api.Domain.AdzoneDTO.AllowAdvType">
            <summary>
            广告主类型，-1:不限,1:淘宝,2:天猫,3:淘宝和天猫
            </summary>
        </member>
        <member name="P:Top.Api.Domain.AdzoneDTO.IsInside">
            <summary>
            站内/外，1站内，0站外
            </summary>
        </member>
        <member name="P:Top.Api.Domain.AdzoneDTO.MinCpmPrice">
            <summary>
            最低CPM价格
            </summary>
        </member>
        <member name="P:Top.Api.Domain.AdzoneDTO.SiteName">
            <summary>
            媒体信息
            </summary>
        </member>
        <member name="P:Top.Api.Domain.AdzoneDTO.SiteUrl">
            <summary>
            媒体url
            </summary>
        </member>
        <member name="P:Top.Api.Domain.AdzoneDTO.SnapshotPath">
            <summary>
            资源位图例
            </summary>
        </member>
        <member name="P:Top.Api.Domain.AdzoneDTO.SuitedAdCats">
            <summary>
            可投放类目，空代表不限
            </summary>
        </member>
        <member name="P:Top.Api.Domain.AdzoneDTO.Trend">
            <summary>
            资源位动态
            </summary>
        </member>
        <member name="T:Top.Api.Response.UmpPromotionGetResponse">
            <summary>
            UmpPromotionGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.UmpPromotionGetResponse.Promotions">
            <summary>
            优惠详细信息
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaCampaignBudgetGetResponse">
            <summary>
            SimbaCampaignBudgetGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaCampaignBudgetGetResponse.CampaignBudget">
            <summary>
            推广计划日限额
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaCampaignChanneloptionsGetResponse">
            <summary>
            SimbaCampaignChanneloptionsGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaCampaignChanneloptionsGetResponse.ChannelOptions">
            <summary>
            所有推广计划可投放的频道
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaCampaignPlatformGetResponse">
            <summary>
            SimbaCampaignPlatformGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaCampaignPlatformGetResponse.CampaignPlatform">
            <summary>
            取得的推广计划的投放平台设置
            </summary>
        </member>
        <member name="T:Top.Api.Response.ItemrecommendItemsGetResponse">
            <summary>
            ItemrecommendItemsGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ItemrecommendItemsGetResponse.Values">
            <summary>
            返回的推荐商品列表结果集
            </summary>
        </member>
        <member name="T:Top.Api.Response.TmallProductAddSchemaGetResponse">
            <summary>
            TmallProductAddSchemaGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallProductAddSchemaGetResponse.AddProductRule">
            <summary>
            返回发布产品的规则文档
            </summary>
        </member>
        <member name="T:Top.Api.Response.VasOrderSearchResponse">
            <summary>
            VasOrderSearchResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.VasOrderSearchResponse.ArticleBizOrders">
            <summary>
            商品订单对象
            </summary>
        </member>
        <member name="P:Top.Api.Response.VasOrderSearchResponse.TotalItem">
            <summary>
            总记录数
            </summary>
        </member>
        <member name="T:Top.Api.Response.TradeReceivetimeDelayResponse">
            <summary>
            TradeReceivetimeDelayResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TradeReceivetimeDelayResponse.Trade">
            <summary>
            更新后的交易数据，只包括tid和modified两个字段。
            </summary>
        </member>
        <member name="T:Top.Api.Response.LogisticsOfflineSendResponse">
            <summary>
            LogisticsOfflineSendResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.LogisticsOfflineSendResponse.Shipping">
            <summary>
            自己联系的调用结果
            </summary>
        </member>
        <member name="T:Top.Api.Response.JushitaJdpTasksGetResponse">
            <summary>
            JushitaJdpTasksGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.JushitaJdpTasksGetResponse.DataPushTasks">
            <summary>
            查询到的未执行任务
            </summary>
        </member>
        <member name="T:Top.Api.Response.LogisticsOrdersGetResponse">
            <summary>
            LogisticsOrdersGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.LogisticsOrdersGetResponse.Shippings">
            <summary>
            获取的物流订单详情列表   返回的Shipping包含的具体信息为入参fields请求的字段信息
            </summary>
        </member>
        <member name="P:Top.Api.Response.LogisticsOrdersGetResponse.TotalResults">
            <summary>
            搜索到的物流订单列表总数
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaAdgroupNonsearchstatesUpdateResponse">
            <summary>
            SimbaAdgroupNonsearchstatesUpdateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaAdgroupNonsearchstatesUpdateResponse.AdgroupList">
            <summary>
            推广组列表
            </summary>
        </member>
        <member name="T:Top.Api.Response.TopSecretRegisterResponse">
            <summary>
            TopSecretRegisterResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TopSecretRegisterResponse.Result">
            <summary>
            返回操作是否成功
            </summary>
        </member>
        <member name="T:Top.Api.Response.PictureCategoryGetResponse">
            <summary>
            PictureCategoryGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.PictureCategoryGetResponse.PictureCategories">
            <summary>
            图片分类
            </summary>
        </member>
        <member name="T:Top.Api.Response.WangwangEserviceAvgwaittimeGetResponse">
            <summary>
            WangwangEserviceAvgwaittimeGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.WangwangEserviceAvgwaittimeGetResponse.WaitingTimeListOnDays">
            <summary>
            平均等待时长
            </summary>
        </member>
        <member name="T:Top.Api.Response.RefundGetResponse">
            <summary>
            RefundGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.RefundGetResponse.Refund">
            <summary>
            退款详情
            </summary>
        </member>
        <member name="T:Top.Api.Response.RefundRefuseResponse">
            <summary>
            RefundRefuseResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.RefundRefuseResponse.IsSuccess">
            <summary>
            拒绝退款操作是否成功
            </summary>
        </member>
        <member name="P:Top.Api.Response.RefundRefuseResponse.Refund">
            <summary>
            拒绝退款成功后，会返回Refund数据结构中的refund_id, status, modified字段
            </summary>
        </member>
        <member name="T:Top.Api.Response.ProductsSearchResponse">
            <summary>
            ProductsSearchResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ProductsSearchResponse.Products">
            <summary>
            返回具体信息为入参fields请求的字段信息
            </summary>
        </member>
        <member name="P:Top.Api.Response.ProductsSearchResponse.TotalResults">
            <summary>
            结果总数
            </summary>
        </member>
        <member name="T:Top.Api.Request.WangwangEserviceAccountstatusGetRequest">
            <summary>
            TOP API: taobao.wangwang.eservice.accountstatus.get
            </summary>
        </member>
        <!-- 对于成员“P:Top.Api.Request.WangwangEserviceAccountstatusGetRequest.Btime”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“P:Top.Api.Request.WangwangEserviceAccountstatusGetRequest.Etime”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“P:Top.Api.Request.WangwangEserviceAccountstatusGetRequest.Uid”忽略有格式错误的 XML 注释 -->
        <member name="T:Top.Api.Request.SimbaKeywordsDeleteRequest">
            <summary>
            TOP API: taobao.simba.keywords.delete
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaKeywordsDeleteRequest.CampaignId">
            <summary>
            推广计划Id
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaKeywordsDeleteRequest.KeywordIds">
            <summary>
            关键词Id数组，最多100个
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaKeywordsDeleteRequest.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaCampaignAreaGetRequest">
            <summary>
            TOP API: taobao.simba.campaign.area.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaCampaignAreaGetRequest.CampaignId">
            <summary>
            推广计划Id
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaCampaignAreaGetRequest.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaCreativeUpdateRequest">
            <summary>
            TOP API: taobao.simba.creative.update
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaCreativeUpdateRequest.AdgroupId">
            <summary>
            推广组Id
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaCreativeUpdateRequest.CreativeId">
            <summary>
            创意Id
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaCreativeUpdateRequest.ImgUrl">
            <summary>
            创意图片地址，必须是推广组对应商品的图片之一
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaCreativeUpdateRequest.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaCreativeUpdateRequest.Title">
            <summary>
            创意标题，最多20个汉字
            </summary>
        </member>
        <member name="T:Top.Api.Request.TopatsSimbaCampkeywordeffectGetRequest">
            <summary>
            TOP API: taobao.topats.simba.campkeywordeffect.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.TopatsSimbaCampkeywordeffectGetRequest.CampaignId">
            <summary>
            查询推广计划ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.TopatsSimbaCampkeywordeffectGetRequest.SearchType">
            <summary>
            报表类型。可选值：SEARCH（搜索）、CAT（类目出价）、 NOSEARCH（定向投放），可多选，如：SEARCH,CAT
            </summary>
        </member>
        <member name="P:Top.Api.Request.TopatsSimbaCampkeywordeffectGetRequest.Source">
            <summary>
            数据来源。可选值：1（站内）、2（站外）、SUMMARY（汇总），其中SUMMARY必须单选，其它值可多选，如：1,2
            </summary>
        </member>
        <member name="P:Top.Api.Request.TopatsSimbaCampkeywordeffectGetRequest.TimeSlot">
            <summary>
            时间参数（昨天：DAY、 前一周：7DAY 、前15天：15DAY 、前30天：30DAY 、前90天：90DAY）单选
            </summary>
        </member>
        <member name="T:Top.Api.Request.TmallItemShiptimeUpdateRequest">
            <summary>
            TOP API: tmall.item.shiptime.update
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemShiptimeUpdateRequest.ItemId">
            <summary>
            商品ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemShiptimeUpdateRequest.Option">
            <summary>
            批量更新商品/SKU发货时间的备选项
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemShiptimeUpdateRequest.ShipTime">
            <summary>
            被更新发货时间（商品级）；格式和具体设置的发货时间格式相关。绝对发货时间填写yyyy-MM-dd;相对发货时间填写数字。发货时间必须在当前时间后三天。如果设置的绝对时间小于当前时间的三天后，会清除该商品的发货时间设置。如果是相对时间小于3，则会提示出错。如果shiptimeType为0，要清除商品上的发货时间，该字段可以填任意字符,也可以不填。
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemShiptimeUpdateRequest.SkuShipTimes">
            <summary>
            被更新SKU的发货时间，后台会根据三个子属性去查找匹配的sku，如果找到就默认对sku进行更新，当无匹配sku且更新类型针对sku，会报错。
            </summary>
        </member>
        <member name="T:Top.Api.Request.TmallItemShiptimeUpdateRequest.UpdateSkuShipTimeDomain">
            <summary>
            UpdateSkuShipTimeDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemShiptimeUpdateRequest.UpdateSkuShipTimeDomain.OuterId">
            <summary>
            Sku的商家外部id；如：2015_07_23_D_123
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemShiptimeUpdateRequest.UpdateSkuShipTimeDomain.Properties">
            <summary>
            Sku属性串。格式:pid:vid;pid:vid,如: 1627207:3232483;1630696:3284570,表示机身颜色:军绿色;手机套餐:一电一充
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemShiptimeUpdateRequest.UpdateSkuShipTimeDomain.ShipTime">
            <summary>
            被更新发货时间；格式和具体设置的发货时间格式相关。绝对发货时间填写yyyy-MM-dd;相对发货时间填写数字。
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemShiptimeUpdateRequest.UpdateSkuShipTimeDomain.SkuId">
            <summary>
            SKU的ID
            </summary>
        </member>
        <member name="T:Top.Api.Request.TmallItemShiptimeUpdateRequest.UpdateItemShipTimeOptionDomain">
            <summary>
            UpdateItemShipTimeOptionDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemShiptimeUpdateRequest.UpdateItemShipTimeOptionDomain.ShipTimeType">
            <summary>
            0代表清空匹配的SKU发货时间数据或者商品发货时间数据；1代表：固定发货时间；2代表：相对发货时间
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemShiptimeUpdateRequest.UpdateItemShipTimeOptionDomain.UpdateType">
            <summary>
            更新类型，默认不填时更新sku，0表示更新sku，1表示更新商品维度，其他值均非法
            </summary>
        </member>
        <member name="T:Top.Api.Request.HttpdnsGetRequest">
            <summary>
            TOP API: taobao.httpdns.get
            </summary>
        </member>
        <member name="T:Top.Api.Request.WirelessXcodeCreateRequest">
            <summary>
            TOP API: taobao.wireless.xcode.create
            </summary>
        </member>
        <member name="P:Top.Api.Request.WirelessXcodeCreateRequest.BizCode">
            <summary>
            码平台开放的业务code
            </summary>
        </member>
        <member name="P:Top.Api.Request.WirelessXcodeCreateRequest.Content">
            <summary>
            原始内容/原始地址
            </summary>
        </member>
        <member name="P:Top.Api.Request.WirelessXcodeCreateRequest.Style">
            <summary>
            普通二维码样式参数
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaInsightCatsforecastnewGetRequest">
            <summary>
            TOP API: taobao.simba.insight.catsforecastnew.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaInsightCatsforecastnewGetRequest.BidwordList">
            <summary>
            需要查询的词列表
            </summary>
        </member>
        <member name="T:Top.Api.Request.TmallProductSpecsTicketGetRequest">
            <summary>
            TOP API: tmall.product.specs.ticket.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallProductSpecsTicketGetRequest.SpecIds">
            <summary>
            产品规格ID，多个用逗号分隔
            </summary>
        </member>
        <member name="T:Top.Api.Request.ItemsListGetRequest">
            <summary>
            TOP API: taobao.items.list.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemsListGetRequest.Fields">
            <summary>
            需要返回的商品对象字段。可选值：Item商品结构体中字段均可返回(其中item_weight,item_size,sold_quantity暂未返回)；多个字段用“,”分隔。如果想返回整个子对象，fields设置相应字段，如itemimg；如果想返回子对象里面的某个字段，那字段设为某个值，如itemimg.url。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemsListGetRequest.NumIids">
            <summary>
            商品数字id列表，多个num_iid用逗号隔开，一次不超过20个。
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaRtrptAdgroupGetRequest">
            <summary>
            TOP API: taobao.simba.rtrpt.adgroup.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRtrptAdgroupGetRequest.CampaignId">
            <summary>
            推广计划id
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRtrptAdgroupGetRequest.Nick">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRtrptAdgroupGetRequest.PageNumber">
            <summary>
            页码
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRtrptAdgroupGetRequest.PageSize">
            <summary>
            每页大小
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRtrptAdgroupGetRequest.TheDate">
            <summary>
            日期，格式yyyy-mm-dd
            </summary>
        </member>
        <member name="T:Top.Api.Request.TmallProductSuitespecsGetRequest">
            <summary>
            TOP API: tmall.product.suitespecs.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallProductSuitespecsGetRequest.CatId">
            <summary>
            类目的ID号，该id必须和properties同时传入。  而且只有当product_id不传入的时候才起效果。
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallProductSuitespecsGetRequest.ProductId">
            <summary>
            产品的ID。这个不能和properties和cat_id同时起效果
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallProductSuitespecsGetRequest.Properties">
            <summary>
            关键属性的字符串，pid:vid;pid:vid  该字段必须和cat_id同时传入才起效果。 而且只有当product_id不传入的时候才起效果。
            </summary>
        </member>
        <member name="T:Top.Api.Request.ProductPropimgDeleteRequest">
            <summary>
            TOP API: taobao.product.propimg.delete
            </summary>
        </member>
        <member name="P:Top.Api.Request.ProductPropimgDeleteRequest.Id">
            <summary>
            属性图片ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.ProductPropimgDeleteRequest.ProductId">
            <summary>
            产品ID.Product的id.
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaRptAdgroupeffectGetRequest">
            <summary>
            TOP API: taobao.simba.rpt.adgroupeffect.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptAdgroupeffectGetRequest.AdgroupId">
            <summary>
            推广组id
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptAdgroupeffectGetRequest.CampaignId">
            <summary>
            推广计划id
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptAdgroupeffectGetRequest.EndTime">
            <summary>
            结束时间，格式yyyy-mm-dd
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptAdgroupeffectGetRequest.Nick">
            <summary>
            昵称
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptAdgroupeffectGetRequest.PageNo">
            <summary>
            页码
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptAdgroupeffectGetRequest.PageSize">
            <summary>
            每页大小
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptAdgroupeffectGetRequest.SearchType">
            <summary>
            报表类型（搜索：SEARCH,类目出价：CAT,  定向投放：NOSEARCH ）可以一次取多个例如：SEARCH,CAT
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptAdgroupeffectGetRequest.Source">
            <summary>
            数据来源（PC站内：1，PC站外：2，无线站内：4，无线站外 : 5）可多选，以逗号分隔
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptAdgroupeffectGetRequest.StartTime">
            <summary>
            开始时间，格式yyyy-mm-dd
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptAdgroupeffectGetRequest.SubwayToken">
            <summary>
            权限校验参数
            </summary>
        </member>
        <member name="T:Top.Api.Request.TradeMemoAddRequest">
            <summary>
            TOP API: taobao.trade.memo.add
            </summary>
        </member>
        <member name="P:Top.Api.Request.TradeMemoAddRequest.Flag">
            <summary>
            交易备注旗帜，可选值为：0(灰色), 1(红色), 2(黄色), 3(绿色), 4(蓝色), 5(粉红色)，默认值为0
            </summary>
        </member>
        <member name="P:Top.Api.Request.TradeMemoAddRequest.Memo">
            <summary>
            交易备注。最大长度: 1000个字节
            </summary>
        </member>
        <member name="P:Top.Api.Request.TradeMemoAddRequest.Tid">
            <summary>
            交易编号
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaRptAdgroupkeywordeffectGetRequest">
            <summary>
            TOP API: taobao.simba.rpt.adgroupkeywordeffect.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptAdgroupkeywordeffectGetRequest.AdgroupId">
            <summary>
            推广组ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptAdgroupkeywordeffectGetRequest.CampaignId">
            <summary>
            推广计划ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptAdgroupkeywordeffectGetRequest.EndTime">
            <summary>
            结束时间，格式yyyy-mm-dd；开始时间结束时间间隔不能超过30天
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptAdgroupkeywordeffectGetRequest.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptAdgroupkeywordeffectGetRequest.PageNo">
            <summary>
            页码
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptAdgroupkeywordeffectGetRequest.PageSize">
            <summary>
            每页大小
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptAdgroupkeywordeffectGetRequest.SearchType">
            <summary>
            报表类型（搜索：SEARCH,类目出价：CAT, 定向投放：NOSEARCH）可多选例如：SEARCH,CAT
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptAdgroupkeywordeffectGetRequest.Source">
            <summary>
            数据来源（PC站内：1，PC站外：2，无线站内：4，无线站外 : 5，汇总：SUMMARY）SUMMARY必须单选，其他值可多选例如1,2
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptAdgroupkeywordeffectGetRequest.StartTime">
            <summary>
            开始时间，格式yyyy-mm-dd
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptAdgroupkeywordeffectGetRequest.SubwayToken">
            <summary>
            权限校验参数
            </summary>
        </member>
        <member name="T:Top.Api.Request.ProductImgUploadRequest">
            <summary>
            TOP API: taobao.product.img.upload
            </summary>
        </member>
        <member name="P:Top.Api.Request.ProductImgUploadRequest.Id">
            <summary>
            产品图片ID.修改图片时需要传入
            </summary>
        </member>
        <member name="P:Top.Api.Request.ProductImgUploadRequest.Image">
            <summary>
            图片内容.图片最大为500K,只支持JPG,GIF格式.
            </summary>
        </member>
        <member name="P:Top.Api.Request.ProductImgUploadRequest.IsMajor">
            <summary>
            是否将该图片设为主图.可选值:true,false;默认值:false.
            </summary>
        </member>
        <member name="P:Top.Api.Request.ProductImgUploadRequest.Position">
            <summary>
            图片序号
            </summary>
        </member>
        <member name="P:Top.Api.Request.ProductImgUploadRequest.ProductId">
            <summary>
            产品ID.Product的id
            </summary>
        </member>
        <member name="T:Top.Api.Request.ProductsSearchRequest">
            <summary>
            TOP API: taobao.products.search
            </summary>
        </member>
        <member name="P:Top.Api.Request.ProductsSearchRequest.BarcodeStr">
            <summary>
            按条码搜索产品信息,多个逗号隔开，不支持条码为全零的方式
            </summary>
        </member>
        <member name="P:Top.Api.Request.ProductsSearchRequest.Cid">
            <summary>
            商品类目ID.调用taobao.itemcats.get获取.
            </summary>
        </member>
        <member name="P:Top.Api.Request.ProductsSearchRequest.CustomerProps">
            <summary>
            用户自定义关键属性,结构：pid1:value1;pid2:value2，如果有型号，系列等子属性用: 隔开 例如：“20000:优衣库:型号:001;632501:1234”，表示“品牌:优衣库:型号:001;货号:1234”
            </summary>
        </member>
        <member name="P:Top.Api.Request.ProductsSearchRequest.Fields">
            <summary>
            需返回的字段列表.可选值:Product数据结构中的以下字段:product_id,name,pic_url,cid,props,price,tsc;多个字段之间用","分隔.新增字段status(product的当前状态)
            </summary>
        </member>
        <member name="P:Top.Api.Request.ProductsSearchRequest.MarketId">
            <summary>
            市场ID，1为取C2C市场的产品信息， 2为取B2C市场的产品信息。  不填写此值则默认取C2C的产品信息。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ProductsSearchRequest.PageNo">
            <summary>
            页码.传入值为1代表第一页,传入值为2代表第二页,依此类推.默认返回的数据是从第一页开始.
            </summary>
        </member>
        <member name="P:Top.Api.Request.ProductsSearchRequest.PageSize">
            <summary>
            每页条数.每页返回最多返回100条,默认值为40.
            </summary>
        </member>
        <member name="P:Top.Api.Request.ProductsSearchRequest.Props">
            <summary>
            属性,属性值的组合.格式:pid:vid;pid:vid;调用taobao.itemprops.get获取类目属性pid   ,再用taobao.itempropvalues.get取得vid.
            </summary>
        </member>
        <member name="P:Top.Api.Request.ProductsSearchRequest.Q">
            <summary>
            搜索的关键词是用来搜索产品的title.　注:q,cid和props至少传入一个
            </summary>
        </member>
        <member name="P:Top.Api.Request.ProductsSearchRequest.Status">
            <summary>
            想要获取的产品的状态列表，支持多个状态并列获取，多个状态之间用","分隔，最多同时指定5种状态。例如，只获取小二确认的spu传入"3",只要商家确认的传入"0"，既要小二确认又要商家确认的传入"0,3"。目前只支持者两种类型的状态搜索，输入其他状态无效。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ProductsSearchRequest.SuiteItemsStr">
            <summary>
            按关联产品规格specs搜索套装产品
            </summary>
        </member>
        <member name="P:Top.Api.Request.ProductsSearchRequest.VerticalMarket">
            <summary>
            传入值为：3表示3C表示3C垂直市场产品，4表示鞋城垂直市场产品，8表示网游垂直市场产品。一次只能指定一种垂直市场类型
            </summary>
        </member>
        <member name="T:Top.Api.Domain.ItemTaoSirElDO">
            <summary>
            ItemTaoSirElDO Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ItemTaoSirElDO.IsInput">
            <summary>
            是否输入框
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ItemTaoSirElDO.IsLabel">
            <summary>
            是否文本元素，用于显示也用于组装value_name，比如：操作符
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ItemTaoSirElDO.IsShowLabel">
            <summary>
            是否只用于显示的文本元素
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ItemTaoSirElDO.Text">
            <summary>
            显示文本
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ItemTaoSirElDO.Type">
            <summary>
            0 - 类型为label元素，只用于展示，不用于组装value_name；  1 - 类型为label元素，用于展示，用于组装value_name；  2 - 类型为输入狂元素，主要用于卖家输入数据. 卖家填写完后需要重新设置该元素的文本数据；
            </summary>
        </member>
        <member name="T:Top.Api.Domain.RtRptResultEntityDTO">
            <summary>
            RtRptResultEntityDTO Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RtRptResultEntityDTO.Adgroupid">
            <summary>
            推广组id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RtRptResultEntityDTO.Bidwordid">
            <summary>
            关键词id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RtRptResultEntityDTO.Campaignid">
            <summary>
            计划id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RtRptResultEntityDTO.Carttotal">
            <summary>
            购物车总数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RtRptResultEntityDTO.Click">
            <summary>
            click
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RtRptResultEntityDTO.Cost">
            <summary>
            cost
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RtRptResultEntityDTO.Coverage">
            <summary>
            点击转化率
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RtRptResultEntityDTO.Cpc">
            <summary>
            cpc
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RtRptResultEntityDTO.Cpm">
            <summary>
            cpm
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RtRptResultEntityDTO.Creativeid">
            <summary>
            创意id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RtRptResultEntityDTO.Ctr">
            <summary>
            ctr
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RtRptResultEntityDTO.Directcarttotal">
            <summary>
            直接购物车数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RtRptResultEntityDTO.Directtransaction">
            <summary>
            直接成交金额
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RtRptResultEntityDTO.Directtransactionshipping">
            <summary>
            直接成交笔数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RtRptResultEntityDTO.Favitemtotal">
            <summary>
            收藏宝贝数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RtRptResultEntityDTO.Favshoptotal">
            <summary>
            收藏店铺数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RtRptResultEntityDTO.Favtotal">
            <summary>
            总收藏数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RtRptResultEntityDTO.Impression">
            <summary>
            impression
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RtRptResultEntityDTO.Indirectcarttotal">
            <summary>
            间接购物车数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RtRptResultEntityDTO.Indirecttransaction">
            <summary>
            间接成交金额
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RtRptResultEntityDTO.Indirecttransactionshipping">
            <summary>
            间接成交笔数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RtRptResultEntityDTO.Roi">
            <summary>
            投入产出比
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RtRptResultEntityDTO.SearchType">
            <summary>
            报表类型（搜索：0,类目出价：1, 单品定向：2, 店铺定向:3）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RtRptResultEntityDTO.Source">
            <summary>
            流量来源( PC站内:1， PC站外:2 , 移动站内:4，移动站外:5)
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RtRptResultEntityDTO.Thedate">
            <summary>
            日期
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RtRptResultEntityDTO.Transactionshippingtotal">
            <summary>
            总成交笔数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.RtRptResultEntityDTO.Transactiontotal">
            <summary>
            总成交金额
            </summary>
        </member>
        <member name="T:Top.Api.Domain.LocalityLife">
            <summary>
            LocalityLife Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.LocalityLife.ChooseLogis">
            <summary>
            表示是否使用邮寄 0: 代表不使用邮寄； 1：代表使用邮寄；如果不设置这个值，代表不使用邮寄
            </summary>
        </member>
        <member name="P:Top.Api.Domain.LocalityLife.Eticket">
            <summary>
            电子凭证业务属性
            </summary>
        </member>
        <member name="P:Top.Api.Domain.LocalityLife.Expirydate">
            <summary>
            电子交易凭证有效期，有三种格式：如果有效期为起止日期类型，此值为2012-08-06,2012-08-16 如果有效期为【购买成功日 至】类型则格式为2012-08-16如果有效期为天数类型则格式为15
            </summary>
        </member>
        <member name="P:Top.Api.Domain.LocalityLife.Merchant">
            <summary>
            格式为 码商id:nick
            </summary>
        </member>
        <member name="P:Top.Api.Domain.LocalityLife.NetworkId">
            <summary>
            网点ID,在参数empty_fields里设置locality_life.network_id可删除网点ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.LocalityLife.Obs">
            <summary>
            预约门店是否支持门店自提,1:是
            </summary>
        </member>
        <member name="P:Top.Api.Domain.LocalityLife.OnsaleAutoRefundRatio">
            <summary>
            电子凭证售中自动退款比例
            </summary>
        </member>
        <member name="P:Top.Api.Domain.LocalityLife.Packageid">
            <summary>
            新版电子凭证包 id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.LocalityLife.RefundRatio">
            <summary>
            退款比例，百分比%前的数字，1-100的正整数值；在参数empty_fields里设置locality_life.refund_ratio可删除退款比例
            </summary>
        </member>
        <!-- 对于成员“P:Top.Api.Domain.LocalityLife.Refundmafee”忽略有格式错误的 XML 注释 -->
        <member name="P:Top.Api.Domain.LocalityLife.Verification">
            <summary>
            核销打款:1代表核销打款,0代表非核销打款;在参数empty_fields里设置locality_life.verification可删除核销打款
            </summary>
        </member>
        <member name="P:Top.Api.Domain.LocalityLife.Version">
            <summary>
            电子凭证版本：新版电子凭证：1，旧版不填值
            </summary>
        </member>
        <member name="T:Top.Api.Domain.WaitingTimesOnDay">
            <summary>
            WaitingTimesOnDay Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.WaitingTimesOnDay.WaitingDate">
            <summary>
            等待时长（统计）日期
            </summary>
        </member>
        <member name="P:Top.Api.Domain.WaitingTimesOnDay.WaitingTimeByIds">
            <summary>
            等待时长列表
            </summary>
        </member>
        <member name="T:Top.Api.Domain.MpicVideo">
            <summary>
            MpicVideo Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.MpicVideo.NumIid">
            <summary>
            主图视频记录所关联的商品的数字id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.MpicVideo.VideoDuaration">
            <summary>
            主图视频的时长，单位：秒
            </summary>
        </member>
        <member name="P:Top.Api.Domain.MpicVideo.VideoId">
            <summary>
            主图视频的在淘视频中的ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.MpicVideo.VideoPic">
            <summary>
            主图视频的缩略图URL
            </summary>
        </member>
        <member name="P:Top.Api.Domain.MpicVideo.VideoStatus">
            <summary>
            主图视频的状态
            </summary>
        </member>
        <member name="T:Top.Api.Domain.SubwayItem">
            <summary>
            SubwayItem Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubwayItem.ExtraAttributes">
            <summary>
            扩展属性对象
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubwayItem.NumId">
            <summary>
            商品信息在外部系统(淘宝主站)的数字id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubwayItem.Price">
            <summary>
            商品信息在外部系统（淘宝主站）的价格
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SubwayItem.Title">
            <summary>
            商品信息在外部系统（淘宝主站）的标题
            </summary>
        </member>
        <member name="T:Top.Api.Domain.ItemMateriaValueDO">
            <summary>
            ItemMateriaValueDO Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ItemMateriaValueDO.Name">
            <summary>
            材质值名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ItemMateriaValueDO.NeedContentNumber">
            <summary>
            当前材质值，是否需要填写含量值。比如：棉 是需要填写含量值，而牛皮 是不需要填写含量值的
            </summary>
        </member>
        <member name="T:Top.Api.Domain.PropImg">
            <summary>
            PropImg Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PropImg.Created">
            <summary>
            图片创建时间 时间格式：yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PropImg.Id">
            <summary>
            属性图片的id，和商品相对应
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PropImg.Position">
            <summary>
            图片放在第几张（多图时可设置）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PropImg.Properties">
            <summary>
            图片所对应的属性组合的字符串
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PropImg.Url">
            <summary>
            图片链接地址
            </summary>
        </member>
        <member name="T:Top.Api.Domain.ADGroupCatmatch">
            <summary>
            ADGroupCatmatch Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ADGroupCatmatch.AdgroupId">
            <summary>
            推广组id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ADGroupCatmatch.CampaignId">
            <summary>
            推广计划Id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ADGroupCatmatch.CatmatchId">
            <summary>
            类目出价Id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ADGroupCatmatch.CreateTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ADGroupCatmatch.IsDefaultPrice">
            <summary>
            是否使用推广组默认出价，false-不使用默认出价  true-使用默认出价；默认true
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ADGroupCatmatch.MaxPrice">
            <summary>
            类目出价，单位为分，不能小于5
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ADGroupCatmatch.ModifiedTime">
            <summary>
            最后修改时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ADGroupCatmatch.Nick">
            <summary>
            推广组主人昵称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ADGroupCatmatch.OnlineStatus">
            <summary>
            是否启用类目出价；offline-不启用；online-启用；默认启用
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ADGroupCatmatch.Qscore">
            <summary>
            类目出价质量得分
            </summary>
        </member>
        <member name="T:Top.Api.Domain.ExtraAttributes">
            <summary>
            ExtraAttributes Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ExtraAttributes.PublishTime">
            <summary>
            商品在淘宝的发布时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ExtraAttributes.Quantity">
            <summary>
            库存数量
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ExtraAttributes.SalesCount">
            <summary>
            商品的累积销量
            </summary>
        </member>
        <member name="T:Top.Api.Domain.ModularDescInfo">
            <summary>
            ModularDescInfo Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ModularDescInfo.DeadLine">
            <summary>
            旧描述与新描述共存时间（切换时间）。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ModularDescInfo.ItmDscModules">
            <summary>
            运营定义的该商品所属类目的类目级别模块信息列表，列表顺序即为模块顺序。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ModularDescInfo.UserOrder">
            <summary>
            默认值为false，如果此字段为true，则卖家上传的模块化的描述信息可以自定义排序。
            </summary>
        </member>
        <!-- 对于成员“P:Top.Api.Domain.ModularDescInfo.UsrDefMaxNum”忽略有格式错误的 XML 注释 -->
        <member name="T:Top.Api.Parser.TopXmlParser`1">
            <summary>
            TOP XML响应通用解释器。
            </summary>
        </member>
        <member name="M:Top.Api.Parser.TopXmlParser`1.GetRootElement(System.String)">
            <summary>
            获取XML响应的根节点名称
            </summary>
        </member>
        <member name="T:Top.Api.Parser.TopJsonReader">
            <summary>
            TOP JSON响应通用读取器。
            </summary>
        </member>
        <member name="P:Top.Api.Report.TopSdkFeedbackUploadResponse.UploadInterval">
             <summary>
            控制回传间隔，单位（毫秒）
             </summary>
        </member>
        <member name="P:Top.Api.Security.TopSecretGetRequest.RandomNum">
            <summary>
            伪随机码
            </summary>
        </member>
        <member name="P:Top.Api.Security.TopSecretGetRequest.SecretVersion">
            <summary>
            秘钥版本
            </summary>
        </member>
        <member name="P:Top.Api.Security.TopSecretGetRequest.CustomerUserId">
            <summary>
            自主账号id
            </summary>
        </member>
        <member name="T:Top.Api.TopDictionary">
            <summary>
            符合TOP习惯的纯字符串字典结构。
            </summary>
        </member>
        <member name="M:Top.Api.TopDictionary.Add(System.String,System.Object)">
            <summary>
            添加一个新的键值对。空键或者空值的键值对将会被忽略。
            </summary>
            <param name="key">键名称</param>
            <param name="value">键对应的值，目前支持：string, int, long, double, bool, DateTime类型</param>
        </member>
        <member name="T:Top.Api.Response.ZuanshiCategoryRptsTotalGetResponse">
            <summary>
            ZuanshiCategoryRptsTotalGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiCategoryRptsTotalGetResponse.CategoryOfflineRptTotalList">
            <summary>
            结果
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiCategoryRptsTotalGetResponse.DataDomain">
            <summary>
            DataDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiCategoryRptsTotalGetResponse.DataDomain.Ctr">
            <summary>
            点击率
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiCategoryRptsTotalGetResponse.DataDomain.Cvr">
            <summary>
            转化率
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiCategoryRptsTotalGetResponse.DataDomain.Ecpc">
            <summary>
            平均点击花费
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiCategoryRptsTotalGetResponse.DataDomain.Ecpm">
            <summary>
            千次展现花费
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiCategoryRptsTotalGetResponse.DataDomain.Roi">
            <summary>
            投入产出比
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiCategoryRptsTotalGetResponse.DataDomain.ShopMainCatId">
            <summary>
            类目id
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiCategoryRptsTotalGetResponse.DataDomain.ShopMainCatName">
            <summary>
            类目名称
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerDmpCrowdCancelResponse">
            <summary>
            ZuanshiBannerDmpCrowdCancelResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerDmpCrowdCancelResponse.Result">
            <summary>
            调用结果是否成功,true-成功,false-失败
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerCrowdAddResponse">
            <summary>
            ZuanshiBannerCrowdAddResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCrowdAddResponse.Result">
            <summary>
            返回结果对象
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerCrowdAddResponse.ResultDtoDomain">
            <summary>
            ResultDtoDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCrowdAddResponse.ResultDtoDomain.Message">
            <summary>
            message
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCrowdAddResponse.ResultDtoDomain.Success">
            <summary>
            调用是否成功,true-成功，false-失败
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerCreativeCreateResponse">
            <summary>
            ZuanshiBannerCreativeCreateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeCreateResponse.Result">
            <summary>
            返回结果
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerCreativeCreateResponse.ResultDomain">
            <summary>
            ResultDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeCreateResponse.ResultDomain.Id">
            <summary>
            创意ID
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeCreateResponse.ResultDomain.Message">
            <summary>
            错误时候，返回错误信息
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCreativeCreateResponse.ResultDomain.Success">
            <summary>
            true：调用成功，false：调用失败
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerCpmTargetingFindResponse">
            <summary>
            ZuanshiBannerCpmTargetingFindResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCpmTargetingFindResponse.Result">
            <summary>
            调用结果对象
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerCpmTargetingFindResponse.TargetDTODomain">
            <summary>
            TargetDTODomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCpmTargetingFindResponse.TargetDTODomain.TargetName">
            <summary>
            定向名称
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCpmTargetingFindResponse.TargetDTODomain.TargetType">
            <summary>
            定向类型,用于标识定向，创建修改查询定向接口使用
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerCpmTargetingFindResponse.ResultDTODomain">
            <summary>
            ResultDTODomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCpmTargetingFindResponse.ResultDTODomain.Message">
            <summary>
            message
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCpmTargetingFindResponse.ResultDTODomain.Success">
            <summary>
            调用是否成功
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCpmTargetingFindResponse.ResultDTODomain.Targetings">
            <summary>
            定向列表
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerAdgroupCreateResponse">
            <summary>
            ZuanshiBannerAdgroupCreateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdgroupCreateResponse.Result">
            <summary>
            result
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerAdgroupCreateResponse.ResultDomain">
            <summary>
            ResultDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdgroupCreateResponse.ResultDomain.Id">
            <summary>
            单元成功创建返回单元ID
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdgroupCreateResponse.ResultDomain.Message">
            <summary>
            message
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdgroupCreateResponse.ResultDomain.Success">
            <summary>
            success
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAdvertiserCreativeRptsTotalGetResponse">
            <summary>
            ZuanshiAdvertiserCreativeRptsTotalGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRptsTotalGetResponse.CreativeOfflineRptTotalList">
            <summary>
            返回结果
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAdvertiserCreativeRptsTotalGetResponse.DataDomain">
            <summary>
            DataDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRptsTotalGetResponse.DataDomain.AdPv">
            <summary>
            展现数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRptsTotalGetResponse.DataDomain.AdgroupId">
            <summary>
            单元id
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRptsTotalGetResponse.DataDomain.AdgroupName">
            <summary>
            单元名
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRptsTotalGetResponse.DataDomain.AlipayInShopNum">
            <summary>
            成交数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRptsTotalGetResponse.DataDomain.AlipayInshopAmt">
            <summary>
            成交额
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRptsTotalGetResponse.DataDomain.AvgAccessPageNum">
            <summary>
            平均访问页面数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRptsTotalGetResponse.DataDomain.AvgAccessTime">
            <summary>
            平均访问时长
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRptsTotalGetResponse.DataDomain.CampaignId">
            <summary>
            计划id
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRptsTotalGetResponse.DataDomain.CampaignName">
            <summary>
            计划名
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRptsTotalGetResponse.DataDomain.CartNum">
            <summary>
            加购物车数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRptsTotalGetResponse.DataDomain.Charge">
            <summary>
            花费
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRptsTotalGetResponse.DataDomain.Click">
            <summary>
            点击数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRptsTotalGetResponse.DataDomain.CreativeId">
            <summary>
            创意id
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRptsTotalGetResponse.DataDomain.CreativeName">
            <summary>
            创意名称
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRptsTotalGetResponse.DataDomain.Ctr">
            <summary>
            ctr
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRptsTotalGetResponse.DataDomain.Cvr">
            <summary>
            cvr
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRptsTotalGetResponse.DataDomain.DeepInshopUv">
            <summary>
            深度进店uv
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRptsTotalGetResponse.DataDomain.DirShopColNum">
            <summary>
            店铺收藏数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRptsTotalGetResponse.DataDomain.Ecpc">
            <summary>
            ecpc
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRptsTotalGetResponse.DataDomain.Ecpm">
            <summary>
            ecpm
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRptsTotalGetResponse.DataDomain.GmvInshopAmt">
            <summary>
            gmv成交额
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRptsTotalGetResponse.DataDomain.GmvInshopNum">
            <summary>
            gmv成交数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRptsTotalGetResponse.DataDomain.ImgUrl">
            <summary>
            创意图片url
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRptsTotalGetResponse.DataDomain.InshopItemColNum">
            <summary>
            宝贝收藏数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRptsTotalGetResponse.DataDomain.Roi">
            <summary>
            投入产出比
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCreativeRptsTotalGetResponse.DataDomain.Uv">
            <summary>
            uv
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAdvertiserAdzoneRtrptsGetResponse">
            <summary>
            ZuanshiAdvertiserAdzoneRtrptsGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRtrptsGetResponse.AdzoneRealtimeRptList">
            <summary>
            查询结果
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAdvertiserAdzoneRtrptsGetResponse.DataDomain">
            <summary>
            DataDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRtrptsGetResponse.DataDomain.AdPv">
            <summary>
            展现量
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRtrptsGetResponse.DataDomain.AdgroupId">
            <summary>
            推广单元id
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRtrptsGetResponse.DataDomain.AdzoneId">
            <summary>
            位置id
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRtrptsGetResponse.DataDomain.CampaignId">
            <summary>
            计划id
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRtrptsGetResponse.DataDomain.Charge">
            <summary>
            花费
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRtrptsGetResponse.DataDomain.Click">
            <summary>
            点击数
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRtrptsGetResponse.DataDomain.Ctr">
            <summary>
            点击率
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRtrptsGetResponse.DataDomain.Ecpc">
            <summary>
            平均点击花费
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRtrptsGetResponse.DataDomain.Ecpm">
            <summary>
            千次展现成本
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRtrptsGetResponse.DataDomain.HourId">
            <summary>
            小时数；取值范围0-23
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserAdzoneRtrptsGetResponse.DataDomain.LogDate">
            <summary>
            查询日期
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAccountGetResponse">
            <summary>
            ZuanshiAccountGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAccountGetResponse.Result">
            <summary>
            返回结果
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAccountGetResponse.AccountDTODomain">
            <summary>
            AccountDTODomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAccountGetResponse.AccountDTODomain.AvailableBalance">
            <summary>
            可用余额，单位:元
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAccountGetResponse.AccountDTODomain.Banlance">
            <summary>
            余额，单位:元
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAccountGetResponse.AccountDTODomain.CashBalance">
            <summary>
            现金余额，单位:元
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAccountGetResponse.AccountDTODomain.CreditBalance">
            <summary>
            授信额度，单位:元
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAccountGetResponse.AccountDTODomain.GrantBalance">
            <summary>
            赠款余额，单位:元
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAccountGetResponse.AccountDTODomain.RedPacket">
            <summary>
            红包，单位:元
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAccountGetResponse.ResultDTODomain">
            <summary>
            ResultDTODomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAccountGetResponse.ResultDTODomain.Account">
            <summary>
            账户信息
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAccountGetResponse.ResultDTODomain.Message">
            <summary>
            message
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAccountGetResponse.ResultDTODomain.Success">
            <summary>
            是否调用成功
            </summary>
        </member>
        <member name="T:Top.Api.Response.WirelessShareTpwdCreateResponse">
            <summary>
            WirelessShareTpwdCreateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.WirelessShareTpwdCreateResponse.Model">
            <summary>
            口令内容，用于口令宣传组织
            </summary>
        </member>
        <member name="T:Top.Api.Response.TmcUserTopicsGetResponse">
            <summary>
            TmcUserTopicsGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmcUserTopicsGetResponse.ResultCode">
            <summary>
            错误码
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmcUserTopicsGetResponse.ResultMessage">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmcUserTopicsGetResponse.Topics">
            <summary>
            topic列表
            </summary>
        </member>
        <member name="T:Top.Api.Response.TbkJuTqgGetResponse">
            <summary>
            TbkJuTqgGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkJuTqgGetResponse.Results">
            <summary>
            淘抢购对象
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkJuTqgGetResponse.TotalResults">
            <summary>
            返回的结果数
            </summary>
        </member>
        <member name="T:Top.Api.Response.TbkJuTqgGetResponse.ResultsDomain">
            <summary>
            ResultsDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkJuTqgGetResponse.ResultsDomain.CategoryName">
            <summary>
            类目名称
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkJuTqgGetResponse.ResultsDomain.ClickUrl">
            <summary>
            商品链接（是淘客商品返回淘客链接，非淘客商品返回普通h5链接）
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkJuTqgGetResponse.ResultsDomain.EndTime">
            <summary>
            结束时间
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkJuTqgGetResponse.ResultsDomain.NumIid">
            <summary>
            商品ID
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkJuTqgGetResponse.ResultsDomain.PicUrl">
            <summary>
            商品主图
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkJuTqgGetResponse.ResultsDomain.ReservePrice">
            <summary>
            商品原价
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkJuTqgGetResponse.ResultsDomain.SoldNum">
            <summary>
            已抢购数量
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkJuTqgGetResponse.ResultsDomain.StartTime">
            <summary>
            开团时间
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkJuTqgGetResponse.ResultsDomain.Title">
            <summary>
            商品标题
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkJuTqgGetResponse.ResultsDomain.TotalAmount">
            <summary>
            总库存
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkJuTqgGetResponse.ResultsDomain.ZkFinalPrice">
            <summary>
            淘抢购活动价
            </summary>
        </member>
        <member name="T:Top.Api.Response.TbkItemInfoGetResponse">
            <summary>
            TbkItemInfoGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkItemInfoGetResponse.Results">
            <summary>
            淘宝客商品
            </summary>
        </member>
        <member name="T:Top.Api.Response.InventoryAdjustExternalResponse">
            <summary>
            InventoryAdjustExternalResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.InventoryAdjustExternalResponse.OperateCode">
            <summary>
            操作返回码
            </summary>
        </member>
        <member name="P:Top.Api.Response.InventoryAdjustExternalResponse.TipInfos">
            <summary>
            提示信息
            </summary>
        </member>
        <member name="T:Top.Api.Response.FenxiaoProductImageUploadResponse">
            <summary>
            FenxiaoProductImageUploadResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoProductImageUploadResponse.Created">
            <summary>
            操作时间
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoProductImageUploadResponse.Result">
            <summary>
            操作是否成功
            </summary>
        </member>
        <member name="T:Top.Api.Response.FenxiaoProductcatAddResponse">
            <summary>
            FenxiaoProductcatAddResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoProductcatAddResponse.IsSuccess">
            <summary>
            操作是否成功
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoProductcatAddResponse.ProductLineId">
            <summary>
            产品线ID
            </summary>
        </member>
        <member name="T:Top.Api.Response.FenxiaoCooperationAuditResponse">
            <summary>
            FenxiaoCooperationAuditResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoCooperationAuditResponse.IsSuccess">
            <summary>
            操作是否成功
            </summary>
        </member>
        <member name="T:Top.Api.Response.DmpTagGetResponse">
            <summary>
            DmpTagGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.DmpTagGetResponse.Result">
            <summary>
            返回结果
            </summary>
        </member>
        <member name="T:Top.Api.Response.DmpTagGetResponse.TagOptionDTODomain">
            <summary>
            TagOptionDTODomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.DmpTagGetResponse.TagOptionDTODomain.Id">
            <summary>
            标签选项ID，注意:只用于和parentId一起判断选项父子关系,创建人群使用optionValue
            </summary>
        </member>
        <member name="P:Top.Api.Response.DmpTagGetResponse.TagOptionDTODomain.OptionGroupId">
            <summary>
            选项所属的选项分组ID
            </summary>
        </member>
        <member name="P:Top.Api.Response.DmpTagGetResponse.TagOptionDTODomain.OptionName">
            <summary>
            标签选项显示名称
            </summary>
        </member>
        <member name="P:Top.Api.Response.DmpTagGetResponse.TagOptionDTODomain.OptionValue">
            <summary>
            标签选项取值,用于创建人群等
            </summary>
        </member>
        <member name="P:Top.Api.Response.DmpTagGetResponse.TagOptionDTODomain.ParentOptionId">
            <summary>
            父选项ID,0表示是顶层选项
            </summary>
        </member>
        <member name="P:Top.Api.Response.DmpTagGetResponse.TagOptionDTODomain.SortNum">
            <summary>
            选项排序
            </summary>
        </member>
        <member name="T:Top.Api.Response.DmpTagGetResponse.TagOptionGroupDtTODomain">
            <summary>
            TagOptionGroupDtTODomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.DmpTagGetResponse.TagOptionGroupDtTODomain.GroupName">
            <summary>
            标签选项分组名称
            </summary>
        </member>
        <member name="P:Top.Api.Response.DmpTagGetResponse.TagOptionGroupDtTODomain.Id">
            <summary>
            标签选项分组ID，用于创建人群使用
            </summary>
        </member>
        <member name="P:Top.Api.Response.DmpTagGetResponse.TagOptionGroupDtTODomain.TagOptionDTOs">
            <summary>
            tagOptionDTOs
            </summary>
        </member>
        <member name="P:Top.Api.Response.DmpTagGetResponse.TagOptionGroupDtTODomain.Type">
            <summary>
            标签类型，单选，多选，输入框等
            </summary>
        </member>
        <member name="T:Top.Api.Response.DmpTagGetResponse.TagDTODomain">
            <summary>
            TagDTODomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.DmpTagGetResponse.TagDTODomain.Id">
            <summary>
            标签ID
            </summary>
        </member>
        <member name="P:Top.Api.Response.DmpTagGetResponse.TagDTODomain.TagDesc">
            <summary>
            标签描述
            </summary>
        </member>
        <member name="P:Top.Api.Response.DmpTagGetResponse.TagDTODomain.TagName">
            <summary>
            标签名称
            </summary>
        </member>
        <member name="P:Top.Api.Response.DmpTagGetResponse.TagDTODomain.TagOptionGroupDTOs">
            <summary>
            标签选项分组，如店铺标签有2个分组，一个
            </summary>
        </member>
        <member name="P:Top.Api.Response.DmpTagGetResponse.TagDTODomain.TagShare">
            <summary>
            1-共享的标签,0-私有的标签
            </summary>
        </member>
        <member name="P:Top.Api.Response.DmpTagGetResponse.TagDTODomain.TagStatus">
            <summary>
            1-正常状态,其它都为不可用状态
            </summary>
        </member>
        <member name="P:Top.Api.Response.DmpTagGetResponse.TagDTODomain.ValidDate">
            <summary>
            标签有效期
            </summary>
        </member>
        <member name="T:Top.Api.Response.DmpTagGetResponse.ResultDTODomain">
            <summary>
            ResultDTODomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.DmpTagGetResponse.ResultDTODomain.Msg">
            <summary>
            调用信息
            </summary>
        </member>
        <member name="P:Top.Api.Response.DmpTagGetResponse.ResultDTODomain.Success">
            <summary>
            调用是否成功
            </summary>
        </member>
        <member name="P:Top.Api.Response.DmpTagGetResponse.ResultDTODomain.Tag">
            <summary>
            result
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiBannerCrowdFindRequest">
            <summary>
            TOP API: taobao.zuanshi.banner.crowd.find
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCrowdFindRequest.AdgroupId">
            <summary>
            单元ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCrowdFindRequest.CampaignId">
            <summary>
            计划ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCrowdFindRequest.PageNum">
            <summary>
            当前查询的记录页数
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCrowdFindRequest.PageSize">
            <summary>
            分页大小
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCrowdFindRequest.TargetId">
            <summary>
            定向人群ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCrowdFindRequest.TargetTypes">
            <summary>
            指定多个定向类型
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiBannerCatFindRequest">
            <summary>
            TOP API: taobao.zuanshi.banner.cat.find
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCatFindRequest.CampaignType">
            <summary>
            计划类型，banner_cpm:2，banner_cpc:8
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCatFindRequest.InterestName">
            <summary>
            类目名称
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiBannerCampaignGetRequest">
            <summary>
            TOP API: taobao.zuanshi.banner.campaign.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCampaignGetRequest.Id">
            <summary>
            计划ID
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiAdzoneRptsGetRequest">
            <summary>
            TOP API: taobao.zuanshi.adzone.rpts.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdzoneRptsGetRequest.AdzoneId">
            <summary>
            资源位id标识
            </summary>
        </member>
        <member name="T:Top.Api.Request.ScitemMapQueryRequest">
            <summary>
            TOP API: taobao.scitem.map.query
            </summary>
        </member>
        <member name="P:Top.Api.Request.ScitemMapQueryRequest.ItemId">
            <summary>
            map_type为1：前台ic商品id  map_type为2：分销productid
            </summary>
        </member>
        <member name="P:Top.Api.Request.ScitemMapQueryRequest.SkuId">
            <summary>
            map_type为1：前台ic商品skuid   map_type为2：分销商品的skuid
            </summary>
        </member>
        <member name="T:Top.Api.Request.OpenimTrackGetsummaryRequest">
            <summary>
            TOP API: taobao.openim.track.getsummary
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimTrackGetsummaryRequest.Prefix">
            <summary>
            用户所属app的prefix
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimTrackGetsummaryRequest.Uid">
            <summary>
            用户id
            </summary>
        </member>
        <member name="T:Top.Api.Request.OpenimTrackGetdetailsRequest">
            <summary>
            TOP API: taobao.openim.track.getdetails
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimTrackGetdetailsRequest.Endtime">
            <summary>
            查询结束时间(UTC时间，以毫秒为单位)
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimTrackGetdetailsRequest.Prefix">
            <summary>
            用户所属app的prefix
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimTrackGetdetailsRequest.Starttime">
            <summary>
            查询开始时间(UTC时间，以毫秒为单位)
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimTrackGetdetailsRequest.Uid">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="T:Top.Api.Request.LocationRelationQueryRequest">
            <summary>
            TOP API: taobao.location.relation.query
            </summary>
        </member>
        <member name="P:Top.Api.Request.LocationRelationQueryRequest.LocationRelation">
            <summary>
            关系查询
            </summary>
        </member>
        <member name="T:Top.Api.Request.LocationRelationQueryRequest.LocationRelationDtoDomain">
            <summary>
            LocationRelationDtoDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Request.LocationRelationQueryRequest.LocationRelationDtoDomain.SourceInvStoreType">
            <summary>
            实体类型 2：仓库  6：门店
            </summary>
        </member>
        <member name="P:Top.Api.Request.LocationRelationQueryRequest.LocationRelationDtoDomain.SourceStoreCode">
            <summary>
            实体code
            </summary>
        </member>
        <member name="P:Top.Api.Request.LocationRelationQueryRequest.LocationRelationDtoDomain.TargetInvStoreType">
            <summary>
            实体类型 2：仓库  6：门店 （target,sorce 二选一填写，都填写报错）
            </summary>
        </member>
        <member name="P:Top.Api.Request.LocationRelationQueryRequest.LocationRelationDtoDomain.TargetStoreCode">
            <summary>
            实体code
            </summary>
        </member>
        <member name="T:Top.Api.Request.FenxiaoProductcatDeleteRequest">
            <summary>
            TOP API: taobao.fenxiao.productcat.delete
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductcatDeleteRequest.ProductLineId">
            <summary>
            产品线ID
            </summary>
        </member>
        <member name="T:Top.Api.Request.FenxiaoDiscountsGetRequest">
            <summary>
            TOP API: taobao.fenxiao.discounts.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoDiscountsGetRequest.DiscountId">
            <summary>
            折扣ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoDiscountsGetRequest.ExtFields">
            <summary>
            指定查询额外的信息，可选值：DETAIL（查询折扣详情），多个可选值用逗号分割。（只允许指定折扣ID情况下使用）
            </summary>
        </member>
        <member name="T:Taobao.Top.Link.Util.GZIPHelper">
            <summary>zip helper compatible with java version
            </summary>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Zip.ITaggedData">
            <summary>
            ExtraData tagged value interface.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ITaggedData.SetData(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Set the contents of this instance from the data passed.
            </summary>
            <param name="data">The data to extract contents from.</param>
            <param name="offset">The offset to begin extracting data from.</param>
            <param name="count">The number of bytes to extract.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ITaggedData.GetData">
            <summary>
            Get the data representing this instance.
            </summary>
            <returns>Returns the data for this instance.</returns>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ITaggedData.TagID">
            <summary>
            Get the ID for this tagged data value.
            </summary>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Zip.RawTaggedData">
            <summary>
            A raw binary tagged value
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.RawTaggedData.#ctor(System.Int16)">
            <summary>
            Initialise a new instance.
            </summary>
            <param name="tag">The tag ID.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.RawTaggedData.SetData(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Set the data from the raw values provided.
            </summary>
            <param name="data">The raw data to extract values from.</param>
            <param name="offset">The index to start extracting values from.</param>
            <param name="count">The number of bytes available.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.RawTaggedData.GetData">
            <summary>
            Get the binary data representing this instance.
            </summary>
            <returns>The raw binary data representing this instance.</returns>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.RawTaggedData._tag">
            <summary>
            The tag ID for this instance.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.RawTaggedData.TagID">
            <summary>
            Get the ID for this tagged data value.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.RawTaggedData.Data">
            <summary>
            Get /set the binary data representing this instance.
            </summary>
            <returns>The raw binary data representing this instance.</returns>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Zip.ExtendedUnixData">
            <summary>
            Class representing extended unix date time values.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ExtendedUnixData.SetData(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Set the data from the raw values provided.
            </summary>
            <param name="data">The raw data to extract values from.</param>
            <param name="index">The index to start extracting values from.</param>
            <param name="count">The number of bytes available.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ExtendedUnixData.GetData">
            <summary>
            Get the binary data representing this instance.
            </summary>
            <returns>The raw binary data representing this instance.</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ExtendedUnixData.IsValidValue(System.DateTime)">
            <summary>
            Test a <see cref="T:System.DateTime"> value to see if is valid and can be represented here.</see>
            </summary>
            <param name="value">The <see cref="T:System.DateTime">value</see> to test.</param>
            <returns>Returns true if the value is valid and can be represented; false if not.</returns>
            <remarks>The standard Unix time is a signed integer data type, directly encoding the Unix time number,
            which is the number of seconds since 1970-01-01.
            Being 32 bits means the values here cover a range of about 136 years.
            The minimum representable time is 1901-12-13 20:45:52,
            and the maximum representable time is 2038-01-19 03:14:07.
            </remarks>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ExtendedUnixData.TagID">
            <summary>
            Get the ID
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ExtendedUnixData.ModificationTime">
            <summary>
            Get /set the Modification Time
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
            <seealso cref="M:ICSharpCode.SharpZipLib.Zip.ExtendedUnixData.IsValidValue(System.DateTime)"></seealso>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ExtendedUnixData.AccessTime">
            <summary>
            Get / set the Access Time
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
            <seealso cref="M:ICSharpCode.SharpZipLib.Zip.ExtendedUnixData.IsValidValue(System.DateTime)"></seealso>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ExtendedUnixData.CreateTime">
            <summary>
            Get / Set the Create Time
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
            <seealso cref="M:ICSharpCode.SharpZipLib.Zip.ExtendedUnixData.IsValidValue(System.DateTime)"></seealso>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ExtendedUnixData.Include">
            <summary>
            Get/set the <see cref="T:ICSharpCode.SharpZipLib.Zip.ExtendedUnixData.Flags">values</see> to include.
            </summary>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Zip.ExtendedUnixData.Flags">
            <summary>
            Flags indicate which values are included in this instance.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.ExtendedUnixData.Flags.ModificationTime">
            <summary>
            The modification time is included
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.ExtendedUnixData.Flags.AccessTime">
            <summary>
            The access time is included
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.ExtendedUnixData.Flags.CreateTime">
            <summary>
            The create time is included.
            </summary>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Zip.NTTaggedData">
            <summary>
            Class handling NT date time values.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.NTTaggedData.SetData(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Set the data from the raw values provided.
            </summary>
            <param name="data">The raw data to extract values from.</param>
            <param name="index">The index to start extracting values from.</param>
            <param name="count">The number of bytes available.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.NTTaggedData.GetData">
            <summary>
            Get the binary data representing this instance.
            </summary>
            <returns>The raw binary data representing this instance.</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.NTTaggedData.IsValidValue(System.DateTime)">
            <summary>
            Test a <see cref="T:System.DateTime"> valuie to see if is valid and can be represented here.</see>
            </summary>
            <param name="value">The <see cref="T:System.DateTime">value</see> to test.</param>
            <returns>Returns true if the value is valid and can be represented; false if not.</returns>
            <remarks>
            NTFS filetimes are 64-bit unsigned integers, stored in Intel
            (least significant byte first) byte order. They determine the
            number of 1.0E-07 seconds (1/10th microseconds!) past WinNT "epoch",
            which is "01-Jan-1601 00:00:00 UTC". 28 May 60056 is the upper limit
            </remarks>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.NTTaggedData.TagID">
            <summary>
            Get the ID for this tagged data value.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.NTTaggedData.LastModificationTime">
            <summary>
            Get/set the <see cref="T:System.DateTime">last modification time</see>.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.NTTaggedData.CreateTime">
            <summary>
            Get /set the <see cref="T:System.DateTime">create time</see>
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.NTTaggedData.LastAccessTime">
            <summary>
            Get /set the <see cref="T:System.DateTime">last access time</see>.
            </summary>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Zip.ITaggedDataFactory">
            <summary>
            A factory that creates <see cref="T:ICSharpCode.SharpZipLib.Zip.ITaggedData">tagged data</see> instances.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ITaggedDataFactory.Create(System.Int16,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Get data for a specific tag value.
            </summary>
            <param name="tag">The tag ID to find.</param>
            <param name="data">The data to search.</param>
            <param name="offset">The offset to begin extracting data from.</param>
            <param name="count">The number of bytes to extract.</param>
            <returns>The located <see cref="T:ICSharpCode.SharpZipLib.Zip.ITaggedData">value found</see>, or null if not found.</returns>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Zip.ZipExtraData">
            
            <summary>
            A class to handle the extra data field for Zip entries
            </summary>
            <remarks>
            Extra data contains 0 or more values each prefixed by a header tag and length.
            They contain zero or more bytes of actual data.
            The data is held internally using a copy on write strategy.  This is more efficient but
            means that for extra data created by passing in data can have the values modified by the caller
            in some circumstances.
            </remarks>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipExtraData.#ctor">
            <summary>
            Initialise a default instance.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipExtraData.#ctor(System.Byte[])">
            <summary>
            Initialise with known extra data.
            </summary>
            <param name="data">The extra data.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipExtraData.GetEntryData">
            <summary>
            Get the raw extra data value
            </summary>
            <returns>Returns the raw byte[] extra data this instance represents.</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipExtraData.Clear">
            <summary>
            Clear the stored data.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipExtraData.GetStreamForTag(System.Int32)">
            <summary>
            Get a read-only <see cref="T:System.IO.Stream"/> for the associated tag.
            </summary>
            <param name="tag">The tag to locate data for.</param>
            <returns>Returns a <see cref="T:System.IO.Stream"/> containing tag data or null if no tag was found.</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipExtraData.GetData(System.Int16)">
            <summary>
            Get the <see cref="T:ICSharpCode.SharpZipLib.Zip.ITaggedData">tagged data</see> for a tag.
            </summary>
            <param name="tag">The tag to search for.</param>
            <returns>Returns a <see cref="T:ICSharpCode.SharpZipLib.Zip.ITaggedData">tagged value</see> or null if none found.</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipExtraData.Find(System.Int32)">
            <summary>
            Find an extra data value
            </summary>
            <param name="headerID">The identifier for the value to find.</param>
            <returns>Returns true if the value was found; false otherwise.</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipExtraData.AddEntry(ICSharpCode.SharpZipLib.Zip.ITaggedData)">
            <summary>
            Add a new entry to extra data.
            </summary>
            <param name="taggedData">The <see cref="T:ICSharpCode.SharpZipLib.Zip.ITaggedData"/> value to add.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipExtraData.AddEntry(System.Int32,System.Byte[])">
            <summary>
            Add a new entry to extra data
            </summary>
            <param name="headerID">The ID for this entry.</param>
            <param name="fieldData">The data to add.</param>
            <remarks>If the ID already exists its contents are replaced.</remarks>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipExtraData.StartNewEntry">
            <summary>
            Start adding a new entry.
            </summary>
            <remarks>Add data using <see cref="M:ICSharpCode.SharpZipLib.Zip.ZipExtraData.AddData(System.Byte[])"/>, <see cref="M:ICSharpCode.SharpZipLib.Zip.ZipExtraData.AddLeShort(System.Int32)"/>, <see cref="M:ICSharpCode.SharpZipLib.Zip.ZipExtraData.AddLeInt(System.Int32)"/>, or <see cref="M:ICSharpCode.SharpZipLib.Zip.ZipExtraData.AddLeLong(System.Int64)"/>.
            The new entry is completed and actually added by calling <see cref="M:ICSharpCode.SharpZipLib.Zip.ZipExtraData.AddNewEntry(System.Int32)"/></remarks>
            <seealso cref="M:ICSharpCode.SharpZipLib.Zip.ZipExtraData.AddEntry(ICSharpCode.SharpZipLib.Zip.ITaggedData)"/>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipExtraData.AddNewEntry(System.Int32)">
            <summary>
            Add entry data added since <see cref="M:ICSharpCode.SharpZipLib.Zip.ZipExtraData.StartNewEntry"/> using the ID passed.
            </summary>
            <param name="headerID">The identifier to use for this entry.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipExtraData.AddData(System.Byte)">
            <summary>
            Add a byte of data to the pending new entry.
            </summary>
            <param name="data">The byte to add.</param>
            <seealso cref="M:ICSharpCode.SharpZipLib.Zip.ZipExtraData.StartNewEntry"/>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipExtraData.AddData(System.Byte[])">
            <summary>
            Add data to a pending new entry.
            </summary>
            <param name="data">The data to add.</param>
            <seealso cref="M:ICSharpCode.SharpZipLib.Zip.ZipExtraData.StartNewEntry"/>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipExtraData.AddLeShort(System.Int32)">
            <summary>
            Add a short value in little endian order to the pending new entry.
            </summary>
            <param name="toAdd">The data to add.</param>
            <seealso cref="M:ICSharpCode.SharpZipLib.Zip.ZipExtraData.StartNewEntry"/>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipExtraData.AddLeInt(System.Int32)">
            <summary>
            Add an integer value in little endian order to the pending new entry.
            </summary>
            <param name="toAdd">The data to add.</param>
            <seealso cref="M:ICSharpCode.SharpZipLib.Zip.ZipExtraData.StartNewEntry"/>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipExtraData.AddLeLong(System.Int64)">
            <summary>
            Add a long value in little endian order to the pending new entry.
            </summary>
            <param name="toAdd">The data to add.</param>
            <seealso cref="M:ICSharpCode.SharpZipLib.Zip.ZipExtraData.StartNewEntry"/>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipExtraData.Delete(System.Int32)">
            <summary>
            Delete an extra data field.
            </summary>
            <param name="headerID">The identifier of the field to delete.</param>
            <returns>Returns true if the field was found and deleted.</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipExtraData.ReadLong">
            <summary>
            Read a long in little endian form from the last <see cref="M:ICSharpCode.SharpZipLib.Zip.ZipExtraData.Find(System.Int32)">found</see> data value
            </summary>
            <returns>Returns the long value read.</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipExtraData.ReadInt">
            <summary>
            Read an integer in little endian form from the last <see cref="M:ICSharpCode.SharpZipLib.Zip.ZipExtraData.Find(System.Int32)">found</see> data value.
            </summary>
            <returns>Returns the integer read.</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipExtraData.ReadShort">
            <summary>
            Read a short value in little endian form from the last <see cref="M:ICSharpCode.SharpZipLib.Zip.ZipExtraData.Find(System.Int32)">found</see> data value.
            </summary>
            <returns>Returns the short value read.</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipExtraData.ReadByte">
            <summary>
            Read a byte from an extra data
            </summary>
            <returns>The byte value read or -1 if the end of data has been reached.</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipExtraData.Skip(System.Int32)">
            <summary>
            Skip data during reading.
            </summary>
            <param name="amount">The number of bytes to skip.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipExtraData.ReadShortInternal">
            <summary>
            Internal form of <see cref="M:ICSharpCode.SharpZipLib.Zip.ZipExtraData.ReadShort"/> that reads data at any location.
            </summary>
            <returns>Returns the short value read.</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.ZipExtraData.Dispose">
            <summary>
            Dispose of this instance.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipExtraData.Length">
            <summary>
            Gets the current extra data length.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipExtraData.ValueLength">
            <summary>
            Get the length of the last value found by <see cref="M:ICSharpCode.SharpZipLib.Zip.ZipExtraData.Find(System.Int32)"/>
            </summary>
            <remarks>This is only valid if <see cref="M:ICSharpCode.SharpZipLib.Zip.ZipExtraData.Find(System.Int32)"/> has previously returned true.</remarks>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipExtraData.CurrentReadIndex">
            <summary>
            Get the index for the current read value.
            </summary>
            <remarks>This is only valid if <see cref="M:ICSharpCode.SharpZipLib.Zip.ZipExtraData.Find(System.Int32)"/> has previously returned true.
            Initially the result will be the index of the first byte of actual data.  The value is updated after calls to
            <see cref="M:ICSharpCode.SharpZipLib.Zip.ZipExtraData.ReadInt"/>, <see cref="M:ICSharpCode.SharpZipLib.Zip.ZipExtraData.ReadShort"/> and <see cref="M:ICSharpCode.SharpZipLib.Zip.ZipExtraData.ReadLong"/>. </remarks>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.ZipExtraData.UnreadCount">
            <summary>
            Get the number of bytes remaining to be read for the current value;
            </summary>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterPending">
            <summary>
            This class stores the pending output of the Deflater.
            
            author of the original java version : Jochen Hoenicke
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.Compression.DeflaterPending.#ctor">
            <summary>
            Construct instance with default buffer size
            </summary>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Zip.WindowsNameTransform">
            <summary>
            WindowsNameTransform transforms <see cref="T:ICSharpCode.SharpZipLib.Zip.ZipFile"/> names to windows compatible ones.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.WindowsNameTransform.MaxPath">
            <summary>
             The maximum windows path name permitted.
            </summary>
            <remarks>This may not valid for all windows systems - CE?, etc but I cant find the equivalent in the CLR.</remarks>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.WindowsNameTransform.#ctor(System.String)">
            <summary>
            Initialises a new instance of <see cref="T:ICSharpCode.SharpZipLib.Zip.WindowsNameTransform"/>
            </summary>
            <param name="baseDirectory"></param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.WindowsNameTransform.#ctor">
            <summary>
            Initialise a default instance of <see cref="T:ICSharpCode.SharpZipLib.Zip.WindowsNameTransform"/>
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.WindowsNameTransform.TransformDirectory(System.String)">
            <summary>
            Transform a Zip directory name to a windows directory name.
            </summary>
            <param name="name">The directory name to transform.</param>
            <returns>The transformed name.</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.WindowsNameTransform.TransformFile(System.String)">
            <summary>
            Transform a Zip format file name to a windows style one.
            </summary>
            <param name="name">The file name to transform.</param>
            <returns>The transformed name.</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.WindowsNameTransform.IsValidName(System.String)">
            <summary>
            Test a name to see if it is a valid name for a windows filename as extracted from a Zip archive.
            </summary>
            <param name="name">The name to test.</param>
            <returns>Returns true if the name is a valid zip name; false otherwise.</returns>
            <remarks>The filename isnt a true windows path in some fundamental ways like no absolute paths, no rooted paths etc.</remarks>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.WindowsNameTransform.#cctor">
            <summary>
            Initialise static class information.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.WindowsNameTransform.MakeValidName(System.String,System.Char)">
            <summary>
            Force a name to be valid by replacing invalid characters with a fixed value
            </summary>
            <param name="name">The name to make valid</param>
            <param name="replacement">The replacement character to use for any invalid characters.</param>
            <returns>Returns a valid name</returns>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.WindowsNameTransform.BaseDirectory">
            <summary>
            Gets or sets a value containing the target directory to prefix values with.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.WindowsNameTransform.TrimIncomingPaths">
            <summary>
            Gets or sets a value indicating wether paths on incoming values should be removed.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.WindowsNameTransform.Replacement">
            <summary>
            Gets or set the character to replace invalid characters during transformations.
            </summary>
        </member>
        <member name="T:Top.Api.Domain.UatmTbkItem">
            <summary>
            UatmTbkItem Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.UatmTbkItem.Category">
            <summary>
            后台一级类目
            </summary>
        </member>
        <member name="P:Top.Api.Domain.UatmTbkItem.ClickUrl">
            <summary>
            淘客地址
            </summary>
        </member>
        <member name="P:Top.Api.Domain.UatmTbkItem.CommissionRate">
            <summary>
            佣金比率(%)
            </summary>
        </member>
        <member name="P:Top.Api.Domain.UatmTbkItem.CouponClickUrl">
            <summary>
            商品优惠券推广链接
            </summary>
        </member>
        <member name="P:Top.Api.Domain.UatmTbkItem.CouponEndTime">
            <summary>
            优惠券结束时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.UatmTbkItem.CouponInfo">
            <summary>
            优惠券面额
            </summary>
        </member>
        <member name="P:Top.Api.Domain.UatmTbkItem.CouponRemainCount">
            <summary>
            优惠券剩余量
            </summary>
        </member>
        <member name="P:Top.Api.Domain.UatmTbkItem.CouponStartTime">
            <summary>
            优惠券开始时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.UatmTbkItem.CouponTotalCount">
            <summary>
            优惠券总量
            </summary>
        </member>
        <member name="P:Top.Api.Domain.UatmTbkItem.EventEndTime">
            <summary>
            招行活动的结束时间；如果该宝贝取自普通的选品组，则取值为1970-01-01 00:00:00
            </summary>
        </member>
        <member name="P:Top.Api.Domain.UatmTbkItem.EventStartTime">
            <summary>
            招商活动开始时间；如果该宝贝取自普通选品组，则取值为1970-01-01 00:00:00；
            </summary>
        </member>
        <member name="P:Top.Api.Domain.UatmTbkItem.ItemUrl">
            <summary>
            商品地址
            </summary>
        </member>
        <member name="P:Top.Api.Domain.UatmTbkItem.Nick">
            <summary>
            卖家昵称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.UatmTbkItem.NumIid">
            <summary>
            商品ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.UatmTbkItem.PictUrl">
            <summary>
            商品主图
            </summary>
        </member>
        <member name="P:Top.Api.Domain.UatmTbkItem.Provcity">
            <summary>
            宝贝所在地
            </summary>
        </member>
        <member name="P:Top.Api.Domain.UatmTbkItem.ReservePrice">
            <summary>
            商品一口价格
            </summary>
        </member>
        <member name="P:Top.Api.Domain.UatmTbkItem.SellerId">
            <summary>
            卖家id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.UatmTbkItem.ShopTitle">
            <summary>
            
            </summary>
        </member>
        <member name="P:Top.Api.Domain.UatmTbkItem.SmallImages">
            <summary>
            商品小图列表
            </summary>
        </member>
        <member name="P:Top.Api.Domain.UatmTbkItem.Status">
            <summary>
            宝贝状态，0失效，1有效；注：失效可能是宝贝已经下线或者是被处罚不能在进行推广
            </summary>
        </member>
        <member name="P:Top.Api.Domain.UatmTbkItem.Title">
            <summary>
            商品标题
            </summary>
        </member>
        <member name="P:Top.Api.Domain.UatmTbkItem.TkRate">
            <summary>
            收入比例，举例，取值为20.00，表示比例20.00%
            </summary>
        </member>
        <member name="P:Top.Api.Domain.UatmTbkItem.Type">
            <summary>
            宝贝类型：1 普通商品； 2 鹊桥高佣金商品；3 定向招商商品；4 营销计划商品;
            </summary>
        </member>
        <member name="P:Top.Api.Domain.UatmTbkItem.UserType">
            <summary>
            卖家类型，0表示集市，1表示商城
            </summary>
        </member>
        <member name="P:Top.Api.Domain.UatmTbkItem.Volume">
            <summary>
            30天销量
            </summary>
        </member>
        <member name="P:Top.Api.Domain.UatmTbkItem.ZkFinalPrice">
            <summary>
            商品折扣价格
            </summary>
        </member>
        <member name="P:Top.Api.Domain.UatmTbkItem.ZkFinalPriceWap">
            <summary>
            无线折扣价，即宝贝在无线上的实际售卖价格。
            </summary>
        </member>
        <member name="T:Top.Api.Domain.TmcMessage">
            <summary>
            TmcMessage Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TmcMessage.Content">
            <summary>
            消息详细内容，格式为JSON/XML
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TmcMessage.Id">
            <summary>
            消息ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TmcMessage.PubAppKey">
            <summary>
            消息发布者的AppKey
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TmcMessage.PubTime">
            <summary>
            消息发布时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TmcMessage.Topic">
            <summary>
            消息所属主题
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TmcMessage.UserId">
            <summary>
            消息所属的用户编号
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TmcMessage.UserNick">
            <summary>
            用户的昵称
            </summary>
        </member>
        <member name="T:Top.Api.Domain.Requisition">
            <summary>
            Requisition Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Requisition.DistAppraise">
            <summary>
            好评率
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Requisition.DistCategory">
            <summary>
            主营类目
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Requisition.DistCategoryName">
            <summary>
            主营类目名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Requisition.DistIsXiaobao">
            <summary>
            是否消保(0-不是、1-是)
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Requisition.DistLevel">
            <summary>
            店铺星级
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Requisition.DistMessage">
            <summary>
            分销申请加盟时，给供应商的留言
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Requisition.DistOpenDate">
            <summary>
            开店时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Requisition.DistShopAddress">
            <summary>
            店铺地址
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Requisition.DistributorId">
            <summary>
            分销商id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Requisition.DistributorNick">
            <summary>
            分销商nick
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Requisition.GmtCreate">
            <summary>
            申请时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Requisition.RequisitionId">
            <summary>
            合作申请ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Requisition.Status">
            <summary>
            申请状态（1-申请中、2-成功、3-被退回、4-已撤消、5-过期）
            </summary>
        </member>
        <member name="T:Top.Api.Domain.PurchaseOrder">
            <summary>
            PurchaseOrder Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PurchaseOrder.AlipayNo">
            <summary>
            支付宝交易号。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PurchaseOrder.BuyerNick">
            <summary>
            买家nick，供应商查询不会返回买家昵称，分销商查询才会返回。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PurchaseOrder.BuyerPayment">
            <summary>
            买家支付给分销商的总金额。注意买家购买的商品可能不是全部来自同一供货商，请同时参考子单上的相关金额。（精确到2位小数;单位:元。如:200.07，表示:200元7分）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PurchaseOrder.BuyerTaobaoId">
            <summary>
            加密后的买家淘宝ID，长度为32位
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PurchaseOrder.ConsignTime">
            <summary>
            物流发货时间。格式:yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PurchaseOrder.Created">
            <summary>
            采购单创建时间。格式:yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PurchaseOrder.DistributorFrom">
            <summary>
            分销商来源网站（taobao）。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PurchaseOrder.DistributorPayment">
            <summary>
            分销商实付金额。(精确到2位小数;单位:元。如:200.07，表示:200元7分 )
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PurchaseOrder.DistributorUsername">
            <summary>
            分销商在来源网站的帐号名。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PurchaseOrder.EndTime">
            <summary>
            交易结束时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PurchaseOrder.Features">
            <summary>
            主订单属性信息，key-value形式：  orderNovice ：订单发票抬头；  orderNoviceContent ：代表发票明细
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PurchaseOrder.FenxiaoId">
            <summary>
            分销流水号，分销平台产生的主键
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PurchaseOrder.Id">
            <summary>
            供应商交易ID 非采购单ID，如果改发货状态 是需要该ID，ID在用户未付款前为0，付款后有具体值（发货时使用该ID）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PurchaseOrder.IsvCustomKey">
            <summary>
            自定义key
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PurchaseOrder.IsvCustomValue">
            <summary>
            自定义值
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PurchaseOrder.LogisticsCompanyName">
            <summary>
            物流公司
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PurchaseOrder.LogisticsId">
            <summary>
            运单号
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PurchaseOrder.Memo">
            <summary>
            采购单留言。（代销模式下信息包括买家留言和分销商留言）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PurchaseOrder.Modified">
            <summary>
            交易修改时间。格式:yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PurchaseOrder.OrderMessages">
            <summary>
            采购单留言列表
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PurchaseOrder.PayTime">
            <summary>
            付款时间。格式:yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PurchaseOrder.PayType">
            <summary>
            支付方式：ALIPAY_SURETY（支付宝担保交易）、ALIPAY_CHAIN（分账交易）、TRANSFER（线下转账）、PREPAY（预存款）、IMMEDIATELY（即时到账）、CASHGOODS（先款后货）、ACCOUNT_PERIOD（账期支付）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PurchaseOrder.PostFee">
            <summary>
            采购单邮费。(精确到2位小数;单位:元。如:200.07，表示:200元7分 )
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PurchaseOrder.Receiver">
            <summary>
            买家详细信息
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PurchaseOrder.Shipping">
            <summary>
            配送方式，FAST(快速)、EMS、ORDINARY(平邮)、SELLER(卖家包邮)
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PurchaseOrder.SnapshotUrl">
            <summary>
            订单快照URL
            </summary>
        </member>
        <!-- 对于成员“P:Top.Api.Domain.PurchaseOrder.Status”忽略有格式错误的 XML 注释 -->
        <member name="P:Top.Api.Domain.PurchaseOrder.SubPurchaseOrders">
            <summary>
            子订单的详细信息列表。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PurchaseOrder.SupplierFlag">
            <summary>
            返回供应商备注旗帜vlaue在1-5之间。非1-5之间，都采用1作为默认。 1:红色 2:黄色 3:绿色 4:蓝色 5:粉红色
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PurchaseOrder.SupplierFrom">
            <summary>
            供应商来源网站, values: taobao, alibaba
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PurchaseOrder.SupplierMemo">
            <summary>
            供应商备注
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PurchaseOrder.SupplierUsername">
            <summary>
            供应商在来源网站的帐号名。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PurchaseOrder.TcOrderId">
            <summary>
            主订单ID （经销不显示）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PurchaseOrder.TotalFee">
            <summary>
            采购单总额（不含邮费,精确到2位小数;单位:元。如:200.07，表示:200元7分 )
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PurchaseOrder.TradeType">
            <summary>
            分销方式：AGENT（代销）、DEALER（经销）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PurchaseOrder.Type">
            <summary>
            采购单类型（代销、零批） values:daixiao,lingpi。
            </summary>
        </member>
        <member name="T:Top.Api.Domain.OpenImUser">
            <summary>
            OpenImUser Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.OpenImUser.AppKey">
            <summary>
            账户appkey
            </summary>
        </member>
        <member name="P:Top.Api.Domain.OpenImUser.TaobaoAccount">
            <summary>
            是否为淘宝账号
            </summary>
        </member>
        <member name="P:Top.Api.Domain.OpenImUser.Uid">
            <summary>
            用户id
            </summary>
        </member>
        <member name="T:Top.Api.Domain.FenxiaoProduct">
            <summary>
            FenxiaoProduct Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoProduct.AlarmNumber">
            <summary>
            警戒库存
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoProduct.CategoryId">
            <summary>
            类目id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoProduct.City">
            <summary>
            所在地：市
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoProduct.CostPrice">
            <summary>
            采购价格，单位：元。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoProduct.Created">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoProduct.DealerCostPrice">
            <summary>
            经销采购价
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoProduct.DescPath">
            <summary>
            产品描述路径，通过http请求获取
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoProduct.Description">
            <summary>
            产品描述的内容
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoProduct.DiscountId">
            <summary>
            折扣ID（新增参数）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoProduct.HaveGuarantee">
            <summary>
            是否有保修，可选值：false（否）、true（是）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoProduct.HaveInvoice">
            <summary>
            是否有发票，可选值：false（否）、true（是）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoProduct.Images">
            <summary>
            产品图片
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoProduct.InputProperties">
            <summary>
            自定义属性，格式为pid:value;pid:value
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoProduct.IsAuthz">
            <summary>
            查询产品列表时，查询入参增加is_authz:yes|no   yes:需要授权   no:不需要授权
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoProduct.ItemId">
            <summary>
            导入的商品ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoProduct.ItemsCount">
            <summary>
            下载人数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoProduct.Modified">
            <summary>
            更新时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoProduct.Name">
            <summary>
            产品名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoProduct.OrdersCount">
            <summary>
            累计采购次数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoProduct.OuterId">
            <summary>
            商家编码
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoProduct.Pdus">
            <summary>
            产品分销商信息
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoProduct.Pictures">
            <summary>
            产品图片路径
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoProduct.Pid">
            <summary>
            产品ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoProduct.PostageEms">
            <summary>
            ems费用，单位：元
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoProduct.PostageFast">
            <summary>
            快递费用，单位：元
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoProduct.PostageId">
            <summary>
            运费模板ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoProduct.PostageOrdinary">
            <summary>
            平邮费用，单位：元
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoProduct.PostageType">
            <summary>
            运费类型，可选值：seller（供应商承担运费）、buyer（分销商承担运费）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoProduct.ProductcatId">
            <summary>
            产品线ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoProduct.Properties">
            <summary>
            产品属性，格式为pid:vid;pid:vid
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoProduct.PropertyAlias">
            <summary>
            属性别名，格式为pid:vid:alias;pid:vid:alias
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoProduct.Prov">
            <summary>
            所在地：省
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoProduct.Quantity">
            <summary>
            产品库存
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoProduct.QueryItemId">
            <summary>
            根据商品ID查询时，返回这个产品对应的商品ID，只对分销商查询接口有效
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoProduct.QuotaQuantity">
            <summary>
            配额可用库存
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoProduct.ReservedQuantity">
            <summary>
            预扣库存
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoProduct.RetailPriceHigh">
            <summary>
            最高零售价，单位：分。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoProduct.RetailPriceLow">
            <summary>
            最低零售价，单位：分。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoProduct.ScitemId">
            <summary>
            关联的后端商品id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoProduct.Skus">
            <summary>
            sku列表
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoProduct.SpuId">
            <summary>
            产品spu id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoProduct.StandardPrice">
            <summary>
            采购基准价，单位：元。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoProduct.StandardRetailPrice">
            <summary>
            零售基准价，单位：元
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoProduct.Status">
            <summary>
            发布状态，可选值：up（上架）、down（下架）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoProduct.TradeType">
            <summary>
            分销方式：AGENT（只做代销，默认值）、DEALER（只做经销）、ALL（代销和经销都做）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.FenxiaoProduct.UpshelfTime">
            <summary>
            铺货时间
            </summary>
        </member>
        <member name="T:Top.Api.Domain.EsMessageResult">
            <summary>
            EsMessageResult Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.EsMessageResult.Messages">
            <summary>
            消息序列
            </summary>
        </member>
        <member name="P:Top.Api.Domain.EsMessageResult.NextKey">
            <summary>
            nextkey
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaKeywordsDeleteResponse">
            <summary>
            SimbaKeywordsDeleteResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaKeywordsDeleteResponse.Keywords">
            <summary>
            成功删除的关键词列表
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaAdgroupDeleteResponse">
            <summary>
            SimbaAdgroupDeleteResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaAdgroupDeleteResponse.Adgroup">
            <summary>
            被删除的推广组
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaCreativeUpdateResponse">
            <summary>
            SimbaCreativeUpdateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaCreativeUpdateResponse.Creativerecord">
            <summary>
            创意修改记录对象
            </summary>
        </member>
        <member name="T:Top.Api.Response.TopAuthTokenRefreshResponse">
            <summary>
            TopAuthTokenRefreshResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TopAuthTokenRefreshResponse.TokenResult">
            <summary>
            返回的是json信息
            </summary>
        </member>
        <member name="T:Top.Api.Response.TmallItemSchemaAddResponse">
            <summary>
            TmallItemSchemaAddResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallItemSchemaAddResponse.AddItemResult">
            <summary>
            返回商品发布结果
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallItemSchemaAddResponse.GmtCreate">
            <summary>
            发布商品操作成功时间
            </summary>
        </member>
        <member name="T:Top.Api.Response.TopIpoutGetResponse">
            <summary>
            TopIpoutGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TopIpoutGetResponse.IpList">
            <summary>
            TOP网关出口IP列表
            </summary>
        </member>
        <member name="T:Top.Api.Response.LogisticsOnlineConfirmResponse">
            <summary>
            LogisticsOnlineConfirmResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.LogisticsOnlineConfirmResponse.Shipping">
            <summary>
            只返回is_success：是否成功。
            </summary>
        </member>
        <member name="T:Top.Api.Response.JushitaJdpUserAddResponse">
            <summary>
            JushitaJdpUserAddResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.JushitaJdpUserAddResponse.IsSuccess">
            <summary>
            是否添加成功
            </summary>
        </member>
        <member name="T:Top.Api.Response.JushitaJdpUserDeleteResponse">
            <summary>
            JushitaJdpUserDeleteResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.JushitaJdpUserDeleteResponse.IsSuccess">
            <summary>
            是否删除成功
            </summary>
        </member>
        <member name="T:Top.Api.Response.TmallBrandcatPropinputGetResponse">
            <summary>
            TmallBrandcatPropinputGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallBrandcatPropinputGetResponse.PropertyInput">
            <summary>
            属性输入特征
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaAdgroupMobilediscountUpdateResponse">
            <summary>
            SimbaAdgroupMobilediscountUpdateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaAdgroupMobilediscountUpdateResponse.Key">
            <summary>
            错误码
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaAdgroupMobilediscountUpdateResponse.Message">
            <summary>
            返回信息
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaAdgroupMobilediscountUpdateResponse.Result">
            <summary>
            更新成功的个数
            </summary>
        </member>
        <member name="T:Top.Api.Response.ItemJointImgResponse">
            <summary>
            ItemJointImgResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ItemJointImgResponse.ItemImg">
            <summary>
            商品图片信息
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaNonsearchAlldemographicsGetResponse">
            <summary>
            SimbaNonsearchAlldemographicsGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaNonsearchAlldemographicsGetResponse.DemographicList">
            <summary>
            定向投放人群维度列表
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaAdgroupNonsearchpricesUpdateResponse">
            <summary>
            SimbaAdgroupNonsearchpricesUpdateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaAdgroupNonsearchpricesUpdateResponse.AdgroupList">
            <summary>
            推广组列表
            </summary>
        </member>
        <member name="T:Top.Api.Response.PictureDeleteResponse">
            <summary>
            PictureDeleteResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.PictureDeleteResponse.Success">
            <summary>
            是否删除
            </summary>
        </member>
        <member name="T:Top.Api.Response.ItemcatsGetResponse">
            <summary>
            ItemcatsGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ItemcatsGetResponse.ItemCats">
            <summary>
            增量类目信息,根据fields传入的参数返回相应的结果；增量类目信息,根据fields传入的参数返回相应的结果。 features字段： 1、如果存在attr_key=freeze表示该类目被冻结了，attr_value=0,5，value可能存在2个值（也可能只有1个），用逗号分割，0表示禁编辑，5表示禁止发布
            </summary>
        </member>
        <member name="P:Top.Api.Response.ItemcatsGetResponse.LastModified">
            <summary>
            最近修改时间(如果取增量，会返回该字段)。
            </summary>
        </member>
        <member name="T:Top.Api.Response.WirelessBuntingShopShorturlCreateResponse">
            <summary>
            WirelessBuntingShopShorturlCreateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.WirelessBuntingShopShorturlCreateResponse.Shorturl">
            <summary>
            短链
            </summary>
        </member>
        <member name="T:Top.Api.Response.MaPackcodeCreateResponse">
            <summary>
            MaPackcodeCreateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.MaPackcodeCreateResponse.Qrcodeurl">
            <summary>
            生成包裹码二维码图片链接
            </summary>
        </member>
        <member name="T:Top.Api.Response.TmallProductSpecGetResponse">
            <summary>
            TmallProductSpecGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallProductSpecGetResponse.ProductSpec">
            <summary>
            返回的产品规格信息，注意，这个产品规格信息可能是等待审核的，不一定可用。根据状态判断1：表示审核通过  3：表示等待审核。
            </summary>
        </member>
        <member name="T:Top.Api.Response.TmallProductTemplateGetResponse">
            <summary>
            TmallProductTemplateGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallProductTemplateGetResponse.Template">
            <summary>
            见SpuTemplateDO说明
            </summary>
        </member>
        <member name="T:Top.Api.Response.TmallItemSizemappingTemplateGetResponse">
            <summary>
            TmallItemSizemappingTemplateGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallItemSizemappingTemplateGetResponse.SizeMappingTemplate">
            <summary>
            尺码表模板
            </summary>
        </member>
        <member name="T:Top.Api.Response.TradeMemoUpdateResponse">
            <summary>
            TradeMemoUpdateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TradeMemoUpdateResponse.Trade">
            <summary>
            更新交易的备注信息后返回的Trade，其中可用字段为tid和modified
            </summary>
        </member>
        <member name="T:Top.Api.Response.ItemSkuGetResponse">
            <summary>
            ItemSkuGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ItemSkuGetResponse.Sku">
            <summary>
            Sku
            </summary>
        </member>
        <member name="T:Top.Api.Response.TmcUserPermitResponse">
            <summary>
            TmcUserPermitResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmcUserPermitResponse.IsSuccess">
            <summary>
            是否成功
            </summary>
        </member>
        <member name="T:Top.Api.Response.ProductImgUploadResponse">
            <summary>
            ProductImgUploadResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ProductImgUploadResponse.ProductImg">
            <summary>
            返回产品图片结构中的：url,id,created,modified
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaCampaignBudgetGetRequest">
            <summary>
            TOP API: taobao.simba.campaign.budget.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaCampaignBudgetGetRequest.CampaignId">
            <summary>
            推广计划Id
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaCampaignBudgetGetRequest.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="T:Top.Api.Request.ShoprecommendItemsGetRequest">
            <summary>
            TOP API: taobao.shoprecommend.items.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.ShoprecommendItemsGetRequest.Count">
            <summary>
            请求个数，最大只能获取10个
            </summary>
        </member>
        <member name="P:Top.Api.Request.ShoprecommendItemsGetRequest.Ext">
            <summary>
            额外参数
            </summary>
        </member>
        <member name="P:Top.Api.Request.ShoprecommendItemsGetRequest.RecommendType">
            <summary>
            请求类型，1：店内热门商品推荐。其他值当非法值处理
            </summary>
        </member>
        <member name="P:Top.Api.Request.ShoprecommendItemsGetRequest.SellerId">
            <summary>
            <p>传入卖家ID。这里的seller_id得通过<a href="http://api.taobao.com/apidoc/api.htm?path=cid:38-apiId:10449">taobao.taobaoke.shops.get</a> 跟<a href="http://api.taobao.com/apidoc/api.htm?path=cid:38-apiId:21419">taobao.taobaoke.widget.shops.convert</a>这两个接口去获取user_id字段。</p> <p>如果是非淘客卖家，则无法获取，暂无替代方案。</p>
            </summary>
        </member>
        <member name="T:Top.Api.Request.TmallProductMatchSchemaGetRequest">
            <summary>
            TOP API: tmall.product.match.schema.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallProductMatchSchemaGetRequest.CategoryId">
            <summary>
            商品发布的目标类目，必须是叶子类目
            </summary>
        </member>
        <member name="T:Top.Api.Request.JushitaJdpUsersGetRequest">
            <summary>
            TOP API: taobao.jushita.jdp.users.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.JushitaJdpUsersGetRequest.EndModified">
            <summary>
            此参数一般不用传，用于查询最后更改时间在某个时间段内的用户
            </summary>
        </member>
        <member name="P:Top.Api.Request.JushitaJdpUsersGetRequest.PageNo">
            <summary>
            当前页数
            </summary>
        </member>
        <member name="P:Top.Api.Request.JushitaJdpUsersGetRequest.PageSize">
            <summary>
            每页记录数，默认200
            </summary>
        </member>
        <member name="P:Top.Api.Request.JushitaJdpUsersGetRequest.StartModified">
            <summary>
            此参数一般不用传，用于查询最后更改时间在某个时间段内的用户
            </summary>
        </member>
        <member name="P:Top.Api.Request.JushitaJdpUsersGetRequest.TargetAppkey">
            <summary>
            普通isv不能传入此参数
            </summary>
        </member>
        <member name="P:Top.Api.Request.JushitaJdpUsersGetRequest.UserId">
            <summary>
            如果传了user_id表示单条查询
            </summary>
        </member>
        <member name="T:Top.Api.Request.VasSubscribeGetRequest">
            <summary>
            TOP API: taobao.vas.subscribe.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.VasSubscribeGetRequest.ArticleCode">
            <summary>
            商品编码，从合作伙伴后台（my.open.taobao.com）-收费管理-收费项目列表 能够获得该应用的商品代码
            </summary>
        </member>
        <member name="P:Top.Api.Request.VasSubscribeGetRequest.Nick">
            <summary>
            淘宝会员名
            </summary>
        </member>
        <member name="T:Top.Api.Request.TradeReceivetimeDelayRequest">
            <summary>
            TOP API: taobao.trade.receivetime.delay
            </summary>
        </member>
        <member name="P:Top.Api.Request.TradeReceivetimeDelayRequest.Days">
            <summary>
            延长收货的天数，可选值为：3, 5, 7, 10。
            </summary>
        </member>
        <member name="P:Top.Api.Request.TradeReceivetimeDelayRequest.Tid">
            <summary>
            主订单号
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaRptTargetingtagbaseGetRequest">
            <summary>
            TOP API: taobao.simba.rpt.targetingtagbase.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptTargetingtagbaseGetRequest.AdgroupId">
            <summary>
            推广组id
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptTargetingtagbaseGetRequest.CampaignId">
            <summary>
            计划id
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptTargetingtagbaseGetRequest.EndTime">
            <summary>
            结束时间
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptTargetingtagbaseGetRequest.Nick">
            <summary>
            被操作者昵称
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptTargetingtagbaseGetRequest.PageNumber">
            <summary>
            页码
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptTargetingtagbaseGetRequest.PageSize">
            <summary>
            分页大小
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptTargetingtagbaseGetRequest.StartTime">
            <summary>
            起始时间
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaInsightCatstopwordnewGetRequest">
            <summary>
            TOP API: taobao.simba.insight.catstopwordnew.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaInsightCatstopwordnewGetRequest.CatId">
            <summary>
            类目id
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaInsightCatstopwordnewGetRequest.Dimension">
            <summary>
            表示查询的维度，比如选择click，则查询该类目下点击量最大的词，可供选择的值有：impression, click, cost, ctr, cpc, coverage, transactiontotal, transactionshippingtotal, favtotal, roi
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaInsightCatstopwordnewGetRequest.EndDate">
            <summary>
            查询截止时间，格式只能是：yyyy-MM-dd
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaInsightCatstopwordnewGetRequest.PageSize">
            <summary>
            返回前多少条数据
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaInsightCatstopwordnewGetRequest.StartDate">
            <summary>
            查询开始时间，格式必须为：yyyy-MM-dd
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaInsightWordspricedataGetRequest">
            <summary>
            TOP API: taobao.simba.insight.wordspricedata.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaInsightWordspricedataGetRequest.Bidword">
            <summary>
            关键词
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaInsightWordspricedataGetRequest.EndDate">
            <summary>
            结束时间，格式：yyyy-MM-dd
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaInsightWordspricedataGetRequest.StartDate">
            <summary>
            开始时间，格式：yyyy-MM-dd
            </summary>
        </member>
        <member name="T:Top.Api.Request.SubuserDepartmentsGetRequest">
            <summary>
            TOP API: taobao.subuser.departments.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SubuserDepartmentsGetRequest.UserNick">
            <summary>
            主账号用户名
            </summary>
        </member>
        <member name="T:Top.Api.Request.SubuserDepartmentAddRequest">
            <summary>
            TOP API: taobao.subuser.department.add
            </summary>
        </member>
        <member name="P:Top.Api.Request.SubuserDepartmentAddRequest.DepartmentName">
            <summary>
            部门名称
            </summary>
        </member>
        <member name="P:Top.Api.Request.SubuserDepartmentAddRequest.ParentId">
            <summary>
            父部门ID 如果是最高部门则传入0
            </summary>
        </member>
        <member name="P:Top.Api.Request.SubuserDepartmentAddRequest.UserNick">
            <summary>
            主账号用户名
            </summary>
        </member>
        <member name="T:Top.Api.Request.SubuserDepartmentUpdateRequest">
            <summary>
            TOP API: taobao.subuser.department.update
            </summary>
        </member>
        <member name="P:Top.Api.Request.SubuserDepartmentUpdateRequest.DepartmentId">
            <summary>
            部门ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.SubuserDepartmentUpdateRequest.DepartmentName">
            <summary>
            部门名称
            </summary>
        </member>
        <member name="P:Top.Api.Request.SubuserDepartmentUpdateRequest.ParentId">
            <summary>
            父部门ID 如果是最高部门则传入0
            </summary>
        </member>
        <member name="P:Top.Api.Request.SubuserDepartmentUpdateRequest.UserNick">
            <summary>
            主账号用户名
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaKeywordsbyadgroupidGetRequest">
            <summary>
            TOP API: taobao.simba.keywordsbyadgroupid.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaKeywordsbyadgroupidGetRequest.AdgroupId">
            <summary>
            推广组Id
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaKeywordsbyadgroupidGetRequest.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="T:Top.Api.Request.SkusQuantityUpdateRequest">
            <summary>
            TOP API: taobao.skus.quantity.update
            </summary>
        </member>
        <member name="P:Top.Api.Request.SkusQuantityUpdateRequest.NumIid">
            <summary>
            商品数字ID，必填参数
            </summary>
        </member>
        <member name="P:Top.Api.Request.SkusQuantityUpdateRequest.OuteridQuantities">
            <summary>
            特殊可选，skuIdQuantities为空的时候用该字段通过outerId来指定sku和其库存修改值。格式为outerId:库存修改值;outerId:库存修改值。当skuIdQuantities不为空的时候该字段失效。当一个outerId对应多个sku时，所有匹配到的sku都会被修改库存。最多支持20个SKU同时修改。
            </summary>
        </member>
        <member name="P:Top.Api.Request.SkusQuantityUpdateRequest.SkuidQuantities">
            <summary>
            sku库存批量修改入参，用于指定一批sku和每个sku的库存修改值，特殊可填。格式为skuId:库存修改值;skuId:库存修改值。最多支持20个SKU同时修改。
            </summary>
        </member>
        <member name="P:Top.Api.Request.SkusQuantityUpdateRequest.Type">
            <summary>
            库存更新方式，可选。1为全量更新，2为增量更新。如果不填，默认为全量更新。当选择全量更新时，如果库存更新值传入的是负数，会出错并返回错误码；当选择增量更新时，如果库存更新值为负数且绝对值大于当前库存，则sku库存会设置为0.
            </summary>
        </member>
        <member name="T:Top.Api.Request.SubuserEmployeeAddRequest">
            <summary>
            TOP API: taobao.subuser.employee.add
            </summary>
        </member>
        <member name="P:Top.Api.Request.SubuserEmployeeAddRequest.DepartmentId">
            <summary>
            当前员工所属部门ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.SubuserEmployeeAddRequest.DutyId">
            <summary>
            当前员工担任职务ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.SubuserEmployeeAddRequest.EmployeeName">
            <summary>
            员工姓名
            </summary>
        </member>
        <member name="P:Top.Api.Request.SubuserEmployeeAddRequest.EmployeeNickname">
            <summary>
            员工花名
            </summary>
        </member>
        <member name="P:Top.Api.Request.SubuserEmployeeAddRequest.EmployeeNum">
            <summary>
            员工工号(可以用大小写英文字母和数字)
            </summary>
        </member>
        <member name="P:Top.Api.Request.SubuserEmployeeAddRequest.EntryDate">
            <summary>
            员工入职时间
            </summary>
        </member>
        <member name="P:Top.Api.Request.SubuserEmployeeAddRequest.IdCardNum">
            <summary>
            员工身份证号码
            </summary>
        </member>
        <member name="P:Top.Api.Request.SubuserEmployeeAddRequest.LeaderId">
            <summary>
            直接上级的员工ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.SubuserEmployeeAddRequest.OfficePhone">
            <summary>
            办公电话
            </summary>
        </member>
        <member name="P:Top.Api.Request.SubuserEmployeeAddRequest.PersonalEmail">
            <summary>
            员工私人邮箱
            </summary>
        </member>
        <member name="P:Top.Api.Request.SubuserEmployeeAddRequest.PersonalMobile">
            <summary>
            员工手机号码
            </summary>
        </member>
        <member name="P:Top.Api.Request.SubuserEmployeeAddRequest.Sex">
            <summary>
            员工性别 1：男; 2:女
            </summary>
        </member>
        <member name="P:Top.Api.Request.SubuserEmployeeAddRequest.SubId">
            <summary>
            子账号ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.SubuserEmployeeAddRequest.WorkLocation">
            <summary>
            工作地点
            </summary>
        </member>
        <member name="T:Top.Api.Request.SubuserDutysGetRequest">
            <summary>
            TOP API: taobao.subuser.dutys.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SubuserDutysGetRequest.UserNick">
            <summary>
            主账号用户名
            </summary>
        </member>
        <member name="T:Top.Api.Request.MaQrcodeUploadRequest">
            <summary>
            TOP API: taobao.ma.qrcode.upload
            </summary>
        </member>
        <member name="P:Top.Api.Request.MaQrcodeUploadRequest.Ext">
            <summary>
            二维码的图片后辍,目前只支持png,jpg,jpeg,gif四种
            </summary>
        </member>
        <member name="P:Top.Api.Request.MaQrcodeUploadRequest.ImageName">
            <summary>
            图片名
            </summary>
        </member>
        <member name="P:Top.Api.Request.MaQrcodeUploadRequest.Imge">
            <summary>
            0000
            </summary>
        </member>
        <member name="T:Top.Api.Request.ItemJointImgRequest">
            <summary>
            TOP API: taobao.item.joint.img
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemJointImgRequest.Id">
            <summary>
            商品图片id(如果是更新图片，则需要传该参数)
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemJointImgRequest.IsMajor">
            <summary>
            上传的图片是否关联为商品主图
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemJointImgRequest.NumIid">
            <summary>
            商品数字ID，必选
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemJointImgRequest.PicPath">
            <summary>
            图片URL,图片空间图片的相对地址
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemJointImgRequest.Position">
            <summary>
            图片序号
            </summary>
        </member>
        <member name="T:Top.Api.Request.PictureReplaceRequest">
            <summary>
            TOP API: taobao.picture.replace
            </summary>
        </member>
        <member name="P:Top.Api.Request.PictureReplaceRequest.ImageData">
            <summary>
            图片二进制文件流,不能为空,允许png、jpg、gif图片格式
            </summary>
        </member>
        <member name="P:Top.Api.Request.PictureReplaceRequest.PictureId">
            <summary>
            要替换的图片的id，必须大于0
            </summary>
        </member>
        <member name="T:Top.Api.Request.SellercatsListGetRequest">
            <summary>
            TOP API: taobao.sellercats.list.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SellercatsListGetRequest.Fields">
            <summary>
            fields参数
            </summary>
        </member>
        <member name="P:Top.Api.Request.SellercatsListGetRequest.Nick">
            <summary>
            卖家昵称
            </summary>
        </member>
        <member name="T:Top.Api.Request.ItemSkuGetRequest">
            <summary>
            TOP API: taobao.item.sku.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemSkuGetRequest.Fields">
            <summary>
            需返回的字段列表。可选值：Sku结构体中的所有字段；字段之间用“,”分隔。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemSkuGetRequest.Nick">
            <summary>
            卖家nick(num_iid和nick必传一个)，只传卖家nick时候，该api返回的结果不包含cspu（SKu上的产品规格信息）。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemSkuGetRequest.NumIid">
            <summary>
            商品的数字IID（num_iid和nick必传一个，推荐用num_iid），传商品的数字id返回的结果里包含cspu（SKu上的产品规格信息）。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemSkuGetRequest.SkuId">
            <summary>
            Sku的id。可以通过taobao.item.get得到
            </summary>
        </member>
        <member name="T:Top.Api.Request.ItemImgDeleteRequest">
            <summary>
            TOP API: taobao.item.img.delete
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemImgDeleteRequest.Id">
            <summary>
            商品图片ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemImgDeleteRequest.IsSixthPic">
            <summary>
            标记是否要删除第6张图，因为第6张图与普通商品图片不是存储在同一个位置的无图片ID，所以要通过一个标记来判断是否为第6张图，目前第6张图业务主要用在女装业务下
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemImgDeleteRequest.NumIid">
            <summary>
            商品数字ID
            </summary>
        </member>
        <member name="T:Top.Api.Request.TmcUserCancelRequest">
            <summary>
            TOP API: taobao.tmc.user.cancel
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmcUserCancelRequest.Nick">
            <summary>
            用户昵称
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmcUserCancelRequest.UserPlatform">
            <summary>
            用户所属的平台类型，tbUIC:淘宝用户; icbu: icbu用户
            </summary>
        </member>
        <member name="T:Top.Api.Domain.CampaignArea">
            <summary>
            CampaignArea Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.CampaignArea.Area">
            <summary>
            值为：“all”；或者用“,”分割的数字，数字必须是直通车全国省市列表的AreaID，如果已经包含省、自治区id，请不要再包括省内市的id；
            </summary>
        </member>
        <member name="P:Top.Api.Domain.CampaignArea.CampaignId">
            <summary>
            推广计划ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.CampaignArea.CreateTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.CampaignArea.ModifiedTime">
            <summary>
            最后修改时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.CampaignArea.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="T:Top.Api.Domain.OnlineTimeById">
            <summary>
            OnlineTimeById Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.OnlineTimeById.OnlineTimes">
            <summary>
            客服在线时间长度（秒）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.OnlineTimeById.ServiceStaffId">
            <summary>
            客服人员ID
            </summary>
        </member>
        <member name="T:Top.Api.Domain.XCodeTo">
            <summary>
            XCodeTo Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.XCodeTo.GmtCreate">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.XCodeTo.GmtModified">
            <summary>
            最后修改时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.XCodeTo.Id">
            <summary>
            记录ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.XCodeTo.ImgUrl">
            <summary>
            二维码图片地址
            </summary>
        </member>
        <member name="P:Top.Api.Domain.XCodeTo.LifeEnd">
            <summary>
            有效期结束时间，使用短链接跳转的，结束后不再可以访问
            </summary>
        </member>
        <member name="P:Top.Api.Domain.XCodeTo.LifeStart">
            <summary>
            有效期开始时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.XCodeTo.ShortName">
            <summary>
            短连接关键字符
            </summary>
        </member>
        <member name="P:Top.Api.Domain.XCodeTo.ShortUrl">
            <summary>
            短连接
            </summary>
        </member>
        <member name="P:Top.Api.Domain.XCodeTo.Status">
            <summary>
            码的状态，1-生效，0-未生效，-1-逻辑删除。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.XCodeTo.UserId">
            <summary>
            所属用户ID，如果入参没有用户登录信息，则随机生成
            </summary>
        </member>
        <member name="T:Top.Api.Domain.StreamWeight">
            <summary>
            StreamWeight Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.StreamWeight.User">
            <summary>
            账号
            </summary>
        </member>
        <member name="P:Top.Api.Domain.StreamWeight.Weight">
            <summary>
            账号对应的权重
            </summary>
        </member>
        <member name="T:Top.Api.Domain.PicUrl">
            <summary>
            PicUrl Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PicUrl.Url">
            <summary>
            图片链接地址
            </summary>
        </member>
        <member name="T:Top.Api.Domain.TradeAmount">
            <summary>
            TradeAmount Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeAmount.AlipayNo">
            <summary>
            支付宝交易号，如：2009112081173831
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeAmount.BuyerCodFee">
            <summary>
            买家货到付款服务费。精确到2位小数;单位:元。如:12.07，表示:12元7分
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeAmount.BuyerObtainPointFee">
            <summary>
            买家获得积分,返点的积分。格式:100;单位:个
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeAmount.CodFee">
            <summary>
            货到付款服务费。精确到2位小数;单位:元。如:12.07，表示:12元7分
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeAmount.CommissionFee">
            <summary>
            交易佣金。精确到2位小数;单位:元。如:200.07，表示:200元7分
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeAmount.Created">
            <summary>
            交易创建时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeAmount.EndTime">
            <summary>
            交易成功时间(更新交易状态为成功的同时更新)/确认收货时间。格式:yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeAmount.ExpressAgencyFee">
            <summary>
            快递代收款。精确到2位小数;单位:元。如:212.07，表示:212元7分
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeAmount.OrderAmounts">
            <summary>
            子订单的帐务金额详情列表
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeAmount.PayTime">
            <summary>
            付款时间。格式:yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeAmount.Payment">
            <summary>
            主订单实付金额。精确到2位小数;单位:元。如:200.07，表示:200元7分，计算公式如下：如果主订单只有一笔子订单 payment = 子订单的实付金额 + 货到付款服务费(如果是货到付款订单) - 主订单的系统级优惠；如果主订单有多笔子订单 payment = 各子订单的实付金额之和 + 货到付款服务费(如果是货到付款订单) + 邮费 - 主订单的系统级优惠
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeAmount.PostFee">
            <summary>
            邮费。精确到2位小数;单位:元。如:200.07，表示:200元7分。目前只提供整笔交易的邮费，暂不提供各子订单的邮费
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeAmount.PromotionDetails">
            <summary>
            主交易订单的系统级优惠详情
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeAmount.SellerCodFee">
            <summary>
            卖家货到付款服务费。精确到2位小数;单位:元。如:12.07，表示:12元7分
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeAmount.Tid">
            <summary>
            交易主订单编号
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TradeAmount.TotalFee">
            <summary>
            主订单的商品金额（各子订单中商品price * num的和，不包括任何优惠信息）。精确到2位小数;单位:元。如:200.07，表示:200元7分
            </summary>
        </member>
        <member name="T:Top.Api.Domain.PropValue">
            <summary>
            PropValue Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PropValue.Cid">
            <summary>
            类目ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PropValue.Features">
            <summary>
            属性值feature
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PropValue.IsParent">
            <summary>
            是否为父类目属性
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PropValue.ModifiedTime">
            <summary>
            修改时间（类目增量专用）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PropValue.ModifiedType">
            <summary>
            三种枚举类型：modify，add，delete (增量类目专用)
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PropValue.Name">
            <summary>
            属性值
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PropValue.NameAlias">
            <summary>
            属性值别名
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PropValue.Pid">
            <summary>
            属性 ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PropValue.PropName">
            <summary>
            属性名
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PropValue.SortOrder">
            <summary>
            排列序号。取值范围:大于零的整数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PropValue.Status">
            <summary>
            状态。可选值:normal(正常),deleted(删除)
            </summary>
        </member>
        <member name="P:Top.Api.Domain.PropValue.Vid">
            <summary>
            属性值ID
            </summary>
        </member>
        <member name="T:Top.Api.Domain.CarriageDetail">
            <summary>
            CarriageDetail Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.CarriageDetail.AddFee">
            <summary>
            续费（单位：元）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.CarriageDetail.AddWeight">
            <summary>
            续重（单位：千克）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.CarriageDetail.DamagePayment">
            <summary>
            破损赔付
            </summary>
        </member>
        <member name="P:Top.Api.Domain.CarriageDetail.GotTime">
            <summary>
            物流公司揽收时间段
            </summary>
        </member>
        <member name="P:Top.Api.Domain.CarriageDetail.InitialFee">
            <summary>
            首费（单位：元）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.CarriageDetail.InitialWeight">
            <summary>
            首重（单位：千克）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.CarriageDetail.LostPayment">
            <summary>
            丢单赔付
            </summary>
        </member>
        <member name="P:Top.Api.Domain.CarriageDetail.WayDay">
            <summary>
            快件送达所需的时间(单位：天)
            </summary>
        </member>
        <member name="T:Top.Api.Security.SecurityClient">
            <summary>
            加、解密客户端(单例使用，不要初始化多个)
            </summary>
        </member>
        <member name="M:Top.Api.Security.SecurityClient.#ctor(Top.Api.ITopClient,System.String)">
            <summary>
            秘钥管理核心类
            </summary>
            <param name="topClientt"> serverUrl必须是https协议</param>
            <param name="randomNum">伪随机码</param>
        </member>
        <member name="M:Top.Api.Security.SecurityClient.InitSecret">
            <summary>
             初始化秘钥（如果半小时内会调用加、解密方法，建议先初始化秘钥）。所有用户共用秘钥
            </summary>
        </member>
        <member name="M:Top.Api.Security.SecurityClient.InitSecret(System.String)">
            <summary>
            初始化秘钥（如果半小时内会调用加、解密方法，建议先初始化秘钥）。每个用户单独分配秘钥
            </summary>
            <param name="session"></param>
        </member>
        <member name="M:Top.Api.Security.SecurityClient.Decrypt(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            批量解密（所有用户共用秘钥）
            </summary>
            <param name="dataList"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Top.Api.Security.SecurityClient.Decrypt(System.Collections.Generic.List{System.String},System.String,System.String)">
            <summary>
            批量解密（每个用户单独分配秘钥）
            </summary>
            <param name="dataList"></param>
            <param name="type"></param>
            <param name="session"></param>
            <returns>key=密文数据，value=明文数据</returns>
        </member>
        <member name="M:Top.Api.Security.SecurityClient.Decrypt(System.String,System.String)">
            <summary>
            解密（所有用户共用秘钥）
            </summary>
            <param name="data"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Top.Api.Security.SecurityClient.Decrypt(System.String,System.String,System.String)">
            <summary>
            解密（每个用户单独分配秘钥）
            </summary>
            <param name="data">
            密文数据 手机号码格式：$手机号码前3位明文$base64(encrypt(phone后8位))$111$
            nick格式：~base64(encrypt(nick))~111~
            </param>
            <param name="type">解密字段类型(例如：nick\phone)</param>
            <param name="session">用户身份,用户级加密必填</param>
            <returns></returns>
        </member>
        <member name="M:Top.Api.Security.SecurityClient.IsEncryptData(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            判断list元素是否全部为密文数据
            </summary>
            <param name="dataList"></param>
            <param name="type">加密字段类型(例如：nick\phone)</param>
            <returns></returns>
        </member>
        <member name="M:Top.Api.Security.SecurityClient.IsEncryptData(System.String,System.String)">
            <summary>
            判断是否密文数据
            </summary>
            <param name="data"></param>
            <param name="type">加密字段类型(例如：nick\phone)</param>
            <returns></returns>
        </member>
        <member name="M:Top.Api.Security.SecurityClient.Encrypt(System.String,System.String)">
            <summary>
            加密（所有用户共用秘钥）
            </summary>
            <param name="data"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Top.Api.Security.SecurityClient.EncryptPrevious(System.String,System.String)">
            <summary>
            用老秘钥加密，只在秘钥升级时使用（所有用户共用秘钥）
            </summary>
            <param name="data"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Top.Api.Security.SecurityClient.Encrypt(System.String,System.String,System.String)">
            <summary>
            加密（每个用户单独分配秘钥）
            </summary>
            <param name="data"></param>
            <param name="type"></param>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="M:Top.Api.Security.SecurityClient.EncryptPrevious(System.String,System.String,System.String)">
            <summary>
            用老秘钥加密，只在秘钥升级时使用（每个用户单独分配秘钥）
            </summary>
            <param name="data"></param>
            <param name="type"></param>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="M:Top.Api.Security.SecurityClient.Search(System.String,System.String)">
            <summary>
            密文检索（所有用户共用秘钥）
            </summary>
            <param name="data"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Top.Api.Security.SecurityClient.SearchPrevious(System.String,System.String)">
            <summary>
            密文检索,在秘钥升级场景下兼容查询（所有用户共用秘钥）
            </summary>
            <param name="data"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Top.Api.Security.SecurityClient.Search(System.String,System.String,System.String)">
            <summary>
            密文检索（每个用户单独分配秘钥）
            </summary>
            <param name="data"></param>
            <param name="type"></param>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="M:Top.Api.Security.SecurityClient.SearchPrevious(System.String,System.String,System.String)">
            <summary>
            密文检索,在秘钥升级场景下兼容查询（每个用户单独分配秘钥）
            </summary>
            <param name="data"></param>
            <param name="type"></param>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="M:Top.Api.Security.SecurityClient.Search(System.String,System.String,System.String,System.Nullable{System.Int64})">
            <summary>
            密文检索。 手机号码格式：$base64(H-MAC(phone后4位))$ nick格式：base64(H-MAC(滑窗))
            </summary>
            <param name="data">明文数据</param>
            <param name="type">加密字段类型(例如：nick\phone)</param>
            <param name="session">用户身份,用户级加密必填</param>
            <param name="version">秘钥历史版本</param>
            <returns></returns>
        </member>
        <member name="M:Top.Api.Security.SecurityClient.Encrypt(System.String,System.String,System.String,System.Nullable{System.Int64})">
            <summary>
            加密之后格式。 手机号码格式：$手机号码前3位明文$base64(encrypt(phone后8位))$111$ 
            nick格式：~base64(encrypt(nick))~111~
            </summary>
            <param name="data">明文数据</param>
            <param name="type">加密字段类型(例如：nick\phone)</param>
            <param name="session">用户身份,用户级加密必填</param>
            <param name="version">秘钥历史版本</param>
            <returns></returns>
        </member>
        <member name="M:Top.Api.Security.SecurityClient.Encrypt(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            批量加密（所有用户共用秘钥）
            </summary>
            <param name="dataList"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Top.Api.Security.SecurityClient.Encrypt(System.Collections.Generic.List{System.String},System.String,System.String)">
            <summary>
            批量加密（每个用户单独分配秘钥）
            </summary>
            <param name="dataList"></param>
            <param name="type"></param>
            <param name="session"></param>
            <returns>key=明文数据，value=密文数据</returns>
        </member>
        <member name="M:Top.Api.Security.SecurityClient.GenerateCustomerSession(System.Int64)">
            <summary>
            生成自定义session，提供给自主账号使用
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Top.Api.Security.SecurityBiz.IsEncryptData(System.String,System.String)">
            <summary>
            判断是否密文数据
            </summary>
            <param name="data"></param>
            <param name="type">加密字段类型(例如：nick\phone)</param>
            <returns></returns>
        </member>
        <member name="M:Top.Api.Security.SecurityBiz.CheckEncryptData(System.String[])">
            <summary>
            判断是否密文数据
            </summary>
            <param name="dataArray"></param>
            <returns></returns>
        </member>
        <member name="M:Top.Api.Security.SecurityBiz.EncryptPhone(System.String,System.String,Top.Api.Security.SecretContext)">
            <summary>
            加密手机尾号后8位
            </summary>
            <param name="data"></param>
            <param name="separator"></param>
            <param name="secretContext"></param>
            <returns></returns>
        </member>
        <member name="M:Top.Api.Security.SecurityBiz.EncryptPhoneIndex(System.String,System.String,Top.Api.Security.SecretContext)">
            <summary>
            加密手机后4位转H-MAC
            </summary>
            <param name="data"></param>
            <param name="separator"></param>
            <param name="secretContext"></param>
            <returns></returns>
        </member>
        <member name="M:Top.Api.Security.SecurityBiz.SearchPhoneIndex(System.String,System.String,Top.Api.Security.SecretContext)">
            <summary>
            手机号后4位H-MAC值
            </summary>
            <param name="data"></param>
            <param name="separator"></param>
            <param name="secretContext"></param>
            <returns></returns>
        </member>
        <member name="M:Top.Api.Security.SecurityBiz.EncryptNormal(System.String,System.String,Top.Api.Security.SecretContext)">
            <summary>
             生成密文数据
            </summary>
            <param name="data"></param>
            <param name="separator"></param>
            <param name="secretContext"></param>
            <returns></returns>
        </member>
        <member name="M:Top.Api.Security.SecurityBiz.EncryptNormalIndex(System.String,System.Int32,System.Int32,System.String,Top.Api.Security.SecretContext)">
            <summary>
            滑窗加密
            </summary>
            <param name="data"></param>
            <param name="compressLen"></param>
            <param name="slideSize"></param>
            <param name="separator"></param>
            <param name="secretContext"></param>
            <returns></returns>
        </member>
        <member name="M:Top.Api.Security.SecurityBiz.SearchNormalIndex(System.String,System.Int32,System.Int32,Top.Api.Security.SecretContext)">
            <summary>
            密文检索
            </summary>
            <param name="data"></param>
            <param name="compressLen"></param>
            <param name="slideSize"></param>
            <param name="secretContext"></param>
            <returns></returns>
        </member>
        <member name="M:Top.Api.Security.SecurityBiz.GetSecretData(System.String,System.Char)">
            <summary>
            获取秘钥版本、加密原始数据
            </summary>
            <param name="data"></param>
            <param name="separatorChar"></param>
            <returns></returns>
        </member>
        <member name="M:Top.Api.Security.SecurityBiz.GetIndexSecretData(System.String,System.Char)">
            <summary>
            获取秘钥版本、加密原始数据（支持密文检索）
            </summary>
            <param name="data"></param>
            <param name="separatorChar"></param>
            <returns></returns>
        </member>
        <member name="T:Aliyun.Api.Parser.AliyunJsonReader">
            <summary>
            TOP JSON响应通用读取器。
            </summary>
        </member>
        <member name="M:Aliyun.Api.Util.AliyunWebUtils.DoPost(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            执行HTTP POST请求。
            </summary>
            <param name="url">请求地址</param>
            <param name="parameters">请求参数</param>
            <returns>HTTP响应</returns>
        </member>
        <member name="M:Aliyun.Api.Util.AliyunWebUtils.DoGet(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            执行HTTP GET请求。
            </summary>
            <param name="url">请求地址</param>
            <param name="parameters">请求参数</param>
            <returns>HTTP响应</returns>
        </member>
        <member name="M:Aliyun.Api.Util.AliyunWebUtils.DoPost(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,Top.Api.Util.FileItem})">
            <summary>
            执行带文件上传的HTTP POST请求。
            </summary>
            <param name="url">请求地址</param>
            <param name="textParams">请求文本参数</param>
            <param name="fileParams">请求文件参数</param>
            <returns>HTTP响应</returns>
        </member>
        <member name="M:Aliyun.Api.Util.AliyunWebUtils.GetResponseAsString(System.Net.HttpWebResponse,System.Text.Encoding)">
            <summary>
            把响应流转换为文本。
            </summary>
            <param name="rsp">响应流对象</param>
            <param name="encoding">编码方式</param>
            <returns>响应文本</returns>
        </member>
        <member name="M:Aliyun.Api.Util.AliyunWebUtils.BuildGetUrl(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            组装GET请求URL。
            </summary>
            <param name="url">请求地址</param>
            <param name="parameters">请求参数</param>
            <returns>带参数的GET请求URL</returns>
        </member>
        <member name="M:Aliyun.Api.Util.AliyunWebUtils.BuildQuery(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            组装普通文本请求参数。
            </summary>
            <param name="parameters">Key-Value形式请求参数字典</param>
            <returns>URL编码后的请求数据</returns>
        </member>
        <member name="P:Aliyun.Api.Util.AliyunWebUtils.Timeout">
            <summary>
            请求与响应的超时时间
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerCampaignCreateResponse">
            <summary>
            ZuanshiBannerCampaignCreateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCampaignCreateResponse.Result">
            <summary>
            result
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerCampaignCreateResponse.ResultDomain">
            <summary>
            ResultDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCampaignCreateResponse.ResultDomain.Id">
            <summary>
            计划ID
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCampaignCreateResponse.ResultDomain.Message">
            <summary>
            message
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerCampaignCreateResponse.ResultDomain.Success">
            <summary>
            success
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAdvertiserCampaignRptsDownloadResponse">
            <summary>
            ZuanshiAdvertiserCampaignRptsDownloadResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserCampaignRptsDownloadResponse.TaskId">
            <summary>
            生成的任务id标识，用于轮询任务状态
            </summary>
        </member>
        <member name="T:Top.Api.Response.TmcMessageProduceResponse">
            <summary>
            TmcMessageProduceResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmcMessageProduceResponse.IsSuccess">
            <summary>
            是否成功
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmcMessageProduceResponse.MsgIds">
            <summary>
            消息ID
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmcMessageProduceResponse.Total">
            <summary>
            投递目标数
            </summary>
        </member>
        <member name="T:Top.Api.Response.TbkItemCouponGetResponse">
            <summary>
            TbkItemCouponGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkItemCouponGetResponse.Results">
            <summary>
            TbkCoupon
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkItemCouponGetResponse.TotalResults">
            <summary>
            总请求数
            </summary>
        </member>
        <member name="T:Top.Api.Response.TbkItemCouponGetResponse.TbkCouponDomain">
            <summary>
            TbkCouponDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkItemCouponGetResponse.TbkCouponDomain.Category">
            <summary>
            后台一级类目
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkItemCouponGetResponse.TbkCouponDomain.CommissionRate">
            <summary>
            佣金比率(%)
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkItemCouponGetResponse.TbkCouponDomain.CouponClickUrl">
            <summary>
            商品优惠券推广链接
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkItemCouponGetResponse.TbkCouponDomain.CouponEndTime">
            <summary>
            优惠券结束时间
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkItemCouponGetResponse.TbkCouponDomain.CouponInfo">
            <summary>
            优惠券面额
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkItemCouponGetResponse.TbkCouponDomain.CouponRemainCount">
            <summary>
            优惠券剩余量
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkItemCouponGetResponse.TbkCouponDomain.CouponStartTime">
            <summary>
            优惠券开始时间
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkItemCouponGetResponse.TbkCouponDomain.CouponTotalCount">
            <summary>
            优惠券总量
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkItemCouponGetResponse.TbkCouponDomain.ItemDescription">
            <summary>
            宝贝描述（推荐理由）
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkItemCouponGetResponse.TbkCouponDomain.ItemUrl">
            <summary>
            商品详情页链接地址
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkItemCouponGetResponse.TbkCouponDomain.Nick">
            <summary>
            卖家昵称
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkItemCouponGetResponse.TbkCouponDomain.NumIid">
            <summary>
            itemId
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkItemCouponGetResponse.TbkCouponDomain.PictUrl">
            <summary>
            商品主图
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkItemCouponGetResponse.TbkCouponDomain.SellerId">
            <summary>
            卖家id
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkItemCouponGetResponse.TbkCouponDomain.ShopTitle">
            <summary>
            店铺名称
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkItemCouponGetResponse.TbkCouponDomain.SmallImages">
            <summary>
            商品小图列表
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkItemCouponGetResponse.TbkCouponDomain.Title">
            <summary>
            商品标题
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkItemCouponGetResponse.TbkCouponDomain.UserType">
            <summary>
            卖家类型，0表示集市，1表示商城
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkItemCouponGetResponse.TbkCouponDomain.Volume">
            <summary>
            30天销量
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkItemCouponGetResponse.TbkCouponDomain.ZkFinalPrice">
            <summary>
            折扣价
            </summary>
        </member>
        <member name="T:Top.Api.Response.OpenimIoscertSandboxSetResponse">
            <summary>
            OpenimIoscertSandboxSetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.OpenimIoscertSandboxSetResponse.Code">
            <summary>
            操作成功
            </summary>
        </member>
        <member name="T:Top.Api.Response.InventoryQueryResponse">
            <summary>
            InventoryQueryResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.InventoryQueryResponse.ItemInventorys">
            <summary>
            商品总体库存信息
            </summary>
        </member>
        <member name="P:Top.Api.Response.InventoryQueryResponse.TipInfos">
            <summary>
            提示信息，提示不存在的后端商品
            </summary>
        </member>
        <member name="T:Top.Api.Response.FenxiaoProductQuantityUpdateResponse">
            <summary>
            FenxiaoProductQuantityUpdateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoProductQuantityUpdateResponse.Created">
            <summary>
            操作时间
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoProductQuantityUpdateResponse.Result">
            <summary>
            操作结果
            </summary>
        </member>
        <member name="T:Top.Api.Response.DmpCrowdCreateResponse">
            <summary>
            DmpCrowdCreateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.DmpCrowdCreateResponse.Result">
            <summary>
            result
            </summary>
        </member>
        <member name="T:Top.Api.Response.DmpCrowdCreateResponse.ResultDTODomain">
            <summary>
            ResultDTODomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.DmpCrowdCreateResponse.ResultDTODomain.CrowdId">
            <summary>
            返回人群ID
            </summary>
        </member>
        <member name="P:Top.Api.Response.DmpCrowdCreateResponse.ResultDTODomain.Msg">
            <summary>
            调用消息
            </summary>
        </member>
        <member name="P:Top.Api.Response.DmpCrowdCreateResponse.ResultDTODomain.Success">
            <summary>
            是否成功
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiBannerCampaignCreateRequest">
            <summary>
            TOP API: taobao.zuanshi.banner.campaign.create
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCampaignCreateRequest.AreaIdList">
            <summary>
            投放地区
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCampaignCreateRequest.DayBudget">
            <summary>
            日预算，单位分
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCampaignCreateRequest.EndTime">
            <summary>
            投放结束时间
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCampaignCreateRequest.Name">
            <summary>
            计划名称，只支持汉字、字母、数字、下划线，32个字符
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCampaignCreateRequest.SpeedType">
            <summary>
            1：尽快，2：均匀
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCampaignCreateRequest.StartTime">
            <summary>
            投放开始时间
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCampaignCreateRequest.Type">
            <summary>
            2：cpm，8：cpc
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCampaignCreateRequest.Weekend">
            <summary>
            周六和周日，数组24个元素，true：投放，false：不投放
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCampaignCreateRequest.Workday">
            <summary>
            周一到周五，数组24个元素，true：投放，false：不投放
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiAdvertiserTransRptsDownloadRequest">
            <summary>
            TOP API: taobao.zuanshi.advertiser.trans.rpts.download
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserTransRptsDownloadRequest.EndTime">
            <summary>
            查询结束时间
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserTransRptsDownloadRequest.RptType">
            <summary>
            计划类型，1代表展示网络，3代表视频网络
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserTransRptsDownloadRequest.StartTime">
            <summary>
            查询开始时间
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiAdvertiserTargetAdzoneRtrptsTotalGetRequest">
            <summary>
            TOP API: taobao.zuanshi.advertiser.target.adzone.rtrpts.total.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserTargetAdzoneRtrptsTotalGetRequest.AdgroupId">
            <summary>
            推广单元id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserTargetAdzoneRtrptsTotalGetRequest.AdzoneId">
            <summary>
            资源位id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserTargetAdzoneRtrptsTotalGetRequest.CampaignId">
            <summary>
            计划id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserTargetAdzoneRtrptsTotalGetRequest.LogDate">
            <summary>
            日期
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserTargetAdzoneRtrptsTotalGetRequest.Offset">
            <summary>
            分页偏移量
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserTargetAdzoneRtrptsTotalGetRequest.PageSize">
            <summary>
            分页记录数
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserTargetAdzoneRtrptsTotalGetRequest.TargetId">
            <summary>
            定向id
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiAdvertiserKeywordRptsDownloadRequest">
            <summary>
            TOP API: taobao.zuanshi.advertiser.keyword.rpts.download
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserKeywordRptsDownloadRequest.EndTime">
            <summary>
            查询结束时间
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserKeywordRptsDownloadRequest.StartTime">
            <summary>
            查询开始时间
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiAdvertiserCreativeRptsDayGetRequest">
            <summary>
            TOP API: taobao.zuanshi.advertiser.creative.rpts.day.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserCreativeRptsDayGetRequest.AdgroupId">
            <summary>
            单元id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserCreativeRptsDayGetRequest.CampaignId">
            <summary>
            计划id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserCreativeRptsDayGetRequest.CampaignModel">
            <summary>
            计划类型。1：全店推广；4单品推广
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserCreativeRptsDayGetRequest.CreativeId">
            <summary>
            创意id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserCreativeRptsDayGetRequest.Effect">
            <summary>
            效果周期，取值范围：3,7,15。分别表示效果转化周期-3天/7天/15天。
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserCreativeRptsDayGetRequest.EffectType">
            <summary>
            效果类型。“impression”：展现效果；“click”：点击效果
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserCreativeRptsDayGetRequest.EndTime">
            <summary>
            结束日期
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserCreativeRptsDayGetRequest.StartTime">
            <summary>
            开始日期
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiAdvertiserAdboardRptsDownloadRequest">
            <summary>
            TOP API: taobao.zuanshi.advertiser.adboard.rpts.download
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAdboardRptsDownloadRequest.EndTime">
            <summary>
            查询结束时间
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAdboardRptsDownloadRequest.RptType">
            <summary>
            计划类型，1代表展示网络，2代表明星店铺，3代表视频网络
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiAdvertiserAdboardRptsDownloadRequest.StartTime">
            <summary>
            查询开始时间
            </summary>
        </member>
        <member name="T:Top.Api.Request.WangwangClientidUnbindRequest">
            <summary>
            TOP API: taobao.wangwang.clientid.unbind
            </summary>
        </member>
        <member name="P:Top.Api.Request.WangwangClientidUnbindRequest.AppName">
            <summary>
            应用名
            </summary>
        </member>
        <member name="P:Top.Api.Request.WangwangClientidUnbindRequest.ClientId">
            <summary>
            客户端Id
            </summary>
        </member>
        <member name="T:Top.Api.Request.TbkSpreadGetRequest">
            <summary>
            TOP API: taobao.tbk.spread.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkSpreadGetRequest.Requests">
            <summary>
            请求列表，内部包含多个url
            </summary>
        </member>
        <member name="T:Top.Api.Request.TbkSpreadGetRequest.TbkSpreadRequestDomain">
            <summary>
            TbkSpreadRequestDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkSpreadGetRequest.TbkSpreadRequestDomain.Url">
            <summary>
            原始url, 只支持uland.taobao.com，s.click.taobao.com， ai.taobao.com，temai.taobao.com的域名转换，否则判错
            </summary>
        </member>
        <member name="T:Top.Api.Request.RegionWarehouseQueryRequest">
            <summary>
            TOP API: taobao.region.warehouse.query
            </summary>
        </member>
        <member name="P:Top.Api.Request.RegionWarehouseQueryRequest.StoreCode">
            <summary>
            仓库编码
            </summary>
        </member>
        <member name="T:Top.Api.Request.OpenimUsersDeleteRequest">
            <summary>
            TOP API: taobao.openim.users.delete
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimUsersDeleteRequest.Userids">
            <summary>
            需要删除的用户列表，多个用户用半角逗号分隔，最多一次可以删除100个用户
            </summary>
        </member>
        <member name="T:Top.Api.Request.OpenimUsersAddRequest">
            <summary>
            TOP API: taobao.openim.users.add
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimUsersAddRequest.Userinfos">
            <summary>
            用户信息列表
            </summary>
        </member>
        <member name="T:Top.Api.Request.OpenimTribeExpelRequest">
            <summary>
            TOP API: taobao.openim.tribe.expel
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimTribeExpelRequest.Member">
            <summary>
            用户信息
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimTribeExpelRequest.TribeId">
            <summary>
            群id
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimTribeExpelRequest.User">
            <summary>
            用户信息
            </summary>
        </member>
        <member name="T:Top.Api.Request.OpenimTribeDismissRequest">
            <summary>
            TOP API: taobao.openim.tribe.dismiss
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimTribeDismissRequest.TribeId">
            <summary>
            群id
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimTribeDismissRequest.User">
            <summary>
            用户信息
            </summary>
        </member>
        <member name="T:Top.Api.Request.ItemSchemaUpdateRequest">
            <summary>
            TOP API: taobao.item.schema.update
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemSchemaUpdateRequest.CategoryId">
            <summary>
            如果重新选择类目后，传入重新选择的叶子类目id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemSchemaUpdateRequest.Incremental">
            <summary>
            是否增量更新。为true只改xml_data里传入的值。为false时，将根据xml_data的数据对原始宝贝数据进行全量覆盖,这个参数暂时不支持
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemSchemaUpdateRequest.ItemId">
            <summary>
            编辑商品的商品id
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemSchemaUpdateRequest.XmlData">
            <summary>
            编辑商品时候的修改内容
            </summary>
        </member>
        <member name="T:Top.Api.Request.FenxiaoRefundGetRequest">
            <summary>
            TOP API: taobao.fenxiao.refund.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoRefundGetRequest.QuerySellerRefund">
            <summary>
            是否查询下游买家的退款信息
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoRefundGetRequest.SubOrderId">
            <summary>
            要查询的退款子单的id
            </summary>
        </member>
        <member name="T:Top.Api.Request.FenxiaoProductQuantityUpdateRequest">
            <summary>
            TOP API: taobao.fenxiao.product.quantity.update
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductQuantityUpdateRequest.ProductId">
            <summary>
            产品ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductQuantityUpdateRequest.Properties">
            <summary>
            sku属性值，产品有sku时填写，多个sku用,分隔。为空时默认该产品无sku，则只修改产品的库存。
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductQuantityUpdateRequest.Quantity">
            <summary>
            库存修改值。产品有sku时，与sku属性顺序对应，用,分隔。产品无sku时，只写库存值。 当全量更新库存时，quantity必须为大于等于0的正整数；当增量更新库存时，quantity为整数，可小于等于0。若增量更新时传入的库存为负数，则负数与实际库存之和不能小于0。比如当前实际库存为1，传入增量更新quantity=-1，库存改为0
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductQuantityUpdateRequest.Type">
            <summary>
            库存更新方式，可选。1为全量更新，2为增量更新。如果不填，默认为全量更新。当选择全量更新时，如果库存更新值传入的是负数，会出错并返回错误码；当选择增量更新时，如果库存更新值为负数且绝对值大于当前库存，则sku库存会设置为0
            </summary>
        </member>
        <member name="T:Top.Api.Request.FenxiaoProductAddRequest">
            <summary>
            TOP API: taobao.fenxiao.product.add
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductAddRequest.AlarmNumber">
            <summary>
            警戒库存必须是0到29999。
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductAddRequest.CategoryId">
            <summary>
            所属类目id，参考Taobao.itemcats.get，不支持成人等类目，输入成人类目id保存提示类目属性错误。
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductAddRequest.City">
            <summary>
            所在地：市，例：“杭州”
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductAddRequest.CostPrice">
            <summary>
            代销采购价格，单位：元。例：“10.56”。必须在0.01元到10000000元之间。
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductAddRequest.DealerCostPrice">
            <summary>
            经销采购价，单位：元。例：“10.56”。必须在0.01元到10000000元之间。
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductAddRequest.Desc">
            <summary>
            产品描述，长度为5到25000字符。
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductAddRequest.DiscountId">
            <summary>
            折扣ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductAddRequest.HaveGuarantee">
            <summary>
            是否有保修，可选值：false（否）、true（是），默认false。
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductAddRequest.HaveInvoice">
            <summary>
            是否有发票，可选值：false（否）、true（是），默认false。
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductAddRequest.Image">
            <summary>
            产品主图，大小不超过500k，格式为gif,jpg,jpeg,png,bmp等图片
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductAddRequest.InputProperties">
            <summary>
            自定义属性。格式为pid:value;pid:value
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductAddRequest.IsAuthz">
            <summary>
            添加产品时，添加入参isAuthz:yes|no   yes:需要授权   no:不需要授权   默认是需要授权
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductAddRequest.ItemId">
            <summary>
            导入的商品ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductAddRequest.Name">
            <summary>
            产品名称，长度不超过60个字节。
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductAddRequest.OuterId">
            <summary>
            商家编码，长度不能超过60个字节。
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductAddRequest.PicPath">
            <summary>
            产品主图图片空间相对路径或绝对路径
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductAddRequest.PostageEms">
            <summary>
            ems费用，单位：元。例：“10.56”。 大小为0.00元到999999元之间。
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductAddRequest.PostageFast">
            <summary>
            快递费用，单位：元。例：“10.56”。 大小为0.01元到999999元之间。
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductAddRequest.PostageId">
            <summary>
            运费模板ID，参考taobao.postages.get。
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductAddRequest.PostageOrdinary">
            <summary>
            平邮费用，单位：元。例：“10.56”。 大小为0.01元到999999元之间。
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductAddRequest.PostageType">
            <summary>
            运费类型，可选值：seller（供应商承担运费）、buyer（分销商承担运费）,默认seller。
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductAddRequest.ProductcatId">
            <summary>
            产品线ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductAddRequest.Properties">
            <summary>
            产品属性，格式为pid:vid;pid:vid
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductAddRequest.PropertyAlias">
            <summary>
            属性别名，格式为：pid:vid:alias;pid:vid:alias（alias为别名）
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductAddRequest.Prov">
            <summary>
            所在地：省，例：“浙江”
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductAddRequest.Quantity">
            <summary>
            产品库存必须是1到999999。
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductAddRequest.RetailPriceHigh">
            <summary>
            最高零售价，单位：元。例：“10.56”。必须在0.01元到10000000元之间，最高零售价必须大于最低零售价。
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductAddRequest.RetailPriceLow">
            <summary>
            最低零售价，单位：元。例：“10.56”。必须在0.01元到10000000元之间。
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductAddRequest.SkuCostPrices">
            <summary>
            sku的采购价。如果多个，用逗号分隔，并与其他sku信息保持相同顺序
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductAddRequest.SkuDealerCostPrices">
            <summary>
            sku的经销采购价。如果多个，用逗号分隔，并与其他sku信息保持相同顺序。其中每个值的单位：元。例：“10.56,12.3”。必须在0.01元到10000000元之间。
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductAddRequest.SkuOuterIds">
            <summary>
            sku的商家编码。如果多个，用逗号分隔，并与其他sku信息保持相同顺序
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductAddRequest.SkuProperties">
            <summary>
            sku的属性。如果多个，用逗号分隔，并与其他sku信息保持相同顺序
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductAddRequest.SkuQuantitys">
            <summary>
            sku的库存。如果多个，用逗号分隔，并与其他sku信息保持相同顺序
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductAddRequest.SkuStandardPrices">
            <summary>
            sku的采购基准价。如果多个，用逗号分隔，并与其他sku信息保持相同顺序
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductAddRequest.SpuId">
            <summary>
            产品spuID，达尔文产品必须要传spuID，否则不能发布。其他非达尔文产品，看情况传
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductAddRequest.StandardPrice">
            <summary>
            采购基准价格，单位：元。例：“10.56”。必须在0.01元到10000000元之间。
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductAddRequest.StandardRetailPrice">
            <summary>
            零售基准价，单位：元。例：“10.56”。必须在0.01元到10000000元之间。
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoProductAddRequest.TradeType">
            <summary>
            分销方式：AGENT（只做代销，默认值）、DEALER（只做经销）、ALL（代销和经销都做）
            </summary>
        </member>
        <member name="T:Top.Api.Request.FenxiaoOrdersGetRequest">
            <summary>
            TOP API: taobao.fenxiao.orders.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoOrdersGetRequest.EndCreated">
            <summary>
            结束时间 格式 yyyy-MM-dd HH:mm:ss.支持到秒的查询。若不传时分秒，默认为0时0分0秒。若purchase_order_id没传，则此参数必传。
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoOrdersGetRequest.Fields">
            <summary>
            多个字段用","分隔。<br/><br/>fields<br/>如果为空：返回所有采购单对象(purchase_orders)字段。<br/>如果不为空：返回指定采购单对象(purchase_orders)字段。<br/><br/>例1：<br/>sub_purchase_orders.tc_order_id 表示只返回tc_order_id <br/>例2：<br/>sub_purchase_orders表示只返回子采购单列表
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoOrdersGetRequest.PageNo">
            <summary>
            页码。（大于0的整数。默认为1）
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoOrdersGetRequest.PageSize">
            <summary>
            每页条数。（每页条数不超过50条）
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoOrdersGetRequest.PurchaseOrderId">
            <summary>
            采购单编号或分销流水号，若其它参数没传，则此参数必传。
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoOrdersGetRequest.StartCreated">
            <summary>
            起始时间 格式 yyyy-MM-dd HH:mm:ss.支持到秒的查询。若不传时分秒，默认为0时0分0秒。若purchase_order_id没传，则此参数必传。
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoOrdersGetRequest.Status">
            <summary>
            交易状态，不传默认查询所有采购单根据身份选择自身状态可选值: *供应商： WAIT_SELLER_SEND_GOODS(等待发货) WAIT_SELLER_CONFIRM_PAY(待确认收款) WAIT_BUYER_PAY(等待付款) WAIT_BUYER_CONFIRM_GOODS(已发货) TRADE_REFUNDING(退款中) TRADE_FINISHED(采购成功) TRADE_CLOSED(已关闭) *分销商： WAIT_BUYER_PAY(等待付款) WAIT_BUYER_CONFIRM_GOODS(待收货确认) TRADE_FOR_PAY(已付款) TRADE_REFUNDING(退款中) TRADE_FINISHED(采购成功) TRADE_CLOSED(已关闭)
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoOrdersGetRequest.TcOrderId">
            <summary>
            采购单下游买家订单id
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoOrdersGetRequest.TimeType">
            <summary>
            可选值：trade_time_type(采购单按照成交时间范围查询),update_time_type(采购单按照更新时间范围查询)
            </summary>
        </member>
        <member name="F:FastJSON.JSONParameters.UseOptimizedDatasetSchema">
            <summary>
            Use the optimized fast Dataset Schema format (default = True)
            </summary>
        </member>
        <member name="F:FastJSON.JSONParameters.UseFastGuid">
            <summary>
            Use the fast GUID format (default = True)
            </summary>
        </member>
        <member name="F:FastJSON.JSONParameters.SerializeNullValues">
            <summary>
            Serialize null values to the output (default = True)
            </summary>
        </member>
        <member name="F:FastJSON.JSONParameters.UseUTCDateTime">
            <summary>
            Use the UTC date format (default = True)
            </summary>
        </member>
        <member name="F:FastJSON.JSONParameters.ShowReadOnlyProperties">
            <summary>
            Show the readonly properties of types in the output (default = False)
            </summary>
        </member>
        <member name="F:FastJSON.JSONParameters.UsingGlobalTypes">
            <summary>
            Use the $types extension to optimise the output json (default = True)
            </summary>
        </member>
        <member name="F:FastJSON.JSONParameters.IgnoreCaseOnDeserialize">
            <summary>
            Ignore case when processing json and deserializing 
            </summary>
        </member>
        <member name="F:FastJSON.JSONParameters.EnableAnonymousTypes">
            <summary>
            Anonymous types have read only properties 
            </summary>
        </member>
        <member name="F:FastJSON.JSONParameters.UseExtensions">
            <summary>
            Enable fastJSON extensions $types, $type, $map (default = True)
            </summary>
        </member>
        <member name="F:FastJSON.JSONParameters.UseEscapedUnicode">
            <summary>
            Use escaped unicode i.e. \uXXXX format for non ASCII characters (default = True)
            </summary>
        </member>
        <member name="F:FastJSON.JSONParameters.KVStyleStringDictionary">
            <summary>
            Output string key dictionaries as "k"/"v" format (default = False) 
            </summary>
        </member>
        <member name="F:FastJSON.JSONParameters.UseValuesOfEnums">
            <summary>
            Output Enum values instead of names (default = False)
            </summary>
        </member>
        <member name="F:FastJSON.JSONParameters.IgnoreAttributes">
            <summary>
            Ignore attributes to check for (default : XmlIgnoreAttribute)
            </summary>
        </member>
        <member name="F:FastJSON.JSONParameters.ParametricConstructorOverride">
            <summary>
            If you have parametric and no default constructor for you classes (default = False)
            
            IMPORTANT NOTE : If True then all initial values within the class will be ignored and will be not set
            </summary>
        </member>
        <member name="F:FastJSON.JSONParameters.DateTimeMilliseconds">
            <summary>
            Serialize DateTime milliseconds i.e. yyyy-MM-dd HH:mm:ss.nnn (default = false)
            </summary>
        </member>
        <member name="F:FastJSON.JSONParameters.SerializerMaxDepth">
            <summary>
            Maximum depth for circular references in inline mode (default = 20)
            </summary>
        </member>
        <member name="F:FastJSON.JSONParameters.InlineCircularReferences">
            <summary>
            Inline circular or already seen objects instead of replacement with $i (default = False) 
            </summary>
        </member>
        <member name="F:FastJSON.JSONParameters.SerializeToLowerCaseNames">
            <summary>
            Save property/field names as lowercase (default = false)
            </summary>
        </member>
        <member name="F:FastJSON.JSONParameters.UseApiNamingStyle">
            <summary>
            Serialize property name with underline style
            </summary>
        </member>
        <member name="F:FastJSON.JSON.Parameters">
            <summary>
            Globally set-able parameters for controlling the serializer
            </summary>
        </member>
        <member name="M:FastJSON.JSON.ToNiceJSON(System.Object,FastJSON.JSONParameters)">
            <summary>
            Create a formatted json string (beautified) from an object
            </summary>
            <param name="obj"></param>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:FastJSON.JSON.ToJSON(System.Object)">
            <summary>
            Create a json representation for an object
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:FastJSON.JSON.ToJSON(System.Object,FastJSON.JSONParameters)">
            <summary>
            Create a json representation for an object with parameter override on this call
            </summary>
            <param name="obj"></param>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:FastJSON.JSON.Parse(System.String)">
            <summary>
            Parse a json string and generate a Dictionary&lt;string,object&gt; or List&lt;object&gt; structure
            </summary>
            <param name="json"></param>
            <returns></returns>
        </member>
        <member name="M:FastJSON.JSON.ToObject``1(System.String)">
            <summary>
            Create a typed generic object from the json
            </summary>
            <typeparam name="T"></typeparam>
            <param name="json"></param>
            <returns></returns>
        </member>
        <member name="M:FastJSON.JSON.ToObject``1(System.String,FastJSON.JSONParameters)">
            <summary>
            Create a typed generic object from the json with parameter override on this call
            </summary>
            <typeparam name="T"></typeparam>
            <param name="json"></param>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:FastJSON.JSON.ToObject(System.String)">
            <summary>
            Create an object from the json
            </summary>
            <param name="json"></param>
            <returns></returns>
        </member>
        <member name="M:FastJSON.JSON.ToObject(System.String,FastJSON.JSONParameters)">
            <summary>
            Create an object from the json with parameter override on this call
            </summary>
            <param name="json"></param>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:FastJSON.JSON.ToObject(System.String,System.Type)">
            <summary>
            Create an object of type from the json
            </summary>
            <param name="json"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:FastJSON.JSON.FillObject(System.Object,System.String)">
            <summary>
            Fill a given object with the json represenation
            </summary>
            <param name="input"></param>
            <param name="json"></param>
            <returns></returns>
        </member>
        <member name="M:FastJSON.JSON.DeepCopy(System.Object)">
            <summary>
            Deep copy an object i.e. clone to a new object
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:FastJSON.JSON.DeepCopy``1(``0)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:FastJSON.JSON.Beautify(System.String)">
            <summary>
            Create a human readable string from the json 
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:FastJSON.JSON.RegisterCustomType(System.Type,FastJSON.Serialize,FastJSON.Deserialize)">
            <summary>
            Register custom type handlers for your own types not natively handled by fastJSON
            </summary>
            <param name="type"></param>
            <param name="serializer"></param>
            <param name="deserializer"></param>
        </member>
        <member name="M:FastJSON.JSON.ClearReflectionCache">
            <summary>
            Clear the internal reflection cache so you can start from new (you will loose performance)
            </summary>
        </member>
        <member name="P:Taobao.Top.Link.Endpoints.AckMessageArgs.Message">
            <summary>get ack message
            </summary>
        </member>
        <member name="P:Taobao.Top.Link.Endpoints.AckMessageArgs.MessageFrom">
            <summary>get where the ack message come from
            </summary>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Encryption.ZipAESTransform">
            <summary>
            Transforms stream using AES in CTR mode
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Encryption.ZipAESTransform.#ctor(System.String,System.Byte[],System.Int32,System.Boolean)">
             <summary>
             Constructor.
             </summary>
             <param name="key">Password string</param>
             <param name="saltBytes">Random bytes, length depends on encryption strength.
             128 bits = 8 bytes, 192 bits = 12 bytes, 256 bits = 16 bytes.</param>
             <param name="blockSize">The encryption strength, in bytes eg 16 for 128 bits.</param>
             <param name="writeMode">True when creating a zip, false when reading. For the AuthCode.</param>
            
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Encryption.ZipAESTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Implement the ICryptoTransform method.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Encryption.ZipAESTransform.GetAuthCode">
            <summary>
            Returns the 10 byte AUTH CODE to be checked or appended immediately following the AES data stream.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Encryption.ZipAESTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Not implemented.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Encryption.ZipAESTransform.Dispose">
            <summary>
            Cleanup internal state.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Encryption.ZipAESTransform.PwdVerifier">
            <summary>
            Returns the 2 byte password verifier
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Encryption.ZipAESTransform.InputBlockSize">
            <summary>
            Gets the size of the input data blocks in bytes.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Encryption.ZipAESTransform.OutputBlockSize">
            <summary>
            Gets the size of the output data blocks in bytes.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Encryption.ZipAESTransform.CanTransformMultipleBlocks">
            <summary>
            Gets a value indicating whether multiple blocks can be transformed.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Encryption.ZipAESTransform.CanReuseTransform">
            <summary>
            Gets a value indicating whether the current transform can be reused.
            </summary>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Encryption.ZipAESStream">
            <summary>
            Encrypts and decrypts AES ZIP
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Encryption.ZipAESStream.#ctor(System.IO.Stream,ICSharpCode.SharpZipLib.Encryption.ZipAESTransform,System.Security.Cryptography.CryptoStreamMode)">
            <summary>
            Constructor
            </summary>
            <param name="stream">The stream on which to perform the cryptographic transformation.</param>
            <param name="transform">Instance of ZipAESTransform</param>
            <param name="mode">Read or Write</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Encryption.ZipAESStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a sequence of bytes from the current CryptoStream into buffer,
            and advances the position within the stream by the number of bytes read.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Encryption.ZipAESStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.
            </summary>
            <param name="buffer">An array of bytes. This method copies count bytes from buffer to the current stream. </param>
            <param name="offset">The byte offset in buffer at which to begin copying bytes to the current stream. </param>
            <param name="count">The number of bytes to be written to the current stream. </param>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Zip.FastZipEvents">
            <summary>
            FastZipEvents supports all events applicable to <see cref="T:ICSharpCode.SharpZipLib.Zip.FastZip">FastZip</see> operations.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.FastZipEvents.ProcessDirectory">
            <summary>
            Delegate to invoke when processing directories.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.FastZipEvents.ProcessFile">
            <summary>
            Delegate to invoke when processing files.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.FastZipEvents.Progress">
            <summary>
            Delegate to invoke during processing of files.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.FastZipEvents.CompletedFile">
            <summary>
            Delegate to invoke when processing for a file has been completed.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.FastZipEvents.DirectoryFailure">
            <summary>
            Delegate to invoke when processing directory failures.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.FastZipEvents.FileFailure">
            <summary>
            Delegate to invoke when processing file failures.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.FastZipEvents.OnDirectoryFailure(System.String,System.Exception)">
            <summary>
            Raise the <see cref="F:ICSharpCode.SharpZipLib.Zip.FastZipEvents.DirectoryFailure">directory failure</see> event.
            </summary>
            <param name="directory">The directory causing the failure.</param>
            <param name="e">The exception for this event.</param>
            <returns>A boolean indicating if execution should continue or not.</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.FastZipEvents.OnFileFailure(System.String,System.Exception)">
            <summary>
            Fires the <see cref="F:ICSharpCode.SharpZipLib.Zip.FastZipEvents.FileFailure"> file failure handler delegate</see>.
            </summary>
            <param name="file">The file causing the failure.</param>
            <param name="e">The exception for this failure.</param>
            <returns>A boolean indicating if execution should continue or not.</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.FastZipEvents.OnProcessFile(System.String)">
            <summary>
            Fires the <see cref="F:ICSharpCode.SharpZipLib.Zip.FastZipEvents.ProcessFile">ProcessFile delegate</see>.
            </summary>
            <param name="file">The file being processed.</param>
            <returns>A boolean indicating if execution should continue or not.</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.FastZipEvents.OnCompletedFile(System.String)">
            <summary>
            Fires the <see cref="F:ICSharpCode.SharpZipLib.Zip.FastZipEvents.CompletedFile"/> delegate
            </summary>
            <param name="file">The file whose processing has been completed.</param>
            <returns>A boolean indicating if execution should continue or not.</returns>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.FastZipEvents.OnProcessDirectory(System.String,System.Boolean)">
            <summary>
            Fires the <see cref="F:ICSharpCode.SharpZipLib.Zip.FastZipEvents.ProcessDirectory">process directory</see> delegate.
            </summary>
            <param name="directory">The directory being processed.</param>
            <param name="hasMatchingFiles">Flag indicating if the directory has matching files as determined by the current filter.</param>
            <returns>A <see cref="T:System.Boolean"/> of true if the operation should continue; false otherwise.</returns>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.FastZipEvents.ProgressInterval">
            <summary>
            The minimum timespan between <see cref="F:ICSharpCode.SharpZipLib.Zip.FastZipEvents.Progress"/> events.
            </summary>
            <value>The minimum period of time between <see cref="F:ICSharpCode.SharpZipLib.Zip.FastZipEvents.Progress"/> events.</value>
            <seealso cref="F:ICSharpCode.SharpZipLib.Zip.FastZipEvents.Progress"/>
            <remarks>The default interval is three seconds.</remarks>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Zip.FastZip">
            <summary>
            FastZip provides facilities for creating and extracting zip files.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.FastZip.#ctor">
            <summary>
            Initialise a default instance of <see cref="T:ICSharpCode.SharpZipLib.Zip.FastZip"/>.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.FastZip.#ctor(ICSharpCode.SharpZipLib.Zip.FastZipEvents)">
            <summary>
            Initialise a new instance of <see cref="T:ICSharpCode.SharpZipLib.Zip.FastZip"/>
            </summary>
            <param name="events">The <see cref="T:ICSharpCode.SharpZipLib.Zip.FastZipEvents">events</see> to use during operations.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.FastZip.CreateZip(System.String,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Create a zip file.
            </summary>
            <param name="zipFileName">The name of the zip file to create.</param>
            <param name="sourceDirectory">The directory to source files from.</param>
            <param name="recurse">True to recurse directories, false for no recursion.</param>
            <param name="fileFilter">The <see cref="T:ICSharpCode.SharpZipLib.Core.PathFilter">file filter</see> to apply.</param>
            <param name="directoryFilter">The <see cref="T:ICSharpCode.SharpZipLib.Core.PathFilter">directory filter</see> to apply.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.FastZip.CreateZip(System.String,System.String,System.Boolean,System.String)">
            <summary>
            Create a zip file/archive.
            </summary>
            <param name="zipFileName">The name of the zip file to create.</param>
            <param name="sourceDirectory">The directory to obtain files and directories from.</param>
            <param name="recurse">True to recurse directories, false for no recursion.</param>
            <param name="fileFilter">The file filter to apply.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.FastZip.CreateZip(System.IO.Stream,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Create a zip archive sending output to the <paramref name="outputStream"/> passed.
            </summary>
            <param name="outputStream">The stream to write archive data to.</param>
            <param name="sourceDirectory">The directory to source files from.</param>
            <param name="recurse">True to recurse directories, false for no recursion.</param>
            <param name="fileFilter">The <see cref="T:ICSharpCode.SharpZipLib.Core.PathFilter">file filter</see> to apply.</param>
            <param name="directoryFilter">The <see cref="T:ICSharpCode.SharpZipLib.Core.PathFilter">directory filter</see> to apply.</param>
            <remarks>The <paramref name="outputStream"/> is closed after creation.</remarks>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.FastZip.ExtractZip(System.String,System.String,System.String)">
            <summary>
            Extract the contents of a zip file.
            </summary>
            <param name="zipFileName">The zip file to extract from.</param>
            <param name="targetDirectory">The directory to save extracted information in.</param>
            <param name="fileFilter">A filter to apply to files.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.FastZip.ExtractZip(System.String,System.String,ICSharpCode.SharpZipLib.Zip.FastZip.Overwrite,ICSharpCode.SharpZipLib.Zip.FastZip.ConfirmOverwriteDelegate,System.String,System.String,System.Boolean)">
            <summary>
            Extract the contents of a zip file.
            </summary>
            <param name="zipFileName">The zip file to extract from.</param>
            <param name="targetDirectory">The directory to save extracted information in.</param>
            <param name="overwrite">The style of <see cref="T:ICSharpCode.SharpZipLib.Zip.FastZip.Overwrite">overwriting</see> to apply.</param>
            <param name="confirmDelegate">A delegate to invoke when confirming overwriting.</param>
            <param name="fileFilter">A filter to apply to files.</param>
            <param name="directoryFilter">A filter to apply to directories.</param>
            <param name="restoreDateTime">Flag indicating whether to restore the date and time for extracted files.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Zip.FastZip.ExtractZip(System.IO.Stream,System.String,ICSharpCode.SharpZipLib.Zip.FastZip.Overwrite,ICSharpCode.SharpZipLib.Zip.FastZip.ConfirmOverwriteDelegate,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Extract the contents of a zip file held in a stream.
            </summary>
            <param name="inputStream">The seekable input stream containing the zip to extract from.</param>
            <param name="targetDirectory">The directory to save extracted information in.</param>
            <param name="overwrite">The style of <see cref="T:ICSharpCode.SharpZipLib.Zip.FastZip.Overwrite">overwriting</see> to apply.</param>
            <param name="confirmDelegate">A delegate to invoke when confirming overwriting.</param>
            <param name="fileFilter">A filter to apply to files.</param>
            <param name="directoryFilter">A filter to apply to directories.</param>
            <param name="restoreDateTime">Flag indicating whether to restore the date and time for extracted files.</param>
            <param name="isStreamOwner">Flag indicating whether the inputStream will be closed by this method.</param>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.FastZip.CreateEmptyDirectories">
            <summary>
            Get/set a value indicating wether empty directories should be created.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.FastZip.Password">
            <summary>
            Get / set the password value.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.FastZip.NameTransform">
            <summary>
            Get or set the <see cref="T:ICSharpCode.SharpZipLib.Core.INameTransform"></see> active when creating Zip files.
            </summary>
            <seealso cref="P:ICSharpCode.SharpZipLib.Zip.FastZip.EntryFactory"></seealso>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.FastZip.EntryFactory">
            <summary>
            Get or set the <see cref="T:ICSharpCode.SharpZipLib.Zip.IEntryFactory"></see> active when creating Zip files.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.FastZip.UseZip64">
            <summary>
            Gets or sets the setting for <see cref="P:ICSharpCode.SharpZipLib.Zip.FastZip.UseZip64">Zip64 handling when writing.</see>
            </summary>
            <remarks>
            The default value is dynamic which is not backwards compatible with old
            programs and can cause problems with XP's built in compression which cant
            read Zip64 archives. However it does avoid the situation were a large file
            is added and cannot be completed correctly.
            NOTE: Setting the size for entries before they are added is the best solution!
            By default the EntryFactory used by FastZip will set fhe file size.
            </remarks>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.FastZip.RestoreDateTimeOnExtract">
            <summary>
            Get/set a value indicating wether file dates and times should 
            be restored when extracting files from an archive.
            </summary>
            <remarks>The default value is false.</remarks>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Zip.FastZip.RestoreAttributesOnExtract">
            <summary>
            Get/set a value indicating wether file attributes should
            be restored during extract operations
            </summary>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Zip.FastZip.Overwrite">
            <summary>
            Defines the desired handling when overwriting files during extraction.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.FastZip.Overwrite.Prompt">
            <summary>
            Prompt the user to confirm overwriting
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.FastZip.Overwrite.Never">
            <summary>
            Never overwrite files.
            </summary>
        </member>
        <member name="F:ICSharpCode.SharpZipLib.Zip.FastZip.Overwrite.Always">
            <summary>
            Always overwrite files.
            </summary>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Zip.FastZip.ConfirmOverwriteDelegate">
            <summary>
            Delegate called when confirming overwriting of files.
            </summary>
        </member>
        <member name="T:Top.Api.Domain.TmcGroup">
            <summary>
            TmcGroup Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TmcGroup.Name">
            <summary>
            分组名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.TmcGroup.Users">
            <summary>
            用户列表
            </summary>
        </member>
        <member name="T:Top.Api.Domain.OrderMessage">
            <summary>
            OrderMessage Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.OrderMessage.MessageContent">
            <summary>
            留言内容
            </summary>
        </member>
        <member name="P:Top.Api.Domain.OrderMessage.MessageTime">
            <summary>
            留言时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.OrderMessage.MessageTitle">
            <summary>
            留言标题，例如：分销商留言，供应商留言，买家留言
            </summary>
        </member>
        <member name="P:Top.Api.Domain.OrderMessage.PicUrl">
            <summary>
            留言时的图片地址
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaCampaignUpdateResponse">
            <summary>
            SimbaCampaignUpdateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaCampaignUpdateResponse.Campaign">
            <summary>
            修改后的推广计划
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaCampaignAreaGetResponse">
            <summary>
            SimbaCampaignAreaGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaCampaignAreaGetResponse.CampaignArea">
            <summary>
            推广计划的投放地域配置
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaCampaignBudgetUpdateResponse">
            <summary>
            SimbaCampaignBudgetUpdateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaCampaignBudgetUpdateResponse.CampaignBudget">
            <summary>
            修改后的推广计划日限额
            </summary>
        </member>
        <member name="T:Top.Api.Response.TmallItemDapeiTemplateAddResponse">
            <summary>
            TmallItemDapeiTemplateAddResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallItemDapeiTemplateAddResponse.Id">
            <summary>
            新创建搭配模板的ID
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaKeywordsRecommendGetResponse">
            <summary>
            SimbaKeywordsRecommendGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaKeywordsRecommendGetResponse.RecommendWords">
            <summary>
            推荐词分页对象，当输入的页码大于最大数值时，将返回最大的page_no值，并且结果中的数据列表为空值
            </summary>
        </member>
        <member name="T:Top.Api.Response.TopAuthTokenCreateResponse">
            <summary>
            TopAuthTokenCreateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TopAuthTokenCreateResponse.TokenResult">
            <summary>
            返回的是json信息，和之前调用https://oauth.taobao.com/tac/token https://oauth.alibaba.com/token 换token返回的字段信息一致
            </summary>
        </member>
        <member name="T:Top.Api.Response.ShoprecommendShopsGetResponse">
            <summary>
            ShoprecommendShopsGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ShoprecommendShopsGetResponse.FavoriteShops">
            <summary>
            返回与店铺关联的店铺集
            </summary>
        </member>
        <member name="T:Top.Api.Response.VasSubscSearchResponse">
            <summary>
            VasSubscSearchResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.VasSubscSearchResponse.ArticleSubs">
            <summary>
            订购关系对象
            </summary>
        </member>
        <member name="P:Top.Api.Response.VasSubscSearchResponse.TotalItem">
            <summary>
            总记录数
            </summary>
        </member>
        <member name="T:Top.Api.Response.LogisticsAddressSearchResponse">
            <summary>
            LogisticsAddressSearchResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.LogisticsAddressSearchResponse.Addresses">
            <summary>
            一组地址库数据，
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaInsightCatsdataGetResponse">
            <summary>
            SimbaInsightCatsdataGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaInsightCatsdataGetResponse.CatDataList">
            <summary>
            类目详细数据列表
            </summary>
        </member>
        <member name="T:Top.Api.Response.SubuserDepartmentUpdateResponse">
            <summary>
            SubuserDepartmentUpdateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SubuserDepartmentUpdateResponse.IsSuccess">
            <summary>
            操作是否成功 true:操作成功; false:操作失败
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaRptTargetingtageffectGetResponse">
            <summary>
            SimbaRptTargetingtageffectGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaRptTargetingtageffectGetResponse.Results">
            <summary>
            效果数据
            </summary>
        </member>
        <member name="T:Top.Api.Response.MaQrcodeUploadResponse">
            <summary>
            MaQrcodeUploadResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.MaQrcodeUploadResponse.ImgUrl">
            <summary>
            图片链接
            </summary>
        </member>
        <member name="P:Top.Api.Response.MaQrcodeUploadResponse.IsSuccess">
            <summary>
            上传二维码图片是否成功
            </summary>
        </member>
        <member name="P:Top.Api.Response.MaQrcodeUploadResponse.ReultCode">
            <summary>
            出错code,只有is_success=false才有值
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaKeywordsChangedGetResponse">
            <summary>
            SimbaKeywordsChangedGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaKeywordsChangedGetResponse.Keywords">
            <summary>
            关键词分页对象
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaKeywordsRealtimeRankingBatchGetResponse">
            <summary>
            SimbaKeywordsRealtimeRankingBatchGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaKeywordsRealtimeRankingBatchGetResponse.Result">
            <summary>
            返回值
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaKeywordsRealtimeRankingBatchGetResponse.ResultDomain">
            <summary>
            ResultDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaKeywordsRealtimeRankingBatchGetResponse.ResultDomain.Bidwordid">
            <summary>
            关键词id
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaKeywordsRealtimeRankingBatchGetResponse.ResultDomain.MobileRank">
            <summary>
            移动的排名(0:移动首条,1:移动前三,3:移动4~6条,6:移动7~10条,10:移动11~15条,11:移动16~20条,12:20条以后)
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaKeywordsRealtimeRankingBatchGetResponse.ResultDomain.PcRank">
            <summary>
            PC的排名:(0:首页左侧位置;1:首页右侧第1;2:首页右侧第2,3:首页右侧第3,4:首页非前三,5:第2页,6:第3页,7:第4页,8:第5页,9:5页以后)
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaKeywordsRealtimeRankingBatchGetResponse.ResultDomain.Stat">
            <summary>
            状态码stat(0:正常;1:非正常)
            </summary>
        </member>
        <member name="T:Top.Api.Response.SimbaKeywordsRealtimeRankingBatchGetResponse.ResultDtoDomain">
            <summary>
            ResultDtoDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaKeywordsRealtimeRankingBatchGetResponse.ResultDtoDomain.Code">
            <summary>
            错误码
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaKeywordsRealtimeRankingBatchGetResponse.ResultDtoDomain.Key">
            <summary>
            错误对应的消息Key
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaKeywordsRealtimeRankingBatchGetResponse.ResultDtoDomain.Msg">
            <summary>
            错误消息
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaKeywordsRealtimeRankingBatchGetResponse.ResultDtoDomain.RealtimeRankList">
            <summary>
            返回结果，结果是json结构，说明： pc_rank=-2:创意未投放,-1:计划未投放,0:首页左侧位置,1:首页右侧第1,2:首页右侧第2,3:首页右侧第3,4:首页（非前三）,5:第2页,6:第3页,7:第4页,8:第5页,9:5页以后 mobile_rank=-2:创意未投放,-1:计划未投放,0:移动首条,1:移动前三,3:移动4~6条,6:移动7~10条,10:移动11~15条,11=移动16~20条,12=20条以后
            </summary>
        </member>
        <member name="P:Top.Api.Response.SimbaKeywordsRealtimeRankingBatchGetResponse.ResultDtoDomain.Success">
            <summary>
            是否成功
            </summary>
        </member>
        <member name="T:Top.Api.Response.PictureUserinfoGetResponse">
            <summary>
            PictureUserinfoGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.PictureUserinfoGetResponse.UserInfo">
            <summary>
            用户使用图片空间的信息
            </summary>
        </member>
        <member name="T:Top.Api.Response.AreasGetResponse">
            <summary>
            AreasGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.AreasGetResponse.Areas">
            <summary>
            地址区域信息列表.返回的Area包含的具体信息为入参fields请求的字段信息.
            </summary>
        </member>
        <member name="T:Top.Api.Response.ProductUpdateResponse">
            <summary>
            ProductUpdateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ProductUpdateResponse.Product">
            <summary>
            返回product数据结构中的：product_id,modified
            </summary>
        </member>
        <member name="T:Top.Api.Response.ProductPropimgUploadResponse">
            <summary>
            ProductPropimgUploadResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ProductPropimgUploadResponse.ProductPropImg">
            <summary>
            支持返回产品属性图片中的：url,id,created,modified
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaCustomersAuthorizedGetRequest">
            <summary>
            TOP API: taobao.simba.customers.authorized.get
            </summary>
        </member>
        <member name="T:Top.Api.Request.LogisticsAddressRemoveRequest">
            <summary>
            TOP API: taobao.logistics.address.remove
            </summary>
        </member>
        <member name="P:Top.Api.Request.LogisticsAddressRemoveRequest.ContactId">
            <summary>
            地址库ID
            </summary>
        </member>
        <member name="T:Top.Api.Request.TmallItemDescModulesGetRequest">
            <summary>
            TOP API: tmall.item.desc.modules.get
            </summary>
        </member>
        <!-- 对于成员“P:Top.Api.Request.TmallItemDescModulesGetRequest.CatId”忽略有格式错误的 XML 注释 -->
        <member name="P:Top.Api.Request.TmallItemDescModulesGetRequest.UsrId">
            <summary>
            商家主帐号id
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaKeywordsPricevonSetRequest">
            <summary>
            TOP API: taobao.simba.keywords.pricevon.set
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaKeywordsPricevonSetRequest.KeywordidPrices">
            <summary>
            关键词ID，出价和匹配方式json字符串，keywordId:词ID，整数。maxPrice：价格，是整数，以“分”为单位，不能小于5，不能大于日限额,也不能大于99.99元,当使用默认出价时必须将这个值设置为0。; isDefaultPrice：是否使用默认出价，只能是0，1(0代表不使用，1代表使用)。matchscope只能是1,2,4（1代表精确匹配，4代表广泛匹配），maxMobilePrice：代表无线出价（如果是0，则代表无线出价=PC*无线溢价），mobileIsDefaultPrice代表无线出价是否采用pc*无线溢价，还是独立价格（1：是；0：否）
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaKeywordsPricevonSetRequest.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="T:Top.Api.Request.PicturePicturesCountRequest">
            <summary>
            TOP API: taobao.picture.pictures.count
            </summary>
        </member>
        <member name="P:Top.Api.Request.PicturePicturesCountRequest.ClientType">
            <summary>
            图片使用，如果是pc宝贝detail使用，设置为client:computer，查询出来的图片是符合pc的宝贝detail显示的如果是手机宝贝detail使用，设置为client:phone，查询出来的图片是符合手机的宝贝detail显示的,默认值是全部
            </summary>
        </member>
        <member name="P:Top.Api.Request.PicturePicturesCountRequest.Deleted">
            <summary>
            是否删除,undeleted代表没有删除,deleted表示删除
            </summary>
        </member>
        <member name="P:Top.Api.Request.PicturePicturesCountRequest.EndDate">
            <summary>
            查询上传结束时间点,格式:yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="P:Top.Api.Request.PicturePicturesCountRequest.PictureCategoryId">
            <summary>
            图片分类
            </summary>
        </member>
        <member name="P:Top.Api.Request.PicturePicturesCountRequest.PictureId">
            <summary>
            图片ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.PicturePicturesCountRequest.StartDate">
            <summary>
            查询上传开始时间点,格式:yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="P:Top.Api.Request.PicturePicturesCountRequest.StartModifiedDate">
            <summary>
            图片被修改的时间点，格式:yyyy-MM-dd HH:mm:ss。查询此修改时间点之后到目前的图片。
            </summary>
        </member>
        <member name="P:Top.Api.Request.PicturePicturesCountRequest.Title">
            <summary>
            文件名
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaKeywordidsChangedGetRequest">
            <summary>
            TOP API: taobao.simba.keywordids.changed.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaKeywordidsChangedGetRequest.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaKeywordidsChangedGetRequest.PageNo">
            <summary>
            返回的第几页数据，默认为1
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaKeywordidsChangedGetRequest.PageSize">
            <summary>
            返回的每页数据量大小,默认200最大1000
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaKeywordidsChangedGetRequest.StartTime">
            <summary>
            得到此时间点之后的数据，不能大于一个月
            </summary>
        </member>
        <member name="T:Top.Api.Request.SellercenterRolemembersGetRequest">
            <summary>
            TOP API: taobao.sellercenter.rolemembers.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SellercenterRolemembersGetRequest.RoleId">
            <summary>
            角色id
            </summary>
        </member>
        <member name="T:Top.Api.Request.JushitaJdpCommonQueryRequest">
            <summary>
            TOP API: taobao.jushita.jdp.common.query
            </summary>
        </member>
        <member name="P:Top.Api.Request.JushitaJdpCommonQueryRequest.CmdName">
            <summary>
            查询名称
            </summary>
        </member>
        <member name="P:Top.Api.Request.JushitaJdpCommonQueryRequest.Params">
            <summary>
            json参数
            </summary>
        </member>
        <member name="T:Top.Api.Request.TmallItemSizemappingTemplateCreateRequest">
            <summary>
            TOP API: tmall.item.sizemapping.template.create
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemSizemappingTemplateCreateRequest.TemplateContent">
            <summary>
            尺码表模板内容，格式为"尺码值:维度名称:数值,尺码值:维度名称:数值"。其中，数值的单位，长度单位为厘米（cm），体重单位为公斤（kg）。尺码值，维度数据不能包含数字，特殊字符。数值为0-999.9的数字，且最多一位小数。
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemSizemappingTemplateCreateRequest.TemplateName">
            <summary>
            尺码表模板名称
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaRptAdgroupbaseGetRequest">
            <summary>
            TOP API: taobao.simba.rpt.adgroupbase.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptAdgroupbaseGetRequest.AdgroupId">
            <summary>
            推广组id
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptAdgroupbaseGetRequest.CampaignId">
            <summary>
            推广计划id
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptAdgroupbaseGetRequest.EndTime">
            <summary>
            结束时间，格式yyyy-mm-dd
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptAdgroupbaseGetRequest.Nick">
            <summary>
            昵称
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptAdgroupbaseGetRequest.PageNo">
            <summary>
            页码
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptAdgroupbaseGetRequest.PageSize">
            <summary>
            每页大小
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptAdgroupbaseGetRequest.SearchType">
            <summary>
            报表类型（搜索：SEARCH,类目出价：CAT,  定向投放：NOSEARCH）可以一次取多个例如：SEARCH,CAT
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptAdgroupbaseGetRequest.Source">
            <summary>
            数据来源（PC站内：1，PC站外：2，无线站内：4，无线站外 : 5）可多选，以逗号分隔
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptAdgroupbaseGetRequest.StartTime">
            <summary>
            开始时间，格式yyyy-mm-dd
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptAdgroupbaseGetRequest.SubwayToken">
            <summary>
            权限校验参数
            </summary>
        </member>
        <member name="T:Top.Api.Request.SimbaRptCampadgroupeffectGetRequest">
            <summary>
            TOP API: taobao.simba.rpt.campadgroupeffect.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptCampadgroupeffectGetRequest.CampaignId">
            <summary>
            查询推广计划id
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptCampadgroupeffectGetRequest.EndTime">
            <summary>
            结束日期，格式yyyy-mm-dd
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptCampadgroupeffectGetRequest.Nick">
            <summary>
            昵称
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptCampadgroupeffectGetRequest.PageNo">
            <summary>
            页码
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptCampadgroupeffectGetRequest.PageSize">
            <summary>
            每页大小
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptCampadgroupeffectGetRequest.SearchType">
            <summary>
            报表类型（搜索：SEARCH,类目出价：CAT, 定向投放：NOSEARCH汇总：SUMMARY）SUMMARY必须单选，其他值可多选例如：SEARCH,CAT
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptCampadgroupeffectGetRequest.Source">
            <summary>
            数据来源（PC站内：1，PC站外：2，无线站内：4，无线站外 : 5，汇总：SUMMARY）SUMMARY必须单选，其他值可多选例如1,2
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptCampadgroupeffectGetRequest.StartTime">
            <summary>
            开始日期，格式yyyy-mm-dd
            </summary>
        </member>
        <member name="P:Top.Api.Request.SimbaRptCampadgroupeffectGetRequest.SubwayToken">
            <summary>
            权限验证信息
            </summary>
        </member>
        <member name="T:Top.Api.Request.TmallItemCombineGetRequest">
            <summary>
            TOP API: tmall.item.combine.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmallItemCombineGetRequest.ItemId">
            <summary>
            组合商品ID
            </summary>
        </member>
        <member name="T:Top.Api.Request.ItemPropimgUploadRequest">
            <summary>
            TOP API: taobao.item.propimg.upload
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemPropimgUploadRequest.Id">
            <summary>
            属性图片ID。如果是新增不需要填写
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemPropimgUploadRequest.Image">
            <summary>
            属性图片内容。类型:JPG,GIF;图片大小不超过:3M
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemPropimgUploadRequest.NumIid">
            <summary>
            商品数字ID，必选
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemPropimgUploadRequest.Position">
            <summary>
            图片位置
            </summary>
        </member>
        <member name="P:Top.Api.Request.ItemPropimgUploadRequest.Properties">
            <summary>
            属性列表。调用taobao.itemprops.get获取类目属性，属性必须是颜色属性，再用taobao.itempropvalues.get取得vid。格式:pid:vid。
            </summary>
        </member>
        <member name="T:Top.Api.Request.TmcUserPermitRequest">
            <summary>
            TOP API: taobao.tmc.user.permit
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmcUserPermitRequest.Topics">
            <summary>
            消息主题列表，用半角逗号分隔。当用户订阅的topic是应用订阅的子集时才需要设置，不设置表示继承应用所订阅的所有topic，一般情况建议不要设置。
            </summary>
        </member>
        <member name="T:Top.Api.Domain.Keyword">
            <summary>
            Keyword Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Keyword.AdgroupId">
            <summary>
            推广组id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Keyword.AuditDesc">
            <summary>
            审核拒绝原因描述
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Keyword.AuditStatus">
            <summary>
            审核状态： audit_wait-待审核；audit_pass-审核通过(上线)；audit_reject-审核拒绝；audit_offline-审核直接下线；默认为 audit_pass。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Keyword.CampaignId">
            <summary>
            推广计划id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Keyword.CreateTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Keyword.IsDefaultPrice">
            <summary>
            是否使用推广组默认出价，true-是；false-否；
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Keyword.IsGarbage">
            <summary>
            是否是垃圾词，false-不是；true-是；垃圾词是近期无点击的词
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Keyword.KeywordId">
            <summary>
            关键词id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Keyword.MatchScope">
            <summary>
            匹配模式
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Keyword.MaxMobilePrice">
            <summary>
            无线独立出价（0：代表使用PC*无线溢价，如果不是0则代表无线出价的值）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Keyword.MaxPrice">
            <summary>
            关键词出价，单位为分，不能小于5
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Keyword.MobileIsDefaultPrice">
            <summary>
            无线上是否采用PC*无线溢价的出价模式（1：是，0：否）
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Keyword.ModifiedTime">
            <summary>
            最后修改时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Keyword.Nick">
            <summary>
            主人昵称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Keyword.Qscore">
            <summary>
            词质量得分
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Keyword.Word">
            <summary>
            关键词
            </summary>
        </member>
        <member name="T:Top.Api.Domain.ScoreResult">
            <summary>
            ScoreResult Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ScoreResult.AttitudeScore">
            <summary>
            服务态度评分
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ScoreResult.AvgScore">
            <summary>
            平均分
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ScoreResult.EasyuseScore">
            <summary>
            易用性评分
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ScoreResult.GmtCreate">
            <summary>
            评价时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ScoreResult.Id">
            <summary>
            评价id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ScoreResult.IsPay">
            <summary>
            是否实际付费 1-实际付费 2-实际未付费
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ScoreResult.IsValid">
            <summary>
            是否为有效评分 1-有效评分 2-无效评分
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ScoreResult.ItemCode">
            <summary>
            服务规格code
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ScoreResult.ItemName">
            <summary>
            服务规格名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ScoreResult.MatchedScore">
            <summary>
            描述相符
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ScoreResult.ProfScore">
            <summary>
            专业性评分
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ScoreResult.RapidScore">
            <summary>
            交片速度
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ScoreResult.ServiceCode">
            <summary>
            服务code
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ScoreResult.StabilityScore">
            <summary>
            稳定性评分
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ScoreResult.Suggestion">
            <summary>
            评论内容
            </summary>
        </member>
        <member name="P:Top.Api.Domain.ScoreResult.UserNick">
            <summary>
            评价人用户昵称
            </summary>
        </member>
        <member name="T:Top.Api.Domain.SpuTemplateDO">
            <summary>
            SpuTemplateDO Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SpuTemplateDO.AffectProperties">
            <summary>
            产品绑定属性，内容为属性ID(PID)的列表,绑定属性肯定在类目上有，对应属性的类目特征，子属性请根据PID到类目上去取
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SpuTemplateDO.CategoryId">
            <summary>
            类目ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SpuTemplateDO.CommodityId">
            <summary>
            品类ID，和类目ID类似
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SpuTemplateDO.FilterProperties">
            <summary>
            过滤属性，内容有属性ID(PID)列表，很重要的属性，filter_properties包含的属性，必须填写
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SpuTemplateDO.KeyProperties">
            <summary>
            产品关键属性，内容为属性ID(PID)的列表，注意关键属性可以在类目上不存在。不存在的PID，默认为输入，没有子属性。属性名称在prop_name_str中取
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SpuTemplateDO.PropFeatures">
            <summary>
            预留
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SpuTemplateDO.PropNameStr">
            <summary>
            属性名称扁平化结构，只保证不在类目上的CP有值
            </summary>
        </member>
        <member name="P:Top.Api.Domain.SpuTemplateDO.TemplateId">
            <summary>
            模板ID，发布产品，必须放到Product中
            </summary>
        </member>
        <member name="T:Top.Api.Domain.LogisticsCompany">
            <summary>
            LogisticsCompany Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.LogisticsCompany.Code">
            <summary>
            物流公司代码
            </summary>
        </member>
        <member name="P:Top.Api.Domain.LogisticsCompany.Id">
            <summary>
            物流公司标识
            </summary>
        </member>
        <member name="P:Top.Api.Domain.LogisticsCompany.Name">
            <summary>
            物流公司简称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.LogisticsCompany.RegMailNo">
            <summary>
            运单号验证正则表达式
            </summary>
        </member>
        <member name="T:Top.Api.Domain.StaffEvalStatOnDay">
            <summary>
            StaffEvalStatOnDay Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.StaffEvalStatOnDay.EvalDate">
            <summary>
            评价产生的日期
            </summary>
        </member>
        <member name="P:Top.Api.Domain.StaffEvalStatOnDay.StaffEvalStatByIds">
            <summary>
            客服评价统计列表
            </summary>
        </member>
        <member name="T:Top.Api.Domain.UpdateSkuOuterId">
            <summary>
            UpdateSkuOuterId Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.UpdateSkuOuterId.OuterId">
            <summary>
            被更新的Sku的商家外部id；如果清空，传空串
            </summary>
        </member>
        <member name="P:Top.Api.Domain.UpdateSkuOuterId.Properties">
            <summary>
            Sku属性串。格式:pid:vid;pid:vid,如: 1627207:3232483;1630696:3284570,表示机身颜色:军绿色;手机套餐:一电一充
            </summary>
        </member>
        <member name="P:Top.Api.Domain.UpdateSkuOuterId.SkuId">
            <summary>
            SKU的ID
            </summary>
        </member>
        <member name="T:Top.Api.Domain.Demographic">
            <summary>
            Demographic Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Demographic.CreateTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Demographic.GroupId">
            <summary>
            投放人群所属的组ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Demographic.GroupName">
            <summary>
            投放人群所属组的组名
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Demographic.Id">
            <summary>
            投放人群ID
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Demographic.LastUpdateTime">
            <summary>
            最后修改时间
            </summary>
        </member>
        <member name="P:Top.Api.Domain.Demographic.Name">
            <summary>
            投放人群名称
            </summary>
        </member>
        <member name="T:Top.Api.Domain.BrandCatControlInfo">
            <summary>
            BrandCatControlInfo Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.BrandCatControlInfo.BrandCatControls">
            <summary>
            管控的品牌类目信息，一组列表
            </summary>
        </member>
        <member name="T:Top.Api.Domain.OrderAmount">
            <summary>
            OrderAmount Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.OrderAmount.AdjustFee">
            <summary>
            卖家手工调整的子订单的优惠金额.格式为:1.01;单位:元;精确到小数点后两位.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.OrderAmount.DiscountFee">
            <summary>
            子订单的系统优惠金额。精确到2位小数;单位:元。如:200.07，表示:200元7分
            </summary>
        </member>
        <member name="P:Top.Api.Domain.OrderAmount.DivideOrderFee">
            <summary>
            分摊之后的实付金额
            </summary>
        </member>
        <member name="P:Top.Api.Domain.OrderAmount.Num">
            <summary>
            子交易订单中购买商品的数量
            </summary>
        </member>
        <member name="P:Top.Api.Domain.OrderAmount.NumIid">
            <summary>
            子订单对应的商品数字id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.OrderAmount.Oid">
            <summary>
            子交易订单编号
            </summary>
        </member>
        <member name="P:Top.Api.Domain.OrderAmount.PartMjzDiscount">
            <summary>
            优惠分摊
            </summary>
        </member>
        <member name="P:Top.Api.Domain.OrderAmount.Payment">
            <summary>
            子订单实付金额。精确到2位小数，单位:元。如:200.07，表示:200元7分。计算公式如下：payment = price * num + adjust_fee - discount_fee + post_fee(邮费，单笔子订单时子订单实付金额包含邮费，多笔子订单时不包含邮费)；对于退款成功的子订单，由于主订单的优惠分摊金额，会造成该字段可能不为0.00元。建议使用退款前的实付金额减去退款单中的实际退款金额计算。
            </summary>
        </member>
        <member name="P:Top.Api.Domain.OrderAmount.Price">
            <summary>
            商品价格。精确到2位小数;单位:元。如:200.07，表示:200元7分
            </summary>
        </member>
        <member name="P:Top.Api.Domain.OrderAmount.PromotionName">
            <summary>
            子订单的系统优惠的名称，对应于discount_fee的名称
            </summary>
        </member>
        <member name="P:Top.Api.Domain.OrderAmount.SkuId">
            <summary>
            子订单对应的商品的sku_id
            </summary>
        </member>
        <member name="P:Top.Api.Domain.OrderAmount.SkuPropertiesName">
            <summary>
            SKU的值。如：机身颜色:黑色;手机套餐:官方标配
            </summary>
        </member>
        <member name="P:Top.Api.Domain.OrderAmount.Title">
            <summary>
            商品标题
            </summary>
        </member>
        <member name="T:Top.Api.Security.SecurityCounter">
            <summary>
            计数器
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiShopItemFindResponse">
            <summary>
            ZuanshiShopItemFindResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiShopItemFindResponse.Result">
            <summary>
            返回结果对象
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiShopItemFindResponse.ItemDTODomain">
            <summary>
            ItemDTODomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiShopItemFindResponse.ItemDTODomain.ItemId">
            <summary>
            宝贝ID
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiShopItemFindResponse.ItemDTODomain.ItemLandingPage">
            <summary>
            宝贝落地页
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiShopItemFindResponse.ItemDTODomain.ItemName">
            <summary>
            宝贝标题
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiShopItemFindResponse.ItemDTODomain.ItemPicUrl">
            <summary>
            图片链接
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiShopItemFindResponse.ResultDTODomain">
            <summary>
            ResultDTODomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiShopItemFindResponse.ResultDTODomain.Items">
            <summary>
            宝贝列表
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiShopItemFindResponse.ResultDTODomain.Message">
            <summary>
            调用返回信息
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiShopItemFindResponse.ResultDTODomain.Success">
            <summary>
            调用是否成功,true-成功，false-失败
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiShopItemFindResponse.ResultDTODomain.TotalCount">
            <summary>
            分页查询总的数量
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerAdzoneFindpageResponse">
            <summary>
            ZuanshiBannerAdzoneFindpageResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdzoneFindpageResponse.Result">
            <summary>
            返回结果
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerAdzoneFindpageResponse.AdzoneDTODomain">
            <summary>
            AdzoneDTODomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdzoneFindpageResponse.AdzoneDTODomain.AdzoneId">
            <summary>
            广告位id
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdzoneFindpageResponse.AdzoneDTODomain.AdzoneLevel">
            <summary>
            广告位等级
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdzoneFindpageResponse.AdzoneDTODomain.AdzoneName">
            <summary>
            广告位名称
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdzoneFindpageResponse.AdzoneDTODomain.AdzoneSizeList">
            <summary>
            广告位尺寸列表
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdzoneFindpageResponse.AdzoneDTODomain.AllowAdFormatList">
            <summary>
            广告位允许的创意类型列表
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdzoneFindpageResponse.AdzoneDTODomain.AllowAdvType">
            <summary>
            广告位允许的广告主类型。 -1表示不限，1表示淘宝，2表示天猫，3表示淘宝和天猫
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdzoneFindpageResponse.AdzoneDTODomain.MediaType">
            <summary>
            媒体类型。1表示PC 2表示无线
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerAdzoneFindpageResponse.ResultDTODomain">
            <summary>
            ResultDTODomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdzoneFindpageResponse.ResultDTODomain.Adzones">
            <summary>
            广告位查询结果列表
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdzoneFindpageResponse.ResultDTODomain.Message">
            <summary>
            返回消息
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdzoneFindpageResponse.ResultDTODomain.Success">
            <summary>
            是否成功
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdzoneFindpageResponse.ResultDTODomain.TotalCount">
            <summary>
            总条数
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerAdzoneConditionResponse">
            <summary>
            ZuanshiBannerAdzoneConditionResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdzoneConditionResponse.Result">
            <summary>
            返回结果
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerAdzoneConditionResponse.AdzoneQueryDomain">
            <summary>
            AdzoneQueryDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdzoneConditionResponse.AdzoneQueryDomain.AdzoneSizeList">
            <summary>
            广告位尺寸
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdzoneConditionResponse.AdzoneQueryDomain.AllowAdFormatList">
            <summary>
            允许的创意类型(2表示图片 5表示文字链  3表示Flash 9表示FLASH不遮盖 10表示创意模板)
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdzoneConditionResponse.AdzoneQueryDomain.MediaTypeList">
            <summary>
            媒体类型(1表示PC 2表示无线)
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdzoneConditionResponse.AdzoneQueryDomain.SettleTypeList">
            <summary>
            结算类型(1表示CPM 2表示CPC)
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerAdzoneConditionResponse.ResultDtoDomain">
            <summary>
            ResultDtoDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdzoneConditionResponse.ResultDtoDomain.Condition">
            <summary>
            查询条件
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdzoneConditionResponse.ResultDtoDomain.Message">
            <summary>
            返回消息
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdzoneConditionResponse.ResultDtoDomain.Success">
            <summary>
            是否成功
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerAdgroupAdzoneBindResponse">
            <summary>
            ZuanshiBannerAdgroupAdzoneBindResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdgroupAdzoneBindResponse.Result">
            <summary>
            返回结果
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiBannerAdgroupAdzoneBindResponse.ResultDTODomain">
            <summary>
            ResultDTODomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdgroupAdzoneBindResponse.ResultDTODomain.Message">
            <summary>
            返回消息
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiBannerAdgroupAdzoneBindResponse.ResultDTODomain.Success">
            <summary>
            调用是否成功
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAdvertiserTargetRtrptsGetResponse">
            <summary>
            ZuanshiAdvertiserTargetRtrptsGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRtrptsGetResponse.TargetRealtimeRptList">
            <summary>
            查询结果
            </summary>
        </member>
        <member name="T:Top.Api.Response.ZuanshiAdvertiserTargetRtrptsGetResponse.DataDomain">
            <summary>
            DataDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRtrptsGetResponse.DataDomain.AdPv">
            <summary>
            展现量
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRtrptsGetResponse.DataDomain.AdgroupId">
            <summary>
            transId
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRtrptsGetResponse.DataDomain.CampaignId">
            <summary>
            campaignId
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRtrptsGetResponse.DataDomain.Charge">
            <summary>
            消耗
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRtrptsGetResponse.DataDomain.Click">
            <summary>
            点击量
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRtrptsGetResponse.DataDomain.Ctr">
            <summary>
            点击率
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRtrptsGetResponse.DataDomain.Ecpc">
            <summary>
            平均点击单价
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRtrptsGetResponse.DataDomain.Ecpm">
            <summary>
            千次展现花费
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRtrptsGetResponse.DataDomain.HourId">
            <summary>
            小时数，取值范围0-23
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRtrptsGetResponse.DataDomain.LogDate">
            <summary>
            查询日期
            </summary>
        </member>
        <member name="P:Top.Api.Response.ZuanshiAdvertiserTargetRtrptsGetResponse.DataDomain.TargetId">
            <summary>
            targetId
            </summary>
        </member>
        <member name="T:Top.Api.Response.TmallItemHscodeDetailGetResponse">
            <summary>
            TmallItemHscodeDetailGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TmallItemHscodeDetailGetResponse.Results">
            <summary>
            返回的计量单位和销售单位
            </summary>
        </member>
        <member name="T:Top.Api.Response.TbkUatmEventItemGetResponse">
            <summary>
            TbkUatmEventItemGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkUatmEventItemGetResponse.Results">
            <summary>
            淘宝联盟定向招商宝贝信息
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkUatmEventItemGetResponse.TotalResults">
            <summary>
            宝贝总条数
            </summary>
        </member>
        <member name="T:Top.Api.Response.TbkShopRecommendGetResponse">
            <summary>
            TbkShopRecommendGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkShopRecommendGetResponse.Results">
            <summary>
            淘宝客店铺
            </summary>
        </member>
        <member name="T:Top.Api.Response.OpenimTribelogsGetResponse">
            <summary>
            OpenimTribelogsGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.OpenimTribelogsGetResponse.Data">
            <summary>
            返回结构
            </summary>
        </member>
        <member name="P:Top.Api.Response.OpenimTribelogsGetResponse.Message">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="P:Top.Api.Response.OpenimTribelogsGetResponse.Reason">
            <summary>
            错误原因
            </summary>
        </member>
        <member name="P:Top.Api.Response.OpenimTribelogsGetResponse.RetCode">
            <summary>
            错误码
            </summary>
        </member>
        <member name="P:Top.Api.Response.OpenimTribelogsGetResponse.Succ">
            <summary>
            是否成功
            </summary>
        </member>
        <member name="T:Top.Api.Response.OpenimTribelogsGetResponse.MessageItemDomain">
            <summary>
            MessageItemDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.OpenimTribelogsGetResponse.MessageItemDomain.Type">
            <summary>
            节点类型
            </summary>
        </member>
        <member name="P:Top.Api.Response.OpenimTribelogsGetResponse.MessageItemDomain.Value">
            <summary>
            节点值
            </summary>
        </member>
        <member name="T:Top.Api.Response.OpenimTribelogsGetResponse.UserDomain">
            <summary>
            UserDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.OpenimTribelogsGetResponse.UserDomain.AppKey">
            <summary>
            发送方所属app
            </summary>
        </member>
        <member name="P:Top.Api.Response.OpenimTribelogsGetResponse.UserDomain.TaobaoAccount">
            <summary>
            是否为淘宝账号
            </summary>
        </member>
        <member name="P:Top.Api.Response.OpenimTribelogsGetResponse.UserDomain.Uid">
            <summary>
            userid
            </summary>
        </member>
        <member name="T:Top.Api.Response.OpenimTribelogsGetResponse.TribeMessageDomain">
            <summary>
            TribeMessageDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.OpenimTribelogsGetResponse.TribeMessageDomain.Content">
            <summary>
            消息内容节点序列
            </summary>
        </member>
        <member name="P:Top.Api.Response.OpenimTribelogsGetResponse.TribeMessageDomain.FromId">
            <summary>
            发送方
            </summary>
        </member>
        <member name="P:Top.Api.Response.OpenimTribelogsGetResponse.TribeMessageDomain.Time">
            <summary>
            消息时间。UTC时间
            </summary>
        </member>
        <member name="P:Top.Api.Response.OpenimTribelogsGetResponse.TribeMessageDomain.Type">
            <summary>
            消息类型
            </summary>
        </member>
        <member name="P:Top.Api.Response.OpenimTribelogsGetResponse.TribeMessageDomain.Uuid">
            <summary>
            消息UUID
            </summary>
        </member>
        <member name="T:Top.Api.Response.OpenimTribelogsGetResponse.TribeMessageResultDomain">
            <summary>
            TribeMessageResultDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.OpenimTribelogsGetResponse.TribeMessageResultDomain.Messages">
            <summary>
            消息列表
            </summary>
        </member>
        <member name="P:Top.Api.Response.OpenimTribelogsGetResponse.TribeMessageResultDomain.NextKey">
            <summary>
            迭代key
            </summary>
        </member>
        <member name="T:Top.Api.Response.OpenimRelationsGetResponse">
            <summary>
            OpenimRelationsGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.OpenimRelationsGetResponse.Users">
            <summary>
            用户信息列表
            </summary>
        </member>
        <member name="T:Top.Api.Response.ItemQualificationDisplayGetResponse">
            <summary>
            ItemQualificationDisplayGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.ItemQualificationDisplayGetResponse.DisplayConf">
            <summary>
            返回资质采集配置
            </summary>
        </member>
        <member name="T:Top.Api.Response.InventoryInitialResponse">
            <summary>
            InventoryInitialResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.InventoryInitialResponse.TipInfos">
            <summary>
            提示信息
            </summary>
        </member>
        <member name="T:Top.Api.Response.FenxiaoTrademonitorGetResponse">
            <summary>
            FenxiaoTrademonitorGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoTrademonitorGetResponse.TotalResults">
            <summary>
            搜索到的经销商品订单数量
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoTrademonitorGetResponse.TradeMonitors">
            <summary>
            经销商品订单监控信息
            </summary>
        </member>
        <member name="T:Top.Api.Response.FenxiaoRefundGetResponse">
            <summary>
            FenxiaoRefundGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoRefundGetResponse.RefundDetail">
            <summary>
            退款详情
            </summary>
        </member>
        <member name="T:Top.Api.Response.FenxiaoProductsGetResponse">
            <summary>
            FenxiaoProductsGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoProductsGetResponse.Products">
            <summary>
            产品对象记录集。返回 FenxiaoProduct 包含的字段信息。
            </summary>
        </member>
        <member name="P:Top.Api.Response.FenxiaoProductsGetResponse.TotalResults">
            <summary>
            查询结果记录数
            </summary>
        </member>
        <member name="T:Top.Api.Response.DmpAnalysisCoverageResponse">
            <summary>
            DmpAnalysisCoverageResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.DmpAnalysisCoverageResponse.Result">
            <summary>
            返回结果
            </summary>
        </member>
        <member name="T:Top.Api.Response.DmpAnalysisCoverageResponse.ResultDTODomain">
            <summary>
            ResultDTODomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.DmpAnalysisCoverageResponse.ResultDTODomain.Count">
            <summary>
            覆盖人数
            </summary>
        </member>
        <member name="P:Top.Api.Response.DmpAnalysisCoverageResponse.ResultDTODomain.Msg">
            <summary>
            调用信息
            </summary>
        </member>
        <member name="P:Top.Api.Response.DmpAnalysisCoverageResponse.ResultDTODomain.Success">
            <summary>
            调用是否成功
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiBannerCampaignModifyRequest">
            <summary>
            TOP API: taobao.zuanshi.banner.campaign.modify
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCampaignModifyRequest.AreaIdList">
            <summary>
            投放地区
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCampaignModifyRequest.DayBudget">
            <summary>
            日预算，单位分
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCampaignModifyRequest.EndTime">
            <summary>
            投放结束时间
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCampaignModifyRequest.Id">
            <summary>
            计划ID
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCampaignModifyRequest.Name">
            <summary>
            计划名称，只支持汉字、字母、数字、下划线，32个字符
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCampaignModifyRequest.SpeedType">
            <summary>
            投放速度，1：尽快投放，2：均匀投放
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCampaignModifyRequest.StartTime">
            <summary>
            投放开始时间
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCampaignModifyRequest.Type">
            <summary>
            计划类型，CPM：2，CPC：8
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCampaignModifyRequest.Weekend">
            <summary>
            周六和周日
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCampaignModifyRequest.Workday">
            <summary>
            周一到周五，true：投放，false：不投放，数组顺序0~23点
            </summary>
        </member>
        <member name="T:Top.Api.Request.ZuanshiBannerCampaignFindRequest">
            <summary>
            TOP API: taobao.zuanshi.banner.campaign.find
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCampaignFindRequest.CampaignIdList">
            <summary>
            计划ID列表
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCampaignFindRequest.Marketingdemand">
            <summary>
            计划类型：-1：自定义，1：日常托管，2：日常推荐，3：拉新托管，4：拉新推荐
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCampaignFindRequest.Name">
            <summary>
            计划名称
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCampaignFindRequest.PageNum">
            <summary>
            当前页码
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCampaignFindRequest.PageSize">
            <summary>
            分页大小
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCampaignFindRequest.StatusList">
            <summary>
            计划状态，0:暂停,1:投放中,9:投放结束
            </summary>
        </member>
        <member name="P:Top.Api.Request.ZuanshiBannerCampaignFindRequest.Type">
            <summary>
            2:cpm,8:cpc
            </summary>
        </member>
        <member name="T:Top.Api.Request.TmcGroupAddRequest">
            <summary>
            TOP API: taobao.tmc.group.add
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmcGroupAddRequest.GroupName">
            <summary>
            分组名称，同一个应用下需要保证唯一性，最长32个字符。添加分组后，消息通道会为用户的消息分配独立分组，但之前的消息还是存储于默认分组中。不能以default开头，default开头为系统默认组。
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmcGroupAddRequest.Nicks">
            <summary>
            用户昵称列表，以半角逗号分隔，支持子账号，支持增量添加用户
            </summary>
        </member>
        <member name="P:Top.Api.Request.TmcGroupAddRequest.UserPlatform">
            <summary>
            用户所属于的平台类型，tbUIC:淘宝用户; icbu: icbu用户
            </summary>
        </member>
        <member name="T:Top.Api.Request.OpenimUsersGetRequest">
            <summary>
            TOP API: taobao.openim.users.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.OpenimUsersGetRequest.Userids">
            <summary>
            用户id序列
            </summary>
        </member>
        <member name="T:Top.Api.Request.FenxiaoDealerRequisitionorderQueryRequest">
            <summary>
            TOP API: taobao.fenxiao.dealer.requisitionorder.query
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoDealerRequisitionorderQueryRequest.DealerOrderIds">
            <summary>
            经销采购单编号。  多个编号用英文符号的逗号隔开。最多支持50个经销采购单编号的查询。
            </summary>
        </member>
        <member name="P:Top.Api.Request.FenxiaoDealerRequisitionorderQueryRequest.Fields">
            <summary>
            多个字段用","分隔。 fields 如果为空：返回所有经销采购单对象(dealer_orders)字段。 如果不为空：返回指定采购单对象(dealer_orders)字段。 例1： dealer_order_details.product_id 表示只返回product_id 例2： dealer_order_details 表示只返回明细列表
            </summary>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Core.PathFilter">
            <summary>
            PathFilter filters directories and files using a form of <see cref="T:System.Text.RegularExpressions.Regex">regular expressions</see>
            by full path name.
            See <see cref="T:ICSharpCode.SharpZipLib.Core.NameFilter">NameFilter</see> for more detail on filtering.
            </summary>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Core.PathFilter.#ctor(System.String)">
            <summary>
            Initialise a new instance of <see cref="T:ICSharpCode.SharpZipLib.Core.PathFilter"></see>.
            </summary>
            <param name="filter">The <see cref="T:ICSharpCode.SharpZipLib.Core.NameFilter">filter</see> expression to apply.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Core.PathFilter.IsMatch(System.String)">
            <summary>
            Test a name to see if it matches the filter.
            </summary>
            <param name="name">The name to test.</param>
            <returns>True if the name matches, false otherwise.</returns>
            <remarks><see cref="M:System.IO.Path.GetFullPath(System.String)"/> is used to get the full path before matching.</remarks>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Core.ExtendedPathFilter">
            <summary>
            ExtendedPathFilter filters based on name, file size, and the last write time of the file.
            </summary>
            <remarks>Provides an example of how to customise filtering.</remarks>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Core.ExtendedPathFilter.#ctor(System.String,System.Int64,System.Int64)">
            <summary>
            Initialise a new instance of ExtendedPathFilter.
            </summary>
            <param name="filter">The filter to apply.</param>
            <param name="minSize">The minimum file size to include.</param>
            <param name="maxSize">The maximum file size to include.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Core.ExtendedPathFilter.#ctor(System.String,System.DateTime,System.DateTime)">
            <summary>
            Initialise a new instance of ExtendedPathFilter.
            </summary>
            <param name="filter">The filter to apply.</param>
            <param name="minDate">The minimum <see cref="T:System.DateTime"/> to include.</param>
            <param name="maxDate">The maximum <see cref="T:System.DateTime"/> to include.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Core.ExtendedPathFilter.#ctor(System.String,System.Int64,System.Int64,System.DateTime,System.DateTime)">
            <summary>
            Initialise a new instance of ExtendedPathFilter.
            </summary>
            <param name="filter">The filter to apply.</param>
            <param name="minSize">The minimum file size to include.</param>
            <param name="maxSize">The maximum file size to include.</param>
            <param name="minDate">The minimum <see cref="T:System.DateTime"/> to include.</param>
            <param name="maxDate">The maximum <see cref="T:System.DateTime"/> to include.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Core.ExtendedPathFilter.IsMatch(System.String)">
            <summary>
            Test a filename to see if it matches the filter.
            </summary>
            <param name="name">The filename to test.</param>
            <returns>True if the filter matches, false otherwise.</returns>
            <exception cref="T:System.IO.FileNotFoundException">The <see paramref="fileName"/> doesnt exist</exception>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Core.ExtendedPathFilter.MinSize">
            <summary>
            Get/set the minimum size/length for a file that will match this filter.
            </summary>
            <remarks>The default value is zero.</remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">value is less than zero; greater than <see cref="P:ICSharpCode.SharpZipLib.Core.ExtendedPathFilter.MaxSize"/></exception>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Core.ExtendedPathFilter.MaxSize">
            <summary>
            Get/set the maximum size/length for a file that will match this filter.
            </summary>
            <remarks>The default value is <see cref="F:System.Int64.MaxValue"/></remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">value is less than zero or less than <see cref="P:ICSharpCode.SharpZipLib.Core.ExtendedPathFilter.MinSize"/></exception>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Core.ExtendedPathFilter.MinDate">
            <summary>
            Get/set the minimum <see cref="T:System.DateTime"/> value that will match for this filter.
            </summary>
            <remarks>Files with a LastWrite time less than this value are excluded by the filter.</remarks>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Core.ExtendedPathFilter.MaxDate">
            <summary>
            Get/set the maximum <see cref="T:System.DateTime"/> value that will match for this filter.
            </summary>
            <remarks>Files with a LastWrite time greater than this value are excluded by the filter.</remarks>
        </member>
        <member name="T:ICSharpCode.SharpZipLib.Core.NameAndSizeFilter">
            <summary>
            NameAndSizeFilter filters based on name and file size.
            </summary>
            <remarks>A sample showing how filters might be extended.</remarks>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Core.NameAndSizeFilter.#ctor(System.String,System.Int64,System.Int64)">
            <summary>
            Initialise a new instance of NameAndSizeFilter.
            </summary>
            <param name="filter">The filter to apply.</param>
            <param name="minSize">The minimum file size to include.</param>
            <param name="maxSize">The maximum file size to include.</param>
        </member>
        <member name="M:ICSharpCode.SharpZipLib.Core.NameAndSizeFilter.IsMatch(System.String)">
            <summary>
            Test a filename to see if it matches the filter.
            </summary>
            <param name="name">The filename to test.</param>
            <returns>True if the filter matches, false otherwise.</returns>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Core.NameAndSizeFilter.MinSize">
            <summary>
            Get/set the minimum size for a file that will match this filter.
            </summary>
        </member>
        <member name="P:ICSharpCode.SharpZipLib.Core.NameAndSizeFilter.MaxSize">
            <summary>
            Get/set the maximum size for a file that will match this filter.
            </summary>
        </member>
        <member name="T:Top.Api.Domain.QueryPagination">
            <summary>
            QueryPagination Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Domain.QueryPagination.PageIndex">
            <summary>
            当前页码数
            </summary>
        </member>
        <member name="P:Top.Api.Domain.QueryPagination.PageSize">
            <summary>
            分页记录个数，如果用户输入的记录数大于50，则一页显示50条记录
            </summary>
        </member>
        <member name="T:Top.Api.Request.TbkTpwdCreateRequest">
            <summary>
            TOP API: taobao.tbk.tpwd.create
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkTpwdCreateRequest.Ext">
            <summary>
            扩展字段JSON格式
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkTpwdCreateRequest.Logo">
            <summary>
            口令弹框logoURL
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkTpwdCreateRequest.Text">
            <summary>
            口令弹框内容
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkTpwdCreateRequest.Url">
            <summary>
            口令跳转目标页
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkTpwdCreateRequest.UserId">
            <summary>
            生成口令的淘宝用户ID
            </summary>
        </member>
        <member name="T:Top.Api.Request.TbkCouponGetRequest">
            <summary>
            TOP API: taobao.tbk.coupon.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkCouponGetRequest.Me">
            <summary>
            带券ID与商品ID的加密串
            </summary>
        </member>
        <member name="T:Top.Api.Request.TbkDgItemCouponGetRequest">
            <summary>
            TOP API: taobao.tbk.dg.item.coupon.get
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkDgItemCouponGetRequest.AdzoneId">
            <summary>
            mm_xxx_xxx_xxx的第三位
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkDgItemCouponGetRequest.Cat">
            <summary>
            后台类目ID，用,分割，最大10个，该ID可以通过taobao.itemcats.get接口获取到
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkDgItemCouponGetRequest.PageNo">
            <summary>
            第几页，默认：1（当后台类目和查询词均不指定的时候，最多出10000个结果，即page_no*page_size不能超过200；当指定类目或关键词的时候，则最多出100个结果）
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkDgItemCouponGetRequest.PageSize">
            <summary>
            页大小，默认20，1~100
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkDgItemCouponGetRequest.Platform">
            <summary>
            1：PC，2：无线，默认：1
            </summary>
        </member>
        <member name="P:Top.Api.Request.TbkDgItemCouponGetRequest.Q">
            <summary>
            查询词
            </summary>
        </member>
        <member name="T:Top.Api.Response.TbkTpwdCreateResponse">
            <summary>
            TbkTpwdCreateResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkTpwdCreateResponse.Data">
            <summary>
            data
            </summary>
        </member>
        <member name="T:Top.Api.Response.TbkTpwdCreateResponse.MapDataDomain">
            <summary>
            MapDataDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkTpwdCreateResponse.MapDataDomain.Model">
            <summary>
            password
            </summary>
        </member>
        <member name="T:Top.Api.Response.TbkCouponGetResponse">
            <summary>
            TbkCouponGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkCouponGetResponse.Data">
            <summary>
            data
            </summary>
        </member>
        <member name="T:Top.Api.Response.TbkCouponGetResponse.MapDataDomain">
            <summary>
            MapDataDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkCouponGetResponse.MapDataDomain.CouponAmount">
            <summary>
            优惠券金额
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkCouponGetResponse.MapDataDomain.CouponEndTime">
            <summary>
            优惠券结束时间
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkCouponGetResponse.MapDataDomain.CouponRemainCount">
            <summary>
            优惠券剩余量
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkCouponGetResponse.MapDataDomain.CouponStartFee">
            <summary>
            优惠券门槛金额
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkCouponGetResponse.MapDataDomain.CouponStartTime">
            <summary>
            优惠券开始时间
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkCouponGetResponse.MapDataDomain.CouponTotalCount">
            <summary>
            优惠券总量
            </summary>
        </member>
        <member name="T:Top.Api.Response.TbkDgItemCouponGetResponse">
            <summary>
            TbkDgItemCouponGetResponse.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkDgItemCouponGetResponse.Results">
            <summary>
            TbkCoupon
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkDgItemCouponGetResponse.TotalResults">
            <summary>
            总请求数
            </summary>
        </member>
        <member name="T:Top.Api.Response.TbkDgItemCouponGetResponse.TbkCouponDomain">
            <summary>
            TbkCouponDomain Data Structure.
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkDgItemCouponGetResponse.TbkCouponDomain.Category">
            <summary>
            后台一级类目
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkDgItemCouponGetResponse.TbkCouponDomain.CommissionRate">
            <summary>
            佣金比率(%)
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkDgItemCouponGetResponse.TbkCouponDomain.CouponClickUrl">
            <summary>
            商品优惠券推广链接
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkDgItemCouponGetResponse.TbkCouponDomain.CouponEndTime">
            <summary>
            优惠券结束时间
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkDgItemCouponGetResponse.TbkCouponDomain.CouponInfo">
            <summary>
            优惠券面额
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkDgItemCouponGetResponse.TbkCouponDomain.CouponRemainCount">
            <summary>
            优惠券剩余量
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkDgItemCouponGetResponse.TbkCouponDomain.CouponStartTime">
            <summary>
            优惠券开始时间
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkDgItemCouponGetResponse.TbkCouponDomain.CouponTotalCount">
            <summary>
            优惠券总量
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkDgItemCouponGetResponse.TbkCouponDomain.ItemDescription">
            <summary>
            宝贝描述（推荐理由）
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkDgItemCouponGetResponse.TbkCouponDomain.ItemUrl">
            <summary>
            商品详情页链接地址
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkDgItemCouponGetResponse.TbkCouponDomain.Nick">
            <summary>
            卖家昵称
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkDgItemCouponGetResponse.TbkCouponDomain.NumIid">
            <summary>
            itemId
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkDgItemCouponGetResponse.TbkCouponDomain.PictUrl">
            <summary>
            商品主图
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkDgItemCouponGetResponse.TbkCouponDomain.SellerId">
            <summary>
            卖家id
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkDgItemCouponGetResponse.TbkCouponDomain.ShopTitle">
            <summary>
            店铺名称
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkDgItemCouponGetResponse.TbkCouponDomain.SmallImages">
            <summary>
            商品小图列表
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkDgItemCouponGetResponse.TbkCouponDomain.Title">
            <summary>
            商品标题
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkDgItemCouponGetResponse.TbkCouponDomain.UserType">
            <summary>
            卖家类型，0表示集市，1表示商城
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkDgItemCouponGetResponse.TbkCouponDomain.Volume">
            <summary>
            30天销量
            </summary>
        </member>
        <member name="P:Top.Api.Response.TbkDgItemCouponGetResponse.TbkCouponDomain.ZkFinalPrice">
            <summary>
            折扣价
            </summary>
        </member>
    </members>
</doc>
